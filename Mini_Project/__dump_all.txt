
.\rom_0x08003000.elf:     file format elf32-littlearm
.\rom_0x08003000.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08003000

Program Header:
0x70000001 off    0x0000a448 vaddr 0x0800a448 paddr 0x0800a448 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00000000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x0000a960 memsz 0x0000a960 flags r-x
    LOAD off    0x00010000 vaddr 0x20000000 paddr 0x0800a960 align 2**15
         filesz 0x00000584 memsz 0x000005e0 flags rw-
private flags = 5000202: [Version5 EABI] [soft-float ABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007448  08003000  08003000  00003000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0800a448  0800a448  0000a448  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .rodata       00000510  0800a450  0800a450  0000a450  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .data         00000584  20000000  0800a960  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          0000005c  20000584  0800aee4  00010584  2**2
                  ALLOC
  5 .debug_info   00003deb  00000000  00000000  00010584  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001112  00000000  00000000  0001436f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 000001a0  00000000  00000000  00015488  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c7b  00000000  00000000  00015628  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001041  00000000  00000000  000162a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .comment      00000030  00000000  00000000  000172e4  2**0
                  CONTENTS, READONLY
 11 .ARM.attributes 00000031  00000000  00000000  00017314  2**0
                  CONTENTS, READONLY
 12 .debug_frame  00001290  00000000  00000000  00017348  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00000ba4  00000000  00000000  000185d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000170  00000000  00000000  0001917c  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08003000 l    d  .text	00000000 .text
0800a448 l    d  .ARM.exidx	00000000 .ARM.exidx
0800a450 l    d  .rodata	00000000 .rodata
20000000 l    d  .data	00000000 .data
20000584 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 crt0.o
20004fff l       *ABS*	00000000 RAM_END
20004c00 l       *ABS*	00000000 PSP_BASE
20004c00 l       *ABS*	00000000 MSP_LIMIT
20005000 l       *ABS*	00000000 MSP_BASE
00000400 l       *ABS*	00000000 MSP_SIZE
08003179 l       .text	00000000 _PSR
0800313a l       .text	00000000 _loop
0800316c l       .text	00000000 fmt
0800317d l       .text	00000000 _r0
08003181 l       .text	00000000 _r1
08003185 l       .text	00000000 _r2
08003189 l       .text	00000000 _r3
0800318d l       .text	00000000 _r4
08003191 l       .text	00000000 _r5
08003195 l       .text	00000000 _r6
08003199 l       .text	00000000 _r7
0800319d l       .text	00000000 _r8
080031a1 l       .text	00000000 _r9
080031a5 l       .text	00000000 _r10
080031a9 l       .text	00000000 _r11
080031ad l       .text	00000000 _r12
080031b1 l       .text	00000000 _PSP
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 core_cm3.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 key.c
00000000 l    df *ABS*	00000000 led.c
00000000 l    df *ABS*	00000000 main.c
20000584 l       .bss	00000000 .LANCHOR0
20000000 l       .data	00000000 .LANCHOR1
00000000 l    df *ABS*	00000000 motor.c
00000000 l    df *ABS*	00000000 runtime.c
20000588 l       .bss	00000000 .LANCHOR0
20000588 l     O .bss	00000004 heap.4816
00000000 l    df *ABS*	00000000 stm32f10x_it.c
080039d8 l     F .text	00000038 Stack_Dump
2000058c l       .bss	00000000 .LANCHOR1
0800a450 l     O .rodata	00000020 Stack_reg
00000000 l    df *ABS*	00000000 systick.c
00000000 l    df *ABS*	00000000 timer.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 vsprintf.c
00000000 l    df *ABS*	00000000 impure.c
20000008 l     O .data	000000f0 impure_data
00000000 l    df *ABS*	00000000 vfprintf.c
0800a474 l       .rodata	00000000 .LANCHOR0
0800a474 l     O .rodata	00000010 blanks.6752
0800a484 l     O .rodata	00000010 zeroes.6753
00000000 l    df *ABS*	00000000 dtoa.c
08005858 l     F .text	0000014a quorem
00000000 l    df *ABS*	00000000 locale.c
200000f8 l       .data	00000000 .LANCHOR0
200000f8 l     O .data	00000020 lc_ctype_charset
2000011c l     O .data	00000020 lc_message_charset
2000013c l     O .data	00000038 lconv
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
20000174 l       .data	00000000 .LANCHOR0
200005a8 l       .bss	00000000 .LANCHOR1
00000000 l    df *ABS*	00000000 memchr-stub.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 mprec.c
0800a498 l       .rodata	00000000 .LANCHOR0
0800a498 l     O .rodata	0000000c p05.5301
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 lib_a-strcmp.o
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0800a5c0 l       .rodata	00000000 .LANCHOR0
0800a5c0 l     O .rodata	00000010 blanks.6696
0800a5d0 l     O .rodata	00000010 zeroes.6697
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 _udivsi3.o
080091b8 l       .text	00000000 .udivsi3_skip_div0_test
00000000 l       *ABS*	00000000 shift
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 bpabi.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 
08003c30 g     F .text	00000006 EXTI2_IRQHandler
20000000 g     O .data	00000004 speed_level
0800327c g     F .text	00000006 __set_PRIMASK
080078f8 g     F .text	00000034 _mprec_log10
08007974 g     F .text	0000005e __any_on
0800a570 g     O .rodata	00000028 __mprec_tinytens
08009c9c g     F .text	00000012 .hidden __aeabi_dcmple
080090c4 g     F .text	0000001a cleanup_glue
08009dc4 g     F .text	00000030 .hidden __gnu_uldivmod_helper
08003574 g     F .text	00000026 Key_Poll_Init
08009bd8 g     F .text	0000007a .hidden __cmpdf2
08003bc0 g     F .text	00000010 DebugMon_Handler
08009bd8 g     F .text	0000007a .hidden __eqdf2
08003930 g     F .text	0000000e Motor_Stop
08009df4 g     F .text	00000352 .hidden __divdi3
08009748 g     F .text	0000005a .hidden __floatdidf
08004384 g     F .text	0000001a vsprintf
08003cf4 g     F .text	00000006 TIM1_CC_IRQHandler
08003a54 g     F .text	0000012a HardFault_Handler
08006930 g     F .text	00000052 _setlocale_r
08007098 g     F .text	00000002 __malloc_unlock
08003284 g     F .text	00000006 __get_FAULTMASK
08003be0 g     F .text	0000000e SysTick_Handler
080032a4 g     F .text	00000004 __REV
08003bf8 g     F .text	00000006 PVD_IRQHandler
08008b68 g     F .text	000000ce memmove
08003bd0 g     F .text	00000010 PendSV_Handler
08003a44 g     F .text	00000010 NMI_Handler
0800709c g     F .text	0000006c _Balloc
08003c38 g     F .text	00000006 EXTI3_IRQHandler
08009bc8 g     F .text	0000008a .hidden __gtdf2
080032e0 g     F .text	00000006 __STREXW
080034f0 g     F .text	00000082 I2C_Write_GPIO
080032c8 g     F .text	00000006 __LDREXW
200005dc g     O .bss	00000004 errno
08009c64 g     F .text	00000010 .hidden __aeabi_cdcmple
08003e04 g     F .text	0000000c SysTick_Get_Load_Time
08003740 g     F .text	000000bc Main
20000594 g     O .bss	00000004 Uart1_Rx_Data
08003e68 g     F .text	0000003e TIM2_Stopwatch_Start
08003960 g     F .text	00000034 control_led_with_i2c
08006fec g     F .text	000000a6 memcpy
08009c54 g     F .text	00000020 .hidden __aeabi_cdrcmple
080036fc g     F .text	0000001c LED_Display
080043a0 g     F .text	000014b4 _svfprintf_r
080096d8 g     F .text	00000022 .hidden __floatsidf
08009bd0 g     F .text	00000082 .hidden __ltdf2
08003c88 g     F .text	00000006 USB_HP_CAN_TX_IRQHandler
08003c20 g     F .text	00000006 EXTI0_IRQHandler
0800372c g     F .text	00000012 LED_All_Off
08003d24 g     F .text	00000006 I2C2_EV_IRQHandler
2000058c g     O .bss	00000004 SysTick_Flag
08009d68 g     F .text	00000000 .hidden __aeabi_uldivmod
080079d4 g     F .text	00000050 __fpclassifyd
08007898 g     F .text	0000005e __ratio
080032b0 g     F .text	00000006 __RBIT
20000000 g       .data	00000000 __RW_BASE__
080069cc g     F .text	00000010 malloc
080091b8 g     F .text	0000025c .hidden __udivsi3
0800a4a8 g     O .rodata	000000c8 __mprec_tens
08003ba0 g     F .text	00000010 UsageFault_Handler
0800328c g     F .text	00000006 __set_FAULTMASK
08006984 g     F .text	0000000a __locale_charset
08009d28 g     F .text	00000040 .hidden __fixunsdfsi
08003c80 g     F .text	00000006 ADC1_2_IRQHandler
200005a8 g     O .bss	00000004 __malloc_top_pad
080037fc g     F .text	000000b8 device_init
20000118 g     O .data	00000004 __mb_cur_max
080096b8 g     F .text	0000001e .hidden __aeabi_ui2d
080069a8 g     F .text	00000008 _localeconv_r
080072f8 g     F .text	00000012 __i2b
08003d34 g     F .text	00000006 SPI1_IRQHandler
08003ca0 g     F .text	00000006 CAN_SCE_IRQHandler
08009434 g     F .text	00000000 .hidden __aeabi_drsub
08007a24 g     F .text	00000026 _sbrk_r
08003c00 g     F .text	00000006 TAMPER_IRQHandler
080036cc g     F .text	0000002e LED_Init
08004118 g     F .text	00000022 TIM3_Out_Stop
08009c88 g     F .text	00000012 .hidden __aeabi_dcmplt
080031ec g     F .text	00000058 Clock_Init
200005d4 g     O .bss	00000004 __malloc_max_sbrked_mem
080096fc g     F .text	0000003a .hidden __extendsfdf2
080099f8 g     F .text	000001d0 .hidden __aeabi_ddiv
08009440 g     F .text	00000276 .hidden __adddf3
20000584 g       .data	00000000 __RW_LIMIT__
08004278 g     F .text	00000060 Uart1_Printf
08007730 g     F .text	000000ac __b2d
080097a4 g     F .text	00000254 .hidden __aeabi_dmul
08003294 g     F .text	00000006 __get_CONTROL
0800a470 g     O .rodata	00000004 _global_impure_ptr
08008cd8 g     F .text	000003ea _realloc_r
0800a148 g     F .text	00000300 .hidden __udivdi3
08003c60 g     F .text	00000006 DMA1_Channel4_IRQHandler
0800a598 g     O .rodata	00000028 __mprec_bigtens
080071cc g     F .text	00000098 __s2b
080096b8 g     F .text	0000001e .hidden __floatunsidf
08003994 g     F .text	00000044 _sbrk
080075bc g     F .text	00000042 __mcmp
080042d8 g     F .text	00000016 Uart1_Get_Pressed
080032e8 g     F .text	000000f8 I2C_Init
08004308 g     F .text	00000042 Uart1_RX_Interrupt_Enable
08003d7c g     F .text	00000006 USART3_IRQHandler
08003c08 g     F .text	00000006 RTC_IRQHandler
08003244 g     F .text	00000008 __get_PSP
08003628 g     F .text	000000a4 Key_ISR_Enable
0800324c g     F .text	00000006 __set_PSP
08003c78 g     F .text	00000006 DMA1_Channel7_IRQHandler
080090e0 g     F .text	000000d6 _reclaim_reent
08007264 g     F .text	0000003c __hi0bits
08009cd8 g     F .text	0000004e .hidden __fixdfsi
0800405c g     F .text	00000018 TIM4_Change_Value
08003ea8 g     F .text	00000026 TIM2_Stopwatch_Stop
08003d0c g     F .text	00000006 TIM4_IRQHandler
08009440 g     F .text	00000276 .hidden __aeabi_dadd
08009bd0 g     F .text	00000082 .hidden __ledf2
08003c98 g     F .text	00000006 CAN_RX1_IRQHandler
0800744c g     F .text	000000b8 __pow5mult
08009738 g     F .text	0000006a .hidden __aeabi_ul2d
200005a4 g     O .bss	00000004 __nlocale_changed
00000000  w      *UND*	00000000 __sf_fake_stderr
080031b8 g     F .text	00000000 _HardFault_Handler
08003d14 g     F .text	00000006 I2C1_EV_IRQHandler
080030ec g     F .text	00000000 __start
080032b8 g     F .text	00000008 __LDREXB
0800346c g     F .text	00000082 I2C_Config_GPIO
08009cc4 g     F .text	00000012 .hidden __aeabi_dcmpgt
08003c70 g     F .text	00000006 DMA1_Channel6_IRQHandler
08006f5c g     F .text	00000090 memchr
080089d0 g     F .text	00000198 _free_r
08003d04 g     F .text	00000006 TIM3_IRQHandler
08003c18 g     F .text	00000006 RCC_IRQHandler
08006990 g     F .text	0000000c __locale_mb_cur_max
08009cb0 g     F .text	00000012 .hidden __aeabi_dcmpge
08003cec g     F .text	00000006 TIM1_TRG_COM_IRQHandler
08003c48 g     F .text	00000006 DMA1_Channel1_IRQHandler
08003274 g     F .text	00000006 __get_PRIMASK
200005a0 g     O .bss	00000004 __mlocale_changed
0800943c g     F .text	0000027a .hidden __aeabi_dsub
08004018 g     F .text	00000020 TIM4_Check_Timeout
2000057c g     O .data	00000004 __malloc_sbrk_base
00000584 g       *ABS*	00000000 __RW_SIZE__
08009738 g     F .text	0000006a .hidden __floatundidf
08007504 g     F .text	000000b6 __lshift
08007ce8 g     F .text	00000104 __ssprint_r
08003d84 g     F .text	00000006 EXTI15_10_IRQHandler
0800a960 g       *ABS*	00000000 __RW_LOAD_ADDR__
08003da0 g     F .text	00000048 SysTick_Run
080032ac g     F .text	00000004 __REVSH
0800730c g     F .text	00000140 __multiply
200005ac g     O .bss	00000028 __malloc_current_mallinfo
080077dc g     F .text	000000ba __d2b
080035c8 g     F .text	0000002e Key_Wait_Key_Released
080096d8 g     F .text	00000022 .hidden __aeabi_i2d
0800a450 g       .rodata	00000000 __RO_BASE__
08009430  w    F .text	00000002 .hidden __aeabi_ldiv0
08003ca8 g     F .text	00000032 EXTI9_5_IRQHandler
080099f8 g     F .text	000001d0 .hidden __divdf3
0800792c g     F .text	00000046 __copybits
20000174 g     O .data	00000408 __malloc_av_
080097a4 g     F .text	00000254 .hidden __muldf3
08007094 g     F .text	00000002 __malloc_lock
080038b4 g     F .text	0000007a device_execute
080088c8 g     F .text	00000062 _calloc_r
08003ed0 g     F .text	000000e4 TIM2_Delay
08003d3c g     F .text	00000006 SPI2_IRQHandler
08003950 g     F .text	00000010 Motor_Reserve
00000000  w      *UND*	00000000 __sf_fake_stdin
08003c90 g     F .text	00000006 USB_LP_CAN_RX0_IRQHandler
08008c38 g     F .text	0000009e memset
08003b80 g     F .text	00000010 MemManage_Handler
200005d8 g     O .bss	00000004 __malloc_max_total_mem
200005dc g       .bss	00000000 __ZI_LIMIT__
08003940 g     F .text	00000010 Motor_Forward
080091b8 g     F .text	00000000 .hidden __aeabi_uidiv
08003bb0 g     F .text	00000010 SVC_Handler
08003e20 g     F .text	00000048 SysTick_OS_Tick
0800329c g     F .text	00000006 __set_CONTROL
080059a4 g     F .text	00000f8a _dtoa_r
080069ec g     F .text	0000056e _malloc_r
08009748 g     F .text	0000005a .hidden __aeabi_l2d
08004234 g     F .text	00000042 Uart1_Send_String
080041f8 g     F .text	0000003a Uart1_Send_Byte
0800359c g     F .text	0000002a Key_Get_Pressed
08004074 g     F .text	0000004c TIM3_Out_Init
08003718 g     F .text	00000012 LED_All_On
08003c68 g     F .text	00000006 DMA1_Channel5_IRQHandler
08003c40 g     F .text	00000006 EXTI4_IRQHandler
0800892c g     F .text	000000a2 _malloc_trim_r
08007a4c g     F .text	00000000 strcmp
08003254 g     F .text	00000008 __get_MSP
0800a960 g       .rodata	00000000 __RO_LIMIT__
08009bd8 g     F .text	0000007a .hidden __nedf2
20000590 g     O .bss	00000004 Key_Value
2000059c g     O .bss	00000004 _PathLocale
08004350 g     F .text	00000032 _vsprintf_r
08003c58 g     F .text	00000006 DMA1_Channel3_IRQHandler
080069b0 g     F .text	00000012 setlocale
080032a8 g     F .text	00000004 __REV16
20000004 g     O .data	00000004 _impure_ptr
08003ce4 g     F .text	00000006 TIM1_UP_IRQHandler
080033e0 g     F .text	0000008a I2C_Write_Reg
080069a4 g     F .text	00000004 __locale_cjk_lang
08007dec g     F .text	00000adc _svfiprintf_r
0000005c g       *ABS*	00000000 __ZI_SIZE__
08003bf0 g     F .text	00000006 WWDG_IRQHandler
0800325c g     F .text	00000006 __set_MSP
080076ec g     F .text	00000042 __ulp
08003e10 g     F .text	0000000e SysTick_Stop
08003cfc g     F .text	00000006 TIM2_IRQHandler
08009d28 g     F .text	00000040 .hidden __aeabi_d2uiz
20000584 g       .bss	00000000 __ZI_BASE__
080069c4 g     F .text	00000008 localeconv
08003cdc g     F .text	00000006 TIM1_BRK_IRQHandler
08009414 g     F .text	0000001a .hidden __aeabi_uidivmod
08003c28 g     F .text	00000006 EXTI1_IRQHandler
0800326c g     F .text	00000006 __set_BASEPRI
08009c74 g     F .text	00000012 .hidden __aeabi_dcmpeq
08004038 g     F .text	00000022 TIM4_Stop
080035f8 g     F .text	0000002e Key_Wait_Key_Pressed
08004140 g     F .text	000000b8 Uart1_Init
08003d8c g     F .text	00000006 RTCAlarm_IRQHandler
08003d74 g     F .text	00000006 USART2_IRQHandler
20000580 g     O .data	00000004 __malloc_trim_threshold
0800699c g     F .text	00000008 __locale_msgcharset
080032d8 g     F .text	00000008 __STREXH
08007600 g     F .text	000000ea __mdiff
08009cd8 g     F .text	0000004e .hidden __aeabi_d2iz
080032c0 g     F .text	00000008 __LDREXH
08003d2c g     F .text	00000006 I2C2_ER_IRQHandler
08003c50 g     F .text	00000006 DMA1_Channel2_IRQHandler
00000000  w      *UND*	00000000 __sf_fake_stdout
20000584 g     O .bss	00000001 received_command
20000598 g     O .bss	00000004 Uart1_Rx_In
08009430  w    F .text	00000002 .hidden __aeabi_idiv0
08003c10 g     F .text	00000006 FLASH_IRQHandler
08003b90 g     F .text	00000010 BusFault_Handler
08003d44 g     F .text	00000030 USART1_IRQHandler
08003df8 g     F .text	0000000c SysTick_Get_Time
08007c88 g     F .text	0000005e strlen
08003264 g     F .text	00000006 __get_BASEPRI
08009c64 g     F .text	00000010 .hidden __aeabi_cdcmpeq
08009bc8 g     F .text	0000008a .hidden __gedf2
080042f0 g     F .text	00000018 Uart1_Get_Char
08003fb4 g     F .text	00000062 TIM4_Repeat
08009d94 g     F .text	00000030 .hidden __gnu_ldivmod_helper
08003d1c g     F .text	00000006 I2C1_ER_IRQHandler
080040c0 g     F .text	00000058 TIM3_Out_Freq_Generation
080096fc g     F .text	0000003a .hidden __aeabi_f2d
080032d0 g     F .text	00000008 __STREXB
0800943c g     F .text	0000027a .hidden __subdf3
08003126 g     F .text	00000000 _Print_Reg
080072a0 g     F .text	00000056 __lo0bits
08003a10 g     F .text	00000032 Invalid_ISR
08003de8 g     F .text	00000010 SysTick_Check_Timeout
08003d94 g     F .text	00000006 USBWakeUp_IRQHandler
080069dc g     F .text	00000010 free
08007140 g     F .text	0000008c __multadd
08007108 g     F .text	00000036 _Bfree



Disassembly of section .text:

08003000 <__start-0xec>:
 8003000:	20005000 	andcs	r5, r0, r0
 8003004:	080030ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, ip, sp}
 8003008:	00000000 	andeq	r0, r0, r0
 800300c:	080031b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, ip, sp}
	...
 800303c:	08003be1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, fp, ip, sp}
 8003040:	08003bf1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, fp, ip, sp}
 8003044:	08003bf9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, r9, fp, ip, sp}
 8003048:	08003c01 	stmdaeq	r0, {r0, sl, fp, ip, sp}
 800304c:	08003c09 	stmdaeq	r0, {r0, r3, sl, fp, ip, sp}
 8003050:	08003c11 	stmdaeq	r0, {r0, r4, sl, fp, ip, sp}
 8003054:	08003c19 	stmdaeq	r0, {r0, r3, r4, sl, fp, ip, sp}
 8003058:	08003c21 	stmdaeq	r0, {r0, r5, sl, fp, ip, sp}
 800305c:	08003c29 	stmdaeq	r0, {r0, r3, r5, sl, fp, ip, sp}
 8003060:	08003c31 	stmdaeq	r0, {r0, r4, r5, sl, fp, ip, sp}
 8003064:	08003c39 	stmdaeq	r0, {r0, r3, r4, r5, sl, fp, ip, sp}
 8003068:	08003c41 	stmdaeq	r0, {r0, r6, sl, fp, ip, sp}
 800306c:	08003c49 	stmdaeq	r0, {r0, r3, r6, sl, fp, ip, sp}
 8003070:	08003c51 	stmdaeq	r0, {r0, r4, r6, sl, fp, ip, sp}
 8003074:	08003c59 	stmdaeq	r0, {r0, r3, r4, r6, sl, fp, ip, sp}
 8003078:	08003c61 	stmdaeq	r0, {r0, r5, r6, sl, fp, ip, sp}
 800307c:	08003c69 	stmdaeq	r0, {r0, r3, r5, r6, sl, fp, ip, sp}
 8003080:	08003c71 	stmdaeq	r0, {r0, r4, r5, r6, sl, fp, ip, sp}
 8003084:	08003c79 	stmdaeq	r0, {r0, r3, r4, r5, r6, sl, fp, ip, sp}
 8003088:	08003c81 	stmdaeq	r0, {r0, r7, sl, fp, ip, sp}
	...
 800309c:	08003ca9 	stmdaeq	r0, {r0, r3, r5, r7, sl, fp, ip, sp}
 80030a0:	08003cdd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, sl, fp, ip, sp}
 80030a4:	08003ce5 	stmdaeq	r0, {r0, r2, r5, r6, r7, sl, fp, ip, sp}
 80030a8:	08003ced 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, sl, fp, ip, sp}
 80030ac:	08003cf5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, sl, fp, ip, sp}
 80030b0:	08003cfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sl, fp, ip, sp}
 80030b4:	08003d05 	stmdaeq	r0, {r0, r2, r8, sl, fp, ip, sp}
 80030b8:	08003d0d 	stmdaeq	r0, {r0, r2, r3, r8, sl, fp, ip, sp}
 80030bc:	08003d15 	stmdaeq	r0, {r0, r2, r4, r8, sl, fp, ip, sp}
 80030c0:	08003d1d 	stmdaeq	r0, {r0, r2, r3, r4, r8, sl, fp, ip, sp}
 80030c4:	08003d25 	stmdaeq	r0, {r0, r2, r5, r8, sl, fp, ip, sp}
 80030c8:	08003d2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, sl, fp, ip, sp}
 80030cc:	08003d35 	stmdaeq	r0, {r0, r2, r4, r5, r8, sl, fp, ip, sp}
 80030d0:	08003d3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
 80030d4:	08003d45 	stmdaeq	r0, {r0, r2, r6, r8, sl, fp, ip, sp}
 80030d8:	08003d75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, sl, fp, ip, sp}
 80030dc:	08003d7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, sl, fp, ip, sp}
 80030e0:	08003d85 	stmdaeq	r0, {r0, r2, r7, r8, sl, fp, ip, sp}
 80030e4:	08003d8d 	stmdaeq	r0, {r0, r2, r3, r7, r8, sl, fp, ip, sp}
 80030e8:	08003d95 	stmdaeq	r0, {r0, r2, r4, r7, r8, sl, fp, ip, sp}

080030ec <__start>:
	.extern __RO_LIMIT__
	.extern __RW_BASE__
	.extern __ZI_BASE__
	.extern __ZI_LIMIT__

	ldr		r0, =__RO_LIMIT__
 80030ec:	4837      	ldr	r0, [pc, #220]	; (80031cc <_HardFault_Handler+0x14>)
	ldr		r1, =__RW_BASE__
 80030ee:	4938      	ldr	r1, [pc, #224]	; (80031d0 <_HardFault_Handler+0x18>)
	ldr		r3, =__ZI_BASE__
 80030f0:	4b38      	ldr	r3, [pc, #224]	; (80031d4 <_HardFault_Handler+0x1c>)

	cmp		r0, r1
 80030f2:	4288      	cmp	r0, r1
	beq		2f
 80030f4:	d006      	beq.n	8003104 <__start+0x18>

1:
	cmp		r1, r3
 80030f6:	4299      	cmp	r1, r3
	ittt	lo
 80030f8:	bf3e      	ittt	cc
	ldrlo	r2, [r0], #4
 80030fa:	f850 2b04 	ldrcc.w	r2, [r0], #4
	strlo	r2, [r1], #4
 80030fe:	f841 2b04 	strcc.w	r2, [r1], #4
	blo		1b
 8003102:	e7f8      	bcc.n	80030f6 <__start+0xa>

2:
	ldr		r1, =__ZI_LIMIT__
 8003104:	4934      	ldr	r1, [pc, #208]	; (80031d8 <_HardFault_Handler+0x20>)
	mov		r2, #0x0
 8003106:	f04f 0200 	mov.w	r2, #0
3:
	cmp		r3, r1
 800310a:	428b      	cmp	r3, r1
	itt		lo
 800310c:	bf3c      	itt	cc
	strlo	r2, [r3], #4
 800310e:	f843 2b04 	strcc.w	r2, [r3], #4
	blo		3b
 8003112:	e7fa      	bcc.n	800310a <__start+0x1e>
	.equ PSP_BASE,	(MSP_LIMIT)
	.equ MSP_BASE,	(RAM_END + 1)
	.equ MSP_SIZE,	(1*1024)
	.equ MSP_LIMIT,	(MSP_BASE - MSP_SIZE)

	ldr		r0, =PSP_BASE
 8003114:	4831      	ldr	r0, [pc, #196]	; (80031dc <_HardFault_Handler+0x24>)
	msr		psp, r0
 8003116:	f380 8809 	msr	PSP, r0
	ldr		r0, =(0x1<<1)|(0x0<<0)
 800311a:	4831      	ldr	r0, [pc, #196]	; (80031e0 <_HardFault_Handler+0x28>)
	msr		control, r0
 800311c:	f380 8814 	msr	CONTROL, r0

	bl		Main
 8003120:	f000 fb0e 	bl	8003740 <Main>

	b		.
 8003124:	e7fe      	b.n	8003124 <__start+0x38>

08003126 <_Print_Reg>:
    .extern	Uart1_Printf

    .global _Print_Reg
  	.type 	_Print_Reg, %function
_Print_Reg:
    PUSH	{r0-r12,lr}
 8003126:	e92d 5fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
    MRS     r1, PSR
 800312a:	f3ef 8103 	mrs	r1, PSR
    PUSH    {r0, r1}
 800312e:	b403      	push	{r0, r1}

    MOV     r6, #14
 8003130:	f04f 060e 	mov.w	r6, #14
    MOV     r4, #4
 8003134:	f04f 0404 	mov.w	r4, #4
    LDR     r5, =_PSR
 8003138:	4d2a      	ldr	r5, [pc, #168]	; (80031e4 <_HardFault_Handler+0x2c>)

0800313a <_loop>:
_loop:
    LDR     r0, =fmt
 800313a:	482b      	ldr	r0, [pc, #172]	; (80031e8 <_HardFault_Handler+0x30>)
    MOV     r1, r5
 800313c:	4629      	mov	r1, r5
    LDR     r2, [sp, r4]
 800313e:	f85d 2004 	ldr.w	r2, [sp, r4]
    BL      Uart1_Printf
 8003142:	f001 f899 	bl	8004278 <Uart1_Printf>

    ADD     r4, r4, #4
 8003146:	f104 0404 	add.w	r4, r4, #4
    ADD     r5, r5, #4
 800314a:	f105 0504 	add.w	r5, r5, #4
    SUBS    r6, r6, #1
 800314e:	3e01      	subs	r6, #1
    BGT     _loop
 8003150:	dcf3      	bgt.n	800313a <_loop>

    LDR     r0, =fmt
 8003152:	4825      	ldr	r0, [pc, #148]	; (80031e8 <_HardFault_Handler+0x30>)
    MOV     r1, r5
 8003154:	4629      	mov	r1, r5
    MRS     r2, psp
 8003156:	f3ef 8209 	mrs	r2, PSP
    BL      Uart1_Printf
 800315a:	f001 f88d 	bl	8004278 <Uart1_Printf>

    POP     {r0, r1}
 800315e:	bc03      	pop	{r0, r1}
	MSR     APSR_nzcvq, r1
 8003160:	f381 8800 	msr	CPSR_f, r1
	MSR     IEPSR, r1
 8003164:	f381 8807 	msr	IEPSR, r1
    POP		{r0-r12, pc}
 8003168:	e8bd 9fff 	ldmia.w	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}

0800316c <fmt>:
 800316c:	3a207325 	bcc	881fe08 <__RW_LOAD_ADDR__+0x8154a8>
 8003170:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
 8003174:	0a58382e 	beq	9611234 <__RW_LOAD_ADDR__+0x16068d4>
	...

08003179 <_PSR>:
 8003179:	00525350 	subseq	r5, r2, r0, asr r3

0800317d <_r0>:
 800317d:	00303052 	eorseq	r3, r0, r2, asr r0

08003181 <_r1>:
 8003181:	00313052 	eorseq	r3, r1, r2, asr r0

08003185 <_r2>:
 8003185:	00323052 	eorseq	r3, r2, r2, asr r0

08003189 <_r3>:
 8003189:	00333052 	eorseq	r3, r3, r2, asr r0

0800318d <_r4>:
 800318d:	00343052 	eorseq	r3, r4, r2, asr r0

08003191 <_r5>:
 8003191:	00353052 	eorseq	r3, r5, r2, asr r0

08003195 <_r6>:
 8003195:	00363052 	eorseq	r3, r6, r2, asr r0

08003199 <_r7>:
 8003199:	00373052 	eorseq	r3, r7, r2, asr r0

0800319d <_r8>:
 800319d:	00383052 	eorseq	r3, r8, r2, asr r0

080031a1 <_r9>:
 80031a1:	00393052 	eorseq	r3, r9, r2, asr r0

080031a5 <_r10>:
 80031a5:	00303152 	eorseq	r3, r0, r2, asr r1

080031a9 <_r11>:
 80031a9:	00313152 	eorseq	r3, r1, r2, asr r1

080031ad <_r12>:
 80031ad:	00323152 	eorseq	r3, r2, r2, asr r1

080031b1 <_PSP>:
 80031b1:	00505350 	subseq	r5, r0, r0, asr r3
 80031b5:	01bf0000 			; <UNDEFINED> instruction: 0x01bf0000

080031b8 <_HardFault_Handler>:

    .global _HardFault_Handler
  	.type 	_HardFault_Handler, %function
_HardFault_Handler:

	PUSH	{r0, lr}
 80031b8:	b501      	push	{r0, lr}
	BL    	_Print_Reg
 80031ba:	f7ff ffb4 	bl	8003126 <_Print_Reg>
	ADD   	r0, sp, #8
 80031be:	a802      	add	r0, sp, #8
	LDR   	r1, [sp, #4]
 80031c0:	9901      	ldr	r1, [sp, #4]
	MRS   	r2, psp
 80031c2:	f3ef 8209 	mrs	r2, PSP
	BL    	HardFault_Handler
 80031c6:	f000 fc45 	bl	8003a54 <HardFault_Handler>
	POP	 	{r0, pc}
 80031ca:	bd01      	pop	{r0, pc}
	.extern __RO_LIMIT__
	.extern __RW_BASE__
	.extern __ZI_BASE__
	.extern __ZI_LIMIT__

	ldr		r0, =__RO_LIMIT__
 80031cc:	0800a960 	stmdaeq	r0, {r5, r6, r8, fp, sp, pc}
	ldr		r1, =__RW_BASE__
 80031d0:	20000000 	andcs	r0, r0, r0
	ldr		r3, =__ZI_BASE__
 80031d4:	20000584 	andcs	r0, r0, r4, lsl #11
	ldrlo	r2, [r0], #4
	strlo	r2, [r1], #4
	blo		1b

2:
	ldr		r1, =__ZI_LIMIT__
 80031d8:	200005dc 	ldrdcs	r0, [r0], -ip
	.equ PSP_BASE,	(MSP_LIMIT)
	.equ MSP_BASE,	(RAM_END + 1)
	.equ MSP_SIZE,	(1*1024)
	.equ MSP_LIMIT,	(MSP_BASE - MSP_SIZE)

	ldr		r0, =PSP_BASE
 80031dc:	20004c00 	andcs	r4, r0, r0, lsl #24
	msr		psp, r0
	ldr		r0, =(0x1<<1)|(0x0<<0)
 80031e0:	00000002 	andeq	r0, r0, r2
    MRS     r1, PSR
    PUSH    {r0, r1}

    MOV     r6, #14
    MOV     r4, #4
    LDR     r5, =_PSR
 80031e4:	08003179 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, ip, sp}
_loop:
    LDR     r0, =fmt
 80031e8:	0800316c 	stmdaeq	r0, {r2, r3, r5, r6, r8, ip, sp}

080031ec <Clock_Init>:
#include "device_driver.h"

void Clock_Init(void)
{
	RCC->CR = 0x1;
 80031ec:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80031f0:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80031f4:	2201      	movs	r2, #1
 80031f6:	601a      	str	r2, [r3, #0]
	Macro_Set_Bit(RCC->CR, 16);
 80031f8:	6819      	ldr	r1, [r3, #0]
	RCC->CFGR = ((9-2)<<18)|(0<<17)|(1<<16)|(0<<11)|(4<<8)|(0<<4)|(0<<0);
 80031fa:	f44f 6280 	mov.w	r2, #1024	; 0x400
#include "device_driver.h"

void Clock_Init(void)
{
	RCC->CR = 0x1;
	Macro_Set_Bit(RCC->CR, 16);
 80031fe:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
	RCC->CFGR = ((9-2)<<18)|(0<<17)|(1<<16)|(0<<11)|(4<<8)|(0<<4)|(0<<0);
 8003202:	f2c0 021d 	movt	r2, #29
#include "device_driver.h"

void Clock_Init(void)
{
	RCC->CR = 0x1;
	Macro_Set_Bit(RCC->CR, 16);
 8003206:	6019      	str	r1, [r3, #0]
	RCC->CFGR = ((9-2)<<18)|(0<<17)|(1<<16)|(0<<11)|(4<<8)|(0<<4)|(0<<0);
 8003208:	605a      	str	r2, [r3, #4]
	Macro_Set_Bit(RCC->CR, 24);
 800320a:	681a      	ldr	r2, [r3, #0]
	while(!Macro_Check_Bit_Set(RCC->CR, 25));
 800320c:	4619      	mov	r1, r3
void Clock_Init(void)
{
	RCC->CR = 0x1;
	Macro_Set_Bit(RCC->CR, 16);
	RCC->CFGR = ((9-2)<<18)|(0<<17)|(1<<16)|(0<<11)|(4<<8)|(0<<4)|(0<<0);
	Macro_Set_Bit(RCC->CR, 24);
 800320e:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8003212:	601a      	str	r2, [r3, #0]
	while(!Macro_Check_Bit_Set(RCC->CR, 25));
 8003214:	680a      	ldr	r2, [r1, #0]
 8003216:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800321a:	0192      	lsls	r2, r2, #6
 800321c:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8003220:	d5f8      	bpl.n	8003214 <Clock_Init+0x28>
    Macro_Write_Block(FLASH->ACR, 0x3, 0x2, 0);
 8003222:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8003226:	f2c4 0202 	movt	r2, #16386	; 0x4002
 800322a:	6811      	ldr	r1, [r2, #0]
 800322c:	f021 0103 	bic.w	r1, r1, #3
 8003230:	f041 0102 	orr.w	r1, r1, #2
 8003234:	6011      	str	r1, [r2, #0]
	Macro_Write_Block(RCC->CFGR, 0x3, 0x2, 0);
 8003236:	685a      	ldr	r2, [r3, #4]
 8003238:	f022 0203 	bic.w	r2, r2, #3
 800323c:	f042 0202 	orr.w	r2, r2, #2
 8003240:	605a      	str	r2, [r3, #4]
 8003242:	4770      	bx	lr

08003244 <__get_PSP>:
uint32_t __get_PSP(void) __attribute__( ( naked ) );
uint32_t __get_PSP(void)
{
  uint32_t result=0;

  __ASM volatile ("MRS %0, psp\n\t" 
 8003244:	f3ef 8009 	mrs	r0, PSP
 8003248:	4600      	mov	r0, r0
 800324a:	4770      	bx	lr

0800324c <__set_PSP>:
 * (process stack pointer) Cortex processor register
 */
void __set_PSP(uint32_t topOfProcStack) __attribute__( ( naked ) );
void __set_PSP(uint32_t topOfProcStack)
{
  __ASM volatile ("MSR psp, %0\n\t"
 800324c:	f380 8809 	msr	PSP, r0
 8003250:	4770      	bx	lr
 8003252:	bf00      	nop

08003254 <__get_MSP>:
uint32_t __get_MSP(void) __attribute__( ( naked ) );
uint32_t __get_MSP(void)
{
  uint32_t result=0;

  __ASM volatile ("MRS %0, msp\n\t" 
 8003254:	f3ef 8008 	mrs	r0, MSP
 8003258:	4600      	mov	r0, r0
 800325a:	4770      	bx	lr

0800325c <__set_MSP>:
 * (main stack pointer) Cortex processor register
 */
void __set_MSP(uint32_t topOfMainStack) __attribute__( ( naked ) );
void __set_MSP(uint32_t topOfMainStack)
{
  __ASM volatile ("MSR msp, %0\n\t"
 800325c:	f380 8808 	msr	MSP, r0
 8003260:	4770      	bx	lr
 8003262:	bf00      	nop

08003264 <__get_BASEPRI>:
 */
uint32_t __get_BASEPRI(void)
{
  uint32_t result=0;
  
  __ASM volatile ("MRS %0, basepri_max" : "=r" (result) );
 8003264:	f3ef 8012 	mrs	r0, BASEPRI_MAX
  return(result);
}
 8003268:	4770      	bx	lr
 800326a:	bf00      	nop

0800326c <__set_BASEPRI>:
 *
 * Set the base priority register
 */
void __set_BASEPRI(uint32_t value)
{
  __ASM volatile ("MSR basepri, %0" : : "r" (value) );
 800326c:	f380 8811 	msr	BASEPRI, r0
 8003270:	4770      	bx	lr
 8003272:	bf00      	nop

08003274 <__get_PRIMASK>:
 */
uint32_t __get_PRIMASK(void)
{
  uint32_t result=0;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
 8003274:	f3ef 8010 	mrs	r0, PRIMASK
  return(result);
}
 8003278:	4770      	bx	lr
 800327a:	bf00      	nop

0800327c <__set_PRIMASK>:
 *
 * Set the priority mask bit in the priority mask register
 */
void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) );
 800327c:	f380 8810 	msr	PRIMASK, r0
 8003280:	4770      	bx	lr
 8003282:	bf00      	nop

08003284 <__get_FAULTMASK>:
 */
uint32_t __get_FAULTMASK(void)
{
  uint32_t result=0;
  
  __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 8003284:	f3ef 8013 	mrs	r0, FAULTMASK
  return(result);
}
 8003288:	4770      	bx	lr
 800328a:	bf00      	nop

0800328c <__set_FAULTMASK>:
 *
 * Set the fault mask register
 */
void __set_FAULTMASK(uint32_t faultMask)
{
  __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) );
 800328c:	f380 8813 	msr	FAULTMASK, r0
 8003290:	4770      	bx	lr
 8003292:	bf00      	nop

08003294 <__get_CONTROL>:
 */
uint32_t __get_CONTROL(void)
{
  uint32_t result=0;

  __ASM volatile ("MRS %0, control" : "=r" (result) );
 8003294:	f3ef 8014 	mrs	r0, CONTROL
  return(result);
}
 8003298:	4770      	bx	lr
 800329a:	bf00      	nop

0800329c <__set_CONTROL>:
 *
 * Set the control register
 */
void __set_CONTROL(uint32_t control)
{
  __ASM volatile ("MSR control, %0" : : "r" (control) );
 800329c:	f380 8814 	msr	CONTROL, r0
 80032a0:	4770      	bx	lr
 80032a2:	bf00      	nop

080032a4 <__REV>:
 */
uint32_t __REV(uint32_t value)
{
  uint32_t result=0;
  
  __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 80032a4:	ba00      	rev	r0, r0
  return(result);
}
 80032a6:	4770      	bx	lr

080032a8 <__REV16>:
 */
uint32_t __REV16(uint16_t value)
{
  uint32_t result=0;
  
  __ASM volatile ("rev16 %0, %1" : "=r" (result) : "r" (value) );
 80032a8:	ba40      	rev16	r0, r0
  return(result);
}
 80032aa:	4770      	bx	lr

080032ac <__REVSH>:
 */
int32_t __REVSH(int16_t value)
{
  uint32_t result=0;
  
  __ASM volatile ("revsh %0, %1" : "=r" (result) : "r" (value) );
 80032ac:	bac0      	revsh	r0, r0
  return(result);
}
 80032ae:	4770      	bx	lr

080032b0 <__RBIT>:
 */
uint32_t __RBIT(uint32_t value)
{
  uint32_t result=0;
  
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80032b0:	fa90 f0a0 	rbit	r0, r0
   return(result);
}
 80032b4:	4770      	bx	lr
 80032b6:	bf00      	nop

080032b8 <__LDREXB>:
 */
uint8_t __LDREXB(uint8_t *addr)
{
    uint8_t result=0;
  
   __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) );
 80032b8:	e8d0 0f4f 	ldrexb	r0, [r0]
   return(result);
}
 80032bc:	b2c0      	uxtb	r0, r0
 80032be:	4770      	bx	lr

080032c0 <__LDREXH>:
 */
uint16_t __LDREXH(uint16_t *addr)
{
    uint16_t result=0;
  
   __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) );
 80032c0:	e8d0 0f5f 	ldrexh	r0, [r0]
   return(result);
}
 80032c4:	b280      	uxth	r0, r0
 80032c6:	4770      	bx	lr

080032c8 <__LDREXW>:
 */
uint32_t __LDREXW(uint32_t *addr)
{
    uint32_t result=0;
  
   __ASM volatile ("ldrex %0, [%1]" : "=r" (result) : "r" (addr) );
 80032c8:	e850 0f00 	ldrex	r0, [r0]
   return(result);
}
 80032cc:	4770      	bx	lr
 80032ce:	bf00      	nop

080032d0 <__STREXB>:
 */
uint32_t __STREXB(uint8_t value, uint8_t *addr)
{
   uint32_t result=0;
  
   __ASM volatile ("strexb %0, %2, [%1]" : "=&r" (result) : "r" (addr), "r" (value) );
 80032d0:	e8c1 0f43 	strexb	r3, r0, [r1]
 80032d4:	4618      	mov	r0, r3
   return(result);
}
 80032d6:	4770      	bx	lr

080032d8 <__STREXH>:
 */
uint32_t __STREXH(uint16_t value, uint16_t *addr)
{
   uint32_t result=0;
  
   __ASM volatile ("strexh %0, %2, [%1]" : "=&r" (result) : "r" (addr), "r" (value) );
 80032d8:	e8c1 0f53 	strexh	r3, r0, [r1]
 80032dc:	4618      	mov	r0, r3
   return(result);
}
 80032de:	4770      	bx	lr

080032e0 <__STREXW>:
 */
uint32_t __STREXW(uint32_t value, uint32_t *addr)
{
   uint32_t result=0;
  
   __ASM volatile ("strex %0, %2, [%1]" : "=r" (result) : "r" (addr), "r" (value) );
 80032e0:	e841 0000 	strex	r0, r0, [r1]
   return(result);
}
 80032e4:	4770      	bx	lr
 80032e6:	bf00      	nop

080032e8 <I2C_Init>:
void I2C_Init(unsigned int freq)
{
	unsigned int r;
	volatile int i;

	Macro_Set_Bit(RCC->APB1ENR, 21);
 80032e8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80032ec:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80032f0:	69d9      	ldr	r1, [r3, #28]
#define I2CADDR			0x9A
#define I2CADDR_WR		(I2CADDR|0x0)
#define I2CADDR_RD		(I2CADDR|0x1)

void I2C_Init(unsigned int freq)
{
 80032f2:	b082      	sub	sp, #8
	unsigned int r;
	volatile int i;

	Macro_Set_Bit(RCC->APB1ENR, 21);
 80032f4:	f441 1100 	orr.w	r1, r1, #2097152	; 0x200000
 80032f8:	61d9      	str	r1, [r3, #28]

	Macro_Clear_Bit(RCC->APB1RSTR, 21);
 80032fa:	6919      	ldr	r1, [r3, #16]
	for(i=0; i<1000; i++);
 80032fc:	2200      	movs	r2, #0
	unsigned int r;
	volatile int i;

	Macro_Set_Bit(RCC->APB1ENR, 21);

	Macro_Clear_Bit(RCC->APB1RSTR, 21);
 80032fe:	f421 1100 	bic.w	r1, r1, #2097152	; 0x200000
 8003302:	6119      	str	r1, [r3, #16]
	for(i=0; i<1000; i++);
 8003304:	9201      	str	r2, [sp, #4]
 8003306:	9b01      	ldr	r3, [sp, #4]
 8003308:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800330c:	da06      	bge.n	800331c <I2C_Init+0x34>
 800330e:	9b01      	ldr	r3, [sp, #4]
 8003310:	3301      	adds	r3, #1
 8003312:	9301      	str	r3, [sp, #4]
 8003314:	9b01      	ldr	r3, [sp, #4]
 8003316:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800331a:	dbf8      	blt.n	800330e <I2C_Init+0x26>
	Macro_Set_Bit(RCC->APB1RSTR, 21);
 800331c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003320:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8003324:	6919      	ldr	r1, [r3, #16]
	for(i=0; i<1000; i++);
 8003326:	2200      	movs	r2, #0

	Macro_Set_Bit(RCC->APB1ENR, 21);

	Macro_Clear_Bit(RCC->APB1RSTR, 21);
	for(i=0; i<1000; i++);
	Macro_Set_Bit(RCC->APB1RSTR, 21);
 8003328:	f441 1100 	orr.w	r1, r1, #2097152	; 0x200000
 800332c:	6119      	str	r1, [r3, #16]
	for(i=0; i<1000; i++);
 800332e:	9201      	str	r2, [sp, #4]
 8003330:	9b01      	ldr	r3, [sp, #4]
 8003332:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003336:	da06      	bge.n	8003346 <I2C_Init+0x5e>
 8003338:	9b01      	ldr	r3, [sp, #4]
 800333a:	3301      	adds	r3, #1
 800333c:	9301      	str	r3, [sp, #4]
 800333e:	9b01      	ldr	r3, [sp, #4]
 8003340:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003344:	dbf8      	blt.n	8003338 <I2C_Init+0x50>
	Macro_Clear_Bit(RCC->APB1RSTR, 21);
 8003346:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800334a:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800334e:	691a      	ldr	r2, [r3, #16]

	Macro_Set_Bit(RCC->APB2ENR, 3);
	Macro_Clear_Bit(AFIO->MAPR, 1);
 8003350:	2100      	movs	r1, #0

	Macro_Clear_Bit(RCC->APB1RSTR, 21);
	for(i=0; i<1000; i++);
	Macro_Set_Bit(RCC->APB1RSTR, 21);
	for(i=0; i<1000; i++);
	Macro_Clear_Bit(RCC->APB1RSTR, 21);
 8003352:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 8003356:	611a      	str	r2, [r3, #16]

	Macro_Set_Bit(RCC->APB2ENR, 3);
 8003358:	699a      	ldr	r2, [r3, #24]
	Macro_Clear_Bit(AFIO->MAPR, 1);
 800335a:	f2c4 0101 	movt	r1, #16385	; 0x4001
	for(i=0; i<1000; i++);
	Macro_Set_Bit(RCC->APB1RSTR, 21);
	for(i=0; i<1000; i++);
	Macro_Clear_Bit(RCC->APB1RSTR, 21);

	Macro_Set_Bit(RCC->APB2ENR, 3);
 800335e:	f042 0208 	orr.w	r2, r2, #8
 8003362:	619a      	str	r2, [r3, #24]
	Macro_Clear_Bit(AFIO->MAPR, 1);
 8003364:	684b      	ldr	r3, [r1, #4]
	Macro_Write_Block(GPIOB->CRL, 0xff, 0xFF, 24);
 8003366:	f44f 6240 	mov.w	r2, #3072	; 0xc00
	Macro_Set_Bit(RCC->APB1RSTR, 21);
	for(i=0; i<1000; i++);
	Macro_Clear_Bit(RCC->APB1RSTR, 21);

	Macro_Set_Bit(RCC->APB2ENR, 3);
	Macro_Clear_Bit(AFIO->MAPR, 1);
 800336a:	f023 0302 	bic.w	r3, r3, #2
 800336e:	604b      	str	r3, [r1, #4]
	Macro_Write_Block(GPIOB->CRL, 0xff, 0xFF, 24);
 8003370:	f2c4 0201 	movt	r2, #16385	; 0x4001
 8003374:	6811      	ldr	r1, [r2, #0]

	Macro_Write_Block(I2C1->CR2, 0x3f, PCLK1/1000000, 0);
 8003376:	f44f 43a8 	mov.w	r3, #21504	; 0x5400
	for(i=0; i<1000; i++);
	Macro_Clear_Bit(RCC->APB1RSTR, 21);

	Macro_Set_Bit(RCC->APB2ENR, 3);
	Macro_Clear_Bit(AFIO->MAPR, 1);
	Macro_Write_Block(GPIOB->CRL, 0xff, 0xFF, 24);
 800337a:	f041 417f 	orr.w	r1, r1, #4278190080	; 0xff000000
 800337e:	6011      	str	r1, [r2, #0]

	Macro_Write_Block(I2C1->CR2, 0x3f, PCLK1/1000000, 0);
 8003380:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8003384:	889a      	ldrh	r2, [r3, #4]
	Macro_Clear_Bit(I2C1->CR1, 0);
	I2C1->TRISE = PCLK1/1000000+1;
	r = PCLK1/(freq*2);
 8003386:	f44f 41a2 	mov.w	r1, #20736	; 0x5100

	Macro_Set_Bit(RCC->APB2ENR, 3);
	Macro_Clear_Bit(AFIO->MAPR, 1);
	Macro_Write_Block(GPIOB->CRL, 0xff, 0xFF, 24);

	Macro_Write_Block(I2C1->CR2, 0x3f, PCLK1/1000000, 0);
 800338a:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 800338e:	0412      	lsls	r2, r2, #16
 8003390:	0c12      	lsrs	r2, r2, #16
 8003392:	f042 0224 	orr.w	r2, r2, #36	; 0x24
 8003396:	809a      	strh	r2, [r3, #4]
	Macro_Clear_Bit(I2C1->CR1, 0);
 8003398:	881a      	ldrh	r2, [r3, #0]
	I2C1->TRISE = PCLK1/1000000+1;
	r = PCLK1/(freq*2);
 800339a:	f2c0 2125 	movt	r1, #549	; 0x225
 800339e:	0040      	lsls	r0, r0, #1
 80033a0:	fbb1 f0f0 	udiv	r0, r1, r0
	Macro_Set_Bit(RCC->APB2ENR, 3);
	Macro_Clear_Bit(AFIO->MAPR, 1);
	Macro_Write_Block(GPIOB->CRL, 0xff, 0xFF, 24);

	Macro_Write_Block(I2C1->CR2, 0x3f, PCLK1/1000000, 0);
	Macro_Clear_Bit(I2C1->CR1, 0);
 80033a4:	f022 0201 	bic.w	r2, r2, #1
	I2C1->TRISE = PCLK1/1000000+1;
	r = PCLK1/(freq*2);
	I2C1->CCR = ((r<4)?4:r);
 80033a8:	2804      	cmp	r0, #4
 80033aa:	bf38      	it	cc
 80033ac:	2004      	movcc	r0, #4
	Macro_Set_Bit(RCC->APB2ENR, 3);
	Macro_Clear_Bit(AFIO->MAPR, 1);
	Macro_Write_Block(GPIOB->CRL, 0xff, 0xFF, 24);

	Macro_Write_Block(I2C1->CR2, 0x3f, PCLK1/1000000, 0);
	Macro_Clear_Bit(I2C1->CR1, 0);
 80033ae:	0412      	lsls	r2, r2, #16
	I2C1->TRISE = PCLK1/1000000+1;
	r = PCLK1/(freq*2);
	I2C1->CCR = ((r<4)?4:r);
 80033b0:	b280      	uxth	r0, r0
	Macro_Set_Bit(RCC->APB2ENR, 3);
	Macro_Clear_Bit(AFIO->MAPR, 1);
	Macro_Write_Block(GPIOB->CRL, 0xff, 0xFF, 24);

	Macro_Write_Block(I2C1->CR2, 0x3f, PCLK1/1000000, 0);
	Macro_Clear_Bit(I2C1->CR1, 0);
 80033b2:	0c12      	lsrs	r2, r2, #16
	I2C1->TRISE = PCLK1/1000000+1;
 80033b4:	2125      	movs	r1, #37	; 0x25
	Macro_Set_Bit(RCC->APB2ENR, 3);
	Macro_Clear_Bit(AFIO->MAPR, 1);
	Macro_Write_Block(GPIOB->CRL, 0xff, 0xFF, 24);

	Macro_Write_Block(I2C1->CR2, 0x3f, PCLK1/1000000, 0);
	Macro_Clear_Bit(I2C1->CR1, 0);
 80033b6:	801a      	strh	r2, [r3, #0]
	I2C1->TRISE = PCLK1/1000000+1;
 80033b8:	8419      	strh	r1, [r3, #32]
	r = PCLK1/(freq*2);
	I2C1->CCR = ((r<4)?4:r);
 80033ba:	8398      	strh	r0, [r3, #28]

	Macro_Clear_Bit(I2C1->CR1, 1);
 80033bc:	881a      	ldrh	r2, [r3, #0]
 80033be:	f022 0202 	bic.w	r2, r2, #2
 80033c2:	0412      	lsls	r2, r2, #16
 80033c4:	0c12      	lsrs	r2, r2, #16
 80033c6:	801a      	strh	r2, [r3, #0]
	Macro_Set_Bit(I2C1->CR1, 0);
 80033c8:	881a      	ldrh	r2, [r3, #0]
 80033ca:	b292      	uxth	r2, r2
 80033cc:	f042 0201 	orr.w	r2, r2, #1
 80033d0:	801a      	strh	r2, [r3, #0]
	Macro_Set_Bit(I2C1->CR1, 10);
 80033d2:	881a      	ldrh	r2, [r3, #0]
 80033d4:	b292      	uxth	r2, r2
 80033d6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80033da:	801a      	strh	r2, [r3, #0]
}
 80033dc:	b002      	add	sp, #8
 80033de:	4770      	bx	lr

080033e0 <I2C_Write_Reg>:

void I2C_Write_Reg(unsigned int addr, unsigned int data)
{
 80033e0:	b410      	push	{r4}
	while(Macro_Check_Bit_Set(I2C1->SR2, 1)); 					// Idle OK
 80033e2:	f44f 44a8 	mov.w	r4, #21504	; 0x5400
 80033e6:	f2c4 0400 	movt	r4, #16384	; 0x4000
 80033ea:	8b22      	ldrh	r2, [r4, #24]
 80033ec:	f44f 43a8 	mov.w	r3, #21504	; 0x5400
 80033f0:	0792      	lsls	r2, r2, #30
 80033f2:	f2c4 0300 	movt	r3, #16384	; 0x4000
 80033f6:	d4f8      	bmi.n	80033ea <I2C_Write_Reg+0xa>

	Macro_Set_Bit(I2C1->CR1, 8); 								// Start
 80033f8:	881a      	ldrh	r2, [r3, #0]
	while(Macro_Check_Bit_Clear(I2C1->SR1, 0));					// Check Start
 80033fa:	461c      	mov	r4, r3

void I2C_Write_Reg(unsigned int addr, unsigned int data)
{
	while(Macro_Check_Bit_Set(I2C1->SR2, 1)); 					// Idle OK

	Macro_Set_Bit(I2C1->CR1, 8); 								// Start
 80033fc:	b292      	uxth	r2, r2
 80033fe:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003402:	801a      	strh	r2, [r3, #0]
	while(Macro_Check_Bit_Clear(I2C1->SR1, 0));					// Check Start
 8003404:	8aa2      	ldrh	r2, [r4, #20]
 8003406:	f44f 43a8 	mov.w	r3, #21504	; 0x5400
 800340a:	07d2      	lsls	r2, r2, #31
 800340c:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8003410:	d5f8      	bpl.n	8003404 <I2C_Write_Reg+0x24>

	I2C1->DR = I2CADDR_WR;										// Send WR Address
 8003412:	229a      	movs	r2, #154	; 0x9a
 8003414:	821a      	strh	r2, [r3, #16]
	while(Macro_Check_Bit_Clear(I2C1->SR1, 1));					// Check Address
 8003416:	461c      	mov	r4, r3
 8003418:	8aa2      	ldrh	r2, [r4, #20]
 800341a:	f44f 43a8 	mov.w	r3, #21504	; 0x5400
 800341e:	0792      	lsls	r2, r2, #30
 8003420:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8003424:	d5f8      	bpl.n	8003418 <I2C_Write_Reg+0x38>
	(void)I2C1->SR2;											// Clear ADDR flag by reading SR2

	I2C1->DR = addr<<3;											// Send Register Address
 8003426:	00c0      	lsls	r0, r0, #3
 8003428:	b280      	uxth	r0, r0
	Macro_Set_Bit(I2C1->CR1, 8); 								// Start
	while(Macro_Check_Bit_Clear(I2C1->SR1, 0));					// Check Start

	I2C1->DR = I2CADDR_WR;										// Send WR Address
	while(Macro_Check_Bit_Clear(I2C1->SR1, 1));					// Check Address
	(void)I2C1->SR2;											// Clear ADDR flag by reading SR2
 800342a:	8b1a      	ldrh	r2, [r3, #24]

	I2C1->DR = addr<<3;											// Send Register Address
	while(Macro_Check_Bit_Clear(I2C1->SR1, 2));					// Check Byte Transfer Finished
 800342c:	461c      	mov	r4, r3

	I2C1->DR = I2CADDR_WR;										// Send WR Address
	while(Macro_Check_Bit_Clear(I2C1->SR1, 1));					// Check Address
	(void)I2C1->SR2;											// Clear ADDR flag by reading SR2

	I2C1->DR = addr<<3;											// Send Register Address
 800342e:	8218      	strh	r0, [r3, #16]
	while(Macro_Check_Bit_Clear(I2C1->SR1, 2));					// Check Byte Transfer Finished
 8003430:	8aa2      	ldrh	r2, [r4, #20]
 8003432:	f44f 43a8 	mov.w	r3, #21504	; 0x5400
 8003436:	0750      	lsls	r0, r2, #29
 8003438:	f2c4 0300 	movt	r3, #16384	; 0x4000
 800343c:	d5f8      	bpl.n	8003430 <I2C_Write_Reg+0x50>

	I2C1->DR = data;											// Send Data
 800343e:	b289      	uxth	r1, r1
 8003440:	8219      	strh	r1, [r3, #16]
	while(Macro_Check_Bit_Clear(I2C1->SR1, 2));					// Check Byte Transfer Finished
 8003442:	4619      	mov	r1, r3
 8003444:	8a8a      	ldrh	r2, [r1, #20]
 8003446:	f44f 43a8 	mov.w	r3, #21504	; 0x5400
 800344a:	0752      	lsls	r2, r2, #29
 800344c:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8003450:	d5f8      	bpl.n	8003444 <I2C_Write_Reg+0x64>

	Macro_Set_Bit(I2C1->CR1, 9); 								// Stop
 8003452:	8819      	ldrh	r1, [r3, #0]
	while(Macro_Check_Bit_Set(I2C1->CR1, 9));					// Check Stop(Auto Cleared)
 8003454:	461a      	mov	r2, r3
	while(Macro_Check_Bit_Clear(I2C1->SR1, 2));					// Check Byte Transfer Finished

	I2C1->DR = data;											// Send Data
	while(Macro_Check_Bit_Clear(I2C1->SR1, 2));					// Check Byte Transfer Finished

	Macro_Set_Bit(I2C1->CR1, 9); 								// Stop
 8003456:	b289      	uxth	r1, r1
 8003458:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800345c:	8019      	strh	r1, [r3, #0]
	while(Macro_Check_Bit_Set(I2C1->CR1, 9));					// Check Stop(Auto Cleared)
 800345e:	8813      	ldrh	r3, [r2, #0]
 8003460:	059b      	lsls	r3, r3, #22
 8003462:	d4fc      	bmi.n	800345e <I2C_Write_Reg+0x7e>
}
 8003464:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003468:	4770      	bx	lr
 800346a:	bf00      	nop

0800346c <I2C_Config_GPIO>:
	Macro_Set_Bit(I2C1->CR1, 10);
}

void I2C_Write_Reg(unsigned int addr, unsigned int data)
{
	while(Macro_Check_Bit_Set(I2C1->SR2, 1)); 					// Idle OK
 800346c:	f44f 41a8 	mov.w	r1, #21504	; 0x5400
 8003470:	f2c4 0100 	movt	r1, #16384	; 0x4000
 8003474:	8b0a      	ldrh	r2, [r1, #24]
 8003476:	f44f 43a8 	mov.w	r3, #21504	; 0x5400
 800347a:	0792      	lsls	r2, r2, #30
 800347c:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8003480:	d4f8      	bmi.n	8003474 <I2C_Config_GPIO+0x8>

	Macro_Set_Bit(I2C1->CR1, 8); 								// Start
 8003482:	881a      	ldrh	r2, [r3, #0]
	while(Macro_Check_Bit_Clear(I2C1->SR1, 0));					// Check Start
 8003484:	4619      	mov	r1, r3

void I2C_Write_Reg(unsigned int addr, unsigned int data)
{
	while(Macro_Check_Bit_Set(I2C1->SR2, 1)); 					// Idle OK

	Macro_Set_Bit(I2C1->CR1, 8); 								// Start
 8003486:	b292      	uxth	r2, r2
 8003488:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800348c:	801a      	strh	r2, [r3, #0]
	while(Macro_Check_Bit_Clear(I2C1->SR1, 0));					// Check Start
 800348e:	8a8a      	ldrh	r2, [r1, #20]
 8003490:	f44f 43a8 	mov.w	r3, #21504	; 0x5400
 8003494:	07d2      	lsls	r2, r2, #31
 8003496:	f2c4 0300 	movt	r3, #16384	; 0x4000
 800349a:	d5f8      	bpl.n	800348e <I2C_Config_GPIO+0x22>

	I2C1->DR = I2CADDR_WR;										// Send WR Address
 800349c:	229a      	movs	r2, #154	; 0x9a
 800349e:	821a      	strh	r2, [r3, #16]
	while(Macro_Check_Bit_Clear(I2C1->SR1, 1));					// Check Address
 80034a0:	4619      	mov	r1, r3
 80034a2:	8a8a      	ldrh	r2, [r1, #20]
 80034a4:	f44f 43a8 	mov.w	r3, #21504	; 0x5400
 80034a8:	0792      	lsls	r2, r2, #30
 80034aa:	f2c4 0300 	movt	r3, #16384	; 0x4000
 80034ae:	d5f8      	bpl.n	80034a2 <I2C_Config_GPIO+0x36>
	(void)I2C1->SR2;											// Clear ADDR flag by reading SR2

	I2C1->DR = addr<<3;											// Send Register Address
 80034b0:	2250      	movs	r2, #80	; 0x50
	Macro_Set_Bit(I2C1->CR1, 8); 								// Start
	while(Macro_Check_Bit_Clear(I2C1->SR1, 0));					// Check Start

	I2C1->DR = I2CADDR_WR;										// Send WR Address
	while(Macro_Check_Bit_Clear(I2C1->SR1, 1));					// Check Address
	(void)I2C1->SR2;											// Clear ADDR flag by reading SR2
 80034b2:	8b19      	ldrh	r1, [r3, #24]

	I2C1->DR = addr<<3;											// Send Register Address
	while(Macro_Check_Bit_Clear(I2C1->SR1, 2));					// Check Byte Transfer Finished
 80034b4:	4619      	mov	r1, r3

	I2C1->DR = I2CADDR_WR;										// Send WR Address
	while(Macro_Check_Bit_Clear(I2C1->SR1, 1));					// Check Address
	(void)I2C1->SR2;											// Clear ADDR flag by reading SR2

	I2C1->DR = addr<<3;											// Send Register Address
 80034b6:	821a      	strh	r2, [r3, #16]
	while(Macro_Check_Bit_Clear(I2C1->SR1, 2));					// Check Byte Transfer Finished
 80034b8:	8a8a      	ldrh	r2, [r1, #20]
 80034ba:	f44f 43a8 	mov.w	r3, #21504	; 0x5400
 80034be:	0752      	lsls	r2, r2, #29
 80034c0:	f2c4 0300 	movt	r3, #16384	; 0x4000
 80034c4:	d5f8      	bpl.n	80034b8 <I2C_Config_GPIO+0x4c>

	I2C1->DR = data;											// Send Data
 80034c6:	b280      	uxth	r0, r0
 80034c8:	8218      	strh	r0, [r3, #16]
	while(Macro_Check_Bit_Clear(I2C1->SR1, 2));					// Check Byte Transfer Finished
 80034ca:	4619      	mov	r1, r3
 80034cc:	8a8a      	ldrh	r2, [r1, #20]
 80034ce:	f44f 43a8 	mov.w	r3, #21504	; 0x5400
 80034d2:	0750      	lsls	r0, r2, #29
 80034d4:	f2c4 0300 	movt	r3, #16384	; 0x4000
 80034d8:	d5f8      	bpl.n	80034cc <I2C_Config_GPIO+0x60>

	Macro_Set_Bit(I2C1->CR1, 9); 								// Stop
 80034da:	8819      	ldrh	r1, [r3, #0]
	while(Macro_Check_Bit_Set(I2C1->CR1, 9));					// Check Stop(Auto Cleared)
 80034dc:	461a      	mov	r2, r3
	while(Macro_Check_Bit_Clear(I2C1->SR1, 2));					// Check Byte Transfer Finished

	I2C1->DR = data;											// Send Data
	while(Macro_Check_Bit_Clear(I2C1->SR1, 2));					// Check Byte Transfer Finished

	Macro_Set_Bit(I2C1->CR1, 9); 								// Stop
 80034de:	b289      	uxth	r1, r1
 80034e0:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 80034e4:	8019      	strh	r1, [r3, #0]
	while(Macro_Check_Bit_Set(I2C1->CR1, 9));					// Check Stop(Auto Cleared)
 80034e6:	8813      	ldrh	r3, [r2, #0]
 80034e8:	0599      	lsls	r1, r3, #22
 80034ea:	d4fc      	bmi.n	80034e6 <I2C_Config_GPIO+0x7a>
}

void I2C_Config_GPIO(unsigned int config)
{
	I2C_Write_Reg(IODIR, config);
}
 80034ec:	4770      	bx	lr
 80034ee:	bf00      	nop

080034f0 <I2C_Write_GPIO>:
	Macro_Set_Bit(I2C1->CR1, 10);
}

void I2C_Write_Reg(unsigned int addr, unsigned int data)
{
	while(Macro_Check_Bit_Set(I2C1->SR2, 1)); 					// Idle OK
 80034f0:	f44f 41a8 	mov.w	r1, #21504	; 0x5400
 80034f4:	f2c4 0100 	movt	r1, #16384	; 0x4000
 80034f8:	8b0a      	ldrh	r2, [r1, #24]
 80034fa:	f44f 43a8 	mov.w	r3, #21504	; 0x5400
 80034fe:	0792      	lsls	r2, r2, #30
 8003500:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8003504:	d4f8      	bmi.n	80034f8 <I2C_Write_GPIO+0x8>

	Macro_Set_Bit(I2C1->CR1, 8); 								// Start
 8003506:	881a      	ldrh	r2, [r3, #0]
	while(Macro_Check_Bit_Clear(I2C1->SR1, 0));					// Check Start
 8003508:	4619      	mov	r1, r3

void I2C_Write_Reg(unsigned int addr, unsigned int data)
{
	while(Macro_Check_Bit_Set(I2C1->SR2, 1)); 					// Idle OK

	Macro_Set_Bit(I2C1->CR1, 8); 								// Start
 800350a:	b292      	uxth	r2, r2
 800350c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003510:	801a      	strh	r2, [r3, #0]
	while(Macro_Check_Bit_Clear(I2C1->SR1, 0));					// Check Start
 8003512:	8a8a      	ldrh	r2, [r1, #20]
 8003514:	f44f 43a8 	mov.w	r3, #21504	; 0x5400
 8003518:	07d2      	lsls	r2, r2, #31
 800351a:	f2c4 0300 	movt	r3, #16384	; 0x4000
 800351e:	d5f8      	bpl.n	8003512 <I2C_Write_GPIO+0x22>

	I2C1->DR = I2CADDR_WR;										// Send WR Address
 8003520:	229a      	movs	r2, #154	; 0x9a
 8003522:	821a      	strh	r2, [r3, #16]
	while(Macro_Check_Bit_Clear(I2C1->SR1, 1));					// Check Address
 8003524:	4619      	mov	r1, r3
 8003526:	8a8a      	ldrh	r2, [r1, #20]
 8003528:	f44f 43a8 	mov.w	r3, #21504	; 0x5400
 800352c:	0792      	lsls	r2, r2, #30
 800352e:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8003532:	d5f8      	bpl.n	8003526 <I2C_Write_GPIO+0x36>
	(void)I2C1->SR2;											// Clear ADDR flag by reading SR2

	I2C1->DR = addr<<3;											// Send Register Address
 8003534:	2258      	movs	r2, #88	; 0x58
	Macro_Set_Bit(I2C1->CR1, 8); 								// Start
	while(Macro_Check_Bit_Clear(I2C1->SR1, 0));					// Check Start

	I2C1->DR = I2CADDR_WR;										// Send WR Address
	while(Macro_Check_Bit_Clear(I2C1->SR1, 1));					// Check Address
	(void)I2C1->SR2;											// Clear ADDR flag by reading SR2
 8003536:	8b19      	ldrh	r1, [r3, #24]

	I2C1->DR = addr<<3;											// Send Register Address
	while(Macro_Check_Bit_Clear(I2C1->SR1, 2));					// Check Byte Transfer Finished
 8003538:	4619      	mov	r1, r3

	I2C1->DR = I2CADDR_WR;										// Send WR Address
	while(Macro_Check_Bit_Clear(I2C1->SR1, 1));					// Check Address
	(void)I2C1->SR2;											// Clear ADDR flag by reading SR2

	I2C1->DR = addr<<3;											// Send Register Address
 800353a:	821a      	strh	r2, [r3, #16]
	while(Macro_Check_Bit_Clear(I2C1->SR1, 2));					// Check Byte Transfer Finished
 800353c:	8a8a      	ldrh	r2, [r1, #20]
 800353e:	f44f 43a8 	mov.w	r3, #21504	; 0x5400
 8003542:	0752      	lsls	r2, r2, #29
 8003544:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8003548:	d5f8      	bpl.n	800353c <I2C_Write_GPIO+0x4c>

	I2C1->DR = data;											// Send Data
 800354a:	b280      	uxth	r0, r0
 800354c:	8218      	strh	r0, [r3, #16]
	while(Macro_Check_Bit_Clear(I2C1->SR1, 2));					// Check Byte Transfer Finished
 800354e:	4619      	mov	r1, r3
 8003550:	8a8a      	ldrh	r2, [r1, #20]
 8003552:	f44f 43a8 	mov.w	r3, #21504	; 0x5400
 8003556:	0750      	lsls	r0, r2, #29
 8003558:	f2c4 0300 	movt	r3, #16384	; 0x4000
 800355c:	d5f8      	bpl.n	8003550 <I2C_Write_GPIO+0x60>

	Macro_Set_Bit(I2C1->CR1, 9); 								// Stop
 800355e:	8819      	ldrh	r1, [r3, #0]
	while(Macro_Check_Bit_Set(I2C1->CR1, 9));					// Check Stop(Auto Cleared)
 8003560:	461a      	mov	r2, r3
	while(Macro_Check_Bit_Clear(I2C1->SR1, 2));					// Check Byte Transfer Finished

	I2C1->DR = data;											// Send Data
	while(Macro_Check_Bit_Clear(I2C1->SR1, 2));					// Check Byte Transfer Finished

	Macro_Set_Bit(I2C1->CR1, 9); 								// Stop
 8003562:	b289      	uxth	r1, r1
 8003564:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 8003568:	8019      	strh	r1, [r3, #0]
	while(Macro_Check_Bit_Set(I2C1->CR1, 9));					// Check Stop(Auto Cleared)
 800356a:	8813      	ldrh	r3, [r2, #0]
 800356c:	0599      	lsls	r1, r3, #22
 800356e:	d4fc      	bmi.n	800356a <I2C_Write_GPIO+0x7a>
}

void I2C_Write_GPIO(unsigned int data)
{
	I2C_Write_Reg(IOSTATE, data);
}
 8003570:	4770      	bx	lr
 8003572:	bf00      	nop

08003574 <Key_Poll_Init>:
#include "device_driver.h"

void Key_Poll_Init(void)
{
	Macro_Set_Bit(RCC->APB2ENR, 3);
 8003574:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8003578:	f2c4 0202 	movt	r2, #16386	; 0x4002
 800357c:	6991      	ldr	r1, [r2, #24]
	Macro_Write_Block(GPIOB->CRL, 0xff, 0x44, 24);
 800357e:	f44f 6340 	mov.w	r3, #3072	; 0xc00
#include "device_driver.h"

void Key_Poll_Init(void)
{
	Macro_Set_Bit(RCC->APB2ENR, 3);
 8003582:	f041 0108 	orr.w	r1, r1, #8
 8003586:	6191      	str	r1, [r2, #24]
	Macro_Write_Block(GPIOB->CRL, 0xff, 0x44, 24);
 8003588:	f2c4 0301 	movt	r3, #16385	; 0x4001
 800358c:	681a      	ldr	r2, [r3, #0]
 800358e:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8003592:	f042 4288 	orr.w	r2, r2, #1140850688	; 0x44000000
 8003596:	601a      	str	r2, [r3, #0]
 8003598:	4770      	bx	lr
 800359a:	bf00      	nop

0800359c <Key_Get_Pressed>:

#define COUNT_FOR_CHAT 		20000

static int Key_Check_Input(void)
{
	return ~Macro_Extract_Area(GPIOB->IDR, 0x3, 6) & 0x3;
 800359c:	f44f 6140 	mov.w	r1, #3072	; 0xc00
 80035a0:	f2c4 0101 	movt	r1, #16385	; 0x4001
 80035a4:	6888      	ldr	r0, [r1, #8]
 80035a6:	f644 6320 	movw	r3, #20000	; 0x4e20
 80035aa:	f080 00c0 	eor.w	r0, r0, #192	; 0xc0
 80035ae:	f3c0 1081 	ubfx	r0, r0, #6, #2
 80035b2:	688a      	ldr	r2, [r1, #8]
 80035b4:	f082 02c0 	eor.w	r2, r2, #192	; 0xc0
 80035b8:	f3c2 1281 	ubfx	r2, r2, #6, #2
	{
		k = Key_Check_Input();

		for(i=0; i<COUNT_FOR_CHAT; i++)
		{
			if(k != Key_Check_Input())
 80035bc:	4290      	cmp	r0, r2
 80035be:	d1f1      	bne.n	80035a4 <Key_Get_Pressed+0x8>

	for(;;)
	{
		k = Key_Check_Input();

		for(i=0; i<COUNT_FOR_CHAT; i++)
 80035c0:	3b01      	subs	r3, #1
 80035c2:	d1f6      	bne.n	80035b2 <Key_Get_Pressed+0x16>

		if(i == COUNT_FOR_CHAT) break;
	}

	return k;
}
 80035c4:	4770      	bx	lr
 80035c6:	bf00      	nop

080035c8 <Key_Wait_Key_Released>:

#define COUNT_FOR_CHAT 		20000

static int Key_Check_Input(void)
{
	return ~Macro_Extract_Area(GPIOB->IDR, 0x3, 6) & 0x3;
 80035c8:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 80035cc:	f2c4 0001 	movt	r0, #16385	; 0x4001
 80035d0:	6881      	ldr	r1, [r0, #8]
 80035d2:	f644 6320 	movw	r3, #20000	; 0x4e20
 80035d6:	f081 01c0 	eor.w	r1, r1, #192	; 0xc0
 80035da:	f3c1 1181 	ubfx	r1, r1, #6, #2
 80035de:	6882      	ldr	r2, [r0, #8]
 80035e0:	f082 02c0 	eor.w	r2, r2, #192	; 0xc0
 80035e4:	f3c2 1281 	ubfx	r2, r2, #6, #2
	{
		k = Key_Check_Input();

		for(i=0; i<COUNT_FOR_CHAT; i++)
		{
			if(k != Key_Check_Input())
 80035e8:	4291      	cmp	r1, r2
 80035ea:	d1f1      	bne.n	80035d0 <Key_Wait_Key_Released+0x8>

	for(;;)
	{
		k = Key_Check_Input();

		for(i=0; i<COUNT_FOR_CHAT; i++)
 80035ec:	3b01      	subs	r3, #1
 80035ee:	d1f6      	bne.n	80035de <Key_Wait_Key_Released+0x16>
	return k;
}

void Key_Wait_Key_Released(void)
{
	while(Key_Get_Pressed());
 80035f0:	2900      	cmp	r1, #0
 80035f2:	d1ed      	bne.n	80035d0 <Key_Wait_Key_Released+0x8>
}
 80035f4:	4770      	bx	lr
 80035f6:	bf00      	nop

080035f8 <Key_Wait_Key_Pressed>:

#define COUNT_FOR_CHAT 		20000

static int Key_Check_Input(void)
{
	return ~Macro_Extract_Area(GPIOB->IDR, 0x3, 6) & 0x3;
 80035f8:	f44f 6140 	mov.w	r1, #3072	; 0xc00
 80035fc:	f2c4 0101 	movt	r1, #16385	; 0x4001
 8003600:	6888      	ldr	r0, [r1, #8]
 8003602:	f644 6320 	movw	r3, #20000	; 0x4e20
 8003606:	f080 00c0 	eor.w	r0, r0, #192	; 0xc0
 800360a:	f3c0 1081 	ubfx	r0, r0, #6, #2
 800360e:	688a      	ldr	r2, [r1, #8]
 8003610:	f082 02c0 	eor.w	r2, r2, #192	; 0xc0
 8003614:	f3c2 1281 	ubfx	r2, r2, #6, #2
	{
		k = Key_Check_Input();

		for(i=0; i<COUNT_FOR_CHAT; i++)
		{
			if(k != Key_Check_Input())
 8003618:	4290      	cmp	r0, r2
 800361a:	d1f1      	bne.n	8003600 <Key_Wait_Key_Pressed+0x8>

	for(;;)
	{
		k = Key_Check_Input();

		for(i=0; i<COUNT_FOR_CHAT; i++)
 800361c:	3b01      	subs	r3, #1
 800361e:	d1f6      	bne.n	800360e <Key_Wait_Key_Pressed+0x16>

int Key_Wait_Key_Pressed(void)
{
	int k;

	while((k = Key_Get_Pressed()) == 0);
 8003620:	2800      	cmp	r0, #0
 8003622:	d0ed      	beq.n	8003600 <Key_Wait_Key_Pressed+0x8>
	return k;
}
 8003624:	4770      	bx	lr
 8003626:	bf00      	nop

08003628 <Key_ISR_Enable>:

void Key_ISR_Enable(int en)
{
 8003628:	b410      	push	{r4}
	if(en)
 800362a:	b9b0      	cbnz	r0, 800365a <Key_ISR_Enable+0x32>
 * Disable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
 800362c:	f44f 4261 	mov.w	r2, #57600	; 0xe100
 8003630:	f2ce 0200 	movt	r2, #57344	; 0xe000
 8003634:	f44f 0100 	mov.w	r1, #8388608	; 0x800000
	}

	else
	{
		NVIC_DisableIRQ((IRQn_Type)23);
		Macro_Clear_Bit(RCC->APB2ENR,3);
 8003638:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800363c:	f8c2 1080 	str.w	r1, [r2, #128]	; 0x80
 8003640:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8003644:	699a      	ldr	r2, [r3, #24]
 8003646:	f022 0208 	bic.w	r2, r2, #8
 800364a:	619a      	str	r2, [r3, #24]
		Macro_Clear_Bit(RCC->APB2ENR,0);
 800364c:	699a      	ldr	r2, [r3, #24]
 800364e:	f022 0201 	bic.w	r2, r2, #1
 8003652:	619a      	str	r2, [r3, #24]
	}
}
 8003654:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003658:	4770      	bx	lr

void Key_ISR_Enable(int en)
{
	if(en)
	{
		Macro_Set_Bit(RCC->APB2ENR,3);
 800365a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800365e:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8003662:	699a      	ldr	r2, [r3, #24]
		Macro_Set_Bit(RCC->APB2ENR,0);

		Macro_Write_Block(GPIOB->CRL,0xff,0x44,24);
 8003664:	f44f 6140 	mov.w	r1, #3072	; 0xc00

void Key_ISR_Enable(int en)
{
	if(en)
	{
		Macro_Set_Bit(RCC->APB2ENR,3);
 8003668:	f042 0208 	orr.w	r2, r2, #8
 800366c:	619a      	str	r2, [r3, #24]
		Macro_Set_Bit(RCC->APB2ENR,0);
 800366e:	699a      	ldr	r2, [r3, #24]

		Macro_Write_Block(GPIOB->CRL,0xff,0x44,24);
 8003670:	f2c4 0101 	movt	r1, #16385	; 0x4001
void Key_ISR_Enable(int en)
{
	if(en)
	{
		Macro_Set_Bit(RCC->APB2ENR,3);
		Macro_Set_Bit(RCC->APB2ENR,0);
 8003674:	f042 0201 	orr.w	r2, r2, #1
 8003678:	619a      	str	r2, [r3, #24]

		Macro_Write_Block(GPIOB->CRL,0xff,0x44,24);
 800367a:	680b      	ldr	r3, [r1, #0]
		Macro_Write_Block(AFIO->EXTICR[1],0xff,0x11,8);
 800367c:	2200      	movs	r2, #0
	if(en)
	{
		Macro_Set_Bit(RCC->APB2ENR,3);
		Macro_Set_Bit(RCC->APB2ENR,0);

		Macro_Write_Block(GPIOB->CRL,0xff,0x44,24);
 800367e:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8003682:	f043 4388 	orr.w	r3, r3, #1140850688	; 0x44000000
 8003686:	600b      	str	r3, [r1, #0]
		Macro_Write_Block(AFIO->EXTICR[1],0xff,0x11,8);
 8003688:	f2c4 0201 	movt	r2, #16385	; 0x4001
 800368c:	68d1      	ldr	r1, [r2, #12]
		Macro_Write_Block(EXTI->FTSR,0x3,0x3,6);
 800368e:	f44f 6380 	mov.w	r3, #1024	; 0x400
	{
		Macro_Set_Bit(RCC->APB2ENR,3);
		Macro_Set_Bit(RCC->APB2ENR,0);

		Macro_Write_Block(GPIOB->CRL,0xff,0x44,24);
		Macro_Write_Block(AFIO->EXTICR[1],0xff,0x11,8);
 8003692:	f421 417f 	bic.w	r1, r1, #65280	; 0xff00
 8003696:	f441 5188 	orr.w	r1, r1, #4352	; 0x1100
 800369a:	60d1      	str	r1, [r2, #12]
		Macro_Write_Block(EXTI->FTSR,0x3,0x3,6);
 800369c:	f2c4 0301 	movt	r3, #16385	; 0x4001
 80036a0:	68dc      	ldr	r4, [r3, #12]
 * Clear the pending bit for the specified interrupt. 
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
 80036a2:	f44f 4261 	mov.w	r2, #57600	; 0xe100
 80036a6:	f044 04c0 	orr.w	r4, r4, #192	; 0xc0
		EXTI->PR = (0x3<<6);
 80036aa:	20c0      	movs	r0, #192	; 0xc0
 80036ac:	f2ce 0200 	movt	r2, #57344	; 0xe000
 80036b0:	f44f 0100 	mov.w	r1, #8388608	; 0x800000
		Macro_Set_Bit(RCC->APB2ENR,3);
		Macro_Set_Bit(RCC->APB2ENR,0);

		Macro_Write_Block(GPIOB->CRL,0xff,0x44,24);
		Macro_Write_Block(AFIO->EXTICR[1],0xff,0x11,8);
		Macro_Write_Block(EXTI->FTSR,0x3,0x3,6);
 80036b4:	60dc      	str	r4, [r3, #12]
		EXTI->PR = (0x3<<6);
 80036b6:	6158      	str	r0, [r3, #20]
 80036b8:	f8c2 1180 	str.w	r1, [r2, #384]	; 0x180
		NVIC_ClearPendingIRQ((IRQn_Type)23);
		Macro_Write_Block(EXTI->IMR,0x3,0x3,6);
 80036bc:	6818      	ldr	r0, [r3, #0]
 80036be:	f040 00c0 	orr.w	r0, r0, #192	; 0xc0
 80036c2:	6018      	str	r0, [r3, #0]
 * Enable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 80036c4:	6011      	str	r1, [r2, #0]
	{
		NVIC_DisableIRQ((IRQn_Type)23);
		Macro_Clear_Bit(RCC->APB2ENR,3);
		Macro_Clear_Bit(RCC->APB2ENR,0);
	}
}
 80036c6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80036ca:	4770      	bx	lr

080036cc <LED_Init>:
#include "device_driver.h"

void LED_Init(void)
{
	Macro_Set_Bit(RCC->APB2ENR, 3);
 80036cc:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80036d0:	f2c4 0202 	movt	r2, #16386	; 0x4002
 80036d4:	6991      	ldr	r1, [r2, #24]
	Macro_Write_Block(GPIOB->CRH, 0xff, 0x66, 0);
 80036d6:	f44f 6340 	mov.w	r3, #3072	; 0xc00
#include "device_driver.h"

void LED_Init(void)
{
	Macro_Set_Bit(RCC->APB2ENR, 3);
 80036da:	f041 0108 	orr.w	r1, r1, #8
 80036de:	6191      	str	r1, [r2, #24]
	Macro_Write_Block(GPIOB->CRH, 0xff, 0x66, 0);
 80036e0:	f2c4 0301 	movt	r3, #16385	; 0x4001
 80036e4:	685a      	ldr	r2, [r3, #4]
 80036e6:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80036ea:	f042 0266 	orr.w	r2, r2, #102	; 0x66
 80036ee:	605a      	str	r2, [r3, #4]
	Macro_Set_Area(GPIOB->ODR, 0x3, 8);
 80036f0:	68da      	ldr	r2, [r3, #12]
 80036f2:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 80036f6:	60da      	str	r2, [r3, #12]
 80036f8:	4770      	bx	lr
 80036fa:	bf00      	nop

080036fc <LED_Display>:
}

void LED_Display(unsigned int num)
{
	Macro_Write_Block(GPIOB->ODR, 0x3, (~num & 3), 8);
 80036fc:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003700:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8003704:	68da      	ldr	r2, [r3, #12]
 8003706:	43c0      	mvns	r0, r0
 8003708:	f000 0003 	and.w	r0, r0, #3
 800370c:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8003710:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8003714:	60da      	str	r2, [r3, #12]
 8003716:	4770      	bx	lr

08003718 <LED_All_On>:
}

void LED_All_On(void)
{
	Macro_Clear_Area(GPIOB->ODR, 0x3, 8);
 8003718:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 800371c:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8003720:	68da      	ldr	r2, [r3, #12]
 8003722:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8003726:	60da      	str	r2, [r3, #12]
 8003728:	4770      	bx	lr
 800372a:	bf00      	nop

0800372c <LED_All_Off>:
}

void LED_All_Off(void)
{
	Macro_Set_Area(GPIOB->ODR, 0x3, 8);
 800372c:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003730:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8003734:	68da      	ldr	r2, [r3, #12]
 8003736:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 800373a:	60da      	str	r2, [r3, #12]
 800373c:	4770      	bx	lr
 800373e:	bf00      	nop

08003740 <Main>:
int speed_level = 50; // 기본 속도 (%)
extern volatile int Uart1_Rx_In;
extern volatile int Uart1_Rx_Data;

void Main(void)
{
 8003740:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    device_init();
 8003744:	f000 f85a 	bl	80037fc <device_init>
    Uart1_Printf("Motor Control System Ready\n");
 8003748:	f24a 50e0 	movw	r0, #42464	; 0xa5e0
 800374c:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003750:	f000 fd92 	bl	8004278 <Uart1_Printf>
 8003754:	f240 5498 	movw	r4, #1432	; 0x598
 8003758:	f2c2 0400 	movt	r4, #8192	; 0x2000
 800375c:	f240 5794 	movw	r7, #1428	; 0x594
 8003760:	f240 5684 	movw	r6, #1412	; 0x584
 8003764:	f240 0500 	movw	r5, #0
            }
        }
        else if (key_pressed == 2) // Key1: I2C 제어
        {
            Uart1_Printf("Using I2C Communication\n");
            if (Uart1_Rx_In)
 8003768:	46a1      	mov	r9, r4
 800376a:	f2c2 0700 	movt	r7, #8192	; 0x2000
 800376e:	f2c2 0600 	movt	r6, #8192	; 0x2000
 8003772:	f2c2 0500 	movt	r5, #8192	; 0x2000
            {
                received_command = Uart1_Rx_Data;
                Uart1_Rx_In = 0;
 8003776:	f04f 0800 	mov.w	r8, #0
    device_init();
    Uart1_Printf("Motor Control System Ready\n");

    for(;;)
    {
        int key_pressed = Key_Get_Pressed();
 800377a:	f7ff ff0f 	bl	800359c <Key_Get_Pressed>
        
        if (key_pressed == 1) // Key0: UART 제어
 800377e:	2801      	cmp	r0, #1
 8003780:	d01e      	beq.n	80037c0 <Main+0x80>
                {
                    device_execute(received_command, speed_level);
                }
            }
        }
        else if (key_pressed == 2) // Key1: I2C 제어
 8003782:	2802      	cmp	r0, #2
 8003784:	d1f9      	bne.n	800377a <Main+0x3a>
        {
            Uart1_Printf("Using I2C Communication\n");
 8003786:	f24a 6010 	movw	r0, #42512	; 0xa610
 800378a:	f6c0 0000 	movt	r0, #2048	; 0x800
 800378e:	f000 fd73 	bl	8004278 <Uart1_Printf>
            if (Uart1_Rx_In)
 8003792:	6823      	ldr	r3, [r4, #0]
 8003794:	2b00      	cmp	r3, #0
 8003796:	d0f0      	beq.n	800377a <Main+0x3a>
            {
                received_command = Uart1_Rx_Data;
 8003798:	6838      	ldr	r0, [r7, #0]
                Uart1_Rx_In = 0;
 800379a:	f8c9 8000 	str.w	r8, [r9]
        else if (key_pressed == 2) // Key1: I2C 제어
        {
            Uart1_Printf("Using I2C Communication\n");
            if (Uart1_Rx_In)
            {
                received_command = Uart1_Rx_Data;
 800379e:	b2c0      	uxtb	r0, r0
                Uart1_Rx_In = 0;
                
                if (received_command >= '1' && received_command <= '8')
 80037a0:	f1a0 0331 	sub.w	r3, r0, #49	; 0x31
 80037a4:	b2db      	uxtb	r3, r3
 80037a6:	2b07      	cmp	r3, #7
        else if (key_pressed == 2) // Key1: I2C 제어
        {
            Uart1_Printf("Using I2C Communication\n");
            if (Uart1_Rx_In)
            {
                received_command = Uart1_Rx_Data;
 80037a8:	7030      	strb	r0, [r6, #0]
                Uart1_Rx_In = 0;
                
                if (received_command >= '1' && received_command <= '8')
 80037aa:	d91a      	bls.n	80037e2 <Main+0xa2>
                    speed_level = (received_command - '0') * 10;
                    Uart1_Printf("Speed Level: %d\n", speed_level);
                }
                else
                {
                    device_execute(received_command, speed_level);
 80037ac:	6829      	ldr	r1, [r5, #0]
 80037ae:	f000 f881 	bl	80038b4 <device_execute>
                    control_led_with_i2c(speed_level);
 80037b2:	6828      	ldr	r0, [r5, #0]
 80037b4:	f000 f8d4 	bl	8003960 <control_led_with_i2c>
    device_init();
    Uart1_Printf("Motor Control System Ready\n");

    for(;;)
    {
        int key_pressed = Key_Get_Pressed();
 80037b8:	f7ff fef0 	bl	800359c <Key_Get_Pressed>
        
        if (key_pressed == 1) // Key0: UART 제어
 80037bc:	2801      	cmp	r0, #1
 80037be:	d1e0      	bne.n	8003782 <Main+0x42>
        {
            if (Uart1_Rx_In)
 80037c0:	6823      	ldr	r3, [r4, #0]
 80037c2:	2b00      	cmp	r3, #0
 80037c4:	d0d9      	beq.n	800377a <Main+0x3a>
            {
                received_command = Uart1_Rx_Data;
 80037c6:	6838      	ldr	r0, [r7, #0]
                Uart1_Rx_In = 0;
 80037c8:	f8c9 8000 	str.w	r8, [r9]
        
        if (key_pressed == 1) // Key0: UART 제어
        {
            if (Uart1_Rx_In)
            {
                received_command = Uart1_Rx_Data;
 80037cc:	b2c0      	uxtb	r0, r0
                Uart1_Rx_In = 0;
                if (received_command >= '1' && received_command <= '8')
 80037ce:	f1a0 0331 	sub.w	r3, r0, #49	; 0x31
 80037d2:	b2db      	uxtb	r3, r3
 80037d4:	2b07      	cmp	r3, #7
        
        if (key_pressed == 1) // Key0: UART 제어
        {
            if (Uart1_Rx_In)
            {
                received_command = Uart1_Rx_Data;
 80037d6:	7030      	strb	r0, [r6, #0]
                Uart1_Rx_In = 0;
                if (received_command >= '1' && received_command <= '8')
 80037d8:	d903      	bls.n	80037e2 <Main+0xa2>
                    speed_level = (received_command - '0') * 10;
                    Uart1_Printf("Speed Level: %d\n", speed_level);
                }
                else
                {
                    device_execute(received_command, speed_level);
 80037da:	6829      	ldr	r1, [r5, #0]
 80037dc:	f000 f86a 	bl	80038b4 <device_execute>
 80037e0:	e7cb      	b.n	800377a <Main+0x3a>
                received_command = Uart1_Rx_Data;
                Uart1_Rx_In = 0;
                
                if (received_command >= '1' && received_command <= '8')
                {
                    speed_level = (received_command - '0') * 10;
 80037e2:	3830      	subs	r0, #48	; 0x30
 80037e4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80037e8:	0043      	lsls	r3, r0, #1
                    Uart1_Printf("Speed Level: %d\n", speed_level);
 80037ea:	f24a 50fc 	movw	r0, #42492	; 0xa5fc
 80037ee:	4619      	mov	r1, r3
 80037f0:	f6c0 0000 	movt	r0, #2048	; 0x800
                received_command = Uart1_Rx_Data;
                Uart1_Rx_In = 0;
                
                if (received_command >= '1' && received_command <= '8')
                {
                    speed_level = (received_command - '0') * 10;
 80037f4:	602b      	str	r3, [r5, #0]
                    Uart1_Printf("Speed Level: %d\n", speed_level);
 80037f6:	f000 fd3f 	bl	8004278 <Uart1_Printf>
 80037fa:	e7be      	b.n	800377a <Main+0x3a>

080037fc <device_init>:

#define TIM2_FREQUENCY 72000000 // 타이머 클럭 (72MHz)
#define MOTOR_PWM_FREQ 100000    // PWM 주파수 (10kHz)

void device_init()
{
 80037fc:	b538      	push	{r3, r4, r5, lr}
    Uart1_Init(115200);
 80037fe:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
 8003802:	f000 fc9d 	bl	8004140 <Uart1_Init>
    Uart1_RX_Interrupt_Enable(1);
 8003806:	2001      	movs	r0, #1
 8003808:	f000 fd7e 	bl	8004308 <Uart1_RX_Interrupt_Enable>
    Clock_Init();
 800380c:	f7ff fcee 	bl	80031ec <Clock_Init>
    Key_Poll_Init();
 8003810:	f7ff feb0 	bl	8003574 <Key_Poll_Init>
    Key_ISR_Enable(1);
 8003814:	2001      	movs	r0, #1
 8003816:	f7ff ff07 	bl	8003628 <Key_ISR_Enable>
    SCB->VTOR = 0x08003000;
 800381a:	f44f 436d 	mov.w	r3, #60672	; 0xed00
 800381e:	f44f 5040 	mov.w	r0, #12288	; 0x3000
    SCB->SHCSR = 0;
 8003822:	2200      	movs	r2, #0
    Uart1_Init(115200);
    Uart1_RX_Interrupt_Enable(1);
    Clock_Init();
    Key_Poll_Init();
    Key_ISR_Enable(1);
    SCB->VTOR = 0x08003000;
 8003824:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8003828:	f6c0 0000 	movt	r0, #2048	; 0x800
    SCB->SHCSR = 0;

    RCC->APB1ENR |= (1 << 0);    // TIM2 클럭 활성화
 800382c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
    Uart1_Init(115200);
    Uart1_RX_Interrupt_Enable(1);
    Clock_Init();
    Key_Poll_Init();
    Key_ISR_Enable(1);
    SCB->VTOR = 0x08003000;
 8003830:	6098      	str	r0, [r3, #8]
    SCB->SHCSR = 0;

    RCC->APB1ENR |= (1 << 0);    // TIM2 클럭 활성화
 8003832:	f2c4 0102 	movt	r1, #16386	; 0x4002
    Uart1_RX_Interrupt_Enable(1);
    Clock_Init();
    Key_Poll_Init();
    Key_ISR_Enable(1);
    SCB->VTOR = 0x08003000;
    SCB->SHCSR = 0;
 8003836:	625a      	str	r2, [r3, #36]	; 0x24

    RCC->APB1ENR |= (1 << 0);    // TIM2 클럭 활성화
 8003838:	69cd      	ldr	r5, [r1, #28]

    // TIM2 PWM 설정
    TIM2->PSC = (TIM2_FREQUENCY / MOTOR_PWM_FREQ) - 1; // 프리스케일러 설정
 800383a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    Key_Poll_Init();
    Key_ISR_Enable(1);
    SCB->VTOR = 0x08003000;
    SCB->SHCSR = 0;

    RCC->APB1ENR |= (1 << 0);    // TIM2 클럭 활성화
 800383e:	f045 0501 	orr.w	r5, r5, #1

    // TIM2 PWM 설정
    TIM2->PSC = (TIM2_FREQUENCY / MOTOR_PWM_FREQ) - 1; // 프리스케일러 설정
 8003842:	f240 24cf 	movw	r4, #719	; 0x2cf
    TIM2->ARR = 100;                                   // 자동 리로드 값 (듀티 사이클 0~100%)
 8003846:	2064      	movs	r0, #100	; 0x64
    Key_Poll_Init();
    Key_ISR_Enable(1);
    SCB->VTOR = 0x08003000;
    SCB->SHCSR = 0;

    RCC->APB1ENR |= (1 << 0);    // TIM2 클럭 활성화
 8003848:	61cd      	str	r5, [r1, #28]

    // TIM2 PWM 설정
    TIM2->PSC = (TIM2_FREQUENCY / MOTOR_PWM_FREQ) - 1; // 프리스케일러 설정
 800384a:	851c      	strh	r4, [r3, #40]	; 0x28
    TIM2->ARR = 100;                                   // 자동 리로드 값 (듀티 사이클 0~100%)
 800384c:	8598      	strh	r0, [r3, #44]	; 0x2c
    TIM2->CCR3 = 0;                                    // 채널 3 (PA2) 듀티 사이클 초기화
 800384e:	879a      	strh	r2, [r3, #60]	; 0x3c
    TIM2->CCR4 = 0;                                    // 채널 4 (PA3) 듀티 사이클 초기화
 8003850:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
    TIM2->CCMR2 &= ~((0x7 << 4) | (0x7 << 12));        // 기존 비트 클리어
 8003854:	8b9a      	ldrh	r2, [r3, #28]
    TIM2->CR1 |= (1 << 0); // TIM2 활성화

    // PortA Clock ON
    Macro_Set_Bit(RCC->APB2ENR, 2);
    // PA1(EN),PA2(1A),PA3(2A) ->General Purpose Output Push-Pull
    Macro_Write_Block(GPIOA->CRL, 0xff, 0xBB, 8);
 8003856:	f44f 6400 	mov.w	r4, #2048	; 0x800
    // TIM2 PWM 설정
    TIM2->PSC = (TIM2_FREQUENCY / MOTOR_PWM_FREQ) - 1; // 프리스케일러 설정
    TIM2->ARR = 100;                                   // 자동 리로드 값 (듀티 사이클 0~100%)
    TIM2->CCR3 = 0;                                    // 채널 3 (PA2) 듀티 사이클 초기화
    TIM2->CCR4 = 0;                                    // 채널 4 (PA3) 듀티 사이클 초기화
    TIM2->CCMR2 &= ~((0x7 << 4) | (0x7 << 12));        // 기존 비트 클리어
 800385a:	f422 42e0 	bic.w	r2, r2, #28672	; 0x7000
 800385e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8003862:	0412      	lsls	r2, r2, #16
 8003864:	0c12      	lsrs	r2, r2, #16
 8003866:	839a      	strh	r2, [r3, #28]
    TIM2->CCMR2 |= (0x6 << 4) | (0x6 << 12); // CH3, CH4: PWM 모드 1
 8003868:	8b9a      	ldrh	r2, [r3, #28]
    TIM2->CR1 |= (1 << 0); // TIM2 활성화

    // PortA Clock ON
    Macro_Set_Bit(RCC->APB2ENR, 2);
    // PA1(EN),PA2(1A),PA3(2A) ->General Purpose Output Push-Pull
    Macro_Write_Block(GPIOA->CRL, 0xff, 0xBB, 8);
 800386a:	f2c4 0401 	movt	r4, #16385	; 0x4001
    TIM2->PSC = (TIM2_FREQUENCY / MOTOR_PWM_FREQ) - 1; // 프리스케일러 설정
    TIM2->ARR = 100;                                   // 자동 리로드 값 (듀티 사이클 0~100%)
    TIM2->CCR3 = 0;                                    // 채널 3 (PA2) 듀티 사이클 초기화
    TIM2->CCR4 = 0;                                    // 채널 4 (PA3) 듀티 사이클 초기화
    TIM2->CCMR2 &= ~((0x7 << 4) | (0x7 << 12));        // 기존 비트 클리어
    TIM2->CCMR2 |= (0x6 << 4) | (0x6 << 12); // CH3, CH4: PWM 모드 1
 800386e:	b292      	uxth	r2, r2
 8003870:	f442 42c0 	orr.w	r2, r2, #24576	; 0x6000
 8003874:	f042 0260 	orr.w	r2, r2, #96	; 0x60
 8003878:	839a      	strh	r2, [r3, #28]
    TIM2->CCER |= (1 << 8) | (1 << 12);
 800387a:	8c1a      	ldrh	r2, [r3, #32]
    Macro_Set_Bit(RCC->APB2ENR, 2);
    // PA1(EN),PA2(1A),PA3(2A) ->General Purpose Output Push-Pull
    Macro_Write_Block(GPIOA->CRL, 0xff, 0xBB, 8);

    //I2C init
    I2C_Init(5000);
 800387c:	f241 3088 	movw	r0, #5000	; 0x1388
    TIM2->ARR = 100;                                   // 자동 리로드 값 (듀티 사이클 0~100%)
    TIM2->CCR3 = 0;                                    // 채널 3 (PA2) 듀티 사이클 초기화
    TIM2->CCR4 = 0;                                    // 채널 4 (PA3) 듀티 사이클 초기화
    TIM2->CCMR2 &= ~((0x7 << 4) | (0x7 << 12));        // 기존 비트 클리어
    TIM2->CCMR2 |= (0x6 << 4) | (0x6 << 12); // CH3, CH4: PWM 모드 1
    TIM2->CCER |= (1 << 8) | (1 << 12);
 8003880:	b292      	uxth	r2, r2
 8003882:	f442 5288 	orr.w	r2, r2, #4352	; 0x1100
 8003886:	841a      	strh	r2, [r3, #32]
    TIM2->CR1 |= (1 << 0); // TIM2 활성화
 8003888:	881a      	ldrh	r2, [r3, #0]
 800388a:	b292      	uxth	r2, r2
 800388c:	f042 0201 	orr.w	r2, r2, #1
 8003890:	801a      	strh	r2, [r3, #0]

    // PortA Clock ON
    Macro_Set_Bit(RCC->APB2ENR, 2);
 8003892:	698b      	ldr	r3, [r1, #24]
 8003894:	f043 0304 	orr.w	r3, r3, #4
 8003898:	618b      	str	r3, [r1, #24]
    // PA1(EN),PA2(1A),PA3(2A) ->General Purpose Output Push-Pull
    Macro_Write_Block(GPIOA->CRL, 0xff, 0xBB, 8);
 800389a:	6823      	ldr	r3, [r4, #0]
 800389c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80038a0:	f443 433b 	orr.w	r3, r3, #47872	; 0xbb00
 80038a4:	6023      	str	r3, [r4, #0]

    //I2C init
    I2C_Init(5000);
 80038a6:	f7ff fd1f 	bl	80032e8 <I2C_Init>
	I2C_Config_GPIO(0xFF);
}
 80038aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    // PA1(EN),PA2(1A),PA3(2A) ->General Purpose Output Push-Pull
    Macro_Write_Block(GPIOA->CRL, 0xff, 0xBB, 8);

    //I2C init
    I2C_Init(5000);
	I2C_Config_GPIO(0xFF);
 80038ae:	20ff      	movs	r0, #255	; 0xff
 80038b0:	f7ff bddc 	b.w	800346c <I2C_Config_GPIO>

080038b4 <device_execute>:
}

void device_execute(char command, int speed)
{    
    switch (command) {
 80038b4:	2852      	cmp	r0, #82	; 0x52
    I2C_Init(5000);
	I2C_Config_GPIO(0xFF);
}

void device_execute(char command, int speed)
{    
 80038b6:	b410      	push	{r4}
 80038b8:	4603      	mov	r3, r0
    switch (command) {
 80038ba:	d029      	beq.n	8003910 <device_execute+0x5c>
 80038bc:	2853      	cmp	r0, #83	; 0x53
 80038be:	d019      	beq.n	80038f4 <device_execute+0x40>
 80038c0:	2846      	cmp	r0, #70	; 0x46
 80038c2:	d008      	beq.n	80038d6 <device_execute+0x22>
    case 'R': // 역방향 회전
        Motor_Reserve(speed);
        Uart1_Printf("Motor Reverse: Speed %d\n", speed);
        break;
    default: // 유효하지 않은 명령
        Uart1_Printf("Invalid Command: %c\n", command);
 80038c4:	f24a 6074 	movw	r0, #42612	; 0xa674
 80038c8:	4619      	mov	r1, r3
 80038ca:	f6c0 0000 	movt	r0, #2048	; 0x800
        break;
    }
}
 80038ce:	f85d 4b04 	ldr.w	r4, [sp], #4
    case 'R': // 역방향 회전
        Motor_Reserve(speed);
        Uart1_Printf("Motor Reverse: Speed %d\n", speed);
        break;
    default: // 유효하지 않은 명령
        Uart1_Printf("Invalid Command: %c\n", command);
 80038d2:	f000 bcd1 	b.w	8004278 <Uart1_Printf>
    TIM2->CCR4 = 0; // PA3 (CH4) Low
}

void Motor_Forward(int speed)
{
    TIM2->CCR3 = speed; // PA2 (CH3): 속도 설정
 80038d6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    TIM2->CCR4 = 0;     // PA3 (CH4): Low
 80038da:	2400      	movs	r4, #0
    TIM2->CCR4 = 0; // PA3 (CH4) Low
}

void Motor_Forward(int speed)
{
    TIM2->CCR3 = speed; // PA2 (CH3): 속도 설정
 80038dc:	b28a      	uxth	r2, r1
 80038de:	879a      	strh	r2, [r3, #60]	; 0x3c
        Motor_Stop();
        Uart1_Printf("Motor Stopped\n");
        break;
    case 'F': // 정방향 회전
        Motor_Forward(speed);
        Uart1_Printf("Motor Forward: Speed %d\n", speed);
 80038e0:	f24a 603c 	movw	r0, #42556	; 0xa63c
}

void Motor_Forward(int speed)
{
    TIM2->CCR3 = speed; // PA2 (CH3): 속도 설정
    TIM2->CCR4 = 0;     // PA3 (CH4): Low
 80038e4:	f8a3 4040 	strh.w	r4, [r3, #64]	; 0x40
        Motor_Stop();
        Uart1_Printf("Motor Stopped\n");
        break;
    case 'F': // 정방향 회전
        Motor_Forward(speed);
        Uart1_Printf("Motor Forward: Speed %d\n", speed);
 80038e8:	f6c0 0000 	movt	r0, #2048	; 0x800
        break;
    default: // 유효하지 않은 명령
        Uart1_Printf("Invalid Command: %c\n", command);
        break;
    }
}
 80038ec:	f85d 4b04 	ldr.w	r4, [sp], #4
        Motor_Stop();
        Uart1_Printf("Motor Stopped\n");
        break;
    case 'F': // 정방향 회전
        Motor_Forward(speed);
        Uart1_Printf("Motor Forward: Speed %d\n", speed);
 80038f0:	f000 bcc2 	b.w	8004278 <Uart1_Printf>
    }
}

void Motor_Stop(void)
{
    TIM2->CCR3 = 0; // PA2 (CH3) Low
 80038f4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80038f8:	2200      	movs	r2, #0
 80038fa:	879a      	strh	r2, [r3, #60]	; 0x3c
void device_execute(char command, int speed)
{    
    switch (command) {
    case 'S': // 정지`
        Motor_Stop();
        Uart1_Printf("Motor Stopped\n");
 80038fc:	f24a 602c 	movw	r0, #42540	; 0xa62c
}

void Motor_Stop(void)
{
    TIM2->CCR3 = 0; // PA2 (CH3) Low
    TIM2->CCR4 = 0; // PA3 (CH4) Low
 8003900:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
void device_execute(char command, int speed)
{    
    switch (command) {
    case 'S': // 정지`
        Motor_Stop();
        Uart1_Printf("Motor Stopped\n");
 8003904:	f6c0 0000 	movt	r0, #2048	; 0x800
        break;
    default: // 유효하지 않은 명령
        Uart1_Printf("Invalid Command: %c\n", command);
        break;
    }
}
 8003908:	f85d 4b04 	ldr.w	r4, [sp], #4
void device_execute(char command, int speed)
{    
    switch (command) {
    case 'S': // 정지`
        Motor_Stop();
        Uart1_Printf("Motor Stopped\n");
 800390c:	f000 bcb4 	b.w	8004278 <Uart1_Printf>
    TIM2->CCR4 = 0;     // PA3 (CH4): Low
}

void Motor_Reserve(int speed)
{
    TIM2->CCR3 = 0;     // PA2 (CH3): Low
 8003910:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003914:	2400      	movs	r4, #0
    TIM2->CCR4 = speed; // PA3 (CH4): 속도 설정
 8003916:	b28a      	uxth	r2, r1
    TIM2->CCR4 = 0;     // PA3 (CH4): Low
}

void Motor_Reserve(int speed)
{
    TIM2->CCR3 = 0;     // PA2 (CH3): Low
 8003918:	879c      	strh	r4, [r3, #60]	; 0x3c
        Motor_Forward(speed);
        Uart1_Printf("Motor Forward: Speed %d\n", speed);
        break;
    case 'R': // 역방향 회전
        Motor_Reserve(speed);
        Uart1_Printf("Motor Reverse: Speed %d\n", speed);
 800391a:	f24a 6058 	movw	r0, #42584	; 0xa658
}

void Motor_Reserve(int speed)
{
    TIM2->CCR3 = 0;     // PA2 (CH3): Low
    TIM2->CCR4 = speed; // PA3 (CH4): 속도 설정
 800391e:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
        Motor_Forward(speed);
        Uart1_Printf("Motor Forward: Speed %d\n", speed);
        break;
    case 'R': // 역방향 회전
        Motor_Reserve(speed);
        Uart1_Printf("Motor Reverse: Speed %d\n", speed);
 8003922:	f6c0 0000 	movt	r0, #2048	; 0x800
        break;
    default: // 유효하지 않은 명령
        Uart1_Printf("Invalid Command: %c\n", command);
        break;
    }
}
 8003926:	f85d 4b04 	ldr.w	r4, [sp], #4
        Motor_Forward(speed);
        Uart1_Printf("Motor Forward: Speed %d\n", speed);
        break;
    case 'R': // 역방향 회전
        Motor_Reserve(speed);
        Uart1_Printf("Motor Reverse: Speed %d\n", speed);
 800392a:	f000 bca5 	b.w	8004278 <Uart1_Printf>
 800392e:	bf00      	nop

08003930 <Motor_Stop>:
    }
}

void Motor_Stop(void)
{
    TIM2->CCR3 = 0; // PA2 (CH3) Low
 8003930:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003934:	2200      	movs	r2, #0
 8003936:	879a      	strh	r2, [r3, #60]	; 0x3c
    TIM2->CCR4 = 0; // PA3 (CH4) Low
 8003938:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 800393c:	4770      	bx	lr
 800393e:	bf00      	nop

08003940 <Motor_Forward>:
}

void Motor_Forward(int speed)
{
    TIM2->CCR3 = speed; // PA2 (CH3): 속도 설정
 8003940:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003944:	b280      	uxth	r0, r0
    TIM2->CCR4 = 0;     // PA3 (CH4): Low
 8003946:	2200      	movs	r2, #0
    TIM2->CCR4 = 0; // PA3 (CH4) Low
}

void Motor_Forward(int speed)
{
    TIM2->CCR3 = speed; // PA2 (CH3): 속도 설정
 8003948:	8798      	strh	r0, [r3, #60]	; 0x3c
    TIM2->CCR4 = 0;     // PA3 (CH4): Low
 800394a:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 800394e:	4770      	bx	lr

08003950 <Motor_Reserve>:
}

void Motor_Reserve(int speed)
{
    TIM2->CCR3 = 0;     // PA2 (CH3): Low
 8003950:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    TIM2->CCR4 = speed; // PA3 (CH4): 속도 설정
 8003954:	b280      	uxth	r0, r0
    TIM2->CCR4 = 0;     // PA3 (CH4): Low
}

void Motor_Reserve(int speed)
{
    TIM2->CCR3 = 0;     // PA2 (CH3): Low
 8003956:	2200      	movs	r2, #0
 8003958:	879a      	strh	r2, [r3, #60]	; 0x3c
    TIM2->CCR4 = speed; // PA3 (CH4): 속도 설정
 800395a:	f8a3 0040 	strh.w	r0, [r3, #64]	; 0x40
 800395e:	4770      	bx	lr

08003960 <control_led_with_i2c>:
}

void control_led_with_i2c(int speed)
{
    unsigned int led_data = ~(0xFFFFFFFF >> (speed / 10));
 8003960:	f246 6367 	movw	r3, #26215	; 0x6667
 8003964:	f2c6 6366 	movt	r3, #26214	; 0x6666
 8003968:	fb83 2300 	smull	r2, r3, r3, r0
 800396c:	17c0      	asrs	r0, r0, #31
    TIM2->CCR3 = 0;     // PA2 (CH3): Low
    TIM2->CCR4 = speed; // PA3 (CH4): 속도 설정
}

void control_led_with_i2c(int speed)
{
 800396e:	b510      	push	{r4, lr}
    unsigned int led_data = ~(0xFFFFFFFF >> (speed / 10));
 8003970:	ebc0 03a3 	rsb	r3, r0, r3, asr #2
 8003974:	f04f 34ff 	mov.w	r4, #4294967295
 8003978:	40dc      	lsrs	r4, r3
 800397a:	43e4      	mvns	r4, r4
    I2C_Write_GPIO(led_data);
 800397c:	4620      	mov	r0, r4
 800397e:	f7ff fdb7 	bl	80034f0 <I2C_Write_GPIO>
    Uart1_Printf("LED Data: 0x%08X\n", led_data);
 8003982:	f24a 608c 	movw	r0, #42636	; 0xa68c
 8003986:	4621      	mov	r1, r4
 8003988:	f6c0 0000 	movt	r0, #2048	; 0x800
 800398c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}

void control_led_with_i2c(int speed)
{
    unsigned int led_data = ~(0xFFFFFFFF >> (speed / 10));
    I2C_Write_GPIO(led_data);
    Uart1_Printf("LED Data: 0x%08X\n", led_data);
 8003990:	f000 bc72 	b.w	8004278 <Uart1_Printf>

08003994 <_sbrk>:
#include "device_driver.h"

char * _sbrk(int inc)
{
 8003994:	b410      	push	{r4}
	static char * heap = (char *)0;

	char * prevHeap;
	char * nextHeap;

	if(heap == (char *)0) heap = (char *)HEAP_BASE;
 8003996:	f240 5388 	movw	r3, #1416	; 0x588
 800399a:	f2c2 0300 	movt	r3, #8192	; 0x2000
 800399e:	6819      	ldr	r1, [r3, #0]
#include "device_driver.h"

char * _sbrk(int inc)
{
 80039a0:	4602      	mov	r2, r0
	static char * heap = (char *)0;

	char * prevHeap;
	char * nextHeap;

	if(heap == (char *)0) heap = (char *)HEAP_BASE;
 80039a2:	b181      	cbz	r1, 80039c6 <_sbrk+0x32>
 80039a4:	4c0b      	ldr	r4, [pc, #44]	; (80039d4 <_sbrk+0x40>)
 80039a6:	4608      	mov	r0, r1
 80039a8:	f024 0107 	bic.w	r1, r4, #7

	prevHeap = heap;
	nextHeap = (char *)((((unsigned int)heap + inc) + 0x7) & ~0x7);
 80039ac:	3207      	adds	r2, #7
 80039ae:	4402      	add	r2, r0
 80039b0:	f022 0207 	bic.w	r2, r2, #7

	if((unsigned int)nextHeap >= HEAP_LIMIT) return (char *)0;
 80039b4:	f501 5180 	add.w	r1, r1, #4096	; 0x1000
 80039b8:	428a      	cmp	r2, r1

	heap = nextHeap;
 80039ba:	bf34      	ite	cc
 80039bc:	601a      	strcc	r2, [r3, #0]
	if(heap == (char *)0) heap = (char *)HEAP_BASE;

	prevHeap = heap;
	nextHeap = (char *)((((unsigned int)heap + inc) + 0x7) & ~0x7);

	if((unsigned int)nextHeap >= HEAP_LIMIT) return (char *)0;
 80039be:	2000      	movcs	r0, #0

	heap = nextHeap;
	return prevHeap;
}
 80039c0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80039c4:	4770      	bx	lr
	static char * heap = (char *)0;

	char * prevHeap;
	char * nextHeap;

	if(heap == (char *)0) heap = (char *)HEAP_BASE;
 80039c6:	4903      	ldr	r1, [pc, #12]	; (80039d4 <_sbrk+0x40>)
 80039c8:	f021 0107 	bic.w	r1, r1, #7
 80039cc:	6019      	str	r1, [r3, #0]
 80039ce:	4608      	mov	r0, r1
 80039d0:	e7ec      	b.n	80039ac <_sbrk+0x18>
 80039d2:	bf00      	nop
 80039d4:	200005e3 	andcs	r0, r0, r3, ror #11

080039d8 <Stack_Dump>:
}

static char * const Stack_reg[] = {"R0","R1","R2","R3","R12","LR","RA","xPSR"};

static void Stack_Dump(const char * stack, unsigned int * sp)
{
 80039d8:	b5f0      	push	{r4, r5, r6, r7, lr}
	int i;

	for(i=0; i<(sizeof(Stack_reg)/sizeof(Stack_reg[0])); i++)
 80039da:	2300      	movs	r3, #0
 80039dc:	4d0b      	ldr	r5, [pc, #44]	; (8003a0c <Stack_Dump+0x34>)
}

static char * const Stack_reg[] = {"R0","R1","R2","R3","R12","LR","RA","xPSR"};

static void Stack_Dump(const char * stack, unsigned int * sp)
{
 80039de:	b083      	sub	sp, #12
 80039e0:	4606      	mov	r6, r0
 80039e2:	460f      	mov	r7, r1
	int i;

	for(i=0; i<(sizeof(Stack_reg)/sizeof(Stack_reg[0])); i++)
 80039e4:	461c      	mov	r4, r3
	{
		Uart1_Printf("%s[%d],%s=0x%.8X\n", stack, i, Stack_reg[i], sp[i]);
 80039e6:	f857 2023 	ldr.w	r2, [r7, r3, lsl #2]
 80039ea:	f24a 60a0 	movw	r0, #42656	; 0xa6a0
 80039ee:	f855 3f04 	ldr.w	r3, [r5, #4]!
 80039f2:	9200      	str	r2, [sp, #0]
 80039f4:	f6c0 0000 	movt	r0, #2048	; 0x800
 80039f8:	4622      	mov	r2, r4
 80039fa:	4631      	mov	r1, r6

static void Stack_Dump(const char * stack, unsigned int * sp)
{
	int i;

	for(i=0; i<(sizeof(Stack_reg)/sizeof(Stack_reg[0])); i++)
 80039fc:	3401      	adds	r4, #1
	{
		Uart1_Printf("%s[%d],%s=0x%.8X\n", stack, i, Stack_reg[i], sp[i]);
 80039fe:	f000 fc3b 	bl	8004278 <Uart1_Printf>

static void Stack_Dump(const char * stack, unsigned int * sp)
{
	int i;

	for(i=0; i<(sizeof(Stack_reg)/sizeof(Stack_reg[0])); i++)
 8003a02:	2c08      	cmp	r4, #8
 8003a04:	4623      	mov	r3, r4
 8003a06:	d1ee      	bne.n	80039e6 <Stack_Dump+0xe>
	{
		Uart1_Printf("%s[%d],%s=0x%.8X\n", stack, i, Stack_reg[i], sp[i]);
	}
}
 8003a08:	b003      	add	sp, #12
 8003a0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003a0c:	0800a44c 	stmdaeq	r0, {r2, r3, r6, sl, sp, pc}

08003a10 <Invalid_ISR>:
/* Includes ------------------------------------------------------------------*/

#include "device_driver.h"

void Invalid_ISR(void)
{
 8003a10:	b508      	push	{r3, lr}
  Uart1_Printf("Invalid_Exception: %d!\n", Macro_Extract_Area(SCB->ICSR, 0x1ff, 0));
 8003a12:	f44f 446d 	mov.w	r4, #60672	; 0xed00
 8003a16:	f2ce 0400 	movt	r4, #57344	; 0xe000
 8003a1a:	6861      	ldr	r1, [r4, #4]
 8003a1c:	f24a 60b4 	movw	r0, #42676	; 0xa6b4
 8003a20:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8003a24:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003a28:	f000 fc26 	bl	8004278 <Uart1_Printf>
  Uart1_Printf("Invalid_ISR: %d!\n", Macro_Extract_Area(SCB->ICSR, 0x1ff, 0) - 16);
 8003a2c:	6861      	ldr	r1, [r4, #4]
 8003a2e:	f24a 60cc 	movw	r0, #42700	; 0xa6cc
 8003a32:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8003a36:	3910      	subs	r1, #16
 8003a38:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003a3c:	f000 fc1c 	bl	8004278 <Uart1_Printf>
 8003a40:	e7fe      	b.n	8003a40 <Invalid_ISR+0x30>
 8003a42:	bf00      	nop

08003a44 <NMI_Handler>:
 * Output         : None
 * Return         : None
 *******************************************************************************/
void NMI_Handler(void)
{
	Uart1_Printf("NMI!\n");
 8003a44:	f24a 60e0 	movw	r0, #42720	; 0xa6e0
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void NMI_Handler(void)
{
 8003a48:	b508      	push	{r3, lr}
	Uart1_Printf("NMI!\n");
 8003a4a:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003a4e:	f000 fc13 	bl	8004278 <Uart1_Printf>
 8003a52:	e7fe      	b.n	8003a52 <NMI_Handler+0xe>

08003a54 <HardFault_Handler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void HardFault_Handler(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
 8003a54:	4604      	mov	r4, r0
	Uart1_Printf("Hard Fault!\n");
 8003a56:	f24a 60e8 	movw	r0, #42728	; 0xa6e8
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void HardFault_Handler(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
 8003a5a:	b508      	push	{r3, lr}
	Uart1_Printf("Hard Fault!\n");
 8003a5c:	f6c0 0000 	movt	r0, #2048	; 0x800
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void HardFault_Handler(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
 8003a60:	4616      	mov	r6, r2
 8003a62:	460d      	mov	r5, r1
	Uart1_Printf("Hard Fault!\n");
 8003a64:	f000 fc08 	bl	8004278 <Uart1_Printf>
	}
}

static void Fault_Report(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
	Uart1_Printf("LR(EXC_RETURN)=0x%.8X\n", lr);
 8003a68:	f24a 60f8 	movw	r0, #42744	; 0xa6f8
 8003a6c:	4629      	mov	r1, r5
 8003a6e:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003a72:	f000 fc01 	bl	8004278 <Uart1_Printf>
	Uart1_Printf("MSP=0x%.8X\n", msp);
 8003a76:	f24a 7010 	movw	r0, #42768	; 0xa710
 8003a7a:	4621      	mov	r1, r4
 8003a7c:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003a80:	f000 fbfa 	bl	8004278 <Uart1_Printf>
	Uart1_Printf("PSP=0x%.8X\n", psp);
 8003a84:	f24a 701c 	movw	r0, #42780	; 0xa71c
 8003a88:	4631      	mov	r1, r6
 8003a8a:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003a8e:	f000 fbf3 	bl	8004278 <Uart1_Printf>

	switch((lr & (0xF<<28))|(lr & 0xF))
 8003a92:	230f      	movs	r3, #15
 8003a94:	f2cf 0300 	movt	r3, #61440	; 0xf000
 8003a98:	2209      	movs	r2, #9
 8003a9a:	402b      	ands	r3, r5
 8003a9c:	f2cf 0200 	movt	r2, #61440	; 0xf000
 8003aa0:	4293      	cmp	r3, r2
 8003aa2:	d050      	beq.n	8003b46 <HardFault_Handler+0xf2>
 8003aa4:	220d      	movs	r2, #13
 8003aa6:	f2cf 0200 	movt	r2, #61440	; 0xf000
 8003aaa:	4293      	cmp	r3, r2
 8003aac:	d059      	beq.n	8003b62 <HardFault_Handler+0x10e>
 8003aae:	2201      	movs	r2, #1
 8003ab0:	f2cf 0200 	movt	r2, #61440	; 0xf000
 8003ab4:	4293      	cmp	r3, r2
	{
		case 0xF0000001: Uart1_Printf("Exception occurs from handler mode\n"); Stack_Dump("MSP", msp); break;
 8003ab6:	bf04      	itt	eq
 8003ab8:	f24a 7028 	movweq	r0, #42792	; 0xa728
 8003abc:	f6c0 0000 	movteq	r0, #2048	; 0x800
{
	Uart1_Printf("LR(EXC_RETURN)=0x%.8X\n", lr);
	Uart1_Printf("MSP=0x%.8X\n", msp);
	Uart1_Printf("PSP=0x%.8X\n", psp);

	switch((lr & (0xF<<28))|(lr & 0xF))
 8003ac0:	d045      	beq.n	8003b4e <HardFault_Handler+0xfa>
	{
		case 0xF0000001: Uart1_Printf("Exception occurs from handler mode\n"); Stack_Dump("MSP", msp); break;
		case 0xF0000009: Uart1_Printf("Exception occurs from thread mode with MSP\n"); Stack_Dump("MSP", msp); break;
		case 0xF000000d: Uart1_Printf("Exception occurs from thread mode with PSP\n"); Stack_Dump("PSP", psp); break;
		default: Uart1_Printf("Invalid exception return value => %#.8X\n", lr & 0xf); break;
 8003ac2:	f24a 70ac 	movw	r0, #42924	; 0xa7ac
 8003ac6:	f005 010f 	and.w	r1, r5, #15
 8003aca:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003ace:	f000 fbd3 	bl	8004278 <Uart1_Printf>
	}

	Uart1_Printf("SHCSR => %#.8X\n", SCB->SHCSR);
 8003ad2:	f44f 446d 	mov.w	r4, #60672	; 0xed00
 8003ad6:	f2ce 0400 	movt	r4, #57344	; 0xe000
 8003ada:	f24a 70d8 	movw	r0, #42968	; 0xa7d8
 8003ade:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8003ae0:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003ae4:	f000 fbc8 	bl	8004278 <Uart1_Printf>
	Uart1_Printf("CFSR(Fault Reason) => %#.8X\n", SCB->CFSR);
 8003ae8:	f24a 70e8 	movw	r0, #42984	; 0xa7e8
 8003aec:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8003aee:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003af2:	f000 fbc1 	bl	8004278 <Uart1_Printf>
{
	Uart1_Printf("Hard Fault!\n");

	Fault_Report(msp, lr, psp);

	Uart1_Printf("MMFAR Valid => %d\n", Macro_Check_Bit_Set(SCB->CFSR, 7));
 8003af6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8003af8:	f64a 0008 	movw	r0, #43016	; 0xa808
 8003afc:	f3c1 11c0 	ubfx	r1, r1, #7, #1
 8003b00:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003b04:	f000 fbb8 	bl	8004278 <Uart1_Printf>
	Uart1_Printf("MMFAR => %#.8X\n", SCB->MMFAR);
 8003b08:	f64a 001c 	movw	r0, #43036	; 0xa81c
 8003b0c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003b0e:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003b12:	f000 fbb1 	bl	8004278 <Uart1_Printf>
	Uart1_Printf("BFAR Valid => %d\n", Macro_Check_Bit_Set(SCB->CFSR, 15));
 8003b16:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8003b18:	f64a 002c 	movw	r0, #43052	; 0xa82c
 8003b1c:	f3c1 31c0 	ubfx	r1, r1, #15, #1
 8003b20:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003b24:	f000 fba8 	bl	8004278 <Uart1_Printf>
	Uart1_Printf("BFAR => %#.8X\n", SCB->BFAR);
 8003b28:	f64a 0040 	movw	r0, #43072	; 0xa840
 8003b2c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8003b2e:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003b32:	f000 fba1 	bl	8004278 <Uart1_Printf>
	Uart1_Printf("HFSR(Hard Fault Reason) => %#.8X\n", SCB->HFSR);
 8003b36:	f64a 0050 	movw	r0, #43088	; 0xa850
 8003b3a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8003b3c:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003b40:	f000 fb9a 	bl	8004278 <Uart1_Printf>
 8003b44:	e7fe      	b.n	8003b44 <HardFault_Handler+0xf0>
	Uart1_Printf("PSP=0x%.8X\n", psp);

	switch((lr & (0xF<<28))|(lr & 0xF))
	{
		case 0xF0000001: Uart1_Printf("Exception occurs from handler mode\n"); Stack_Dump("MSP", msp); break;
		case 0xF0000009: Uart1_Printf("Exception occurs from thread mode with MSP\n"); Stack_Dump("MSP", msp); break;
 8003b46:	f24a 7050 	movw	r0, #42832	; 0xa750
 8003b4a:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003b4e:	f000 fb93 	bl	8004278 <Uart1_Printf>
 8003b52:	f24a 704c 	movw	r0, #42828	; 0xa74c
 8003b56:	4621      	mov	r1, r4
 8003b58:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003b5c:	f7ff ff3c 	bl	80039d8 <Stack_Dump>
 8003b60:	e7b7      	b.n	8003ad2 <HardFault_Handler+0x7e>
		case 0xF000000d: Uart1_Printf("Exception occurs from thread mode with PSP\n"); Stack_Dump("PSP", psp); break;
 8003b62:	f24a 707c 	movw	r0, #42876	; 0xa77c
 8003b66:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003b6a:	f000 fb85 	bl	8004278 <Uart1_Printf>
 8003b6e:	f24a 70a8 	movw	r0, #42920	; 0xa7a8
 8003b72:	4631      	mov	r1, r6
 8003b74:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003b78:	f7ff ff2e 	bl	80039d8 <Stack_Dump>
 8003b7c:	e7a9      	b.n	8003ad2 <HardFault_Handler+0x7e>
 8003b7e:	bf00      	nop

08003b80 <MemManage_Handler>:
 * Output         : None
 * Return         : None
 *******************************************************************************/
void MemManage_Handler(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
	Uart1_Printf("Memory Management Fault!\n");
 8003b80:	f64a 0074 	movw	r0, #43124	; 0xa874
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void MemManage_Handler(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
 8003b84:	b508      	push	{r3, lr}
	Uart1_Printf("Memory Management Fault!\n");
 8003b86:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003b8a:	f000 fb75 	bl	8004278 <Uart1_Printf>
 8003b8e:	e7fe      	b.n	8003b8e <MemManage_Handler+0xe>

08003b90 <BusFault_Handler>:
 * Output         : None
 * Return         : None
 *******************************************************************************/
void BusFault_Handler(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
	Uart1_Printf("Bus Fault!\n");
 8003b90:	f64a 0090 	movw	r0, #43152	; 0xa890
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void BusFault_Handler(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
 8003b94:	b508      	push	{r3, lr}
	Uart1_Printf("Bus Fault!\n");
 8003b96:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003b9a:	f000 fb6d 	bl	8004278 <Uart1_Printf>
 8003b9e:	e7fe      	b.n	8003b9e <BusFault_Handler+0xe>

08003ba0 <UsageFault_Handler>:
 * Output         : None
 * Return         : None
 *******************************************************************************/
void UsageFault_Handler(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
	Uart1_Printf("Usage Fault!\n");
 8003ba0:	f64a 009c 	movw	r0, #43164	; 0xa89c
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void UsageFault_Handler(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
 8003ba4:	b508      	push	{r3, lr}
	Uart1_Printf("Usage Fault!\n");
 8003ba6:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003baa:	f000 fb65 	bl	8004278 <Uart1_Printf>
 8003bae:	e7fe      	b.n	8003bae <UsageFault_Handler+0xe>

08003bb0 <SVC_Handler>:
 * Output         : None
 * Return         : None
 *******************************************************************************/
void SVC_Handler(void)
{
	Uart1_Printf("SVC Call\n");
 8003bb0:	f64a 00ac 	movw	r0, #43180	; 0xa8ac
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void SVC_Handler(void)
{
 8003bb4:	b508      	push	{r3, lr}
	Uart1_Printf("SVC Call\n");
 8003bb6:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003bba:	f000 fb5d 	bl	8004278 <Uart1_Printf>
 8003bbe:	e7fe      	b.n	8003bbe <SVC_Handler+0xe>

08003bc0 <DebugMon_Handler>:
 * Output         : None
 * Return         : None
 *******************************************************************************/
void DebugMon_Handler(void)
{
	Uart1_Printf("DebugMon Call\n");
 8003bc0:	f64a 00b8 	movw	r0, #43192	; 0xa8b8
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void DebugMon_Handler(void)
{
 8003bc4:	b508      	push	{r3, lr}
	Uart1_Printf("DebugMon Call\n");
 8003bc6:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003bca:	f000 fb55 	bl	8004278 <Uart1_Printf>
 8003bce:	e7fe      	b.n	8003bce <DebugMon_Handler+0xe>

08003bd0 <PendSV_Handler>:
 * Output         : None
 * Return         : None
 *******************************************************************************/
void PendSV_Handler(void)
{
	Uart1_Printf("PendSV Call\n");
 8003bd0:	f64a 00c8 	movw	r0, #43208	; 0xa8c8
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void PendSV_Handler(void)
{
 8003bd4:	b508      	push	{r3, lr}
	Uart1_Printf("PendSV Call\n");
 8003bd6:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003bda:	f000 fb4d 	bl	8004278 <Uart1_Printf>
 8003bde:	e7fe      	b.n	8003bde <PendSV_Handler+0xe>

08003be0 <SysTick_Handler>:
 *******************************************************************************/
volatile int SysTick_Flag = 0;

void SysTick_Handler(void)
{
	SysTick_Flag = 1;
 8003be0:	f240 538c 	movw	r3, #1420	; 0x58c
 8003be4:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8003be8:	2201      	movs	r2, #1
 8003bea:	601a      	str	r2, [r3, #0]
 8003bec:	4770      	bx	lr
 8003bee:	bf00      	nop

08003bf0 <WWDG_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void WWDG_IRQHandler(void)
{
 8003bf0:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003bf2:	f7ff ff0d 	bl	8003a10 <Invalid_ISR>
 8003bf6:	bf00      	nop

08003bf8 <PVD_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void PVD_IRQHandler(void)
{
 8003bf8:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003bfa:	f7ff ff09 	bl	8003a10 <Invalid_ISR>
 8003bfe:	bf00      	nop

08003c00 <TAMPER_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void TAMPER_IRQHandler(void)
{
 8003c00:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c02:	f7ff ff05 	bl	8003a10 <Invalid_ISR>
 8003c06:	bf00      	nop

08003c08 <RTC_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void RTC_IRQHandler(void)
{
 8003c08:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c0a:	f7ff ff01 	bl	8003a10 <Invalid_ISR>
 8003c0e:	bf00      	nop

08003c10 <FLASH_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void FLASH_IRQHandler(void)
{
 8003c10:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c12:	f7ff fefd 	bl	8003a10 <Invalid_ISR>
 8003c16:	bf00      	nop

08003c18 <RCC_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void RCC_IRQHandler(void)
{
 8003c18:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c1a:	f7ff fef9 	bl	8003a10 <Invalid_ISR>
 8003c1e:	bf00      	nop

08003c20 <EXTI0_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void EXTI0_IRQHandler(void)
{
 8003c20:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c22:	f7ff fef5 	bl	8003a10 <Invalid_ISR>
 8003c26:	bf00      	nop

08003c28 <EXTI1_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void EXTI1_IRQHandler(void)
{
 8003c28:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c2a:	f7ff fef1 	bl	8003a10 <Invalid_ISR>
 8003c2e:	bf00      	nop

08003c30 <EXTI2_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void EXTI2_IRQHandler(void)
{
 8003c30:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c32:	f7ff feed 	bl	8003a10 <Invalid_ISR>
 8003c36:	bf00      	nop

08003c38 <EXTI3_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void EXTI3_IRQHandler(void)
{
 8003c38:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c3a:	f7ff fee9 	bl	8003a10 <Invalid_ISR>
 8003c3e:	bf00      	nop

08003c40 <EXTI4_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void EXTI4_IRQHandler(void)
{
 8003c40:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c42:	f7ff fee5 	bl	8003a10 <Invalid_ISR>
 8003c46:	bf00      	nop

08003c48 <DMA1_Channel1_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void DMA1_Channel1_IRQHandler(void)
{
 8003c48:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c4a:	f7ff fee1 	bl	8003a10 <Invalid_ISR>
 8003c4e:	bf00      	nop

08003c50 <DMA1_Channel2_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void DMA1_Channel2_IRQHandler(void)
{
 8003c50:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c52:	f7ff fedd 	bl	8003a10 <Invalid_ISR>
 8003c56:	bf00      	nop

08003c58 <DMA1_Channel3_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void DMA1_Channel3_IRQHandler(void)
{
 8003c58:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c5a:	f7ff fed9 	bl	8003a10 <Invalid_ISR>
 8003c5e:	bf00      	nop

08003c60 <DMA1_Channel4_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void DMA1_Channel4_IRQHandler(void)
{
 8003c60:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c62:	f7ff fed5 	bl	8003a10 <Invalid_ISR>
 8003c66:	bf00      	nop

08003c68 <DMA1_Channel5_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void DMA1_Channel5_IRQHandler(void)
{
 8003c68:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c6a:	f7ff fed1 	bl	8003a10 <Invalid_ISR>
 8003c6e:	bf00      	nop

08003c70 <DMA1_Channel6_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void DMA1_Channel6_IRQHandler(void)
{
 8003c70:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c72:	f7ff fecd 	bl	8003a10 <Invalid_ISR>
 8003c76:	bf00      	nop

08003c78 <DMA1_Channel7_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void DMA1_Channel7_IRQHandler(void)
{
 8003c78:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c7a:	f7ff fec9 	bl	8003a10 <Invalid_ISR>
 8003c7e:	bf00      	nop

08003c80 <ADC1_2_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void ADC1_2_IRQHandler(void)
{
 8003c80:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c82:	f7ff fec5 	bl	8003a10 <Invalid_ISR>
 8003c86:	bf00      	nop

08003c88 <USB_HP_CAN_TX_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void USB_HP_CAN_TX_IRQHandler(void)
{
 8003c88:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c8a:	f7ff fec1 	bl	8003a10 <Invalid_ISR>
 8003c8e:	bf00      	nop

08003c90 <USB_LP_CAN_RX0_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void USB_LP_CAN_RX0_IRQHandler(void)
{
 8003c90:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c92:	f7ff febd 	bl	8003a10 <Invalid_ISR>
 8003c96:	bf00      	nop

08003c98 <CAN_RX1_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void CAN_RX1_IRQHandler(void)
{
 8003c98:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003c9a:	f7ff feb9 	bl	8003a10 <Invalid_ISR>
 8003c9e:	bf00      	nop

08003ca0 <CAN_SCE_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void CAN_SCE_IRQHandler(void)
{
 8003ca0:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003ca2:	f7ff feb5 	bl	8003a10 <Invalid_ISR>
 8003ca6:	bf00      	nop

08003ca8 <EXTI9_5_IRQHandler>:
 * Return         : None
 *******************************************************************************/
volatile int Key_Value = 0;

void EXTI9_5_IRQHandler(void)
{
 8003ca8:	b430      	push	{r4, r5}
	Key_Value = Macro_Extract_Area(EXTI->PR, 0x3, 6);
 8003caa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003cae:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8003cb2:	695d      	ldr	r5, [r3, #20]
 8003cb4:	f240 528c 	movw	r2, #1420	; 0x58c
 * Clear the pending bit for the specified interrupt. 
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
 8003cb8:	f44f 4161 	mov.w	r1, #57600	; 0xe100
 8003cbc:	f3c5 1581 	ubfx	r5, r5, #6, #2

	EXTI->PR = 0x3<<6;
 8003cc0:	24c0      	movs	r4, #192	; 0xc0
 *******************************************************************************/
volatile int Key_Value = 0;

void EXTI9_5_IRQHandler(void)
{
	Key_Value = Macro_Extract_Area(EXTI->PR, 0x3, 6);
 8003cc2:	f2c2 0200 	movt	r2, #8192	; 0x2000
 8003cc6:	f2ce 0100 	movt	r1, #57344	; 0xe000
 8003cca:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8003cce:	6055      	str	r5, [r2, #4]

	EXTI->PR = 0x3<<6;
 8003cd0:	615c      	str	r4, [r3, #20]
 8003cd2:	f8c1 0180 	str.w	r0, [r1, #384]	; 0x180
	NVIC_ClearPendingIRQ(23);
}
 8003cd6:	bc30      	pop	{r4, r5}
 8003cd8:	4770      	bx	lr
 8003cda:	bf00      	nop

08003cdc <TIM1_BRK_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void TIM1_BRK_IRQHandler(void)
{
 8003cdc:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003cde:	f7ff fe97 	bl	8003a10 <Invalid_ISR>
 8003ce2:	bf00      	nop

08003ce4 <TIM1_UP_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void TIM1_UP_IRQHandler(void)
{
 8003ce4:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003ce6:	f7ff fe93 	bl	8003a10 <Invalid_ISR>
 8003cea:	bf00      	nop

08003cec <TIM1_TRG_COM_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void TIM1_TRG_COM_IRQHandler(void)
{
 8003cec:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003cee:	f7ff fe8f 	bl	8003a10 <Invalid_ISR>
 8003cf2:	bf00      	nop

08003cf4 <TIM1_CC_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void TIM1_CC_IRQHandler(void)
{
 8003cf4:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003cf6:	f7ff fe8b 	bl	8003a10 <Invalid_ISR>
 8003cfa:	bf00      	nop

08003cfc <TIM2_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void TIM2_IRQHandler(void)
{
 8003cfc:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003cfe:	f7ff fe87 	bl	8003a10 <Invalid_ISR>
 8003d02:	bf00      	nop

08003d04 <TIM3_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void TIM3_IRQHandler(void)
{
 8003d04:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d06:	f7ff fe83 	bl	8003a10 <Invalid_ISR>
 8003d0a:	bf00      	nop

08003d0c <TIM4_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void TIM4_IRQHandler(void)
{
 8003d0c:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d0e:	f7ff fe7f 	bl	8003a10 <Invalid_ISR>
 8003d12:	bf00      	nop

08003d14 <I2C1_EV_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void I2C1_EV_IRQHandler(void)
{
 8003d14:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d16:	f7ff fe7b 	bl	8003a10 <Invalid_ISR>
 8003d1a:	bf00      	nop

08003d1c <I2C1_ER_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void I2C1_ER_IRQHandler(void)
{
 8003d1c:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d1e:	f7ff fe77 	bl	8003a10 <Invalid_ISR>
 8003d22:	bf00      	nop

08003d24 <I2C2_EV_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void I2C2_EV_IRQHandler(void)
{
 8003d24:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d26:	f7ff fe73 	bl	8003a10 <Invalid_ISR>
 8003d2a:	bf00      	nop

08003d2c <I2C2_ER_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void I2C2_ER_IRQHandler(void)
{
 8003d2c:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d2e:	f7ff fe6f 	bl	8003a10 <Invalid_ISR>
 8003d32:	bf00      	nop

08003d34 <SPI1_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void SPI1_IRQHandler(void)
{
 8003d34:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d36:	f7ff fe6b 	bl	8003a10 <Invalid_ISR>
 8003d3a:	bf00      	nop

08003d3c <SPI2_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void SPI2_IRQHandler(void)
{
 8003d3c:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d3e:	f7ff fe67 	bl	8003a10 <Invalid_ISR>
 8003d42:	bf00      	nop

08003d44 <USART1_IRQHandler>:
 *******************************************************************************/
volatile int Uart1_Rx_In = 0;
volatile int Uart1_Rx_Data = 0;

void USART1_IRQHandler(void)
{
 8003d44:	b410      	push	{r4}
	// Data read from USART1->DR
  Uart1_Rx_Data = USART1->DR;
 8003d46:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 8003d4a:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8003d4e:	889c      	ldrh	r4, [r3, #4]
 8003d50:	f44f 4261 	mov.w	r2, #57600	; 0xe100
 8003d54:	f240 538c 	movw	r3, #1420	; 0x58c
 8003d58:	b2a4      	uxth	r4, r4
 8003d5a:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8003d5e:	f2ce 0200 	movt	r2, #57344	; 0xe000
 8003d62:	2020      	movs	r0, #32
	// NVIC USART1 pending clear
  NVIC_ClearPendingIRQ(37);
	Uart1_Rx_In = 1;
 8003d64:	2101      	movs	r1, #1
volatile int Uart1_Rx_Data = 0;

void USART1_IRQHandler(void)
{
	// Data read from USART1->DR
  Uart1_Rx_Data = USART1->DR;
 8003d66:	609c      	str	r4, [r3, #8]
 8003d68:	f8c2 0184 	str.w	r0, [r2, #388]	; 0x184
	// NVIC USART1 pending clear
  NVIC_ClearPendingIRQ(37);
	Uart1_Rx_In = 1;
 8003d6c:	60d9      	str	r1, [r3, #12]
}
 8003d6e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003d72:	4770      	bx	lr

08003d74 <USART2_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void USART2_IRQHandler(void)
{
 8003d74:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d76:	f7ff fe4b 	bl	8003a10 <Invalid_ISR>
 8003d7a:	bf00      	nop

08003d7c <USART3_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void USART3_IRQHandler(void)
{
 8003d7c:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d7e:	f7ff fe47 	bl	8003a10 <Invalid_ISR>
 8003d82:	bf00      	nop

08003d84 <EXTI15_10_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void EXTI15_10_IRQHandler(void)
{
 8003d84:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d86:	f7ff fe43 	bl	8003a10 <Invalid_ISR>
 8003d8a:	bf00      	nop

08003d8c <RTCAlarm_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void RTCAlarm_IRQHandler(void)
{
 8003d8c:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d8e:	f7ff fe3f 	bl	8003a10 <Invalid_ISR>
 8003d92:	bf00      	nop

08003d94 <USBWakeUp_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void USBWakeUp_IRQHandler(void)
{
 8003d94:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d96:	f7ff fe3b 	bl	8003a10 <Invalid_ISR>
 8003d9a:	bf00      	nop
 8003d9c:	0000      	movs	r0, r0
	...

08003da0 <SysTick_Run>:
#include "device_driver.h"

void SysTick_Run(unsigned int msec)
{
 8003da0:	b538      	push	{r3, r4, r5, lr}
	SysTick->CTRL = (0<<2)+(0<<1)+(0<<0);
 8003da2:	f24e 0410 	movw	r4, #57360	; 0xe010
 8003da6:	f2ce 0400 	movt	r4, #57344	; 0xe000
 8003daa:	2500      	movs	r5, #0
 8003dac:	6025      	str	r5, [r4, #0]
	SysTick->LOAD = (unsigned int)((HCLK/(8.*1000.))*msec+0.5);
 8003dae:	f005 fc83 	bl	80096b8 <__aeabi_ui2d>
 8003db2:	a30b      	add	r3, pc, #44	; (adr r3, 8003de0 <SysTick_Run+0x40>)
 8003db4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003db8:	f005 fcf4 	bl	80097a4 <__aeabi_dmul>
 8003dbc:	2300      	movs	r3, #0
 8003dbe:	f6c3 73e0 	movt	r3, #16352	; 0x3fe0
 8003dc2:	2200      	movs	r2, #0
 8003dc4:	f005 fb3c 	bl	8009440 <__adddf3>
 8003dc8:	f005 ffae 	bl	8009d28 <__aeabi_d2uiz>
 8003dcc:	6060      	str	r0, [r4, #4]
	SysTick->VAL = 0;
 8003dce:	60a5      	str	r5, [r4, #8]
	Macro_Set_Bit(SysTick->CTRL, 0);
 8003dd0:	6823      	ldr	r3, [r4, #0]
 8003dd2:	f043 0301 	orr.w	r3, r3, #1
 8003dd6:	6023      	str	r3, [r4, #0]
 8003dd8:	bd38      	pop	{r3, r4, r5, pc}
 8003dda:	bf00      	nop
 8003ddc:	f3af 8000 	nop.w
 8003de0:	00000000 	andeq	r0, r0, r0
 8003de4:	40c19400 	sbcmi	r9, r1, r0, lsl #8

08003de8 <SysTick_Check_Timeout>:
}

int SysTick_Check_Timeout(void)
{
	return ((SysTick->CTRL >> 16) & 0x1);
 8003de8:	f24e 0310 	movw	r3, #57360	; 0xe010
 8003dec:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8003df0:	6818      	ldr	r0, [r3, #0]
}
 8003df2:	f3c0 4000 	ubfx	r0, r0, #16, #1
 8003df6:	4770      	bx	lr

08003df8 <SysTick_Get_Time>:

unsigned int SysTick_Get_Time(void)
{
	return SysTick->VAL;
 8003df8:	f24e 0310 	movw	r3, #57360	; 0xe010
 8003dfc:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8003e00:	6898      	ldr	r0, [r3, #8]
}
 8003e02:	4770      	bx	lr

08003e04 <SysTick_Get_Load_Time>:

unsigned int SysTick_Get_Load_Time(void)
{
	return SysTick->LOAD;
 8003e04:	f24e 0310 	movw	r3, #57360	; 0xe010
 8003e08:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8003e0c:	6858      	ldr	r0, [r3, #4]
}
 8003e0e:	4770      	bx	lr

08003e10 <SysTick_Stop>:

void SysTick_Stop(void)
{
	SysTick->CTRL = 0;
 8003e10:	f24e 0310 	movw	r3, #57360	; 0xe010
 8003e14:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8003e18:	2200      	movs	r2, #0
 8003e1a:	601a      	str	r2, [r3, #0]
 8003e1c:	4770      	bx	lr
 8003e1e:	bf00      	nop

08003e20 <SysTick_OS_Tick>:
}

void SysTick_OS_Tick(unsigned int msec)
{
 8003e20:	b510      	push	{r4, lr}
  SysTick->CTRL = (0<<2)+(1<<1)+(0<<0);
 8003e22:	f24e 0410 	movw	r4, #57360	; 0xe010
 8003e26:	f2ce 0400 	movt	r4, #57344	; 0xe000
 8003e2a:	2302      	movs	r3, #2
 8003e2c:	6023      	str	r3, [r4, #0]
  SysTick->LOAD = (unsigned int)((HCLK/(8.*1000.))*msec+0.5);
 8003e2e:	f005 fc43 	bl	80096b8 <__aeabi_ui2d>
 8003e32:	a30b      	add	r3, pc, #44	; (adr r3, 8003e60 <SysTick_OS_Tick+0x40>)
 8003e34:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003e38:	f005 fcb4 	bl	80097a4 <__aeabi_dmul>
 8003e3c:	2300      	movs	r3, #0
 8003e3e:	f6c3 73e0 	movt	r3, #16352	; 0x3fe0
 8003e42:	2200      	movs	r2, #0
 8003e44:	f005 fafc 	bl	8009440 <__adddf3>
 8003e48:	f005 ff6e 	bl	8009d28 <__aeabi_d2uiz>
  SysTick->VAL = 0;
 8003e4c:	2300      	movs	r3, #0
}

void SysTick_OS_Tick(unsigned int msec)
{
  SysTick->CTRL = (0<<2)+(1<<1)+(0<<0);
  SysTick->LOAD = (unsigned int)((HCLK/(8.*1000.))*msec+0.5);
 8003e4e:	6060      	str	r0, [r4, #4]
  SysTick->VAL = 0;
 8003e50:	60a3      	str	r3, [r4, #8]
  Macro_Set_Bit(SysTick->CTRL, 0);
 8003e52:	6823      	ldr	r3, [r4, #0]
 8003e54:	f043 0301 	orr.w	r3, r3, #1
 8003e58:	6023      	str	r3, [r4, #0]
 8003e5a:	bd10      	pop	{r4, pc}
 8003e5c:	f3af 8000 	nop.w
 8003e60:	00000000 	andeq	r0, r0, r0
 8003e64:	40c19400 	sbcmi	r9, r1, r0, lsl #8

08003e68 <TIM2_Stopwatch_Start>:
#define TIM3_FREQ 	  		(8000000) 	      	// Hz
#define TIM3_TICK	  		(1000000/TIM3_FREQ)	// usec
#define TIME3_PLS_OF_1ms  	(1000/TIM3_TICK)

void TIM2_Stopwatch_Start(void)
{
 8003e68:	b430      	push	{r4, r5}
	Macro_Set_Bit(RCC->APB1ENR, 0);
 8003e6a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8003e6e:	f2c4 0202 	movt	r2, #16386	; 0x4002
 8003e72:	69d5      	ldr	r5, [r2, #28]

	TIM2->CR1 = (1<<4)|(1<<3);
 8003e74:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
#define TIM3_TICK	  		(1000000/TIM3_FREQ)	// usec
#define TIME3_PLS_OF_1ms  	(1000/TIM3_TICK)

void TIM2_Stopwatch_Start(void)
{
	Macro_Set_Bit(RCC->APB1ENR, 0);
 8003e78:	f045 0501 	orr.w	r5, r5, #1

	TIM2->CR1 = (1<<4)|(1<<3);
 8003e7c:	2418      	movs	r4, #24
	TIM2->PSC = (unsigned int)(TIMXCLK/50000.0 + 0.5)-1;
 8003e7e:	f240 509f 	movw	r0, #1439	; 0x59f
	TIM2->ARR = TIM2_MAX;
 8003e82:	f64f 71ff 	movw	r1, #65535	; 0xffff
#define TIM3_TICK	  		(1000000/TIM3_FREQ)	// usec
#define TIME3_PLS_OF_1ms  	(1000/TIM3_TICK)

void TIM2_Stopwatch_Start(void)
{
	Macro_Set_Bit(RCC->APB1ENR, 0);
 8003e86:	61d5      	str	r5, [r2, #28]

	TIM2->CR1 = (1<<4)|(1<<3);
 8003e88:	801c      	strh	r4, [r3, #0]
	TIM2->PSC = (unsigned int)(TIMXCLK/50000.0 + 0.5)-1;
 8003e8a:	8518      	strh	r0, [r3, #40]	; 0x28
	TIM2->ARR = TIM2_MAX;
 8003e8c:	8599      	strh	r1, [r3, #44]	; 0x2c

	Macro_Set_Bit(TIM2->EGR,0);
 8003e8e:	8a9a      	ldrh	r2, [r3, #20]
 8003e90:	b292      	uxth	r2, r2
 8003e92:	f042 0201 	orr.w	r2, r2, #1
 8003e96:	829a      	strh	r2, [r3, #20]
	Macro_Set_Bit(TIM2->CR1, 0);
 8003e98:	881a      	ldrh	r2, [r3, #0]
 8003e9a:	b292      	uxth	r2, r2
 8003e9c:	f042 0201 	orr.w	r2, r2, #1
 8003ea0:	801a      	strh	r2, [r3, #0]
}
 8003ea2:	bc30      	pop	{r4, r5}
 8003ea4:	4770      	bx	lr
 8003ea6:	bf00      	nop

08003ea8 <TIM2_Stopwatch_Stop>:

unsigned int TIM2_Stopwatch_Stop(void)
{
	unsigned int time;

	Macro_Clear_Bit(TIM2->CR1, 0);
 8003ea8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003eac:	8813      	ldrh	r3, [r2, #0]
	time = (TIM2_MAX - TIM2->CNT) * TIM2_TICK;
 8003eae:	f64f 71ec 	movw	r1, #65516	; 0xffec

unsigned int TIM2_Stopwatch_Stop(void)
{
	unsigned int time;

	Macro_Clear_Bit(TIM2->CR1, 0);
 8003eb2:	f023 0301 	bic.w	r3, r3, #1
 8003eb6:	041b      	lsls	r3, r3, #16
 8003eb8:	0c1b      	lsrs	r3, r3, #16
 8003eba:	8013      	strh	r3, [r2, #0]
	time = (TIM2_MAX - TIM2->CNT) * TIM2_TICK;
 8003ebc:	8c93      	ldrh	r3, [r2, #36]	; 0x24
 8003ebe:	f2c0 0113 	movt	r1, #19
 8003ec2:	b29b      	uxth	r3, r3
 8003ec4:	f06f 0013 	mvn.w	r0, #19
	return time;
}
 8003ec8:	fb00 1003 	mla	r0, r0, r3, r1
 8003ecc:	4770      	bx	lr
 8003ece:	bf00      	nop

08003ed0 <TIM2_Delay>:
#else

/* Delay Time Extended */

void TIM2_Delay(int time)
{
 8003ed0:	b470      	push	{r4, r5, r6}
	int i;
	unsigned int t = TIME2_PLS_OF_1ms * time;

	Macro_Set_Bit(RCC->APB1ENR, 0);
 8003ed2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003ed6:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8003eda:	69de      	ldr	r6, [r3, #28]

	TIM2->PSC = (unsigned int)(TIMXCLK/(double)TIM2_FREQ + 0.5)-1;
 8003edc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
	TIM2->CR1 = (1<<4)|(1<<3);
 8003ee0:	2418      	movs	r4, #24
	TIM2->ARR = 0xffff;
 8003ee2:	f64f 71ff 	movw	r1, #65535	; 0xffff
void TIM2_Delay(int time)
{
	int i;
	unsigned int t = TIME2_PLS_OF_1ms * time;

	Macro_Set_Bit(RCC->APB1ENR, 0);
 8003ee6:	f046 0601 	orr.w	r6, r6, #1

	TIM2->PSC = (unsigned int)(TIMXCLK/(double)TIM2_FREQ + 0.5)-1;
 8003eea:	f240 559f 	movw	r5, #1439	; 0x59f
void TIM2_Delay(int time)
{
	int i;
	unsigned int t = TIME2_PLS_OF_1ms * time;

	Macro_Set_Bit(RCC->APB1ENR, 0);
 8003eee:	61de      	str	r6, [r3, #28]

	TIM2->PSC = (unsigned int)(TIMXCLK/(double)TIM2_FREQ + 0.5)-1;
 8003ef0:	8515      	strh	r5, [r2, #40]	; 0x28
	TIM2->CR1 = (1<<4)|(1<<3);
 8003ef2:	8014      	strh	r4, [r2, #0]
	TIM2->ARR = 0xffff;
 8003ef4:	8591      	strh	r1, [r2, #44]	; 0x2c
/* Delay Time Extended */

void TIM2_Delay(int time)
{
	int i;
	unsigned int t = TIME2_PLS_OF_1ms * time;
 8003ef6:	2132      	movs	r1, #50	; 0x32
	Macro_Set_Bit(RCC->APB1ENR, 0);

	TIM2->PSC = (unsigned int)(TIMXCLK/(double)TIM2_FREQ + 0.5)-1;
	TIM2->CR1 = (1<<4)|(1<<3);
	TIM2->ARR = 0xffff;
	Macro_Set_Bit(TIM2->EGR,0);
 8003ef8:	8a93      	ldrh	r3, [r2, #20]
/* Delay Time Extended */

void TIM2_Delay(int time)
{
	int i;
	unsigned int t = TIME2_PLS_OF_1ms * time;
 8003efa:	fb01 f000 	mul.w	r0, r1, r0
	Macro_Set_Bit(RCC->APB1ENR, 0);

	TIM2->PSC = (unsigned int)(TIMXCLK/(double)TIM2_FREQ + 0.5)-1;
	TIM2->CR1 = (1<<4)|(1<<3);
	TIM2->ARR = 0xffff;
	Macro_Set_Bit(TIM2->EGR,0);
 8003efe:	b29b      	uxth	r3, r3
	Macro_Set_Bit(TIM2->DIER, 0);

	for(i=0; i<(t/0xffffu); i++)
 8003f00:	f248 0401 	movw	r4, #32769	; 0x8001
	Macro_Set_Bit(RCC->APB1ENR, 0);

	TIM2->PSC = (unsigned int)(TIMXCLK/(double)TIM2_FREQ + 0.5)-1;
	TIM2->CR1 = (1<<4)|(1<<3);
	TIM2->ARR = 0xffff;
	Macro_Set_Bit(TIM2->EGR,0);
 8003f04:	f043 0301 	orr.w	r3, r3, #1
	Macro_Set_Bit(TIM2->DIER, 0);

	for(i=0; i<(t/0xffffu); i++)
 8003f08:	f2c8 0400 	movt	r4, #32768	; 0x8000
	Macro_Set_Bit(RCC->APB1ENR, 0);

	TIM2->PSC = (unsigned int)(TIMXCLK/(double)TIM2_FREQ + 0.5)-1;
	TIM2->CR1 = (1<<4)|(1<<3);
	TIM2->ARR = 0xffff;
	Macro_Set_Bit(TIM2->EGR,0);
 8003f0c:	8293      	strh	r3, [r2, #20]
	Macro_Set_Bit(TIM2->DIER, 0);

	for(i=0; i<(t/0xffffu); i++)
 8003f0e:	fba4 1400 	umull	r1, r4, r4, r0

	TIM2->PSC = (unsigned int)(TIMXCLK/(double)TIM2_FREQ + 0.5)-1;
	TIM2->CR1 = (1<<4)|(1<<3);
	TIM2->ARR = 0xffff;
	Macro_Set_Bit(TIM2->EGR,0);
	Macro_Set_Bit(TIM2->DIER, 0);
 8003f12:	8993      	ldrh	r3, [r2, #12]

	for(i=0; i<(t/0xffffu); i++)
 8003f14:	0be4      	lsrs	r4, r4, #15

	TIM2->PSC = (unsigned int)(TIMXCLK/(double)TIM2_FREQ + 0.5)-1;
	TIM2->CR1 = (1<<4)|(1<<3);
	TIM2->ARR = 0xffff;
	Macro_Set_Bit(TIM2->EGR,0);
	Macro_Set_Bit(TIM2->DIER, 0);
 8003f16:	b29b      	uxth	r3, r3
 8003f18:	f043 0301 	orr.w	r3, r3, #1
 8003f1c:	8193      	strh	r3, [r2, #12]

	for(i=0; i<(t/0xffffu); i++)
 8003f1e:	bf18      	it	ne
 8003f20:	2100      	movne	r1, #0
 8003f22:	d015      	beq.n	8003f50 <TIM2_Delay+0x80>
	{
		Macro_Set_Bit(TIM2->EGR,0);
 8003f24:	8a93      	ldrh	r3, [r2, #20]
 8003f26:	b29b      	uxth	r3, r3
 8003f28:	f043 0301 	orr.w	r3, r3, #1
 8003f2c:	8293      	strh	r3, [r2, #20]
		Macro_Clear_Bit(TIM2->SR, 0);
 8003f2e:	8a13      	ldrh	r3, [r2, #16]
 8003f30:	f023 0301 	bic.w	r3, r3, #1
 8003f34:	041b      	lsls	r3, r3, #16
 8003f36:	0c1b      	lsrs	r3, r3, #16
 8003f38:	8213      	strh	r3, [r2, #16]
		Macro_Set_Bit(TIM2->CR1, 0);
 8003f3a:	8813      	ldrh	r3, [r2, #0]
 8003f3c:	b29b      	uxth	r3, r3
 8003f3e:	f043 0301 	orr.w	r3, r3, #1
 8003f42:	8013      	strh	r3, [r2, #0]
		while(Macro_Check_Bit_Clear(TIM2->SR, 0));
 8003f44:	8a13      	ldrh	r3, [r2, #16]
 8003f46:	07dd      	lsls	r5, r3, #31
 8003f48:	d5fc      	bpl.n	8003f44 <TIM2_Delay+0x74>
	TIM2->CR1 = (1<<4)|(1<<3);
	TIM2->ARR = 0xffff;
	Macro_Set_Bit(TIM2->EGR,0);
	Macro_Set_Bit(TIM2->DIER, 0);

	for(i=0; i<(t/0xffffu); i++)
 8003f4a:	3101      	adds	r1, #1
 8003f4c:	42a1      	cmp	r1, r4
 8003f4e:	d1e9      	bne.n	8003f24 <TIM2_Delay+0x54>
		Macro_Clear_Bit(TIM2->SR, 0);
		Macro_Set_Bit(TIM2->CR1, 0);
		while(Macro_Check_Bit_Clear(TIM2->SR, 0));
	}

	TIM2->ARR = t % 0xffffu;
 8003f50:	f248 0301 	movw	r3, #32769	; 0x8001
 8003f54:	f2c8 0300 	movt	r3, #32768	; 0x8000
 8003f58:	fba3 2300 	umull	r2, r3, r3, r0
 8003f5c:	0bdb      	lsrs	r3, r3, #15
 8003f5e:	ebc3 4303 	rsb	r3, r3, r3, lsl #16
 8003f62:	1ac2      	subs	r2, r0, r3
 8003f64:	b292      	uxth	r2, r2
 8003f66:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003f6a:	859a      	strh	r2, [r3, #44]	; 0x2c
	Macro_Set_Bit(TIM2->EGR,0);
 8003f6c:	8a9a      	ldrh	r2, [r3, #20]
	Macro_Clear_Bit(TIM2->SR, 0);
	Macro_Set_Bit(TIM2->CR1, 0);
	while (Macro_Check_Bit_Clear(TIM2->SR, 0));
 8003f6e:	4619      	mov	r1, r3
		Macro_Set_Bit(TIM2->CR1, 0);
		while(Macro_Check_Bit_Clear(TIM2->SR, 0));
	}

	TIM2->ARR = t % 0xffffu;
	Macro_Set_Bit(TIM2->EGR,0);
 8003f70:	b292      	uxth	r2, r2
 8003f72:	f042 0201 	orr.w	r2, r2, #1
 8003f76:	829a      	strh	r2, [r3, #20]
	Macro_Clear_Bit(TIM2->SR, 0);
 8003f78:	8a1a      	ldrh	r2, [r3, #16]
 8003f7a:	f022 0201 	bic.w	r2, r2, #1
 8003f7e:	0412      	lsls	r2, r2, #16
 8003f80:	0c12      	lsrs	r2, r2, #16
 8003f82:	821a      	strh	r2, [r3, #16]
	Macro_Set_Bit(TIM2->CR1, 0);
 8003f84:	881a      	ldrh	r2, [r3, #0]
 8003f86:	b292      	uxth	r2, r2
 8003f88:	f042 0201 	orr.w	r2, r2, #1
 8003f8c:	801a      	strh	r2, [r3, #0]
	while (Macro_Check_Bit_Clear(TIM2->SR, 0));
 8003f8e:	8a0b      	ldrh	r3, [r1, #16]
 8003f90:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003f94:	07db      	lsls	r3, r3, #31
 8003f96:	d5fa      	bpl.n	8003f8e <TIM2_Delay+0xbe>

	Macro_Clear_Bit(TIM2->CR1, 0);
 8003f98:	8813      	ldrh	r3, [r2, #0]
 8003f9a:	f023 0301 	bic.w	r3, r3, #1
 8003f9e:	041b      	lsls	r3, r3, #16
 8003fa0:	0c1b      	lsrs	r3, r3, #16
 8003fa2:	8013      	strh	r3, [r2, #0]
	Macro_Clear_Bit(TIM2->DIER, 0);
 8003fa4:	8993      	ldrh	r3, [r2, #12]
 8003fa6:	f023 0301 	bic.w	r3, r3, #1
 8003faa:	041b      	lsls	r3, r3, #16
 8003fac:	0c1b      	lsrs	r3, r3, #16
 8003fae:	8193      	strh	r3, [r2, #12]
}
 8003fb0:	bc70      	pop	{r4, r5, r6}
 8003fb2:	4770      	bx	lr

08003fb4 <TIM4_Repeat>:

#endif

void TIM4_Repeat(int time)
{
 8003fb4:	b430      	push	{r4, r5}
	Macro_Set_Bit(RCC->APB1ENR, 2);

	TIM4->CR1 = (1<<4)|(0<<3);
	TIM4->PSC = (unsigned int)(TIMXCLK/(double)TIM4_FREQ + 0.5)-1;
	TIM4->ARR = TIME4_PLS_OF_1ms * time - 1;
 8003fb6:	eb00 0080 	add.w	r0, r0, r0, lsl #2

#endif

void TIM4_Repeat(int time)
{
	Macro_Set_Bit(RCC->APB1ENR, 2);
 8003fba:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8003fbe:	f2c4 0202 	movt	r2, #16386	; 0x4002

	TIM4->CR1 = (1<<4)|(0<<3);
	TIM4->PSC = (unsigned int)(TIMXCLK/(double)TIM4_FREQ + 0.5)-1;
	TIM4->ARR = TIME4_PLS_OF_1ms * time - 1;
 8003fc2:	eb00 0080 	add.w	r0, r0, r0, lsl #2

#endif

void TIM4_Repeat(int time)
{
	Macro_Set_Bit(RCC->APB1ENR, 2);
 8003fc6:	69d5      	ldr	r5, [r2, #28]

	TIM4->CR1 = (1<<4)|(0<<3);
	TIM4->PSC = (unsigned int)(TIMXCLK/(double)TIM4_FREQ + 0.5)-1;
	TIM4->ARR = TIME4_PLS_OF_1ms * time - 1;
 8003fc8:	0040      	lsls	r0, r0, #1
 8003fca:	3801      	subs	r0, #1

void TIM4_Repeat(int time)
{
	Macro_Set_Bit(RCC->APB1ENR, 2);

	TIM4->CR1 = (1<<4)|(0<<3);
 8003fcc:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8003fd0:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8003fd4:	2410      	movs	r4, #16

#endif

void TIM4_Repeat(int time)
{
	Macro_Set_Bit(RCC->APB1ENR, 2);
 8003fd6:	f045 0504 	orr.w	r5, r5, #4

	TIM4->CR1 = (1<<4)|(0<<3);
	TIM4->PSC = (unsigned int)(TIMXCLK/(double)TIM4_FREQ + 0.5)-1;
	TIM4->ARR = TIME4_PLS_OF_1ms * time - 1;
 8003fda:	b280      	uxth	r0, r0
void TIM4_Repeat(int time)
{
	Macro_Set_Bit(RCC->APB1ENR, 2);

	TIM4->CR1 = (1<<4)|(0<<3);
	TIM4->PSC = (unsigned int)(TIMXCLK/(double)TIM4_FREQ + 0.5)-1;
 8003fdc:	f240 519f 	movw	r1, #1439	; 0x59f

#endif

void TIM4_Repeat(int time)
{
	Macro_Set_Bit(RCC->APB1ENR, 2);
 8003fe0:	61d5      	str	r5, [r2, #28]

	TIM4->CR1 = (1<<4)|(0<<3);
 8003fe2:	801c      	strh	r4, [r3, #0]
	TIM4->PSC = (unsigned int)(TIMXCLK/(double)TIM4_FREQ + 0.5)-1;
 8003fe4:	8519      	strh	r1, [r3, #40]	; 0x28
	TIM4->ARR = TIME4_PLS_OF_1ms * time - 1;
 8003fe6:	8598      	strh	r0, [r3, #44]	; 0x2c

	Macro_Set_Bit(TIM4->EGR,0);
 8003fe8:	8a9a      	ldrh	r2, [r3, #20]
 8003fea:	b292      	uxth	r2, r2
 8003fec:	f042 0201 	orr.w	r2, r2, #1
 8003ff0:	829a      	strh	r2, [r3, #20]
	Macro_Clear_Bit(TIM4->SR, 0);
 8003ff2:	8a1a      	ldrh	r2, [r3, #16]
 8003ff4:	f022 0201 	bic.w	r2, r2, #1
 8003ff8:	40a2      	lsls	r2, r4
 8003ffa:	40e2      	lsrs	r2, r4
 8003ffc:	821a      	strh	r2, [r3, #16]
	Macro_Set_Bit(TIM4->DIER, 0);
 8003ffe:	899a      	ldrh	r2, [r3, #12]
 8004000:	b292      	uxth	r2, r2
 8004002:	f042 0201 	orr.w	r2, r2, #1
 8004006:	819a      	strh	r2, [r3, #12]
	Macro_Set_Bit(TIM4->CR1, 0);
 8004008:	881a      	ldrh	r2, [r3, #0]
 800400a:	b292      	uxth	r2, r2
 800400c:	f042 0201 	orr.w	r2, r2, #1
 8004010:	801a      	strh	r2, [r3, #0]
}
 8004012:	bc30      	pop	{r4, r5}
 8004014:	4770      	bx	lr
 8004016:	bf00      	nop

08004018 <TIM4_Check_Timeout>:

int TIM4_Check_Timeout(void)
{
	if(Macro_Check_Bit_Set(TIM4->SR, 0))
 8004018:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800401c:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8004020:	8a18      	ldrh	r0, [r3, #16]
 8004022:	f010 0001 	ands.w	r0, r0, #1
 8004026:	d006      	beq.n	8004036 <TIM4_Check_Timeout+0x1e>
	{
		Macro_Clear_Bit(TIM4->SR, 0);
 8004028:	8a1a      	ldrh	r2, [r3, #16]
		return 1;
 800402a:	2001      	movs	r0, #1

int TIM4_Check_Timeout(void)
{
	if(Macro_Check_Bit_Set(TIM4->SR, 0))
	{
		Macro_Clear_Bit(TIM4->SR, 0);
 800402c:	f022 0201 	bic.w	r2, r2, #1
 8004030:	0412      	lsls	r2, r2, #16
 8004032:	0c12      	lsrs	r2, r2, #16
 8004034:	821a      	strh	r2, [r3, #16]
	}
	else
	{
		return 0;
	}
}
 8004036:	4770      	bx	lr

08004038 <TIM4_Stop>:

void TIM4_Stop(void)
{
	Macro_Clear_Bit(TIM4->CR1, 0);
 8004038:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800403c:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8004040:	881a      	ldrh	r2, [r3, #0]
 8004042:	f022 0201 	bic.w	r2, r2, #1
 8004046:	0412      	lsls	r2, r2, #16
 8004048:	0c12      	lsrs	r2, r2, #16
 800404a:	801a      	strh	r2, [r3, #0]
	Macro_Clear_Bit(TIM4->DIER, 0);
 800404c:	899a      	ldrh	r2, [r3, #12]
 800404e:	f022 0201 	bic.w	r2, r2, #1
 8004052:	0412      	lsls	r2, r2, #16
 8004054:	0c12      	lsrs	r2, r2, #16
 8004056:	819a      	strh	r2, [r3, #12]
 8004058:	4770      	bx	lr
 800405a:	bf00      	nop

0800405c <TIM4_Change_Value>:
}

void TIM4_Change_Value(int time)
{
	TIM4->ARR = TIME4_PLS_OF_1ms * time;
 800405c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8004060:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8004064:	0040      	lsls	r0, r0, #1
 8004066:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800406a:	b280      	uxth	r0, r0
 800406c:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8004070:	8598      	strh	r0, [r3, #44]	; 0x2c
 8004072:	4770      	bx	lr

08004074 <TIM3_Out_Init>:
}

void TIM3_Out_Init(void)
{
	Macro_Set_Bit(RCC->APB1ENR, 1);
 8004074:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004078:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800407c:	69da      	ldr	r2, [r3, #28]
	Macro_Set_Bit(RCC->APB2ENR, 3);
	Macro_Write_Block(GPIOB->CRL,0xf,0xb,0);
 800407e:	f44f 6140 	mov.w	r1, #3072	; 0xc00
	TIM4->ARR = TIME4_PLS_OF_1ms * time;
}

void TIM3_Out_Init(void)
{
	Macro_Set_Bit(RCC->APB1ENR, 1);
 8004082:	f042 0202 	orr.w	r2, r2, #2
 8004086:	61da      	str	r2, [r3, #28]
	Macro_Set_Bit(RCC->APB2ENR, 3);
 8004088:	699a      	ldr	r2, [r3, #24]
	Macro_Write_Block(GPIOB->CRL,0xf,0xb,0);
 800408a:	f2c4 0101 	movt	r1, #16385	; 0x4001
}

void TIM3_Out_Init(void)
{
	Macro_Set_Bit(RCC->APB1ENR, 1);
	Macro_Set_Bit(RCC->APB2ENR, 3);
 800408e:	f042 0208 	orr.w	r2, r2, #8
 8004092:	619a      	str	r2, [r3, #24]
	Macro_Write_Block(GPIOB->CRL,0xf,0xb,0);
 8004094:	680b      	ldr	r3, [r1, #0]
	Macro_Write_Block(TIM3->CCMR2,0x7,0x6,4);
 8004096:	f44f 6280 	mov.w	r2, #1024	; 0x400

void TIM3_Out_Init(void)
{
	Macro_Set_Bit(RCC->APB1ENR, 1);
	Macro_Set_Bit(RCC->APB2ENR, 3);
	Macro_Write_Block(GPIOB->CRL,0xf,0xb,0);
 800409a:	f023 030f 	bic.w	r3, r3, #15
 800409e:	f043 030b 	orr.w	r3, r3, #11
 80040a2:	600b      	str	r3, [r1, #0]
	Macro_Write_Block(TIM3->CCMR2,0x7,0x6,4);
 80040a4:	f2c4 0200 	movt	r2, #16384	; 0x4000
 80040a8:	8b93      	ldrh	r3, [r2, #28]
	TIM3->CCER = (0<<9)|(1<<8);
 80040aa:	f44f 7180 	mov.w	r1, #256	; 0x100
void TIM3_Out_Init(void)
{
	Macro_Set_Bit(RCC->APB1ENR, 1);
	Macro_Set_Bit(RCC->APB2ENR, 3);
	Macro_Write_Block(GPIOB->CRL,0xf,0xb,0);
	Macro_Write_Block(TIM3->CCMR2,0x7,0x6,4);
 80040ae:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80040b2:	041b      	lsls	r3, r3, #16
 80040b4:	0c1b      	lsrs	r3, r3, #16
 80040b6:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 80040ba:	8393      	strh	r3, [r2, #28]
	TIM3->CCER = (0<<9)|(1<<8);
 80040bc:	8411      	strh	r1, [r2, #32]
 80040be:	4770      	bx	lr

080040c0 <TIM3_Out_Freq_Generation>:
}

void TIM3_Out_Freq_Generation(unsigned short freq)
{
 80040c0:	b510      	push	{r4, lr}
	TIM3->PSC = (unsigned int)(TIMXCLK/(double)TIM3_FREQ + 0.5)-1;
 80040c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80040c6:	f2c4 0400 	movt	r4, #16384	; 0x4000
 80040ca:	2308      	movs	r3, #8
 80040cc:	8523      	strh	r3, [r4, #40]	; 0x28
	TIM3->ARR = (double)TIM3_FREQ/freq-1;
 80040ce:	f005 fb03 	bl	80096d8 <__aeabi_i2d>
 80040d2:	4602      	mov	r2, r0
 80040d4:	460b      	mov	r3, r1
 80040d6:	a10e      	add	r1, pc, #56	; (adr r1, 8004110 <TIM3_Out_Freq_Generation+0x50>)
 80040d8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80040dc:	f005 fc8c 	bl	80099f8 <__aeabi_ddiv>
 80040e0:	2300      	movs	r3, #0
 80040e2:	2200      	movs	r2, #0
 80040e4:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
 80040e8:	f005 f9a8 	bl	800943c <__aeabi_dsub>
 80040ec:	f005 fe1c 	bl	8009d28 <__aeabi_d2uiz>
 80040f0:	b280      	uxth	r0, r0
 80040f2:	85a0      	strh	r0, [r4, #44]	; 0x2c
	TIM3->CCR3 = TIM3->ARR/2;
 80040f4:	8da2      	ldrh	r2, [r4, #44]	; 0x2c

	Macro_Set_Bit(TIM3->EGR,0);
	TIM3->CR1 = (1<<4)|(0<<3)|(0<<1)|(1<<0);
 80040f6:	2311      	movs	r3, #17

void TIM3_Out_Freq_Generation(unsigned short freq)
{
	TIM3->PSC = (unsigned int)(TIMXCLK/(double)TIM3_FREQ + 0.5)-1;
	TIM3->ARR = (double)TIM3_FREQ/freq-1;
	TIM3->CCR3 = TIM3->ARR/2;
 80040f8:	f3c2 024e 	ubfx	r2, r2, #1, #15
 80040fc:	87a2      	strh	r2, [r4, #60]	; 0x3c

	Macro_Set_Bit(TIM3->EGR,0);
 80040fe:	8aa2      	ldrh	r2, [r4, #20]
 8004100:	b292      	uxth	r2, r2
 8004102:	f042 0201 	orr.w	r2, r2, #1
 8004106:	82a2      	strh	r2, [r4, #20]
	TIM3->CR1 = (1<<4)|(0<<3)|(0<<1)|(1<<0);
 8004108:	8023      	strh	r3, [r4, #0]
 800410a:	bd10      	pop	{r4, pc}
 800410c:	f3af 8000 	nop.w
 8004110:	00000000 	andeq	r0, r0, r0
 8004114:	415e8480 	cmpmi	lr, r0, lsl #9

08004118 <TIM3_Out_Stop>:
}

void TIM3_Out_Stop(void)
{
	Macro_Clear_Bit(TIM3->CR1, 0);
 8004118:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800411c:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8004120:	881a      	ldrh	r2, [r3, #0]
 8004122:	f022 0201 	bic.w	r2, r2, #1
 8004126:	0412      	lsls	r2, r2, #16
 8004128:	0c12      	lsrs	r2, r2, #16
 800412a:	801a      	strh	r2, [r3, #0]
	Macro_Clear_Bit(TIM3->DIER, 0);
 800412c:	899a      	ldrh	r2, [r3, #12]
 800412e:	f022 0201 	bic.w	r2, r2, #1
 8004132:	0412      	lsls	r2, r2, #16
 8004134:	0c12      	lsrs	r2, r2, #16
 8004136:	819a      	strh	r2, [r3, #12]
 8004138:	4770      	bx	lr
 800413a:	bf00      	nop
 800413c:	f3af 8000 	nop.w

08004140 <Uart1_Init>:
#include <string.h>
#include <stdlib.h>
#include <ctype.h>

void Uart1_Init(int baud)
{
 8004140:	b570      	push	{r4, r5, r6, lr}
	double div;
	unsigned int mant;
	unsigned int frac;

	Macro_Set_Bit(RCC->APB2ENR, 2);
 8004142:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8004146:	f2c4 0202 	movt	r2, #16386	; 0x4002
 800414a:	6991      	ldr	r1, [r2, #24]
	Macro_Set_Bit(RCC->APB2ENR, 14);
	Macro_Write_Block(GPIOA->CRH, 0xff, 0x8a, 4);
 800414c:	f44f 6300 	mov.w	r3, #2048	; 0x800
{
	double div;
	unsigned int mant;
	unsigned int frac;

	Macro_Set_Bit(RCC->APB2ENR, 2);
 8004150:	f041 0104 	orr.w	r1, r1, #4
 8004154:	6191      	str	r1, [r2, #24]
	Macro_Set_Bit(RCC->APB2ENR, 14);
 8004156:	6991      	ldr	r1, [r2, #24]
	Macro_Write_Block(GPIOA->CRH, 0xff, 0x8a, 4);
 8004158:	f2c4 0301 	movt	r3, #16385	; 0x4001
	double div;
	unsigned int mant;
	unsigned int frac;

	Macro_Set_Bit(RCC->APB2ENR, 2);
	Macro_Set_Bit(RCC->APB2ENR, 14);
 800415c:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8004160:	6191      	str	r1, [r2, #24]
	Macro_Write_Block(GPIOA->CRH, 0xff, 0x8a, 4);
 8004162:	685a      	ldr	r2, [r3, #4]
 8004164:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
 8004168:	f442 620a 	orr.w	r2, r2, #2208	; 0x8a0
 800416c:	605a      	str	r2, [r3, #4]
	Macro_Set_Bit(GPIOA->ODR, 10);
 800416e:	68da      	ldr	r2, [r3, #12]
 8004170:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004174:	60da      	str	r2, [r3, #12]

	div = PCLK2/(16. * baud);
 8004176:	f005 faaf 	bl	80096d8 <__aeabi_i2d>
 800417a:	2300      	movs	r3, #0
 800417c:	2200      	movs	r2, #0
 800417e:	f2c4 0330 	movt	r3, #16432	; 0x4030
 8004182:	f005 fb0f 	bl	80097a4 <__aeabi_dmul>
 8004186:	4602      	mov	r2, r0
 8004188:	460b      	mov	r3, r1
 800418a:	a119      	add	r1, pc, #100	; (adr r1, 80041f0 <Uart1_Init+0xb0>)
 800418c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004190:	f005 fc32 	bl	80099f8 <__aeabi_ddiv>
 8004194:	460d      	mov	r5, r1
 8004196:	4604      	mov	r4, r0
	mant = (int)div;
 8004198:	f005 fd9e 	bl	8009cd8 <__aeabi_d2iz>
 800419c:	4606      	mov	r6, r0
	frac = (int)((div - mant) * 16. + 0.5);
 800419e:	f005 fa8b 	bl	80096b8 <__aeabi_ui2d>
 80041a2:	4602      	mov	r2, r0
 80041a4:	460b      	mov	r3, r1
 80041a6:	4620      	mov	r0, r4
 80041a8:	4629      	mov	r1, r5
 80041aa:	f005 f947 	bl	800943c <__aeabi_dsub>
 80041ae:	2300      	movs	r3, #0
 80041b0:	2200      	movs	r2, #0
 80041b2:	f2c4 0330 	movt	r3, #16432	; 0x4030
 80041b6:	f005 faf5 	bl	80097a4 <__aeabi_dmul>
 80041ba:	2300      	movs	r3, #0
 80041bc:	2200      	movs	r2, #0
 80041be:	f6c3 73e0 	movt	r3, #16352	; 0x3fe0
 80041c2:	f005 f93d 	bl	8009440 <__adddf3>
 80041c6:	f005 fd87 	bl	8009cd8 <__aeabi_d2iz>
	mant += frac >> 4;
 80041ca:	eb06 1610 	add.w	r6, r6, r0, lsr #4
	frac &= 0xf;
 80041ce:	f000 000f 	and.w	r0, r0, #15

	USART1->BRR = (mant<<4)+(frac<<0);
 80041d2:	eb00 1006 	add.w	r0, r0, r6, lsl #4
 80041d6:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 80041da:	f2c4 0301 	movt	r3, #16385	; 0x4001
	USART1->CR1 = (1<<13)|(0<<12)|(0<<10)|(1<<3)|(1<<2);
	USART1->CR2 = 0<<12;
 80041de:	2200      	movs	r2, #0
	mant = (int)div;
	frac = (int)((div - mant) * 16. + 0.5);
	mant += frac >> 4;
	frac &= 0xf;

	USART1->BRR = (mant<<4)+(frac<<0);
 80041e0:	b280      	uxth	r0, r0
	USART1->CR1 = (1<<13)|(0<<12)|(0<<10)|(1<<3)|(1<<2);
 80041e2:	f242 010c 	movw	r1, #8204	; 0x200c
	mant = (int)div;
	frac = (int)((div - mant) * 16. + 0.5);
	mant += frac >> 4;
	frac &= 0xf;

	USART1->BRR = (mant<<4)+(frac<<0);
 80041e6:	8118      	strh	r0, [r3, #8]
	USART1->CR1 = (1<<13)|(0<<12)|(0<<10)|(1<<3)|(1<<2);
 80041e8:	8199      	strh	r1, [r3, #12]
	USART1->CR2 = 0<<12;
 80041ea:	821a      	strh	r2, [r3, #16]
	USART1->CR3 = 0;
 80041ec:	829a      	strh	r2, [r3, #20]
 80041ee:	bd70      	pop	{r4, r5, r6, pc}
 80041f0:	00000000 	andeq	r0, r0, r0
 80041f4:	41912a88 	orrsmi	r2, r1, r8, lsl #21

080041f8 <Uart1_Send_Byte>:
}

void Uart1_Send_Byte(char data)
{
	if(data=='\n')
 80041f8:	280a      	cmp	r0, #10
 80041fa:	d00c      	beq.n	8004216 <Uart1_Send_Byte+0x1e>
	{
		while(Macro_Check_Bit_Clear(USART1->SR, 7));
		USART1->DR = 0x0d;
	}

	while(Macro_Check_Bit_Clear(USART1->SR, 7));
 80041fc:	f44f 5160 	mov.w	r1, #14336	; 0x3800
 8004200:	f2c4 0101 	movt	r1, #16385	; 0x4001
 8004204:	880a      	ldrh	r2, [r1, #0]
 8004206:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 800420a:	0612      	lsls	r2, r2, #24
 800420c:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8004210:	d5f8      	bpl.n	8004204 <Uart1_Send_Byte+0xc>
	USART1->DR = data;
 8004212:	8098      	strh	r0, [r3, #4]
 8004214:	4770      	bx	lr

void Uart1_Send_Byte(char data)
{
	if(data=='\n')
	{
		while(Macro_Check_Bit_Clear(USART1->SR, 7));
 8004216:	f44f 5160 	mov.w	r1, #14336	; 0x3800
 800421a:	f2c4 0101 	movt	r1, #16385	; 0x4001
 800421e:	880a      	ldrh	r2, [r1, #0]
 8004220:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 8004224:	0612      	lsls	r2, r2, #24
 8004226:	f2c4 0301 	movt	r3, #16385	; 0x4001
 800422a:	d5f8      	bpl.n	800421e <Uart1_Send_Byte+0x26>
		USART1->DR = 0x0d;
 800422c:	220d      	movs	r2, #13
 800422e:	809a      	strh	r2, [r3, #4]
 8004230:	e7e4      	b.n	80041fc <Uart1_Send_Byte+0x4>
 8004232:	bf00      	nop

08004234 <Uart1_Send_String>:
	while(Macro_Check_Bit_Clear(USART1->SR, 7));
	USART1->DR = data;
}

void Uart1_Send_String(char *pt)
{
 8004234:	b430      	push	{r4, r5}
	while(*pt!=0)
 8004236:	7804      	ldrb	r4, [r0, #0]
 8004238:	b194      	cbz	r4, 8004260 <Uart1_Send_String+0x2c>

void Uart1_Send_Byte(char data)
{
	if(data=='\n')
	{
		while(Macro_Check_Bit_Clear(USART1->SR, 7));
 800423a:	f44f 5160 	mov.w	r1, #14336	; 0x3800
 800423e:	f2c4 0101 	movt	r1, #16385	; 0x4001
		USART1->DR = 0x0d;
 8004242:	250d      	movs	r5, #13
	USART1->CR3 = 0;
}

void Uart1_Send_Byte(char data)
{
	if(data=='\n')
 8004244:	2c0a      	cmp	r4, #10
 8004246:	d00d      	beq.n	8004264 <Uart1_Send_String+0x30>
	{
		while(Macro_Check_Bit_Clear(USART1->SR, 7));
		USART1->DR = 0x0d;
	}

	while(Macro_Check_Bit_Clear(USART1->SR, 7));
 8004248:	880a      	ldrh	r2, [r1, #0]
 800424a:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 800424e:	0612      	lsls	r2, r2, #24
 8004250:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8004254:	d5f8      	bpl.n	8004248 <Uart1_Send_String+0x14>
	USART1->DR = data;
 8004256:	809c      	strh	r4, [r3, #4]
}

void Uart1_Send_String(char *pt)
{
	while(*pt!=0)
 8004258:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 800425c:	2c00      	cmp	r4, #0
 800425e:	d1f1      	bne.n	8004244 <Uart1_Send_String+0x10>
	{
		Uart1_Send_Byte(*pt++);
	}
}
 8004260:	bc30      	pop	{r4, r5}
 8004262:	4770      	bx	lr

void Uart1_Send_Byte(char data)
{
	if(data=='\n')
	{
		while(Macro_Check_Bit_Clear(USART1->SR, 7));
 8004264:	880a      	ldrh	r2, [r1, #0]
 8004266:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 800426a:	0612      	lsls	r2, r2, #24
 800426c:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8004270:	d5f8      	bpl.n	8004264 <Uart1_Send_String+0x30>
		USART1->DR = 0x0d;
 8004272:	809d      	strh	r5, [r3, #4]
 8004274:	e7e8      	b.n	8004248 <Uart1_Send_String+0x14>
 8004276:	bf00      	nop

08004278 <Uart1_Printf>:
		Uart1_Send_Byte(*pt++);
	}
}

void Uart1_Printf(char *fmt,...)
{
 8004278:	b40f      	push	{r0, r1, r2, r3}
 800427a:	b530      	push	{r4, r5, lr}
 800427c:	b0c3      	sub	sp, #268	; 0x10c
 800427e:	ab46      	add	r3, sp, #280	; 0x118
 8004280:	f853 1b04 	ldr.w	r1, [r3], #4
	va_list ap;
	char string[256];

	va_start(ap,fmt);
	vsprintf(string,fmt,ap);
 8004284:	a802      	add	r0, sp, #8
 8004286:	461a      	mov	r2, r3
void Uart1_Printf(char *fmt,...)
{
	va_list ap;
	char string[256];

	va_start(ap,fmt);
 8004288:	9301      	str	r3, [sp, #4]
	vsprintf(string,fmt,ap);
 800428a:	f000 f87b 	bl	8004384 <vsprintf>
	USART1->DR = data;
}

void Uart1_Send_String(char *pt)
{
	while(*pt!=0)
 800428e:	f89d 0008 	ldrb.w	r0, [sp, #8]
 8004292:	b198      	cbz	r0, 80042bc <Uart1_Printf+0x44>

void Uart1_Send_Byte(char data)
{
	if(data=='\n')
	{
		while(Macro_Check_Bit_Clear(USART1->SR, 7));
 8004294:	f44f 5160 	mov.w	r1, #14336	; 0x3800
 8004298:	ac02      	add	r4, sp, #8
 800429a:	f2c4 0101 	movt	r1, #16385	; 0x4001
		USART1->DR = 0x0d;
 800429e:	250d      	movs	r5, #13
	USART1->CR3 = 0;
}

void Uart1_Send_Byte(char data)
{
	if(data=='\n')
 80042a0:	280a      	cmp	r0, #10
 80042a2:	d010      	beq.n	80042c6 <Uart1_Printf+0x4e>
	{
		while(Macro_Check_Bit_Clear(USART1->SR, 7));
		USART1->DR = 0x0d;
	}

	while(Macro_Check_Bit_Clear(USART1->SR, 7));
 80042a4:	880a      	ldrh	r2, [r1, #0]
 80042a6:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 80042aa:	0612      	lsls	r2, r2, #24
 80042ac:	f2c4 0301 	movt	r3, #16385	; 0x4001
 80042b0:	d5f8      	bpl.n	80042a4 <Uart1_Printf+0x2c>
	USART1->DR = data;
 80042b2:	8098      	strh	r0, [r3, #4]
}

void Uart1_Send_String(char *pt)
{
	while(*pt!=0)
 80042b4:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 80042b8:	2800      	cmp	r0, #0
 80042ba:	d1f1      	bne.n	80042a0 <Uart1_Printf+0x28>

	va_start(ap,fmt);
	vsprintf(string,fmt,ap);
	Uart1_Send_String(string);
	va_end(ap);
}
 80042bc:	b043      	add	sp, #268	; 0x10c
 80042be:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80042c2:	b004      	add	sp, #16
 80042c4:	4770      	bx	lr

void Uart1_Send_Byte(char data)
{
	if(data=='\n')
	{
		while(Macro_Check_Bit_Clear(USART1->SR, 7));
 80042c6:	880a      	ldrh	r2, [r1, #0]
 80042c8:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 80042cc:	0612      	lsls	r2, r2, #24
 80042ce:	f2c4 0301 	movt	r3, #16385	; 0x4001
 80042d2:	d5f8      	bpl.n	80042c6 <Uart1_Printf+0x4e>
		USART1->DR = 0x0d;
 80042d4:	809d      	strh	r5, [r3, #4]
 80042d6:	e7e5      	b.n	80042a4 <Uart1_Printf+0x2c>

080042d8 <Uart1_Get_Pressed>:
	va_end(ap);
}

char Uart1_Get_Pressed(void)
{
	if(Macro_Check_Bit_Set(USART1->SR, 5))
 80042d8:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 80042dc:	f2c4 0301 	movt	r3, #16385	; 0x4001
 80042e0:	8818      	ldrh	r0, [r3, #0]
 80042e2:	f3c0 1040 	ubfx	r0, r0, #5, #1
 80042e6:	b108      	cbz	r0, 80042ec <Uart1_Get_Pressed+0x14>
	{
		return (char)USART1->DR;
 80042e8:	8898      	ldrh	r0, [r3, #4]
 80042ea:	b2c0      	uxtb	r0, r0

	else
	{
		return (char)0;
	}
}
 80042ec:	4770      	bx	lr
 80042ee:	bf00      	nop

080042f0 <Uart1_Get_Char>:
	va_end(ap);
}

char Uart1_Get_Pressed(void)
{
	if(Macro_Check_Bit_Set(USART1->SR, 5))
 80042f0:	f44f 5260 	mov.w	r2, #14336	; 0x3800
 80042f4:	f2c4 0201 	movt	r2, #16385	; 0x4001
 80042f8:	8813      	ldrh	r3, [r2, #0]
 80042fa:	0699      	lsls	r1, r3, #26
 80042fc:	d5fc      	bpl.n	80042f8 <Uart1_Get_Char+0x8>
	{
		return (char)USART1->DR;
 80042fe:	8890      	ldrh	r0, [r2, #4]
 8004300:	b2c0      	uxtb	r0, r0

char Uart1_Get_Char(void)
{
	char rx;

	while((rx = Uart1_Get_Pressed()) == 0);
 8004302:	2800      	cmp	r0, #0
 8004304:	d0f8      	beq.n	80042f8 <Uart1_Get_Char+0x8>

	return rx;
}
 8004306:	4770      	bx	lr

08004308 <Uart1_RX_Interrupt_Enable>:

void Uart1_RX_Interrupt_Enable(int en)
{
	if(en)
	{
		Macro_Set_Bit(USART1->CR1, 5);
 8004308:	f44f 5260 	mov.w	r2, #14336	; 0x3800
 800430c:	f2c4 0201 	movt	r2, #16385	; 0x4001
	return rx;
}

void Uart1_RX_Interrupt_Enable(int en)
{
	if(en)
 8004310:	b968      	cbnz	r0, 800432e <Uart1_RX_Interrupt_Enable+0x26>
		NVIC_EnableIRQ(37);
	}

	else
	{
		Macro_Clear_Bit(USART1->CR1, 5);
 8004312:	8993      	ldrh	r3, [r2, #12]
 * Disable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
 8004314:	f44f 4161 	mov.w	r1, #57600	; 0xe100
 8004318:	f023 0320 	bic.w	r3, r3, #32
 800431c:	041b      	lsls	r3, r3, #16
 800431e:	0c1b      	lsrs	r3, r3, #16
 8004320:	f2ce 0100 	movt	r1, #57344	; 0xe000
 8004324:	2020      	movs	r0, #32
 8004326:	8193      	strh	r3, [r2, #12]
 8004328:	f8c1 0084 	str.w	r0, [r1, #132]	; 0x84
 800432c:	4770      	bx	lr

void Uart1_RX_Interrupt_Enable(int en)
{
	if(en)
	{
		Macro_Set_Bit(USART1->CR1, 5);
 800432e:	8990      	ldrh	r0, [r2, #12]
 * Clear the pending bit for the specified interrupt. 
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
 8004330:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8004334:	b280      	uxth	r0, r0
 8004336:	f2ce 0300 	movt	r3, #57344	; 0xe000
 800433a:	2120      	movs	r1, #32
 800433c:	f040 0020 	orr.w	r0, r0, #32
 8004340:	8190      	strh	r0, [r2, #12]
 8004342:	f8c3 1184 	str.w	r1, [r3, #388]	; 0x184
 * Enable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 8004346:	6059      	str	r1, [r3, #4]
 8004348:	4770      	bx	lr
 800434a:	bf00      	nop
 800434c:	f3af 8000 	nop.w

08004350 <_vsprintf_r>:
 8004350:	b530      	push	{r4, r5, lr}
 8004352:	b09b      	sub	sp, #108	; 0x6c
 8004354:	460c      	mov	r4, r1
 8004356:	4669      	mov	r1, sp
 8004358:	9400      	str	r4, [sp, #0]
 800435a:	f44f 7502 	mov.w	r5, #520	; 0x208
 800435e:	9404      	str	r4, [sp, #16]
 8004360:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
 8004364:	f8ad 500c 	strh.w	r5, [sp, #12]
 8004368:	f64f 75ff 	movw	r5, #65535	; 0xffff
 800436c:	9402      	str	r4, [sp, #8]
 800436e:	9405      	str	r4, [sp, #20]
 8004370:	f8ad 500e 	strh.w	r5, [sp, #14]
 8004374:	f000 f814 	bl	80043a0 <_svfprintf_r>
 8004378:	9b00      	ldr	r3, [sp, #0]
 800437a:	2200      	movs	r2, #0
 800437c:	701a      	strb	r2, [r3, #0]
 800437e:	b01b      	add	sp, #108	; 0x6c
 8004380:	bd30      	pop	{r4, r5, pc}
 8004382:	bf00      	nop

08004384 <vsprintf>:
 8004384:	b430      	push	{r4, r5}
 8004386:	f240 0404 	movw	r4, #4
 800438a:	f2c2 0400 	movt	r4, #8192	; 0x2000
 800438e:	460d      	mov	r5, r1
 8004390:	4613      	mov	r3, r2
 8004392:	4601      	mov	r1, r0
 8004394:	462a      	mov	r2, r5
 8004396:	6820      	ldr	r0, [r4, #0]
 8004398:	bc30      	pop	{r4, r5}
 800439a:	f7ff bfd9 	b.w	8004350 <_vsprintf_r>
 800439e:	bf00      	nop

080043a0 <_svfprintf_r>:
 80043a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80043a4:	b0c9      	sub	sp, #292	; 0x124
 80043a6:	4691      	mov	r9, r2
 80043a8:	9314      	str	r3, [sp, #80]	; 0x50
 80043aa:	910b      	str	r1, [sp, #44]	; 0x2c
 80043ac:	900e      	str	r0, [sp, #56]	; 0x38
 80043ae:	f002 fafb 	bl	80069a8 <_localeconv_r>
 80043b2:	6800      	ldr	r0, [r0, #0]
 80043b4:	901a      	str	r0, [sp, #104]	; 0x68
 80043b6:	f003 fc67 	bl	8007c88 <strlen>
 80043ba:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80043bc:	89a3      	ldrh	r3, [r4, #12]
 80043be:	901d      	str	r0, [sp, #116]	; 0x74
 80043c0:	0618      	lsls	r0, r3, #24
 80043c2:	d503      	bpl.n	80043cc <_svfprintf_r+0x2c>
 80043c4:	6923      	ldr	r3, [r4, #16]
 80043c6:	2b00      	cmp	r3, #0
 80043c8:	f001 8079 	beq.w	80054be <_svfprintf_r+0x111e>
 80043cc:	f24a 4574 	movw	r5, #42100	; 0xa474
 80043d0:	ac38      	add	r4, sp, #224	; 0xe0
 80043d2:	f6c0 0500 	movt	r5, #2048	; 0x800
 80043d6:	9515      	str	r5, [sp, #84]	; 0x54
 80043d8:	f10d 05df 	add.w	r5, sp, #223	; 0xdf
 80043dc:	9508      	str	r5, [sp, #32]
 80043de:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80043e0:	af38      	add	r7, sp, #224	; 0xe0
 80043e2:	9409      	str	r4, [sp, #36]	; 0x24
 80043e4:	f64a 1440 	movw	r4, #43328	; 0xa940
 80043e8:	f105 0610 	add.w	r6, r5, #16
 80043ec:	9d08      	ldr	r5, [sp, #32]
 80043ee:	2300      	movs	r3, #0
 80043f0:	f6c0 0400 	movt	r4, #2048	; 0x800
 80043f4:	9311      	str	r3, [sp, #68]	; 0x44
 80043f6:	9417      	str	r4, [sp, #92]	; 0x5c
 80043f8:	1b7c      	subs	r4, r7, r5
 80043fa:	931b      	str	r3, [sp, #108]	; 0x6c
 80043fc:	931c      	str	r3, [sp, #112]	; 0x70
 80043fe:	9319      	str	r3, [sp, #100]	; 0x64
 8004400:	931e      	str	r3, [sp, #120]	; 0x78
 8004402:	9312      	str	r3, [sp, #72]	; 0x48
 8004404:	9421      	str	r4, [sp, #132]	; 0x84
 8004406:	932d      	str	r3, [sp, #180]	; 0xb4
 8004408:	932c      	str	r3, [sp, #176]	; 0xb0
 800440a:	972b      	str	r7, [sp, #172]	; 0xac
 800440c:	f899 3000 	ldrb.w	r3, [r9]
 8004410:	2b25      	cmp	r3, #37	; 0x25
 8004412:	bf18      	it	ne
 8004414:	2b00      	cmpne	r3, #0
 8004416:	f000 80b3 	beq.w	8004580 <_svfprintf_r+0x1e0>
 800441a:	f109 0201 	add.w	r2, r9, #1
 800441e:	4614      	mov	r4, r2
 8004420:	3201      	adds	r2, #1
 8004422:	7823      	ldrb	r3, [r4, #0]
 8004424:	2b25      	cmp	r3, #37	; 0x25
 8004426:	bf18      	it	ne
 8004428:	2b00      	cmpne	r3, #0
 800442a:	d1f8      	bne.n	800441e <_svfprintf_r+0x7e>
 800442c:	ebb4 0509 	subs.w	r5, r4, r9
 8004430:	d00f      	beq.n	8004452 <_svfprintf_r+0xb2>
 8004432:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004434:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8004436:	3301      	adds	r3, #1
 8004438:	f8c7 9000 	str.w	r9, [r7]
 800443c:	2b07      	cmp	r3, #7
 800443e:	607d      	str	r5, [r7, #4]
 8004440:	442a      	add	r2, r5
 8004442:	932c      	str	r3, [sp, #176]	; 0xb0
 8004444:	922d      	str	r2, [sp, #180]	; 0xb4
 8004446:	bfd8      	it	le
 8004448:	3708      	addle	r7, #8
 800444a:	dc7f      	bgt.n	800454c <_svfprintf_r+0x1ac>
 800444c:	9812      	ldr	r0, [sp, #72]	; 0x48
 800444e:	4428      	add	r0, r5
 8004450:	9012      	str	r0, [sp, #72]	; 0x48
 8004452:	7823      	ldrb	r3, [r4, #0]
 8004454:	2b00      	cmp	r3, #0
 8004456:	f000 8081 	beq.w	800455c <_svfprintf_r+0x1bc>
 800445a:	2300      	movs	r3, #0
 800445c:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
 8004460:	461a      	mov	r2, r3
 8004462:	9313      	str	r3, [sp, #76]	; 0x4c
 8004464:	930a      	str	r3, [sp, #40]	; 0x28
 8004466:	f104 0901 	add.w	r9, r4, #1
 800446a:	7863      	ldrb	r3, [r4, #1]
 800446c:	f04f 34ff 	mov.w	r4, #4294967295
 8004470:	940c      	str	r4, [sp, #48]	; 0x30
 8004472:	f109 0901 	add.w	r9, r9, #1
 8004476:	f1a3 0120 	sub.w	r1, r3, #32
 800447a:	2958      	cmp	r1, #88	; 0x58
 800447c:	f200 840a 	bhi.w	8004c94 <_svfprintf_r+0x8f4>
 8004480:	e8df f011 	tbh	[pc, r1, lsl #1]
 8004484:	0408038e 	streq	r0, [r8], #-910	; 0xfffffc72
 8004488:	03950408 	orrseq	r0, r5, #8, 8	; 0x8000000
 800448c:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 8004490:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 8004494:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 8004498:	0348039c 	movteq	r0, #33692	; 0x839c
 800449c:	005d0408 	subseq	r0, sp, r8, lsl #8
 80044a0:	04080235 	streq	r0, [r8], #-565	; 0xfffffdcb
 80044a4:	03f603ef 	mvnseq	r0, #-1140850685	; 0xbc000003
 80044a8:	03f603f6 	mvnseq	r0, #-671088637	; 0xd8000003
 80044ac:	03f603f6 	mvnseq	r0, #-671088637	; 0xd8000003
 80044b0:	03f603f6 	mvnseq	r0, #-671088637	; 0xd8000003
 80044b4:	03f603f6 	mvnseq	r0, #-671088637	; 0xd8000003
 80044b8:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 80044bc:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 80044c0:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 80044c4:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 80044c8:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 80044cc:	0290026e 	addseq	r0, r0, #-536870906	; 0xe0000006
 80044d0:	02900408 	addseq	r0, r0, #8, 8	; 0x8000000
 80044d4:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 80044d8:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 80044dc:	040802cd 	streq	r0, [r8], #-717	; 0xfffffd33
 80044e0:	02d40408 	sbcseq	r0, r4, #8, 8	; 0x8000000
 80044e4:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 80044e8:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 80044ec:	02550408 	subseq	r0, r5, #8, 8	; 0x8000000
 80044f0:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 80044f4:	040803bc 	streq	r0, [r8], #-956	; 0xfffffc44
 80044f8:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 80044fc:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 8004500:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 8004504:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 8004508:	03a80408 			; <UNDEFINED> instruction: 0x03a80408
 800450c:	029003d7 	addseq	r0, r0, #1543503875	; 0x5c000003
 8004510:	02900290 	addseq	r0, r0, #144, 4
 8004514:	03d70387 	bicseq	r0, r7, #469762050	; 0x1c000002
 8004518:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 800451c:	0408034c 	streq	r0, [r8], #-844	; 0xfffffcb4
 8004520:	0224035e 	eoreq	r0, r4, #2013265921	; 0x78000001
 8004524:	02f00370 	rscseq	r0, r0, #112, 6	; 0xc0000001
 8004528:	02f70408 	rscseq	r0, r7, #8, 8	; 0x8000000
 800452c:	00800408 	addeq	r0, r0, r8, lsl #8
 8004530:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 8004534:	9c130320 	ldcls	3, cr0, [r3], {32}
 8004538:	9314      	str	r3, [sp, #80]	; 0x50
 800453a:	4264      	negs	r4, r4
 800453c:	9413      	str	r4, [sp, #76]	; 0x4c
 800453e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004540:	f045 0504 	orr.w	r5, r5, #4
 8004544:	950a      	str	r5, [sp, #40]	; 0x28
 8004546:	f899 3000 	ldrb.w	r3, [r9]
 800454a:	e792      	b.n	8004472 <_svfprintf_r+0xd2>
 800454c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800454e:	aa2b      	add	r2, sp, #172	; 0xac
 8004550:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004552:	f003 fbc9 	bl	8007ce8 <__ssprint_r>
 8004556:	b940      	cbnz	r0, 800456a <_svfprintf_r+0x1ca>
 8004558:	af38      	add	r7, sp, #224	; 0xe0
 800455a:	e777      	b.n	800444c <_svfprintf_r+0xac>
 800455c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800455e:	b123      	cbz	r3, 800456a <_svfprintf_r+0x1ca>
 8004560:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004562:	aa2b      	add	r2, sp, #172	; 0xac
 8004564:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004566:	f003 fbbf 	bl	8007ce8 <__ssprint_r>
 800456a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800456c:	9812      	ldr	r0, [sp, #72]	; 0x48
 800456e:	89a3      	ldrh	r3, [r4, #12]
 8004570:	f013 0f40 	tst.w	r3, #64	; 0x40
 8004574:	bf18      	it	ne
 8004576:	f04f 30ff 	movne.w	r0, #4294967295
 800457a:	b049      	add	sp, #292	; 0x124
 800457c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004580:	464c      	mov	r4, r9
 8004582:	e766      	b.n	8004452 <_svfprintf_r+0xb2>
 8004584:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004586:	9316      	str	r3, [sp, #88]	; 0x58
 8004588:	06a3      	lsls	r3, r4, #26
 800458a:	f140 81d9 	bpl.w	8004940 <_svfprintf_r+0x5a0>
 800458e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8004590:	2301      	movs	r3, #1
 8004592:	1dea      	adds	r2, r5, #7
 8004594:	f022 0207 	bic.w	r2, r2, #7
 8004598:	f102 0408 	add.w	r4, r2, #8
 800459c:	9414      	str	r4, [sp, #80]	; 0x50
 800459e:	e9d2 4500 	ldrd	r4, r5, [r2]
 80045a2:	f04f 0a00 	mov.w	sl, #0
 80045a6:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
 80045aa:	980c      	ldr	r0, [sp, #48]	; 0x30
 80045ac:	2800      	cmp	r0, #0
 80045ae:	980c      	ldr	r0, [sp, #48]	; 0x30
 80045b0:	bfa2      	ittt	ge
 80045b2:	990a      	ldrge	r1, [sp, #40]	; 0x28
 80045b4:	f021 0180 	bicge.w	r1, r1, #128	; 0x80
 80045b8:	910a      	strge	r1, [sp, #40]	; 0x28
 80045ba:	ea54 0205 	orrs.w	r2, r4, r5
 80045be:	bf0c      	ite	eq
 80045c0:	2200      	moveq	r2, #0
 80045c2:	2201      	movne	r2, #1
 80045c4:	2800      	cmp	r0, #0
 80045c6:	bf18      	it	ne
 80045c8:	f042 0201 	orrne.w	r2, r2, #1
 80045cc:	2a00      	cmp	r2, #0
 80045ce:	f000 83e5 	beq.w	8004d9c <_svfprintf_r+0x9fc>
 80045d2:	2b01      	cmp	r3, #1
 80045d4:	f000 8509 	beq.w	8004fea <_svfprintf_r+0xc4a>
 80045d8:	2b02      	cmp	r3, #2
 80045da:	f10d 02df 	add.w	r2, sp, #223	; 0xdf
 80045de:	f040 8159 	bne.w	8004894 <_svfprintf_r+0x4f4>
 80045e2:	f8dd c064 	ldr.w	ip, [sp, #100]	; 0x64
 80045e6:	f004 010f 	and.w	r1, r4, #15
 80045ea:	0923      	lsrs	r3, r4, #4
 80045ec:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
 80045f0:	0928      	lsrs	r0, r5, #4
 80045f2:	f81c 1001 	ldrb.w	r1, [ip, r1]
 80045f6:	461c      	mov	r4, r3
 80045f8:	4605      	mov	r5, r0
 80045fa:	4690      	mov	r8, r2
 80045fc:	ea54 0005 	orrs.w	r0, r4, r5
 8004600:	f102 32ff 	add.w	r2, r2, #4294967295
 8004604:	f888 1000 	strb.w	r1, [r8]
 8004608:	d1ed      	bne.n	80045e6 <_svfprintf_r+0x246>
 800460a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800460c:	ebc8 0303 	rsb	r3, r8, r3
 8004610:	9310      	str	r3, [sp, #64]	; 0x40
 8004612:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8004614:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8004616:	42a5      	cmp	r5, r4
 8004618:	bfb8      	it	lt
 800461a:	4625      	movlt	r5, r4
 800461c:	2400      	movs	r4, #0
 800461e:	950d      	str	r5, [sp, #52]	; 0x34
 8004620:	9418      	str	r4, [sp, #96]	; 0x60
 8004622:	f1ba 0f00 	cmp.w	sl, #0
 8004626:	d002      	beq.n	800462e <_svfprintf_r+0x28e>
 8004628:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800462a:	3501      	adds	r5, #1
 800462c:	950d      	str	r5, [sp, #52]	; 0x34
 800462e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004630:	f013 0302 	ands.w	r3, r3, #2
 8004634:	930f      	str	r3, [sp, #60]	; 0x3c
 8004636:	bf1e      	ittt	ne
 8004638:	9c0d      	ldrne	r4, [sp, #52]	; 0x34
 800463a:	3402      	addne	r4, #2
 800463c:	940d      	strne	r4, [sp, #52]	; 0x34
 800463e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004640:	f014 0584 	ands.w	r5, r4, #132	; 0x84
 8004644:	f040 8346 	bne.w	8004cd4 <_svfprintf_r+0x934>
 8004648:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800464a:	980d      	ldr	r0, [sp, #52]	; 0x34
 800464c:	ebc0 0b04 	rsb	fp, r0, r4
 8004650:	f1bb 0f00 	cmp.w	fp, #0
 8004654:	f340 833e 	ble.w	8004cd4 <_svfprintf_r+0x934>
 8004658:	f1bb 0f10 	cmp.w	fp, #16
 800465c:	f24a 4a74 	movw	sl, #42100	; 0xa474
 8004660:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8004662:	bfdc      	itt	le
 8004664:	f6c0 0a00 	movtle	sl, #2048	; 0x800
 8004668:	9a2c      	ldrle	r2, [sp, #176]	; 0xb0
 800466a:	dd32      	ble.n	80046d2 <_svfprintf_r+0x332>
 800466c:	f6c0 0a00 	movt	sl, #2048	; 0x800
 8004670:	f8cd 807c 	str.w	r8, [sp, #124]	; 0x7c
 8004674:	9520      	str	r5, [sp, #128]	; 0x80
 8004676:	46d8      	mov	r8, fp
 8004678:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 800467a:	46d3      	mov	fp, sl
 800467c:	2410      	movs	r4, #16
 800467e:	46ca      	mov	sl, r9
 8004680:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8004682:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 8004686:	e004      	b.n	8004692 <_svfprintf_r+0x2f2>
 8004688:	f1a8 0810 	sub.w	r8, r8, #16
 800468c:	f1b8 0f10 	cmp.w	r8, #16
 8004690:	dd19      	ble.n	80046c6 <_svfprintf_r+0x326>
 8004692:	3201      	adds	r2, #1
 8004694:	3110      	adds	r1, #16
 8004696:	2a07      	cmp	r2, #7
 8004698:	603d      	str	r5, [r7, #0]
 800469a:	607c      	str	r4, [r7, #4]
 800469c:	f107 0708 	add.w	r7, r7, #8
 80046a0:	922c      	str	r2, [sp, #176]	; 0xb0
 80046a2:	912d      	str	r1, [sp, #180]	; 0xb4
 80046a4:	ddf0      	ble.n	8004688 <_svfprintf_r+0x2e8>
 80046a6:	980e      	ldr	r0, [sp, #56]	; 0x38
 80046a8:	4649      	mov	r1, r9
 80046aa:	aa2b      	add	r2, sp, #172	; 0xac
 80046ac:	af38      	add	r7, sp, #224	; 0xe0
 80046ae:	f003 fb1b 	bl	8007ce8 <__ssprint_r>
 80046b2:	2800      	cmp	r0, #0
 80046b4:	f47f af59 	bne.w	800456a <_svfprintf_r+0x1ca>
 80046b8:	f1a8 0810 	sub.w	r8, r8, #16
 80046bc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80046be:	f1b8 0f10 	cmp.w	r8, #16
 80046c2:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80046c4:	dce5      	bgt.n	8004692 <_svfprintf_r+0x2f2>
 80046c6:	46d1      	mov	r9, sl
 80046c8:	9d20      	ldr	r5, [sp, #128]	; 0x80
 80046ca:	46da      	mov	sl, fp
 80046cc:	46c3      	mov	fp, r8
 80046ce:	f8dd 807c 	ldr.w	r8, [sp, #124]	; 0x7c
 80046d2:	3201      	adds	r2, #1
 80046d4:	eb0b 0401 	add.w	r4, fp, r1
 80046d8:	2a07      	cmp	r2, #7
 80046da:	922c      	str	r2, [sp, #176]	; 0xb0
 80046dc:	942d      	str	r4, [sp, #180]	; 0xb4
 80046de:	e887 0c00 	stmia.w	r7, {sl, fp}
 80046e2:	f300 82ec 	bgt.w	8004cbe <_svfprintf_r+0x91e>
 80046e6:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
 80046ea:	3708      	adds	r7, #8
 80046ec:	f1ba 0f00 	cmp.w	sl, #0
 80046f0:	d00e      	beq.n	8004710 <_svfprintf_r+0x370>
 80046f2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80046f4:	f10d 028f 	add.w	r2, sp, #143	; 0x8f
 80046f8:	3401      	adds	r4, #1
 80046fa:	603a      	str	r2, [r7, #0]
 80046fc:	3301      	adds	r3, #1
 80046fe:	2201      	movs	r2, #1
 8004700:	2b07      	cmp	r3, #7
 8004702:	607a      	str	r2, [r7, #4]
 8004704:	942d      	str	r4, [sp, #180]	; 0xb4
 8004706:	bfd8      	it	le
 8004708:	3708      	addle	r7, #8
 800470a:	932c      	str	r3, [sp, #176]	; 0xb0
 800470c:	f300 8402 	bgt.w	8004f14 <_svfprintf_r+0xb74>
 8004710:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004712:	b16b      	cbz	r3, 8004730 <_svfprintf_r+0x390>
 8004714:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004716:	aa24      	add	r2, sp, #144	; 0x90
 8004718:	3402      	adds	r4, #2
 800471a:	603a      	str	r2, [r7, #0]
 800471c:	3301      	adds	r3, #1
 800471e:	2202      	movs	r2, #2
 8004720:	2b07      	cmp	r3, #7
 8004722:	607a      	str	r2, [r7, #4]
 8004724:	942d      	str	r4, [sp, #180]	; 0xb4
 8004726:	bfd8      	it	le
 8004728:	3708      	addle	r7, #8
 800472a:	932c      	str	r3, [sp, #176]	; 0xb0
 800472c:	f300 83fe 	bgt.w	8004f2c <_svfprintf_r+0xb8c>
 8004730:	2d80      	cmp	r5, #128	; 0x80
 8004732:	f000 8346 	beq.w	8004dc2 <_svfprintf_r+0xa22>
 8004736:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8004738:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800473a:	ebc3 0a05 	rsb	sl, r3, r5
 800473e:	f1ba 0f00 	cmp.w	sl, #0
 8004742:	dd43      	ble.n	80047cc <_svfprintf_r+0x42c>
 8004744:	f1ba 0f10 	cmp.w	sl, #16
 8004748:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 800474a:	bfdc      	itt	le
 800474c:	4d94      	ldrle	r5, [pc, #592]	; (80049a0 <_svfprintf_r+0x600>)
 800474e:	950f      	strle	r5, [sp, #60]	; 0x3c
 8004750:	dd27      	ble.n	80047a2 <_svfprintf_r+0x402>
 8004752:	4893      	ldr	r0, [pc, #588]	; (80049a0 <_svfprintf_r+0x600>)
 8004754:	4622      	mov	r2, r4
 8004756:	2510      	movs	r5, #16
 8004758:	f8dd b038 	ldr.w	fp, [sp, #56]	; 0x38
 800475c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800475e:	900f      	str	r0, [sp, #60]	; 0x3c
 8004760:	e004      	b.n	800476c <_svfprintf_r+0x3cc>
 8004762:	f1aa 0a10 	sub.w	sl, sl, #16
 8004766:	f1ba 0f10 	cmp.w	sl, #16
 800476a:	dd19      	ble.n	80047a0 <_svfprintf_r+0x400>
 800476c:	3301      	adds	r3, #1
 800476e:	3210      	adds	r2, #16
 8004770:	2b07      	cmp	r3, #7
 8004772:	603e      	str	r6, [r7, #0]
 8004774:	607d      	str	r5, [r7, #4]
 8004776:	f107 0708 	add.w	r7, r7, #8
 800477a:	932c      	str	r3, [sp, #176]	; 0xb0
 800477c:	922d      	str	r2, [sp, #180]	; 0xb4
 800477e:	ddf0      	ble.n	8004762 <_svfprintf_r+0x3c2>
 8004780:	4658      	mov	r0, fp
 8004782:	4621      	mov	r1, r4
 8004784:	aa2b      	add	r2, sp, #172	; 0xac
 8004786:	af38      	add	r7, sp, #224	; 0xe0
 8004788:	f003 faae 	bl	8007ce8 <__ssprint_r>
 800478c:	2800      	cmp	r0, #0
 800478e:	f47f aeec 	bne.w	800456a <_svfprintf_r+0x1ca>
 8004792:	f1aa 0a10 	sub.w	sl, sl, #16
 8004796:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8004798:	f1ba 0f10 	cmp.w	sl, #16
 800479c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 800479e:	dce5      	bgt.n	800476c <_svfprintf_r+0x3cc>
 80047a0:	4614      	mov	r4, r2
 80047a2:	3301      	adds	r3, #1
 80047a4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80047a6:	2b07      	cmp	r3, #7
 80047a8:	4454      	add	r4, sl
 80047aa:	932c      	str	r3, [sp, #176]	; 0xb0
 80047ac:	e887 0420 	stmia.w	r7, {r5, sl}
 80047b0:	bfd8      	it	le
 80047b2:	3708      	addle	r7, #8
 80047b4:	942d      	str	r4, [sp, #180]	; 0xb4
 80047b6:	dd09      	ble.n	80047cc <_svfprintf_r+0x42c>
 80047b8:	980e      	ldr	r0, [sp, #56]	; 0x38
 80047ba:	aa2b      	add	r2, sp, #172	; 0xac
 80047bc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80047be:	f003 fa93 	bl	8007ce8 <__ssprint_r>
 80047c2:	2800      	cmp	r0, #0
 80047c4:	f47f aed1 	bne.w	800456a <_svfprintf_r+0x1ca>
 80047c8:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80047ca:	af38      	add	r7, sp, #224	; 0xe0
 80047cc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80047ce:	05eb      	lsls	r3, r5, #23
 80047d0:	f100 8282 	bmi.w	8004cd8 <_svfprintf_r+0x938>
 80047d4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80047d6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80047d8:	3301      	adds	r3, #1
 80047da:	f8c7 8000 	str.w	r8, [r7]
 80047de:	2b07      	cmp	r3, #7
 80047e0:	442c      	add	r4, r5
 80047e2:	607d      	str	r5, [r7, #4]
 80047e4:	942d      	str	r4, [sp, #180]	; 0xb4
 80047e6:	932c      	str	r3, [sp, #176]	; 0xb0
 80047e8:	f300 837a 	bgt.w	8004ee0 <_svfprintf_r+0xb40>
 80047ec:	3708      	adds	r7, #8
 80047ee:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80047f0:	076b      	lsls	r3, r5, #29
 80047f2:	d540      	bpl.n	8004876 <_svfprintf_r+0x4d6>
 80047f4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80047f6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80047f8:	1a45      	subs	r5, r0, r1
 80047fa:	2d00      	cmp	r5, #0
 80047fc:	dd3b      	ble.n	8004876 <_svfprintf_r+0x4d6>
 80047fe:	2d10      	cmp	r5, #16
 8004800:	f24a 4a74 	movw	sl, #42100	; 0xa474
 8004804:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004806:	f6c0 0a00 	movt	sl, #2048	; 0x800
 800480a:	dd22      	ble.n	8004852 <_svfprintf_r+0x4b2>
 800480c:	4622      	mov	r2, r4
 800480e:	f04f 0810 	mov.w	r8, #16
 8004812:	f8dd b038 	ldr.w	fp, [sp, #56]	; 0x38
 8004816:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8004818:	e002      	b.n	8004820 <_svfprintf_r+0x480>
 800481a:	3d10      	subs	r5, #16
 800481c:	2d10      	cmp	r5, #16
 800481e:	dd17      	ble.n	8004850 <_svfprintf_r+0x4b0>
 8004820:	3301      	adds	r3, #1
 8004822:	3210      	adds	r2, #16
 8004824:	2b07      	cmp	r3, #7
 8004826:	e887 0110 	stmia.w	r7, {r4, r8}
 800482a:	932c      	str	r3, [sp, #176]	; 0xb0
 800482c:	f107 0708 	add.w	r7, r7, #8
 8004830:	922d      	str	r2, [sp, #180]	; 0xb4
 8004832:	ddf2      	ble.n	800481a <_svfprintf_r+0x47a>
 8004834:	4658      	mov	r0, fp
 8004836:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004838:	aa2b      	add	r2, sp, #172	; 0xac
 800483a:	af38      	add	r7, sp, #224	; 0xe0
 800483c:	f003 fa54 	bl	8007ce8 <__ssprint_r>
 8004840:	2800      	cmp	r0, #0
 8004842:	f47f ae92 	bne.w	800456a <_svfprintf_r+0x1ca>
 8004846:	3d10      	subs	r5, #16
 8004848:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800484a:	2d10      	cmp	r5, #16
 800484c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 800484e:	dce7      	bgt.n	8004820 <_svfprintf_r+0x480>
 8004850:	4614      	mov	r4, r2
 8004852:	3301      	adds	r3, #1
 8004854:	442c      	add	r4, r5
 8004856:	2b07      	cmp	r3, #7
 8004858:	932c      	str	r3, [sp, #176]	; 0xb0
 800485a:	942d      	str	r4, [sp, #180]	; 0xb4
 800485c:	f8c7 a000 	str.w	sl, [r7]
 8004860:	607d      	str	r5, [r7, #4]
 8004862:	dd08      	ble.n	8004876 <_svfprintf_r+0x4d6>
 8004864:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004866:	aa2b      	add	r2, sp, #172	; 0xac
 8004868:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800486a:	f003 fa3d 	bl	8007ce8 <__ssprint_r>
 800486e:	2800      	cmp	r0, #0
 8004870:	f47f ae7b 	bne.w	800456a <_svfprintf_r+0x1ca>
 8004874:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8004876:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8004878:	990d      	ldr	r1, [sp, #52]	; 0x34
 800487a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800487c:	4281      	cmp	r1, r0
 800487e:	bfac      	ite	ge
 8004880:	186d      	addge	r5, r5, r1
 8004882:	182d      	addlt	r5, r5, r0
 8004884:	9512      	str	r5, [sp, #72]	; 0x48
 8004886:	2c00      	cmp	r4, #0
 8004888:	f040 8335 	bne.w	8004ef6 <_svfprintf_r+0xb56>
 800488c:	2300      	movs	r3, #0
 800488e:	af38      	add	r7, sp, #224	; 0xe0
 8004890:	932c      	str	r3, [sp, #176]	; 0xb0
 8004892:	e5bb      	b.n	800440c <_svfprintf_r+0x6c>
 8004894:	08e3      	lsrs	r3, r4, #3
 8004896:	08e9      	lsrs	r1, r5, #3
 8004898:	ea43 7345 	orr.w	r3, r3, r5, lsl #29
 800489c:	4690      	mov	r8, r2
 800489e:	460d      	mov	r5, r1
 80048a0:	f004 0207 	and.w	r2, r4, #7
 80048a4:	461c      	mov	r4, r3
 80048a6:	f102 0330 	add.w	r3, r2, #48	; 0x30
 80048aa:	ea54 0105 	orrs.w	r1, r4, r5
 80048ae:	f108 32ff 	add.w	r2, r8, #4294967295
 80048b2:	f888 3000 	strb.w	r3, [r8]
 80048b6:	d1ed      	bne.n	8004894 <_svfprintf_r+0x4f4>
 80048b8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80048ba:	4641      	mov	r1, r8
 80048bc:	07e0      	lsls	r0, r4, #31
 80048be:	f100 84f5 	bmi.w	80052ac <_svfprintf_r+0xf0c>
 80048c2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80048c4:	ebc8 0505 	rsb	r5, r8, r5
 80048c8:	9510      	str	r5, [sp, #64]	; 0x40
 80048ca:	e6a2      	b.n	8004612 <_svfprintf_r+0x272>
 80048cc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80048ce:	9316      	str	r3, [sp, #88]	; 0x58
 80048d0:	f015 0320 	ands.w	r3, r5, #32
 80048d4:	f000 80b4 	beq.w	8004a40 <_svfprintf_r+0x6a0>
 80048d8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80048da:	2300      	movs	r3, #0
 80048dc:	1de2      	adds	r2, r4, #7
 80048de:	f022 0207 	bic.w	r2, r2, #7
 80048e2:	f102 0508 	add.w	r5, r2, #8
 80048e6:	9514      	str	r5, [sp, #80]	; 0x50
 80048e8:	e9d2 4500 	ldrd	r4, r5, [r2]
 80048ec:	e659      	b.n	80045a2 <_svfprintf_r+0x202>
 80048ee:	f899 3000 	ldrb.w	r3, [r9]
 80048f2:	f109 0401 	add.w	r4, r9, #1
 80048f6:	2b2a      	cmp	r3, #42	; 0x2a
 80048f8:	f000 8791 	beq.w	800581e <_svfprintf_r+0x147e>
 80048fc:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8004900:	2909      	cmp	r1, #9
 8004902:	bf82      	ittt	hi
 8004904:	46a1      	movhi	r9, r4
 8004906:	2400      	movhi	r4, #0
 8004908:	940c      	strhi	r4, [sp, #48]	; 0x30
 800490a:	f63f adb4 	bhi.w	8004476 <_svfprintf_r+0xd6>
 800490e:	2000      	movs	r0, #0
 8004910:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8004914:	f814 3b01 	ldrb.w	r3, [r4], #1
 8004918:	eb01 0040 	add.w	r0, r1, r0, lsl #1
 800491c:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8004920:	2909      	cmp	r1, #9
 8004922:	d9f5      	bls.n	8004910 <_svfprintf_r+0x570>
 8004924:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
 8004928:	46a1      	mov	r9, r4
 800492a:	900c      	str	r0, [sp, #48]	; 0x30
 800492c:	e5a3      	b.n	8004476 <_svfprintf_r+0xd6>
 800492e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004930:	9316      	str	r3, [sp, #88]	; 0x58
 8004932:	f045 0510 	orr.w	r5, r5, #16
 8004936:	950a      	str	r5, [sp, #40]	; 0x28
 8004938:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800493a:	06a3      	lsls	r3, r4, #26
 800493c:	f53f ae27 	bmi.w	800458e <_svfprintf_r+0x1ee>
 8004940:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004942:	06ed      	lsls	r5, r5, #27
 8004944:	f100 83c4 	bmi.w	80050d0 <_svfprintf_r+0xd30>
 8004948:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800494a:	0664      	lsls	r4, r4, #25
 800494c:	f140 83c0 	bpl.w	80050d0 <_svfprintf_r+0xd30>
 8004950:	9814      	ldr	r0, [sp, #80]	; 0x50
 8004952:	2500      	movs	r5, #0
 8004954:	2301      	movs	r3, #1
 8004956:	3004      	adds	r0, #4
 8004958:	f830 4c04 	ldrh.w	r4, [r0, #-4]
 800495c:	9014      	str	r0, [sp, #80]	; 0x50
 800495e:	e620      	b.n	80045a2 <_svfprintf_r+0x202>
 8004960:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004962:	9316      	str	r3, [sp, #88]	; 0x58
 8004964:	f044 0410 	orr.w	r4, r4, #16
 8004968:	940a      	str	r4, [sp, #40]	; 0x28
 800496a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800496c:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
 8004970:	06a9      	lsls	r1, r5, #26
 8004972:	f140 8165 	bpl.w	8004c40 <_svfprintf_r+0x8a0>
 8004976:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8004978:	1de3      	adds	r3, r4, #7
 800497a:	f023 0307 	bic.w	r3, r3, #7
 800497e:	f103 0508 	add.w	r5, r3, #8
 8004982:	9514      	str	r5, [sp, #80]	; 0x50
 8004984:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004988:	4614      	mov	r4, r2
 800498a:	461d      	mov	r5, r3
 800498c:	2a00      	cmp	r2, #0
 800498e:	f173 0000 	sbcs.w	r0, r3, #0
 8004992:	f2c0 83bb 	blt.w	800510c <_svfprintf_r+0xd6c>
 8004996:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
 800499a:	2301      	movs	r3, #1
 800499c:	e605      	b.n	80045aa <_svfprintf_r+0x20a>
 800499e:	bf00      	nop
 80049a0:	0800a484 	stmdaeq	r0, {r2, r7, sl, sp, pc}
 80049a4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80049a6:	9316      	str	r3, [sp, #88]	; 0x58
 80049a8:	0725      	lsls	r5, r4, #28
 80049aa:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
 80049ae:	f140 84ab 	bpl.w	8005308 <_svfprintf_r+0xf68>
 80049b2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80049b4:	1deb      	adds	r3, r5, #7
 80049b6:	f023 0307 	bic.w	r3, r3, #7
 80049ba:	f103 0408 	add.w	r4, r3, #8
 80049be:	9414      	str	r4, [sp, #80]	; 0x50
 80049c0:	681d      	ldr	r5, [r3, #0]
 80049c2:	951b      	str	r5, [sp, #108]	; 0x6c
 80049c4:	685b      	ldr	r3, [r3, #4]
 80049c6:	931c      	str	r3, [sp, #112]	; 0x70
 80049c8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80049ca:	991c      	ldr	r1, [sp, #112]	; 0x70
 80049cc:	f003 f802 	bl	80079d4 <__fpclassifyd>
 80049d0:	2801      	cmp	r0, #1
 80049d2:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80049d4:	f040 8478 	bne.w	80052c8 <_svfprintf_r+0xf28>
 80049d8:	2200      	movs	r2, #0
 80049da:	2300      	movs	r3, #0
 80049dc:	991c      	ldr	r1, [sp, #112]	; 0x70
 80049de:	f005 f953 	bl	8009c88 <__aeabi_dcmplt>
 80049e2:	2800      	cmp	r0, #0
 80049e4:	f040 864a 	bne.w	800567c <_svfprintf_r+0x12dc>
 80049e8:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
 80049ec:	2503      	movs	r5, #3
 80049ee:	2400      	movs	r4, #0
 80049f0:	f64a 1804 	movw	r8, #43268	; 0xa904
 80049f4:	f64a 1300 	movw	r3, #43264	; 0xa900
 80049f8:	950d      	str	r5, [sp, #52]	; 0x34
 80049fa:	f6c0 0800 	movt	r8, #2048	; 0x800
 80049fe:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004a00:	f6c0 0300 	movt	r3, #2048	; 0x800
 8004a04:	940c      	str	r4, [sp, #48]	; 0x30
 8004a06:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8004a08:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 8004a0c:	950a      	str	r5, [sp, #40]	; 0x28
 8004a0e:	2503      	movs	r5, #3
 8004a10:	2c47      	cmp	r4, #71	; 0x47
 8004a12:	bfd8      	it	le
 8004a14:	4698      	movle	r8, r3
 8004a16:	9510      	str	r5, [sp, #64]	; 0x40
 8004a18:	2400      	movs	r4, #0
 8004a1a:	9418      	str	r4, [sp, #96]	; 0x60
 8004a1c:	e601      	b.n	8004622 <_svfprintf_r+0x282>
 8004a1e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004a20:	f045 0508 	orr.w	r5, r5, #8
 8004a24:	950a      	str	r5, [sp, #40]	; 0x28
 8004a26:	f899 3000 	ldrb.w	r3, [r9]
 8004a2a:	e522      	b.n	8004472 <_svfprintf_r+0xd2>
 8004a2c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004a2e:	9316      	str	r3, [sp, #88]	; 0x58
 8004a30:	f044 0410 	orr.w	r4, r4, #16
 8004a34:	940a      	str	r4, [sp, #40]	; 0x28
 8004a36:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004a38:	f015 0320 	ands.w	r3, r5, #32
 8004a3c:	f47f af4c 	bne.w	80048d8 <_svfprintf_r+0x538>
 8004a40:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004a42:	f014 0210 	ands.w	r2, r4, #16
 8004a46:	f040 834c 	bne.w	80050e2 <_svfprintf_r+0xd42>
 8004a4a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004a4c:	f014 0340 	ands.w	r3, r4, #64	; 0x40
 8004a50:	f000 8347 	beq.w	80050e2 <_svfprintf_r+0xd42>
 8004a54:	9814      	ldr	r0, [sp, #80]	; 0x50
 8004a56:	4613      	mov	r3, r2
 8004a58:	2500      	movs	r5, #0
 8004a5a:	3004      	adds	r0, #4
 8004a5c:	f830 4c04 	ldrh.w	r4, [r0, #-4]
 8004a60:	9014      	str	r0, [sp, #80]	; 0x50
 8004a62:	e59e      	b.n	80045a2 <_svfprintf_r+0x202>
 8004a64:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004a66:	f045 0520 	orr.w	r5, r5, #32
 8004a6a:	950a      	str	r5, [sp, #40]	; 0x28
 8004a6c:	f899 3000 	ldrb.w	r3, [r9]
 8004a70:	e4ff      	b.n	8004472 <_svfprintf_r+0xd2>
 8004a72:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8004a74:	2500      	movs	r5, #0
 8004a76:	9316      	str	r3, [sp, #88]	; 0x58
 8004a78:	3404      	adds	r4, #4
 8004a7a:	f88d 508f 	strb.w	r5, [sp, #143]	; 0x8f
 8004a7e:	f854 8c04 	ldr.w	r8, [r4, #-4]
 8004a82:	f1b8 0f00 	cmp.w	r8, #0
 8004a86:	f000 85d9 	beq.w	800563c <_svfprintf_r+0x129c>
 8004a8a:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004a8c:	2800      	cmp	r0, #0
 8004a8e:	4640      	mov	r0, r8
 8004a90:	f2c0 85ab 	blt.w	80055ea <_svfprintf_r+0x124a>
 8004a94:	4629      	mov	r1, r5
 8004a96:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004a98:	f002 fa60 	bl	8006f5c <memchr>
 8004a9c:	2800      	cmp	r0, #0
 8004a9e:	f000 85ff 	beq.w	80056a0 <_svfprintf_r+0x1300>
 8004aa2:	9414      	str	r4, [sp, #80]	; 0x50
 8004aa4:	ebc8 0000 	rsb	r0, r8, r0
 8004aa8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8004aaa:	950c      	str	r5, [sp, #48]	; 0x30
 8004aac:	42a0      	cmp	r0, r4
 8004aae:	bfb8      	it	lt
 8004ab0:	4604      	movlt	r4, r0
 8004ab2:	9410      	str	r4, [sp, #64]	; 0x40
 8004ab4:	ea24 75e4 	bic.w	r5, r4, r4, asr #31
 8004ab8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8004aba:	950d      	str	r5, [sp, #52]	; 0x34
 8004abc:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
 8004ac0:	9418      	str	r4, [sp, #96]	; 0x60
 8004ac2:	e5ae      	b.n	8004622 <_svfprintf_r+0x282>
 8004ac4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004ac6:	f64a 1424 	movw	r4, #43300	; 0xa924
 8004aca:	f6c0 0400 	movt	r4, #2048	; 0x800
 8004ace:	9316      	str	r3, [sp, #88]	; 0x58
 8004ad0:	06a8      	lsls	r0, r5, #26
 8004ad2:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
 8004ad6:	9419      	str	r4, [sp, #100]	; 0x64
 8004ad8:	f140 809c 	bpl.w	8004c14 <_svfprintf_r+0x874>
 8004adc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8004ade:	1de3      	adds	r3, r4, #7
 8004ae0:	f023 0307 	bic.w	r3, r3, #7
 8004ae4:	f103 0508 	add.w	r5, r3, #8
 8004ae8:	9514      	str	r5, [sp, #80]	; 0x50
 8004aea:	e9d3 4500 	ldrd	r4, r5, [r3]
 8004aee:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004af0:	07c3      	lsls	r3, r0, #31
 8004af2:	f140 8227 	bpl.w	8004f44 <_svfprintf_r+0xba4>
 8004af6:	ea54 0105 	orrs.w	r1, r4, r5
 8004afa:	f000 8223 	beq.w	8004f44 <_svfprintf_r+0xba4>
 8004afe:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8004b00:	2330      	movs	r3, #48	; 0x30
 8004b02:	f040 0002 	orr.w	r0, r0, #2
 8004b06:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
 8004b0a:	900a      	str	r0, [sp, #40]	; 0x28
 8004b0c:	2302      	movs	r3, #2
 8004b0e:	f88d 2091 	strb.w	r2, [sp, #145]	; 0x91
 8004b12:	e546      	b.n	80045a2 <_svfprintf_r+0x202>
 8004b14:	f899 3000 	ldrb.w	r3, [r9]
 8004b18:	222b      	movs	r2, #43	; 0x2b
 8004b1a:	e4aa      	b.n	8004472 <_svfprintf_r+0xd2>
 8004b1c:	f899 3000 	ldrb.w	r3, [r9]
 8004b20:	4649      	mov	r1, r9
 8004b22:	2b6c      	cmp	r3, #108	; 0x6c
 8004b24:	bf05      	ittet	eq
 8004b26:	f109 0901 	addeq.w	r9, r9, #1
 8004b2a:	9d0a      	ldreq	r5, [sp, #40]	; 0x28
 8004b2c:	9c0a      	ldrne	r4, [sp, #40]	; 0x28
 8004b2e:	f045 0520 	orreq.w	r5, r5, #32
 8004b32:	bf0b      	itete	eq
 8004b34:	784b      	ldrbeq	r3, [r1, #1]
 8004b36:	f044 0410 	orrne.w	r4, r4, #16
 8004b3a:	950a      	streq	r5, [sp, #40]	; 0x28
 8004b3c:	940a      	strne	r4, [sp, #40]	; 0x28
 8004b3e:	e498      	b.n	8004472 <_svfprintf_r+0xd2>
 8004b40:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004b42:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
 8004b46:	06a9      	lsls	r1, r5, #26
 8004b48:	f140 83eb 	bpl.w	8005322 <_svfprintf_r+0xf82>
 8004b4c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8004b4e:	6821      	ldr	r1, [r4, #0]
 8004b50:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8004b52:	4622      	mov	r2, r4
 8004b54:	17e5      	asrs	r5, r4, #31
 8004b56:	462b      	mov	r3, r5
 8004b58:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8004b5a:	e9c1 2300 	strd	r2, r3, [r1]
 8004b5e:	3504      	adds	r5, #4
 8004b60:	9514      	str	r5, [sp, #80]	; 0x50
 8004b62:	e453      	b.n	800440c <_svfprintf_r+0x6c>
 8004b64:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8004b66:	f64a 1024 	movw	r0, #43300	; 0xa924
 8004b6a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004b6c:	2378      	movs	r3, #120	; 0x78
 8004b6e:	f6c0 0000 	movt	r0, #2048	; 0x800
 8004b72:	f88d 3091 	strb.w	r3, [sp, #145]	; 0x91
 8004b76:	f045 0502 	orr.w	r5, r5, #2
 8004b7a:	9316      	str	r3, [sp, #88]	; 0x58
 8004b7c:	950a      	str	r5, [sp, #40]	; 0x28
 8004b7e:	2330      	movs	r3, #48	; 0x30
 8004b80:	1d15      	adds	r5, r2, #4
 8004b82:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
 8004b86:	9514      	str	r5, [sp, #80]	; 0x50
 8004b88:	2302      	movs	r3, #2
 8004b8a:	6814      	ldr	r4, [r2, #0]
 8004b8c:	2500      	movs	r5, #0
 8004b8e:	9019      	str	r0, [sp, #100]	; 0x64
 8004b90:	e507      	b.n	80045a2 <_svfprintf_r+0x202>
 8004b92:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004b94:	f044 0440 	orr.w	r4, r4, #64	; 0x40
 8004b98:	940a      	str	r4, [sp, #40]	; 0x28
 8004b9a:	f899 3000 	ldrb.w	r3, [r9]
 8004b9e:	e468      	b.n	8004472 <_svfprintf_r+0xd2>
 8004ba0:	f899 3000 	ldrb.w	r3, [r9]
 8004ba4:	2a00      	cmp	r2, #0
 8004ba6:	f47f ac64 	bne.w	8004472 <_svfprintf_r+0xd2>
 8004baa:	2220      	movs	r2, #32
 8004bac:	e461      	b.n	8004472 <_svfprintf_r+0xd2>
 8004bae:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004bb0:	f045 0501 	orr.w	r5, r5, #1
 8004bb4:	950a      	str	r5, [sp, #40]	; 0x28
 8004bb6:	f899 3000 	ldrb.w	r3, [r9]
 8004bba:	e45a      	b.n	8004472 <_svfprintf_r+0xd2>
 8004bbc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8004bbe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8004bc0:	6824      	ldr	r4, [r4, #0]
 8004bc2:	1d2b      	adds	r3, r5, #4
 8004bc4:	2c00      	cmp	r4, #0
 8004bc6:	9413      	str	r4, [sp, #76]	; 0x4c
 8004bc8:	f6ff acb5 	blt.w	8004536 <_svfprintf_r+0x196>
 8004bcc:	9314      	str	r3, [sp, #80]	; 0x50
 8004bce:	f899 3000 	ldrb.w	r3, [r9]
 8004bd2:	e44e      	b.n	8004472 <_svfprintf_r+0xd2>
 8004bd4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8004bd6:	2401      	movs	r4, #1
 8004bd8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8004bda:	f10d 08b8 	add.w	r8, sp, #184	; 0xb8
 8004bde:	9316      	str	r3, [sp, #88]	; 0x58
 8004be0:	2300      	movs	r3, #0
 8004be2:	6812      	ldr	r2, [r2, #0]
 8004be4:	3504      	adds	r5, #4
 8004be6:	469a      	mov	sl, r3
 8004be8:	940d      	str	r4, [sp, #52]	; 0x34
 8004bea:	9514      	str	r5, [sp, #80]	; 0x50
 8004bec:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
 8004bf0:	930c      	str	r3, [sp, #48]	; 0x30
 8004bf2:	9318      	str	r3, [sp, #96]	; 0x60
 8004bf4:	9410      	str	r4, [sp, #64]	; 0x40
 8004bf6:	f88d 20b8 	strb.w	r2, [sp, #184]	; 0xb8
 8004bfa:	e518      	b.n	800462e <_svfprintf_r+0x28e>
 8004bfc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004bfe:	f64a 1410 	movw	r4, #43280	; 0xa910
 8004c02:	f6c0 0400 	movt	r4, #2048	; 0x800
 8004c06:	9316      	str	r3, [sp, #88]	; 0x58
 8004c08:	06a8      	lsls	r0, r5, #26
 8004c0a:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
 8004c0e:	9419      	str	r4, [sp, #100]	; 0x64
 8004c10:	f53f af64 	bmi.w	8004adc <_svfprintf_r+0x73c>
 8004c14:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004c16:	06e1      	lsls	r1, r4, #27
 8004c18:	f100 8253 	bmi.w	80050c2 <_svfprintf_r+0xd22>
 8004c1c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004c1e:	0662      	lsls	r2, r4, #25
 8004c20:	f140 824f 	bpl.w	80050c2 <_svfprintf_r+0xd22>
 8004c24:	9814      	ldr	r0, [sp, #80]	; 0x50
 8004c26:	2500      	movs	r5, #0
 8004c28:	3004      	adds	r0, #4
 8004c2a:	f830 4c04 	ldrh.w	r4, [r0, #-4]
 8004c2e:	9014      	str	r0, [sp, #80]	; 0x50
 8004c30:	e75d      	b.n	8004aee <_svfprintf_r+0x74e>
 8004c32:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004c34:	9316      	str	r3, [sp, #88]	; 0x58
 8004c36:	06a9      	lsls	r1, r5, #26
 8004c38:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
 8004c3c:	f53f ae9b 	bmi.w	8004976 <_svfprintf_r+0x5d6>
 8004c40:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004c42:	06e2      	lsls	r2, r4, #27
 8004c44:	f100 8255 	bmi.w	80050f2 <_svfprintf_r+0xd52>
 8004c48:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004c4a:	0663      	lsls	r3, r4, #25
 8004c4c:	f140 8251 	bpl.w	80050f2 <_svfprintf_r+0xd52>
 8004c50:	9814      	ldr	r0, [sp, #80]	; 0x50
 8004c52:	3004      	adds	r0, #4
 8004c54:	f930 4c04 	ldrsh.w	r4, [r0, #-4]
 8004c58:	9014      	str	r0, [sp, #80]	; 0x50
 8004c5a:	4622      	mov	r2, r4
 8004c5c:	17e5      	asrs	r5, r4, #31
 8004c5e:	462b      	mov	r3, r5
 8004c60:	e694      	b.n	800498c <_svfprintf_r+0x5ec>
 8004c62:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004c64:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 8004c68:	950a      	str	r5, [sp, #40]	; 0x28
 8004c6a:	f899 3000 	ldrb.w	r3, [r9]
 8004c6e:	e400      	b.n	8004472 <_svfprintf_r+0xd2>
 8004c70:	2400      	movs	r4, #0
 8004c72:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8004c76:	4620      	mov	r0, r4
 8004c78:	9413      	str	r4, [sp, #76]	; 0x4c
 8004c7a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8004c7e:	f819 3b01 	ldrb.w	r3, [r9], #1
 8004c82:	eb01 0040 	add.w	r0, r1, r0, lsl #1
 8004c86:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8004c8a:	2909      	cmp	r1, #9
 8004c8c:	d9f5      	bls.n	8004c7a <_svfprintf_r+0x8da>
 8004c8e:	9013      	str	r0, [sp, #76]	; 0x4c
 8004c90:	f7ff bbf1 	b.w	8004476 <_svfprintf_r+0xd6>
 8004c94:	9316      	str	r3, [sp, #88]	; 0x58
 8004c96:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
 8004c9a:	2b00      	cmp	r3, #0
 8004c9c:	f43f ac5e 	beq.w	800455c <_svfprintf_r+0x1bc>
 8004ca0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8004ca2:	2300      	movs	r3, #0
 8004ca4:	2501      	movs	r5, #1
 8004ca6:	469a      	mov	sl, r3
 8004ca8:	950d      	str	r5, [sp, #52]	; 0x34
 8004caa:	f10d 08b8 	add.w	r8, sp, #184	; 0xb8
 8004cae:	f88d 40b8 	strb.w	r4, [sp, #184]	; 0xb8
 8004cb2:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
 8004cb6:	930c      	str	r3, [sp, #48]	; 0x30
 8004cb8:	9318      	str	r3, [sp, #96]	; 0x60
 8004cba:	9510      	str	r5, [sp, #64]	; 0x40
 8004cbc:	e4b7      	b.n	800462e <_svfprintf_r+0x28e>
 8004cbe:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004cc0:	aa2b      	add	r2, sp, #172	; 0xac
 8004cc2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004cc4:	f003 f810 	bl	8007ce8 <__ssprint_r>
 8004cc8:	2800      	cmp	r0, #0
 8004cca:	f47f ac4e 	bne.w	800456a <_svfprintf_r+0x1ca>
 8004cce:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
 8004cd2:	af38      	add	r7, sp, #224	; 0xe0
 8004cd4:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8004cd6:	e509      	b.n	80046ec <_svfprintf_r+0x34c>
 8004cd8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8004cda:	2d65      	cmp	r5, #101	; 0x65
 8004cdc:	f340 80b9 	ble.w	8004e52 <_svfprintf_r+0xab2>
 8004ce0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004ce2:	2200      	movs	r2, #0
 8004ce4:	2300      	movs	r3, #0
 8004ce6:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004ce8:	f004 ffc4 	bl	8009c74 <__aeabi_dcmpeq>
 8004cec:	2800      	cmp	r0, #0
 8004cee:	f000 812c 	beq.w	8004f4a <_svfprintf_r+0xbaa>
 8004cf2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004cf4:	2201      	movs	r2, #1
 8004cf6:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8004cf8:	3401      	adds	r4, #1
 8004cfa:	4413      	add	r3, r2
 8004cfc:	607a      	str	r2, [r7, #4]
 8004cfe:	2b07      	cmp	r3, #7
 8004d00:	942d      	str	r4, [sp, #180]	; 0xb4
 8004d02:	603d      	str	r5, [r7, #0]
 8004d04:	bfd8      	it	le
 8004d06:	3708      	addle	r7, #8
 8004d08:	932c      	str	r3, [sp, #176]	; 0xb0
 8004d0a:	f300 8316 	bgt.w	800533a <_svfprintf_r+0xf9a>
 8004d0e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8004d10:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8004d12:	42ab      	cmp	r3, r5
 8004d14:	db03      	blt.n	8004d1e <_svfprintf_r+0x97e>
 8004d16:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004d18:	07ed      	lsls	r5, r5, #31
 8004d1a:	f57f ad68 	bpl.w	80047ee <_svfprintf_r+0x44e>
 8004d1e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8004d20:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004d22:	442c      	add	r4, r5
 8004d24:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8004d26:	3301      	adds	r3, #1
 8004d28:	942d      	str	r4, [sp, #180]	; 0xb4
 8004d2a:	2b07      	cmp	r3, #7
 8004d2c:	932c      	str	r3, [sp, #176]	; 0xb0
 8004d2e:	603d      	str	r5, [r7, #0]
 8004d30:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8004d32:	607d      	str	r5, [r7, #4]
 8004d34:	bfd8      	it	le
 8004d36:	3708      	addle	r7, #8
 8004d38:	f300 835e 	bgt.w	80053f8 <_svfprintf_r+0x1058>
 8004d3c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8004d3e:	f105 38ff 	add.w	r8, r5, #4294967295
 8004d42:	f1b8 0f00 	cmp.w	r8, #0
 8004d46:	f77f ad52 	ble.w	80047ee <_svfprintf_r+0x44e>
 8004d4a:	f1b8 0f10 	cmp.w	r8, #16
 8004d4e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004d50:	f340 81aa 	ble.w	80050a8 <_svfprintf_r+0xd08>
 8004d54:	4dac      	ldr	r5, [pc, #688]	; (8005008 <_svfprintf_r+0xc68>)
 8004d56:	f04f 0a10 	mov.w	sl, #16
 8004d5a:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
 8004d5e:	950f      	str	r5, [sp, #60]	; 0x3c
 8004d60:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8004d62:	e005      	b.n	8004d70 <_svfprintf_r+0x9d0>
 8004d64:	f1a8 0810 	sub.w	r8, r8, #16
 8004d68:	f1b8 0f10 	cmp.w	r8, #16
 8004d6c:	f340 819e 	ble.w	80050ac <_svfprintf_r+0xd0c>
 8004d70:	3301      	adds	r3, #1
 8004d72:	3410      	adds	r4, #16
 8004d74:	2b07      	cmp	r3, #7
 8004d76:	e887 0440 	stmia.w	r7, {r6, sl}
 8004d7a:	932c      	str	r3, [sp, #176]	; 0xb0
 8004d7c:	f107 0708 	add.w	r7, r7, #8
 8004d80:	942d      	str	r4, [sp, #180]	; 0xb4
 8004d82:	ddef      	ble.n	8004d64 <_svfprintf_r+0x9c4>
 8004d84:	4628      	mov	r0, r5
 8004d86:	4659      	mov	r1, fp
 8004d88:	aa2b      	add	r2, sp, #172	; 0xac
 8004d8a:	af38      	add	r7, sp, #224	; 0xe0
 8004d8c:	f002 ffac 	bl	8007ce8 <__ssprint_r>
 8004d90:	2800      	cmp	r0, #0
 8004d92:	f47f abea 	bne.w	800456a <_svfprintf_r+0x1ca>
 8004d96:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8004d98:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004d9a:	e7e3      	b.n	8004d64 <_svfprintf_r+0x9c4>
 8004d9c:	2b00      	cmp	r3, #0
 8004d9e:	f040 80b4 	bne.w	8004f0a <_svfprintf_r+0xb6a>
 8004da2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004da4:	07e2      	lsls	r2, r4, #31
 8004da6:	bf5c      	itt	pl
 8004da8:	9310      	strpl	r3, [sp, #64]	; 0x40
 8004daa:	f10d 08e0 	addpl.w	r8, sp, #224	; 0xe0
 8004dae:	f57f ac30 	bpl.w	8004612 <_svfprintf_r+0x272>
 8004db2:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8004db4:	2330      	movs	r3, #48	; 0x30
 8004db6:	f10d 08df 	add.w	r8, sp, #223	; 0xdf
 8004dba:	f88d 30df 	strb.w	r3, [sp, #223]	; 0xdf
 8004dbe:	9510      	str	r5, [sp, #64]	; 0x40
 8004dc0:	e427      	b.n	8004612 <_svfprintf_r+0x272>
 8004dc2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8004dc4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004dc6:	1a45      	subs	r5, r0, r1
 8004dc8:	2d00      	cmp	r5, #0
 8004dca:	f77f acb4 	ble.w	8004736 <_svfprintf_r+0x396>
 8004dce:	2d10      	cmp	r5, #16
 8004dd0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004dd2:	bfdc      	itt	le
 8004dd4:	4a8c      	ldrle	r2, [pc, #560]	; (8005008 <_svfprintf_r+0xc68>)
 8004dd6:	920f      	strle	r2, [sp, #60]	; 0x3c
 8004dd8:	dd24      	ble.n	8004e24 <_svfprintf_r+0xa84>
 8004dda:	488b      	ldr	r0, [pc, #556]	; (8005008 <_svfprintf_r+0xc68>)
 8004ddc:	4622      	mov	r2, r4
 8004dde:	f04f 0b10 	mov.w	fp, #16
 8004de2:	f8dd a038 	ldr.w	sl, [sp, #56]	; 0x38
 8004de6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8004de8:	900f      	str	r0, [sp, #60]	; 0x3c
 8004dea:	e002      	b.n	8004df2 <_svfprintf_r+0xa52>
 8004dec:	3d10      	subs	r5, #16
 8004dee:	2d10      	cmp	r5, #16
 8004df0:	dd17      	ble.n	8004e22 <_svfprintf_r+0xa82>
 8004df2:	3301      	adds	r3, #1
 8004df4:	3210      	adds	r2, #16
 8004df6:	2b07      	cmp	r3, #7
 8004df8:	e887 0840 	stmia.w	r7, {r6, fp}
 8004dfc:	932c      	str	r3, [sp, #176]	; 0xb0
 8004dfe:	f107 0708 	add.w	r7, r7, #8
 8004e02:	922d      	str	r2, [sp, #180]	; 0xb4
 8004e04:	ddf2      	ble.n	8004dec <_svfprintf_r+0xa4c>
 8004e06:	4650      	mov	r0, sl
 8004e08:	4621      	mov	r1, r4
 8004e0a:	aa2b      	add	r2, sp, #172	; 0xac
 8004e0c:	af38      	add	r7, sp, #224	; 0xe0
 8004e0e:	f002 ff6b 	bl	8007ce8 <__ssprint_r>
 8004e12:	2800      	cmp	r0, #0
 8004e14:	f47f aba9 	bne.w	800456a <_svfprintf_r+0x1ca>
 8004e18:	3d10      	subs	r5, #16
 8004e1a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8004e1c:	2d10      	cmp	r5, #16
 8004e1e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004e20:	dce7      	bgt.n	8004df2 <_svfprintf_r+0xa52>
 8004e22:	4614      	mov	r4, r2
 8004e24:	3301      	adds	r3, #1
 8004e26:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004e28:	2b07      	cmp	r3, #7
 8004e2a:	442c      	add	r4, r5
 8004e2c:	932c      	str	r3, [sp, #176]	; 0xb0
 8004e2e:	e887 0022 	stmia.w	r7, {r1, r5}
 8004e32:	bfd8      	it	le
 8004e34:	3708      	addle	r7, #8
 8004e36:	942d      	str	r4, [sp, #180]	; 0xb4
 8004e38:	f77f ac7d 	ble.w	8004736 <_svfprintf_r+0x396>
 8004e3c:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004e3e:	aa2b      	add	r2, sp, #172	; 0xac
 8004e40:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004e42:	f002 ff51 	bl	8007ce8 <__ssprint_r>
 8004e46:	2800      	cmp	r0, #0
 8004e48:	f47f ab8f 	bne.w	800456a <_svfprintf_r+0x1ca>
 8004e4c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8004e4e:	af38      	add	r7, sp, #224	; 0xe0
 8004e50:	e471      	b.n	8004736 <_svfprintf_r+0x396>
 8004e52:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8004e54:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004e56:	2d01      	cmp	r5, #1
 8004e58:	f340 81e2 	ble.w	8005220 <_svfprintf_r+0xe80>
 8004e5c:	2101      	movs	r1, #1
 8004e5e:	1c62      	adds	r2, r4, #1
 8004e60:	440b      	add	r3, r1
 8004e62:	f8c7 8000 	str.w	r8, [r7]
 8004e66:	2b07      	cmp	r3, #7
 8004e68:	6079      	str	r1, [r7, #4]
 8004e6a:	922d      	str	r2, [sp, #180]	; 0xb4
 8004e6c:	bfd8      	it	le
 8004e6e:	3708      	addle	r7, #8
 8004e70:	932c      	str	r3, [sp, #176]	; 0xb0
 8004e72:	f300 81f4 	bgt.w	800525e <_svfprintf_r+0xebe>
 8004e76:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8004e78:	1c5c      	adds	r4, r3, #1
 8004e7a:	f8dd a074 	ldr.w	sl, [sp, #116]	; 0x74
 8004e7e:	2c07      	cmp	r4, #7
 8004e80:	942c      	str	r4, [sp, #176]	; 0xb0
 8004e82:	603d      	str	r5, [r7, #0]
 8004e84:	4492      	add	sl, r2
 8004e86:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8004e88:	f8cd a0b4 	str.w	sl, [sp, #180]	; 0xb4
 8004e8c:	607d      	str	r5, [r7, #4]
 8004e8e:	bfd8      	it	le
 8004e90:	3708      	addle	r7, #8
 8004e92:	f300 81d7 	bgt.w	8005244 <_svfprintf_r+0xea4>
 8004e96:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004e98:	2200      	movs	r2, #0
 8004e9a:	2300      	movs	r3, #0
 8004e9c:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004e9e:	f004 fee9 	bl	8009c74 <__aeabi_dcmpeq>
 8004ea2:	2800      	cmp	r0, #0
 8004ea4:	f040 80b2 	bne.w	800500c <_svfprintf_r+0xc6c>
 8004ea8:	3401      	adds	r4, #1
 8004eaa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8004eac:	2c07      	cmp	r4, #7
 8004eae:	f108 0201 	add.w	r2, r8, #1
 8004eb2:	f105 33ff 	add.w	r3, r5, #4294967295
 8004eb6:	942c      	str	r4, [sp, #176]	; 0xb0
 8004eb8:	449a      	add	sl, r3
 8004eba:	603a      	str	r2, [r7, #0]
 8004ebc:	f8cd a0b4 	str.w	sl, [sp, #180]	; 0xb4
 8004ec0:	607b      	str	r3, [r7, #4]
 8004ec2:	f300 80e4 	bgt.w	800508e <_svfprintf_r+0xcee>
 8004ec6:	3708      	adds	r7, #8
 8004ec8:	1c63      	adds	r3, r4, #1
 8004eca:	9d1e      	ldr	r5, [sp, #120]	; 0x78
 8004ecc:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8004ece:	2b07      	cmp	r3, #7
 8004ed0:	aa27      	add	r2, sp, #156	; 0x9c
 8004ed2:	932c      	str	r3, [sp, #176]	; 0xb0
 8004ed4:	4454      	add	r4, sl
 8004ed6:	e887 0024 	stmia.w	r7, {r2, r5}
 8004eda:	942d      	str	r4, [sp, #180]	; 0xb4
 8004edc:	f77f ac86 	ble.w	80047ec <_svfprintf_r+0x44c>
 8004ee0:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004ee2:	aa2b      	add	r2, sp, #172	; 0xac
 8004ee4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004ee6:	f002 feff 	bl	8007ce8 <__ssprint_r>
 8004eea:	2800      	cmp	r0, #0
 8004eec:	f47f ab3d 	bne.w	800456a <_svfprintf_r+0x1ca>
 8004ef0:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8004ef2:	af38      	add	r7, sp, #224	; 0xe0
 8004ef4:	e47b      	b.n	80047ee <_svfprintf_r+0x44e>
 8004ef6:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004ef8:	aa2b      	add	r2, sp, #172	; 0xac
 8004efa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004efc:	f002 fef4 	bl	8007ce8 <__ssprint_r>
 8004f00:	2800      	cmp	r0, #0
 8004f02:	f43f acc3 	beq.w	800488c <_svfprintf_r+0x4ec>
 8004f06:	f7ff bb30 	b.w	800456a <_svfprintf_r+0x1ca>
 8004f0a:	9210      	str	r2, [sp, #64]	; 0x40
 8004f0c:	f10d 08e0 	add.w	r8, sp, #224	; 0xe0
 8004f10:	f7ff bb7f 	b.w	8004612 <_svfprintf_r+0x272>
 8004f14:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004f16:	aa2b      	add	r2, sp, #172	; 0xac
 8004f18:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004f1a:	f002 fee5 	bl	8007ce8 <__ssprint_r>
 8004f1e:	2800      	cmp	r0, #0
 8004f20:	f47f ab23 	bne.w	800456a <_svfprintf_r+0x1ca>
 8004f24:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8004f26:	af38      	add	r7, sp, #224	; 0xe0
 8004f28:	f7ff bbf2 	b.w	8004710 <_svfprintf_r+0x370>
 8004f2c:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004f2e:	aa2b      	add	r2, sp, #172	; 0xac
 8004f30:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004f32:	f002 fed9 	bl	8007ce8 <__ssprint_r>
 8004f36:	2800      	cmp	r0, #0
 8004f38:	f47f ab17 	bne.w	800456a <_svfprintf_r+0x1ca>
 8004f3c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8004f3e:	af38      	add	r7, sp, #224	; 0xe0
 8004f40:	f7ff bbf6 	b.w	8004730 <_svfprintf_r+0x390>
 8004f44:	2302      	movs	r3, #2
 8004f46:	f7ff bb2c 	b.w	80045a2 <_svfprintf_r+0x202>
 8004f4a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8004f4c:	2b00      	cmp	r3, #0
 8004f4e:	f340 81ff 	ble.w	8005350 <_svfprintf_r+0xfb0>
 8004f52:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8004f54:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004f56:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004f58:	4285      	cmp	r5, r0
 8004f5a:	bfa8      	it	ge
 8004f5c:	4605      	movge	r5, r0
 8004f5e:	2d00      	cmp	r5, #0
 8004f60:	4441      	add	r1, r8
 8004f62:	910c      	str	r1, [sp, #48]	; 0x30
 8004f64:	dd0c      	ble.n	8004f80 <_svfprintf_r+0xbe0>
 8004f66:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004f68:	442c      	add	r4, r5
 8004f6a:	f8c7 8000 	str.w	r8, [r7]
 8004f6e:	3301      	adds	r3, #1
 8004f70:	607d      	str	r5, [r7, #4]
 8004f72:	2b07      	cmp	r3, #7
 8004f74:	942d      	str	r4, [sp, #180]	; 0xb4
 8004f76:	932c      	str	r3, [sp, #176]	; 0xb0
 8004f78:	bfd8      	it	le
 8004f7a:	3708      	addle	r7, #8
 8004f7c:	f300 8343 	bgt.w	8005606 <_svfprintf_r+0x1266>
 8004f80:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8004f82:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8004f86:	ebc5 0a02 	rsb	sl, r5, r2
 8004f8a:	f1ba 0f00 	cmp.w	sl, #0
 8004f8e:	f340 80dd 	ble.w	800514c <_svfprintf_r+0xdac>
 8004f92:	f1ba 0f10 	cmp.w	sl, #16
 8004f96:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004f98:	bfdc      	itt	le
 8004f9a:	4d1b      	ldrle	r5, [pc, #108]	; (8005008 <_svfprintf_r+0xc68>)
 8004f9c:	950f      	strle	r5, [sp, #60]	; 0x3c
 8004f9e:	f340 80c0 	ble.w	8005122 <_svfprintf_r+0xd82>
 8004fa2:	4d19      	ldr	r5, [pc, #100]	; (8005008 <_svfprintf_r+0xc68>)
 8004fa4:	4622      	mov	r2, r4
 8004fa6:	f04f 0b10 	mov.w	fp, #16
 8004faa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8004fac:	950f      	str	r5, [sp, #60]	; 0x3c
 8004fae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8004fb0:	e005      	b.n	8004fbe <_svfprintf_r+0xc1e>
 8004fb2:	f1aa 0a10 	sub.w	sl, sl, #16
 8004fb6:	f1ba 0f10 	cmp.w	sl, #16
 8004fba:	f340 80b1 	ble.w	8005120 <_svfprintf_r+0xd80>
 8004fbe:	3301      	adds	r3, #1
 8004fc0:	3210      	adds	r2, #16
 8004fc2:	2b07      	cmp	r3, #7
 8004fc4:	e887 0840 	stmia.w	r7, {r6, fp}
 8004fc8:	932c      	str	r3, [sp, #176]	; 0xb0
 8004fca:	f107 0708 	add.w	r7, r7, #8
 8004fce:	922d      	str	r2, [sp, #180]	; 0xb4
 8004fd0:	ddef      	ble.n	8004fb2 <_svfprintf_r+0xc12>
 8004fd2:	4628      	mov	r0, r5
 8004fd4:	4621      	mov	r1, r4
 8004fd6:	aa2b      	add	r2, sp, #172	; 0xac
 8004fd8:	af38      	add	r7, sp, #224	; 0xe0
 8004fda:	f002 fe85 	bl	8007ce8 <__ssprint_r>
 8004fde:	2800      	cmp	r0, #0
 8004fe0:	f47f aac3 	bne.w	800456a <_svfprintf_r+0x1ca>
 8004fe4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8004fe6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004fe8:	e7e3      	b.n	8004fb2 <_svfprintf_r+0xc12>
 8004fea:	2d00      	cmp	r5, #0
 8004fec:	bf08      	it	eq
 8004fee:	2c0a      	cmpeq	r4, #10
 8004ff0:	f080 8141 	bcs.w	8005276 <_svfprintf_r+0xed6>
 8004ff4:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8004ff6:	3430      	adds	r4, #48	; 0x30
 8004ff8:	f10d 08df 	add.w	r8, sp, #223	; 0xdf
 8004ffc:	f88d 40df 	strb.w	r4, [sp, #223]	; 0xdf
 8005000:	9510      	str	r5, [sp, #64]	; 0x40
 8005002:	f7ff bb06 	b.w	8004612 <_svfprintf_r+0x272>
 8005006:	bf00      	nop
 8005008:	0800a484 	stmdaeq	r0, {r2, r7, sl, sp, pc}
 800500c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800500e:	f105 38ff 	add.w	r8, r5, #4294967295
 8005012:	f1b8 0f00 	cmp.w	r8, #0
 8005016:	f77f af57 	ble.w	8004ec8 <_svfprintf_r+0xb28>
 800501a:	f1b8 0f10 	cmp.w	r8, #16
 800501e:	bfdc      	itt	le
 8005020:	4ba8      	ldrle	r3, [pc, #672]	; (80052c4 <_svfprintf_r+0xf24>)
 8005022:	930f      	strle	r3, [sp, #60]	; 0x3c
 8005024:	dd28      	ble.n	8005078 <_svfprintf_r+0xcd8>
 8005026:	4da7      	ldr	r5, [pc, #668]	; (80052c4 <_svfprintf_r+0xf24>)
 8005028:	4653      	mov	r3, sl
 800502a:	f04f 0b10 	mov.w	fp, #16
 800502e:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 8005032:	950f      	str	r5, [sp, #60]	; 0x3c
 8005034:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8005036:	e004      	b.n	8005042 <_svfprintf_r+0xca2>
 8005038:	f1a8 0810 	sub.w	r8, r8, #16
 800503c:	f1b8 0f10 	cmp.w	r8, #16
 8005040:	dd19      	ble.n	8005076 <_svfprintf_r+0xcd6>
 8005042:	3401      	adds	r4, #1
 8005044:	3310      	adds	r3, #16
 8005046:	2c07      	cmp	r4, #7
 8005048:	e887 0840 	stmia.w	r7, {r6, fp}
 800504c:	942c      	str	r4, [sp, #176]	; 0xb0
 800504e:	f107 0708 	add.w	r7, r7, #8
 8005052:	932d      	str	r3, [sp, #180]	; 0xb4
 8005054:	ddf0      	ble.n	8005038 <_svfprintf_r+0xc98>
 8005056:	4628      	mov	r0, r5
 8005058:	4651      	mov	r1, sl
 800505a:	aa2b      	add	r2, sp, #172	; 0xac
 800505c:	af38      	add	r7, sp, #224	; 0xe0
 800505e:	f002 fe43 	bl	8007ce8 <__ssprint_r>
 8005062:	2800      	cmp	r0, #0
 8005064:	f47f aa81 	bne.w	800456a <_svfprintf_r+0x1ca>
 8005068:	f1a8 0810 	sub.w	r8, r8, #16
 800506c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800506e:	f1b8 0f10 	cmp.w	r8, #16
 8005072:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8005074:	dce5      	bgt.n	8005042 <_svfprintf_r+0xca2>
 8005076:	469a      	mov	sl, r3
 8005078:	3401      	adds	r4, #1
 800507a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800507c:	2c07      	cmp	r4, #7
 800507e:	44c2      	add	sl, r8
 8005080:	942c      	str	r4, [sp, #176]	; 0xb0
 8005082:	f8cd a0b4 	str.w	sl, [sp, #180]	; 0xb4
 8005086:	e887 0108 	stmia.w	r7, {r3, r8}
 800508a:	f77f af1c 	ble.w	8004ec6 <_svfprintf_r+0xb26>
 800508e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005090:	aa2b      	add	r2, sp, #172	; 0xac
 8005092:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005094:	f002 fe28 	bl	8007ce8 <__ssprint_r>
 8005098:	2800      	cmp	r0, #0
 800509a:	f47f aa66 	bne.w	800456a <_svfprintf_r+0x1ca>
 800509e:	f8dd a0b4 	ldr.w	sl, [sp, #180]	; 0xb4
 80050a2:	af38      	add	r7, sp, #224	; 0xe0
 80050a4:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80050a6:	e70f      	b.n	8004ec8 <_svfprintf_r+0xb28>
 80050a8:	4d86      	ldr	r5, [pc, #536]	; (80052c4 <_svfprintf_r+0xf24>)
 80050aa:	950f      	str	r5, [sp, #60]	; 0x3c
 80050ac:	3301      	adds	r3, #1
 80050ae:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80050b0:	2b07      	cmp	r3, #7
 80050b2:	4444      	add	r4, r8
 80050b4:	932c      	str	r3, [sp, #176]	; 0xb0
 80050b6:	942d      	str	r4, [sp, #180]	; 0xb4
 80050b8:	e887 0120 	stmia.w	r7, {r5, r8}
 80050bc:	f77f ab96 	ble.w	80047ec <_svfprintf_r+0x44c>
 80050c0:	e70e      	b.n	8004ee0 <_svfprintf_r+0xb40>
 80050c2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80050c4:	3504      	adds	r5, #4
 80050c6:	f855 4c04 	ldr.w	r4, [r5, #-4]
 80050ca:	9514      	str	r5, [sp, #80]	; 0x50
 80050cc:	2500      	movs	r5, #0
 80050ce:	e50e      	b.n	8004aee <_svfprintf_r+0x74e>
 80050d0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80050d2:	2301      	movs	r3, #1
 80050d4:	3504      	adds	r5, #4
 80050d6:	f855 4c04 	ldr.w	r4, [r5, #-4]
 80050da:	9514      	str	r5, [sp, #80]	; 0x50
 80050dc:	2500      	movs	r5, #0
 80050de:	f7ff ba60 	b.w	80045a2 <_svfprintf_r+0x202>
 80050e2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80050e4:	3504      	adds	r5, #4
 80050e6:	f855 4c04 	ldr.w	r4, [r5, #-4]
 80050ea:	9514      	str	r5, [sp, #80]	; 0x50
 80050ec:	2500      	movs	r5, #0
 80050ee:	f7ff ba58 	b.w	80045a2 <_svfprintf_r+0x202>
 80050f2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80050f4:	3504      	adds	r5, #4
 80050f6:	f855 4c04 	ldr.w	r4, [r5, #-4]
 80050fa:	9514      	str	r5, [sp, #80]	; 0x50
 80050fc:	4622      	mov	r2, r4
 80050fe:	17e5      	asrs	r5, r4, #31
 8005100:	462b      	mov	r3, r5
 8005102:	2a00      	cmp	r2, #0
 8005104:	f173 0000 	sbcs.w	r0, r3, #0
 8005108:	f6bf ac45 	bge.w	8004996 <_svfprintf_r+0x5f6>
 800510c:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
 8005110:	4264      	negs	r4, r4
 8005112:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 8005116:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
 800511a:	2301      	movs	r3, #1
 800511c:	f7ff ba45 	b.w	80045aa <_svfprintf_r+0x20a>
 8005120:	4614      	mov	r4, r2
 8005122:	3301      	adds	r3, #1
 8005124:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8005126:	2b07      	cmp	r3, #7
 8005128:	4454      	add	r4, sl
 800512a:	932c      	str	r3, [sp, #176]	; 0xb0
 800512c:	e887 0420 	stmia.w	r7, {r5, sl}
 8005130:	bfd8      	it	le
 8005132:	3708      	addle	r7, #8
 8005134:	942d      	str	r4, [sp, #180]	; 0xb4
 8005136:	dd09      	ble.n	800514c <_svfprintf_r+0xdac>
 8005138:	980e      	ldr	r0, [sp, #56]	; 0x38
 800513a:	aa2b      	add	r2, sp, #172	; 0xac
 800513c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800513e:	f002 fdd3 	bl	8007ce8 <__ssprint_r>
 8005142:	2800      	cmp	r0, #0
 8005144:	f47f aa11 	bne.w	800456a <_svfprintf_r+0x1ca>
 8005148:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 800514a:	af38      	add	r7, sp, #224	; 0xe0
 800514c:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800514e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8005150:	44a8      	add	r8, r5
 8005152:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8005154:	42ab      	cmp	r3, r5
 8005156:	db49      	blt.n	80051ec <_svfprintf_r+0xe4c>
 8005158:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800515a:	07e9      	lsls	r1, r5, #31
 800515c:	d446      	bmi.n	80051ec <_svfprintf_r+0xe4c>
 800515e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8005160:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005162:	ebc8 0500 	rsb	r5, r8, r0
 8005166:	1acb      	subs	r3, r1, r3
 8005168:	42ab      	cmp	r3, r5
 800516a:	bfb8      	it	lt
 800516c:	461d      	movlt	r5, r3
 800516e:	2d00      	cmp	r5, #0
 8005170:	dd0c      	ble.n	800518c <_svfprintf_r+0xdec>
 8005172:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8005174:	442c      	add	r4, r5
 8005176:	f8c7 8000 	str.w	r8, [r7]
 800517a:	3201      	adds	r2, #1
 800517c:	607d      	str	r5, [r7, #4]
 800517e:	2a07      	cmp	r2, #7
 8005180:	942d      	str	r4, [sp, #180]	; 0xb4
 8005182:	922c      	str	r2, [sp, #176]	; 0xb0
 8005184:	bfd8      	it	le
 8005186:	3708      	addle	r7, #8
 8005188:	f300 824a 	bgt.w	8005620 <_svfprintf_r+0x1280>
 800518c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8005190:	ebc5 0803 	rsb	r8, r5, r3
 8005194:	f1b8 0f00 	cmp.w	r8, #0
 8005198:	f77f ab29 	ble.w	80047ee <_svfprintf_r+0x44e>
 800519c:	f1b8 0f10 	cmp.w	r8, #16
 80051a0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80051a2:	dd81      	ble.n	80050a8 <_svfprintf_r+0xd08>
 80051a4:	4d47      	ldr	r5, [pc, #284]	; (80052c4 <_svfprintf_r+0xf24>)
 80051a6:	f04f 0a10 	mov.w	sl, #16
 80051aa:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
 80051ae:	950f      	str	r5, [sp, #60]	; 0x3c
 80051b0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80051b2:	e005      	b.n	80051c0 <_svfprintf_r+0xe20>
 80051b4:	f1a8 0810 	sub.w	r8, r8, #16
 80051b8:	f1b8 0f10 	cmp.w	r8, #16
 80051bc:	f77f af76 	ble.w	80050ac <_svfprintf_r+0xd0c>
 80051c0:	3301      	adds	r3, #1
 80051c2:	3410      	adds	r4, #16
 80051c4:	2b07      	cmp	r3, #7
 80051c6:	e887 0440 	stmia.w	r7, {r6, sl}
 80051ca:	932c      	str	r3, [sp, #176]	; 0xb0
 80051cc:	f107 0708 	add.w	r7, r7, #8
 80051d0:	942d      	str	r4, [sp, #180]	; 0xb4
 80051d2:	ddef      	ble.n	80051b4 <_svfprintf_r+0xe14>
 80051d4:	4628      	mov	r0, r5
 80051d6:	4659      	mov	r1, fp
 80051d8:	aa2b      	add	r2, sp, #172	; 0xac
 80051da:	af38      	add	r7, sp, #224	; 0xe0
 80051dc:	f002 fd84 	bl	8007ce8 <__ssprint_r>
 80051e0:	2800      	cmp	r0, #0
 80051e2:	f47f a9c2 	bne.w	800456a <_svfprintf_r+0x1ca>
 80051e6:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80051e8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80051ea:	e7e3      	b.n	80051b4 <_svfprintf_r+0xe14>
 80051ec:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80051ee:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80051f0:	442c      	add	r4, r5
 80051f2:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80051f4:	3201      	adds	r2, #1
 80051f6:	942d      	str	r4, [sp, #180]	; 0xb4
 80051f8:	2a07      	cmp	r2, #7
 80051fa:	922c      	str	r2, [sp, #176]	; 0xb0
 80051fc:	603d      	str	r5, [r7, #0]
 80051fe:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8005200:	607d      	str	r5, [r7, #4]
 8005202:	bfd8      	it	le
 8005204:	3708      	addle	r7, #8
 8005206:	ddaa      	ble.n	800515e <_svfprintf_r+0xdbe>
 8005208:	980e      	ldr	r0, [sp, #56]	; 0x38
 800520a:	aa2b      	add	r2, sp, #172	; 0xac
 800520c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800520e:	f002 fd6b 	bl	8007ce8 <__ssprint_r>
 8005212:	2800      	cmp	r0, #0
 8005214:	f47f a9a9 	bne.w	800456a <_svfprintf_r+0x1ca>
 8005218:	9b25      	ldr	r3, [sp, #148]	; 0x94
 800521a:	af38      	add	r7, sp, #224	; 0xe0
 800521c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 800521e:	e79e      	b.n	800515e <_svfprintf_r+0xdbe>
 8005220:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8005222:	07ea      	lsls	r2, r5, #31
 8005224:	f53f ae1a 	bmi.w	8004e5c <_svfprintf_r+0xabc>
 8005228:	2201      	movs	r2, #1
 800522a:	f104 0a01 	add.w	sl, r4, #1
 800522e:	189c      	adds	r4, r3, r2
 8005230:	f8c7 8000 	str.w	r8, [r7]
 8005234:	2c07      	cmp	r4, #7
 8005236:	f8cd a0b4 	str.w	sl, [sp, #180]	; 0xb4
 800523a:	942c      	str	r4, [sp, #176]	; 0xb0
 800523c:	607a      	str	r2, [r7, #4]
 800523e:	f77f ae42 	ble.w	8004ec6 <_svfprintf_r+0xb26>
 8005242:	e724      	b.n	800508e <_svfprintf_r+0xcee>
 8005244:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005246:	aa2b      	add	r2, sp, #172	; 0xac
 8005248:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800524a:	f002 fd4d 	bl	8007ce8 <__ssprint_r>
 800524e:	2800      	cmp	r0, #0
 8005250:	f47f a98b 	bne.w	800456a <_svfprintf_r+0x1ca>
 8005254:	f8dd a0b4 	ldr.w	sl, [sp, #180]	; 0xb4
 8005258:	af38      	add	r7, sp, #224	; 0xe0
 800525a:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 800525c:	e61b      	b.n	8004e96 <_svfprintf_r+0xaf6>
 800525e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005260:	aa2b      	add	r2, sp, #172	; 0xac
 8005262:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005264:	f002 fd40 	bl	8007ce8 <__ssprint_r>
 8005268:	2800      	cmp	r0, #0
 800526a:	f47f a97e 	bne.w	800456a <_svfprintf_r+0x1ca>
 800526e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8005270:	af38      	add	r7, sp, #224	; 0xe0
 8005272:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8005274:	e5ff      	b.n	8004e76 <_svfprintf_r+0xad6>
 8005276:	f10d 0bdf 	add.w	fp, sp, #223	; 0xdf
 800527a:	4620      	mov	r0, r4
 800527c:	4629      	mov	r1, r5
 800527e:	220a      	movs	r2, #10
 8005280:	2300      	movs	r3, #0
 8005282:	f004 fd71 	bl	8009d68 <__aeabi_uldivmod>
 8005286:	46d8      	mov	r8, fp
 8005288:	4620      	mov	r0, r4
 800528a:	4629      	mov	r1, r5
 800528c:	2300      	movs	r3, #0
 800528e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8005292:	3230      	adds	r2, #48	; 0x30
 8005294:	f888 2000 	strb.w	r2, [r8]
 8005298:	220a      	movs	r2, #10
 800529a:	f004 fd65 	bl	8009d68 <__aeabi_uldivmod>
 800529e:	4604      	mov	r4, r0
 80052a0:	460d      	mov	r5, r1
 80052a2:	ea54 0005 	orrs.w	r0, r4, r5
 80052a6:	d1e8      	bne.n	800527a <_svfprintf_r+0xeda>
 80052a8:	f7ff b9af 	b.w	800460a <_svfprintf_r+0x26a>
 80052ac:	2b30      	cmp	r3, #48	; 0x30
 80052ae:	f43f a9ac 	beq.w	800460a <_svfprintf_r+0x26a>
 80052b2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80052b4:	2330      	movs	r3, #48	; 0x30
 80052b6:	4690      	mov	r8, r2
 80052b8:	f801 3c01 	strb.w	r3, [r1, #-1]
 80052bc:	1aa4      	subs	r4, r4, r2
 80052be:	9410      	str	r4, [sp, #64]	; 0x40
 80052c0:	f7ff b9a7 	b.w	8004612 <_svfprintf_r+0x272>
 80052c4:	0800a484 	stmdaeq	r0, {r2, r7, sl, sp, pc}
 80052c8:	991c      	ldr	r1, [sp, #112]	; 0x70
 80052ca:	f002 fb83 	bl	80079d4 <__fpclassifyd>
 80052ce:	2800      	cmp	r0, #0
 80052d0:	f040 80ab 	bne.w	800542a <_svfprintf_r+0x108a>
 80052d4:	2503      	movs	r5, #3
 80052d6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80052d8:	f64a 180c 	movw	r8, #43276	; 0xa90c
 80052dc:	f64a 1308 	movw	r3, #43272	; 0xa908
 80052e0:	950d      	str	r5, [sp, #52]	; 0x34
 80052e2:	f6c0 0800 	movt	r8, #2048	; 0x800
 80052e6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80052e8:	f6c0 0300 	movt	r3, #2048	; 0x800
 80052ec:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 80052f0:	900c      	str	r0, [sp, #48]	; 0x30
 80052f2:	940a      	str	r4, [sp, #40]	; 0x28
 80052f4:	2d47      	cmp	r5, #71	; 0x47
 80052f6:	bfd8      	it	le
 80052f8:	4698      	movle	r8, r3
 80052fa:	2403      	movs	r4, #3
 80052fc:	9018      	str	r0, [sp, #96]	; 0x60
 80052fe:	9410      	str	r4, [sp, #64]	; 0x40
 8005300:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
 8005304:	f7ff b98d 	b.w	8004622 <_svfprintf_r+0x282>
 8005308:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800530a:	1de3      	adds	r3, r4, #7
 800530c:	f023 0307 	bic.w	r3, r3, #7
 8005310:	f103 0508 	add.w	r5, r3, #8
 8005314:	9514      	str	r5, [sp, #80]	; 0x50
 8005316:	681c      	ldr	r4, [r3, #0]
 8005318:	941b      	str	r4, [sp, #108]	; 0x6c
 800531a:	685b      	ldr	r3, [r3, #4]
 800531c:	931c      	str	r3, [sp, #112]	; 0x70
 800531e:	f7ff bb53 	b.w	80049c8 <_svfprintf_r+0x628>
 8005322:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005324:	06e2      	lsls	r2, r4, #27
 8005326:	d572      	bpl.n	800540e <_svfprintf_r+0x106e>
 8005328:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800532a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800532c:	3504      	adds	r5, #4
 800532e:	f855 3c04 	ldr.w	r3, [r5, #-4]
 8005332:	9514      	str	r5, [sp, #80]	; 0x50
 8005334:	601c      	str	r4, [r3, #0]
 8005336:	f7ff b869 	b.w	800440c <_svfprintf_r+0x6c>
 800533a:	980e      	ldr	r0, [sp, #56]	; 0x38
 800533c:	aa2b      	add	r2, sp, #172	; 0xac
 800533e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005340:	f002 fcd2 	bl	8007ce8 <__ssprint_r>
 8005344:	2800      	cmp	r0, #0
 8005346:	f47f a910 	bne.w	800456a <_svfprintf_r+0x1ca>
 800534a:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 800534c:	af38      	add	r7, sp, #224	; 0xe0
 800534e:	e4de      	b.n	8004d0e <_svfprintf_r+0x96e>
 8005350:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8005352:	2101      	movs	r1, #1
 8005354:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8005356:	3401      	adds	r4, #1
 8005358:	440a      	add	r2, r1
 800535a:	942d      	str	r4, [sp, #180]	; 0xb4
 800535c:	2a07      	cmp	r2, #7
 800535e:	922c      	str	r2, [sp, #176]	; 0xb0
 8005360:	603d      	str	r5, [r7, #0]
 8005362:	6079      	str	r1, [r7, #4]
 8005364:	f300 8112 	bgt.w	800558c <_svfprintf_r+0x11ec>
 8005368:	3708      	adds	r7, #8
 800536a:	4619      	mov	r1, r3
 800536c:	b929      	cbnz	r1, 800537a <_svfprintf_r+0xfda>
 800536e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8005370:	b91d      	cbnz	r5, 800537a <_svfprintf_r+0xfda>
 8005372:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8005374:	07e8      	lsls	r0, r5, #31
 8005376:	f57f aa3a 	bpl.w	80047ee <_svfprintf_r+0x44e>
 800537a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 800537c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800537e:	3301      	adds	r3, #1
 8005380:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8005382:	4422      	add	r2, r4
 8005384:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 8005386:	2b07      	cmp	r3, #7
 8005388:	922d      	str	r2, [sp, #180]	; 0xb4
 800538a:	607d      	str	r5, [r7, #4]
 800538c:	603c      	str	r4, [r7, #0]
 800538e:	bfd8      	it	le
 8005390:	3708      	addle	r7, #8
 8005392:	932c      	str	r3, [sp, #176]	; 0xb0
 8005394:	f300 81ba 	bgt.w	800570c <_svfprintf_r+0x136c>
 8005398:	f1c1 0a00 	rsb	sl, r1, #0
 800539c:	f1ba 0f00 	cmp.w	sl, #0
 80053a0:	f340 8116 	ble.w	80055d0 <_svfprintf_r+0x1230>
 80053a4:	f1ba 0f10 	cmp.w	sl, #16
 80053a8:	bfdc      	itt	le
 80053aa:	4c9c      	ldrle	r4, [pc, #624]	; (800561c <_svfprintf_r+0x127c>)
 80053ac:	940f      	strle	r4, [sp, #60]	; 0x3c
 80053ae:	f340 80f9 	ble.w	80055a4 <_svfprintf_r+0x1204>
 80053b2:	4d9a      	ldr	r5, [pc, #616]	; (800561c <_svfprintf_r+0x127c>)
 80053b4:	2410      	movs	r4, #16
 80053b6:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
 80053ba:	950f      	str	r5, [sp, #60]	; 0x3c
 80053bc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80053be:	e005      	b.n	80053cc <_svfprintf_r+0x102c>
 80053c0:	f1aa 0a10 	sub.w	sl, sl, #16
 80053c4:	f1ba 0f10 	cmp.w	sl, #16
 80053c8:	f340 80ec 	ble.w	80055a4 <_svfprintf_r+0x1204>
 80053cc:	3301      	adds	r3, #1
 80053ce:	3210      	adds	r2, #16
 80053d0:	2b07      	cmp	r3, #7
 80053d2:	603e      	str	r6, [r7, #0]
 80053d4:	607c      	str	r4, [r7, #4]
 80053d6:	f107 0708 	add.w	r7, r7, #8
 80053da:	932c      	str	r3, [sp, #176]	; 0xb0
 80053dc:	922d      	str	r2, [sp, #180]	; 0xb4
 80053de:	ddef      	ble.n	80053c0 <_svfprintf_r+0x1020>
 80053e0:	4628      	mov	r0, r5
 80053e2:	4659      	mov	r1, fp
 80053e4:	aa2b      	add	r2, sp, #172	; 0xac
 80053e6:	af38      	add	r7, sp, #224	; 0xe0
 80053e8:	f002 fc7e 	bl	8007ce8 <__ssprint_r>
 80053ec:	2800      	cmp	r0, #0
 80053ee:	f47f a8bc 	bne.w	800456a <_svfprintf_r+0x1ca>
 80053f2:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80053f4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80053f6:	e7e3      	b.n	80053c0 <_svfprintf_r+0x1020>
 80053f8:	980e      	ldr	r0, [sp, #56]	; 0x38
 80053fa:	aa2b      	add	r2, sp, #172	; 0xac
 80053fc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80053fe:	f002 fc73 	bl	8007ce8 <__ssprint_r>
 8005402:	2800      	cmp	r0, #0
 8005404:	f47f a8b1 	bne.w	800456a <_svfprintf_r+0x1ca>
 8005408:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 800540a:	af38      	add	r7, sp, #224	; 0xe0
 800540c:	e496      	b.n	8004d3c <_svfprintf_r+0x99c>
 800540e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8005410:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8005412:	3404      	adds	r4, #4
 8005414:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8005418:	f015 0f40 	tst.w	r5, #64	; 0x40
 800541c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800541e:	9414      	str	r4, [sp, #80]	; 0x50
 8005420:	bf14      	ite	ne
 8005422:	801d      	strhne	r5, [r3, #0]
 8005424:	601d      	streq	r5, [r3, #0]
 8005426:	f7fe bff1 	b.w	800440c <_svfprintf_r+0x6c>
 800542a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800542c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 800542e:	3501      	adds	r5, #1
 8005430:	f024 0520 	bic.w	r5, r4, #32
 8005434:	bf04      	itt	eq
 8005436:	2406      	moveq	r4, #6
 8005438:	940c      	streq	r4, [sp, #48]	; 0x30
 800543a:	d006      	beq.n	800544a <_svfprintf_r+0x10aa>
 800543c:	2d47      	cmp	r5, #71	; 0x47
 800543e:	d104      	bne.n	800544a <_svfprintf_r+0x10aa>
 8005440:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8005442:	2c00      	cmp	r4, #0
 8005444:	bf08      	it	eq
 8005446:	2401      	moveq	r4, #1
 8005448:	940c      	str	r4, [sp, #48]	; 0x30
 800544a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800544c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800544e:	2b00      	cmp	r3, #0
 8005450:	f444 7480 	orr.w	r4, r4, #256	; 0x100
 8005454:	940f      	str	r4, [sp, #60]	; 0x3c
 8005456:	bfbd      	ittte	lt
 8005458:	461c      	movlt	r4, r3
 800545a:	f04f 0b2d 	movlt.w	fp, #45	; 0x2d
 800545e:	f104 4a00 	addlt.w	sl, r4, #2147483648	; 0x80000000
 8005462:	f8dd a070 	ldrge.w	sl, [sp, #112]	; 0x70
 8005466:	bfa8      	it	ge
 8005468:	f04f 0b00 	movge.w	fp, #0
 800546c:	f1b5 0446 	subs.w	r4, r5, #70	; 0x46
 8005470:	4261      	negs	r1, r4
 8005472:	4161      	adcs	r1, r4
 8005474:	2900      	cmp	r1, #0
 8005476:	d030      	beq.n	80054da <_svfprintf_r+0x113a>
 8005478:	2003      	movs	r0, #3
 800547a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800547c:	4653      	mov	r3, sl
 800547e:	9000      	str	r0, [sp, #0]
 8005480:	a825      	add	r0, sp, #148	; 0x94
 8005482:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8005484:	9002      	str	r0, [sp, #8]
 8005486:	a826      	add	r0, sp, #152	; 0x98
 8005488:	9401      	str	r4, [sp, #4]
 800548a:	9003      	str	r0, [sp, #12]
 800548c:	a829      	add	r0, sp, #164	; 0xa4
 800548e:	9004      	str	r0, [sp, #16]
 8005490:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005492:	9107      	str	r1, [sp, #28]
 8005494:	f000 fa86 	bl	80059a4 <_dtoa_r>
 8005498:	2d47      	cmp	r5, #71	; 0x47
 800549a:	9907      	ldr	r1, [sp, #28]
 800549c:	4680      	mov	r8, r0
 800549e:	d103      	bne.n	80054a8 <_svfprintf_r+0x1108>
 80054a0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80054a2:	07e0      	lsls	r0, r4, #31
 80054a4:	f140 80f0 	bpl.w	8005688 <_svfprintf_r+0x12e8>
 80054a8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80054aa:	4444      	add	r4, r8
 80054ac:	b351      	cbz	r1, 8005504 <_svfprintf_r+0x1164>
 80054ae:	f898 3000 	ldrb.w	r3, [r8]
 80054b2:	2b30      	cmp	r3, #48	; 0x30
 80054b4:	f000 8184 	beq.w	80057c0 <_svfprintf_r+0x1420>
 80054b8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80054ba:	441c      	add	r4, r3
 80054bc:	e022      	b.n	8005504 <_svfprintf_r+0x1164>
 80054be:	980e      	ldr	r0, [sp, #56]	; 0x38
 80054c0:	2140      	movs	r1, #64	; 0x40
 80054c2:	f001 fa93 	bl	80069ec <_malloc_r>
 80054c6:	6020      	str	r0, [r4, #0]
 80054c8:	6120      	str	r0, [r4, #16]
 80054ca:	2800      	cmp	r0, #0
 80054cc:	f000 81b6 	beq.w	800583c <_svfprintf_r+0x149c>
 80054d0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80054d2:	2340      	movs	r3, #64	; 0x40
 80054d4:	6163      	str	r3, [r4, #20]
 80054d6:	f7fe bf79 	b.w	80043cc <_svfprintf_r+0x2c>
 80054da:	2d45      	cmp	r5, #69	; 0x45
 80054dc:	f040 8131 	bne.w	8005742 <_svfprintf_r+0x13a2>
 80054e0:	980c      	ldr	r0, [sp, #48]	; 0x30
 80054e2:	2102      	movs	r1, #2
 80054e4:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80054e6:	4653      	mov	r3, sl
 80054e8:	1c44      	adds	r4, r0, #1
 80054ea:	9100      	str	r1, [sp, #0]
 80054ec:	9401      	str	r4, [sp, #4]
 80054ee:	a925      	add	r1, sp, #148	; 0x94
 80054f0:	980e      	ldr	r0, [sp, #56]	; 0x38
 80054f2:	9102      	str	r1, [sp, #8]
 80054f4:	a926      	add	r1, sp, #152	; 0x98
 80054f6:	9103      	str	r1, [sp, #12]
 80054f8:	a929      	add	r1, sp, #164	; 0xa4
 80054fa:	9104      	str	r1, [sp, #16]
 80054fc:	f000 fa52 	bl	80059a4 <_dtoa_r>
 8005500:	4680      	mov	r8, r0
 8005502:	4404      	add	r4, r0
 8005504:	2300      	movs	r3, #0
 8005506:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8005508:	2200      	movs	r2, #0
 800550a:	4651      	mov	r1, sl
 800550c:	f004 fbb2 	bl	8009c74 <__aeabi_dcmpeq>
 8005510:	4623      	mov	r3, r4
 8005512:	b948      	cbnz	r0, 8005528 <_svfprintf_r+0x1188>
 8005514:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8005516:	429c      	cmp	r4, r3
 8005518:	d906      	bls.n	8005528 <_svfprintf_r+0x1188>
 800551a:	2130      	movs	r1, #48	; 0x30
 800551c:	1c5a      	adds	r2, r3, #1
 800551e:	9229      	str	r2, [sp, #164]	; 0xa4
 8005520:	7019      	strb	r1, [r3, #0]
 8005522:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8005524:	429c      	cmp	r4, r3
 8005526:	d8f9      	bhi.n	800551c <_svfprintf_r+0x117c>
 8005528:	2d47      	cmp	r5, #71	; 0x47
 800552a:	ebc8 0303 	rsb	r3, r8, r3
 800552e:	9311      	str	r3, [sp, #68]	; 0x44
 8005530:	f000 80ae 	beq.w	8005690 <_svfprintf_r+0x12f0>
 8005534:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8005536:	2c65      	cmp	r4, #101	; 0x65
 8005538:	f340 818a 	ble.w	8005850 <_svfprintf_r+0x14b0>
 800553c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800553e:	2d66      	cmp	r5, #102	; 0x66
 8005540:	f000 8101 	beq.w	8005746 <_svfprintf_r+0x13a6>
 8005544:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8005546:	9418      	str	r4, [sp, #96]	; 0x60
 8005548:	9c18      	ldr	r4, [sp, #96]	; 0x60
 800554a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800554c:	42ac      	cmp	r4, r5
 800554e:	f2c0 80ea 	blt.w	8005726 <_svfprintf_r+0x1386>
 8005552:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005554:	9d18      	ldr	r5, [sp, #96]	; 0x60
 8005556:	07e0      	lsls	r0, r4, #31
 8005558:	bf4b      	itete	mi
 800555a:	3501      	addmi	r5, #1
 800555c:	ea25 73e5 	bicpl.w	r3, r5, r5, asr #31
 8005560:	ea25 73e5 	bicmi.w	r3, r5, r5, asr #31
 8005564:	2467      	movpl	r4, #103	; 0x67
 8005566:	bf4d      	iteet	mi
 8005568:	2467      	movmi	r4, #103	; 0x67
 800556a:	9510      	strpl	r5, [sp, #64]	; 0x40
 800556c:	9416      	strpl	r4, [sp, #88]	; 0x58
 800556e:	9510      	strmi	r5, [sp, #64]	; 0x40
 8005570:	bf48      	it	mi
 8005572:	9416      	strmi	r4, [sp, #88]	; 0x58
 8005574:	f1bb 0f00 	cmp.w	fp, #0
 8005578:	d175      	bne.n	8005666 <_svfprintf_r+0x12c6>
 800557a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800557c:	930d      	str	r3, [sp, #52]	; 0x34
 800557e:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005582:	940a      	str	r4, [sp, #40]	; 0x28
 8005584:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
 8005588:	f7ff b84b 	b.w	8004622 <_svfprintf_r+0x282>
 800558c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800558e:	aa2b      	add	r2, sp, #172	; 0xac
 8005590:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005592:	f002 fba9 	bl	8007ce8 <__ssprint_r>
 8005596:	2800      	cmp	r0, #0
 8005598:	f47e afe7 	bne.w	800456a <_svfprintf_r+0x1ca>
 800559c:	9925      	ldr	r1, [sp, #148]	; 0x94
 800559e:	af38      	add	r7, sp, #224	; 0xe0
 80055a0:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80055a2:	e6e3      	b.n	800536c <_svfprintf_r+0xfcc>
 80055a4:	3301      	adds	r3, #1
 80055a6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80055a8:	2b07      	cmp	r3, #7
 80055aa:	4452      	add	r2, sl
 80055ac:	932c      	str	r3, [sp, #176]	; 0xb0
 80055ae:	e887 0410 	stmia.w	r7, {r4, sl}
 80055b2:	bfd8      	it	le
 80055b4:	3708      	addle	r7, #8
 80055b6:	922d      	str	r2, [sp, #180]	; 0xb4
 80055b8:	dd0a      	ble.n	80055d0 <_svfprintf_r+0x1230>
 80055ba:	980e      	ldr	r0, [sp, #56]	; 0x38
 80055bc:	aa2b      	add	r2, sp, #172	; 0xac
 80055be:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80055c0:	f002 fb92 	bl	8007ce8 <__ssprint_r>
 80055c4:	2800      	cmp	r0, #0
 80055c6:	f47e afd0 	bne.w	800456a <_svfprintf_r+0x1ca>
 80055ca:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80055cc:	af38      	add	r7, sp, #224	; 0xe0
 80055ce:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80055d0:	3301      	adds	r3, #1
 80055d2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80055d4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80055d6:	2b07      	cmp	r3, #7
 80055d8:	932c      	str	r3, [sp, #176]	; 0xb0
 80055da:	4414      	add	r4, r2
 80055dc:	f8c7 8000 	str.w	r8, [r7]
 80055e0:	942d      	str	r4, [sp, #180]	; 0xb4
 80055e2:	607d      	str	r5, [r7, #4]
 80055e4:	f77f a902 	ble.w	80047ec <_svfprintf_r+0x44c>
 80055e8:	e47a      	b.n	8004ee0 <_svfprintf_r+0xb40>
 80055ea:	950c      	str	r5, [sp, #48]	; 0x30
 80055ec:	f002 fb4c 	bl	8007c88 <strlen>
 80055f0:	9414      	str	r4, [sp, #80]	; 0x50
 80055f2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80055f4:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
 80055f8:	9418      	str	r4, [sp, #96]	; 0x60
 80055fa:	ea20 75e0 	bic.w	r5, r0, r0, asr #31
 80055fe:	9010      	str	r0, [sp, #64]	; 0x40
 8005600:	950d      	str	r5, [sp, #52]	; 0x34
 8005602:	f7ff b80e 	b.w	8004622 <_svfprintf_r+0x282>
 8005606:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005608:	aa2b      	add	r2, sp, #172	; 0xac
 800560a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800560c:	f002 fb6c 	bl	8007ce8 <__ssprint_r>
 8005610:	2800      	cmp	r0, #0
 8005612:	f47e afaa 	bne.w	800456a <_svfprintf_r+0x1ca>
 8005616:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8005618:	af38      	add	r7, sp, #224	; 0xe0
 800561a:	e4b1      	b.n	8004f80 <_svfprintf_r+0xbe0>
 800561c:	0800a484 	stmdaeq	r0, {r2, r7, sl, sp, pc}
 8005620:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005622:	aa2b      	add	r2, sp, #172	; 0xac
 8005624:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005626:	f002 fb5f 	bl	8007ce8 <__ssprint_r>
 800562a:	2800      	cmp	r0, #0
 800562c:	f47e af9d 	bne.w	800456a <_svfprintf_r+0x1ca>
 8005630:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8005632:	af38      	add	r7, sp, #224	; 0xe0
 8005634:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8005636:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8005638:	1ad3      	subs	r3, r2, r3
 800563a:	e5a7      	b.n	800518c <_svfprintf_r+0xdec>
 800563c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800563e:	46c2      	mov	sl, r8
 8005640:	f64a 1838 	movw	r8, #43320	; 0xa938
 8005644:	9414      	str	r4, [sp, #80]	; 0x50
 8005646:	2d06      	cmp	r5, #6
 8005648:	bf28      	it	cs
 800564a:	2506      	movcs	r5, #6
 800564c:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 8005650:	9510      	str	r5, [sp, #64]	; 0x40
 8005652:	4654      	mov	r4, sl
 8005654:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8005658:	f8cd a060 	str.w	sl, [sp, #96]	; 0x60
 800565c:	950d      	str	r5, [sp, #52]	; 0x34
 800565e:	f6c0 0800 	movt	r8, #2048	; 0x800
 8005662:	f7fe bfde 	b.w	8004622 <_svfprintf_r+0x282>
 8005666:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8005668:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
 800566c:	2400      	movs	r4, #0
 800566e:	930d      	str	r3, [sp, #52]	; 0x34
 8005670:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
 8005674:	950a      	str	r5, [sp, #40]	; 0x28
 8005676:	940c      	str	r4, [sp, #48]	; 0x30
 8005678:	f7fe bfd6 	b.w	8004628 <_svfprintf_r+0x288>
 800567c:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
 8005680:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
 8005684:	f7ff b9b2 	b.w	80049ec <_svfprintf_r+0x64c>
 8005688:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800568a:	ebc8 0303 	rsb	r3, r8, r3
 800568e:	9311      	str	r3, [sp, #68]	; 0x44
 8005690:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8005692:	1cda      	adds	r2, r3, #3
 8005694:	db11      	blt.n	80056ba <_svfprintf_r+0x131a>
 8005696:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8005698:	429c      	cmp	r4, r3
 800569a:	db0e      	blt.n	80056ba <_svfprintf_r+0x131a>
 800569c:	9318      	str	r3, [sp, #96]	; 0x60
 800569e:	e753      	b.n	8005548 <_svfprintf_r+0x11a8>
 80056a0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80056a2:	9414      	str	r4, [sp, #80]	; 0x50
 80056a4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80056a8:	950d      	str	r5, [sp, #52]	; 0x34
 80056aa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80056ac:	9018      	str	r0, [sp, #96]	; 0x60
 80056ae:	900c      	str	r0, [sp, #48]	; 0x30
 80056b0:	9510      	str	r5, [sp, #64]	; 0x40
 80056b2:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
 80056b6:	f7fe bfb4 	b.w	8004622 <_svfprintf_r+0x282>
 80056ba:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80056bc:	3d02      	subs	r5, #2
 80056be:	9516      	str	r5, [sp, #88]	; 0x58
 80056c0:	3b01      	subs	r3, #1
 80056c2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80056c4:	2b00      	cmp	r3, #0
 80056c6:	9325      	str	r3, [sp, #148]	; 0x94
 80056c8:	bfba      	itte	lt
 80056ca:	425b      	neglt	r3, r3
 80056cc:	222d      	movlt	r2, #45	; 0x2d
 80056ce:	222b      	movge	r2, #43	; 0x2b
 80056d0:	2b09      	cmp	r3, #9
 80056d2:	f88d 509c 	strb.w	r5, [sp, #156]	; 0x9c
 80056d6:	f88d 209d 	strb.w	r2, [sp, #157]	; 0x9d
 80056da:	dc43      	bgt.n	8005764 <_svfprintf_r+0x13c4>
 80056dc:	3330      	adds	r3, #48	; 0x30
 80056de:	f88d 309f 	strb.w	r3, [sp, #159]	; 0x9f
 80056e2:	2330      	movs	r3, #48	; 0x30
 80056e4:	f88d 309e 	strb.w	r3, [sp, #158]	; 0x9e
 80056e8:	ab28      	add	r3, sp, #160	; 0xa0
 80056ea:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80056ec:	aa27      	add	r2, sp, #156	; 0x9c
 80056ee:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80056f0:	1a9a      	subs	r2, r3, r2
 80056f2:	2d01      	cmp	r5, #1
 80056f4:	921e      	str	r2, [sp, #120]	; 0x78
 80056f6:	4414      	add	r4, r2
 80056f8:	9410      	str	r4, [sp, #64]	; 0x40
 80056fa:	dd78      	ble.n	80057ee <_svfprintf_r+0x144e>
 80056fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80056fe:	2400      	movs	r4, #0
 8005700:	9418      	str	r4, [sp, #96]	; 0x60
 8005702:	3301      	adds	r3, #1
 8005704:	9310      	str	r3, [sp, #64]	; 0x40
 8005706:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800570a:	e733      	b.n	8005574 <_svfprintf_r+0x11d4>
 800570c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800570e:	aa2b      	add	r2, sp, #172	; 0xac
 8005710:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005712:	f002 fae9 	bl	8007ce8 <__ssprint_r>
 8005716:	2800      	cmp	r0, #0
 8005718:	f47e af27 	bne.w	800456a <_svfprintf_r+0x1ca>
 800571c:	9925      	ldr	r1, [sp, #148]	; 0x94
 800571e:	af38      	add	r7, sp, #224	; 0xe0
 8005720:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8005722:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8005724:	e638      	b.n	8005398 <_svfprintf_r+0xff8>
 8005726:	9d18      	ldr	r5, [sp, #96]	; 0x60
 8005728:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800572a:	2d00      	cmp	r5, #0
 800572c:	bfd4      	ite	le
 800572e:	f1c5 0302 	rsble	r3, r5, #2
 8005732:	2301      	movgt	r3, #1
 8005734:	441c      	add	r4, r3
 8005736:	2567      	movs	r5, #103	; 0x67
 8005738:	9410      	str	r4, [sp, #64]	; 0x40
 800573a:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 800573e:	9516      	str	r5, [sp, #88]	; 0x58
 8005740:	e718      	b.n	8005574 <_svfprintf_r+0x11d4>
 8005742:	2002      	movs	r0, #2
 8005744:	e699      	b.n	800547a <_svfprintf_r+0x10da>
 8005746:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8005748:	2d00      	cmp	r5, #0
 800574a:	9518      	str	r5, [sp, #96]	; 0x60
 800574c:	dd58      	ble.n	8005800 <_svfprintf_r+0x1460>
 800574e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8005750:	2c00      	cmp	r4, #0
 8005752:	d144      	bne.n	80057de <_svfprintf_r+0x143e>
 8005754:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8005756:	07ed      	lsls	r5, r5, #31
 8005758:	d441      	bmi.n	80057de <_svfprintf_r+0x143e>
 800575a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 800575c:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 8005760:	9410      	str	r4, [sp, #64]	; 0x40
 8005762:	e707      	b.n	8005574 <_svfprintf_r+0x11d4>
 8005764:	f246 6167 	movw	r1, #26215	; 0x6667
 8005768:	f10d 05aa 	add.w	r5, sp, #170	; 0xaa
 800576c:	f2c6 6166 	movt	r1, #26214	; 0x6666
 8005770:	fb81 2003 	smull	r2, r0, r1, r3
 8005774:	17da      	asrs	r2, r3, #31
 8005776:	462c      	mov	r4, r5
 8005778:	3d01      	subs	r5, #1
 800577a:	ebc2 02a0 	rsb	r2, r2, r0, asr #2
 800577e:	eb02 0082 	add.w	r0, r2, r2, lsl #2
 8005782:	eba3 0040 	sub.w	r0, r3, r0, lsl #1
 8005786:	4613      	mov	r3, r2
 8005788:	2b09      	cmp	r3, #9
 800578a:	f100 0230 	add.w	r2, r0, #48	; 0x30
 800578e:	7022      	strb	r2, [r4, #0]
 8005790:	dcee      	bgt.n	8005770 <_svfprintf_r+0x13d0>
 8005792:	f10d 00ab 	add.w	r0, sp, #171	; 0xab
 8005796:	3330      	adds	r3, #48	; 0x30
 8005798:	42a8      	cmp	r0, r5
 800579a:	b2da      	uxtb	r2, r3
 800579c:	f804 2c01 	strb.w	r2, [r4, #-1]
 80057a0:	d953      	bls.n	800584a <_svfprintf_r+0x14aa>
 80057a2:	f10d 019d 	add.w	r1, sp, #157	; 0x9d
 80057a6:	4623      	mov	r3, r4
 80057a8:	e001      	b.n	80057ae <_svfprintf_r+0x140e>
 80057aa:	f813 2b01 	ldrb.w	r2, [r3], #1
 80057ae:	4283      	cmp	r3, r0
 80057b0:	f801 2f01 	strb.w	r2, [r1, #1]!
 80057b4:	d1f9      	bne.n	80057aa <_svfprintf_r+0x140a>
 80057b6:	ad48      	add	r5, sp, #288	; 0x120
 80057b8:	ebc4 0345 	rsb	r3, r4, r5, lsl #1
 80057bc:	3bf6      	subs	r3, #246	; 0xf6
 80057be:	e794      	b.n	80056ea <_svfprintf_r+0x134a>
 80057c0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80057c2:	2200      	movs	r2, #0
 80057c4:	2300      	movs	r3, #0
 80057c6:	4651      	mov	r1, sl
 80057c8:	f004 fa54 	bl	8009c74 <__aeabi_dcmpeq>
 80057cc:	2800      	cmp	r0, #0
 80057ce:	f47f ae73 	bne.w	80054b8 <_svfprintf_r+0x1118>
 80057d2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80057d4:	f1c0 0301 	rsb	r3, r0, #1
 80057d8:	9325      	str	r3, [sp, #148]	; 0x94
 80057da:	441c      	add	r4, r3
 80057dc:	e692      	b.n	8005504 <_svfprintf_r+0x1164>
 80057de:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80057e0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80057e2:	1c6b      	adds	r3, r5, #1
 80057e4:	441c      	add	r4, r3
 80057e6:	9410      	str	r4, [sp, #64]	; 0x40
 80057e8:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 80057ec:	e6c2      	b.n	8005574 <_svfprintf_r+0x11d4>
 80057ee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80057f0:	f014 0301 	ands.w	r3, r4, #1
 80057f4:	d182      	bne.n	80056fc <_svfprintf_r+0x135c>
 80057f6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80057f8:	9318      	str	r3, [sp, #96]	; 0x60
 80057fa:	ea25 73e5 	bic.w	r3, r5, r5, asr #31
 80057fe:	e6b9      	b.n	8005574 <_svfprintf_r+0x11d4>
 8005800:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8005802:	b935      	cbnz	r5, 8005812 <_svfprintf_r+0x1472>
 8005804:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005806:	07e4      	lsls	r4, r4, #31
 8005808:	bf5c      	itt	pl
 800580a:	2301      	movpl	r3, #1
 800580c:	9310      	strpl	r3, [sp, #64]	; 0x40
 800580e:	f57f aeb1 	bpl.w	8005574 <_svfprintf_r+0x11d4>
 8005812:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8005814:	3502      	adds	r5, #2
 8005816:	9510      	str	r5, [sp, #64]	; 0x40
 8005818:	ea25 73e5 	bic.w	r3, r5, r5, asr #31
 800581c:	e6aa      	b.n	8005574 <_svfprintf_r+0x11d4>
 800581e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8005820:	f899 3001 	ldrb.w	r3, [r9, #1]
 8005824:	46a1      	mov	r9, r4
 8005826:	682d      	ldr	r5, [r5, #0]
 8005828:	950c      	str	r5, [sp, #48]	; 0x30
 800582a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800582c:	1d29      	adds	r1, r5, #4
 800582e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8005830:	9114      	str	r1, [sp, #80]	; 0x50
 8005832:	2d00      	cmp	r5, #0
 8005834:	f6be ae1d 	bge.w	8004472 <_svfprintf_r+0xd2>
 8005838:	f7fe be18 	b.w	800446c <_svfprintf_r+0xcc>
 800583c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800583e:	230c      	movs	r3, #12
 8005840:	f04f 30ff 	mov.w	r0, #4294967295
 8005844:	602b      	str	r3, [r5, #0]
 8005846:	f7fe be98 	b.w	800457a <_svfprintf_r+0x1da>
 800584a:	f10d 039e 	add.w	r3, sp, #158	; 0x9e
 800584e:	e74c      	b.n	80056ea <_svfprintf_r+0x134a>
 8005850:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8005852:	e735      	b.n	80056c0 <_svfprintf_r+0x1320>
 8005854:	0000      	movs	r0, r0
	...

08005858 <quorem>:
 8005858:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800585c:	468c      	mov	ip, r1
 800585e:	6903      	ldr	r3, [r0, #16]
 8005860:	4683      	mov	fp, r0
 8005862:	690d      	ldr	r5, [r1, #16]
 8005864:	b085      	sub	sp, #20
 8005866:	429d      	cmp	r5, r3
 8005868:	bfc8      	it	gt
 800586a:	2000      	movgt	r0, #0
 800586c:	f300 8096 	bgt.w	800599c <quorem+0x144>
 8005870:	3d01      	subs	r5, #1
 8005872:	f101 0414 	add.w	r4, r1, #20
 8005876:	f10b 0a14 	add.w	sl, fp, #20
 800587a:	f854 1025 	ldr.w	r1, [r4, r5, lsl #2]
 800587e:	00aa      	lsls	r2, r5, #2
 8005880:	f85a 0025 	ldr.w	r0, [sl, r5, lsl #2]
 8005884:	4691      	mov	r9, r2
 8005886:	3101      	adds	r1, #1
 8005888:	9202      	str	r2, [sp, #8]
 800588a:	f8cd c004 	str.w	ip, [sp, #4]
 800588e:	4452      	add	r2, sl
 8005890:	9203      	str	r2, [sp, #12]
 8005892:	f003 fc91 	bl	80091b8 <__aeabi_uidiv>
 8005896:	44a1      	add	r9, r4
 8005898:	f8dd c004 	ldr.w	ip, [sp, #4]
 800589c:	4680      	mov	r8, r0
 800589e:	2800      	cmp	r0, #0
 80058a0:	d041      	beq.n	8005926 <quorem+0xce>
 80058a2:	2100      	movs	r1, #0
 80058a4:	4622      	mov	r2, r4
 80058a6:	4608      	mov	r0, r1
 80058a8:	4653      	mov	r3, sl
 80058aa:	460f      	mov	r7, r1
 80058ac:	f852 1b04 	ldr.w	r1, [r2], #4
 80058b0:	681e      	ldr	r6, [r3, #0]
 80058b2:	4591      	cmp	r9, r2
 80058b4:	fa1f fe81 	uxth.w	lr, r1
 80058b8:	ea4f 4111 	mov.w	r1, r1, lsr #16
 80058bc:	fb0e 7708 	mla	r7, lr, r8, r7
 80058c0:	fa1f fe86 	uxth.w	lr, r6
 80058c4:	fb01 f108 	mul.w	r1, r1, r8
 80058c8:	eb01 4117 	add.w	r1, r1, r7, lsr #16
 80058cc:	b2bf      	uxth	r7, r7
 80058ce:	ebc7 0000 	rsb	r0, r7, r0
 80058d2:	4486      	add	lr, r0
 80058d4:	b288      	uxth	r0, r1
 80058d6:	ebc0 4016 	rsb	r0, r0, r6, lsr #16
 80058da:	ea4f 4711 	mov.w	r7, r1, lsr #16
 80058de:	eb00 402e 	add.w	r0, r0, lr, asr #16
 80058e2:	fa1f fe8e 	uxth.w	lr, lr
 80058e6:	ea4e 4100 	orr.w	r1, lr, r0, lsl #16
 80058ea:	ea4f 4020 	mov.w	r0, r0, asr #16
 80058ee:	f843 1b04 	str.w	r1, [r3], #4
 80058f2:	d2db      	bcs.n	80058ac <quorem+0x54>
 80058f4:	9a02      	ldr	r2, [sp, #8]
 80058f6:	f85a 3002 	ldr.w	r3, [sl, r2]
 80058fa:	b9a3      	cbnz	r3, 8005926 <quorem+0xce>
 80058fc:	9a03      	ldr	r2, [sp, #12]
 80058fe:	1f13      	subs	r3, r2, #4
 8005900:	459a      	cmp	sl, r3
 8005902:	d20e      	bcs.n	8005922 <quorem+0xca>
 8005904:	f852 3c04 	ldr.w	r3, [r2, #-4]
 8005908:	b95b      	cbnz	r3, 8005922 <quorem+0xca>
 800590a:	f1a2 0308 	sub.w	r3, r2, #8
 800590e:	e001      	b.n	8005914 <quorem+0xbc>
 8005910:	6812      	ldr	r2, [r2, #0]
 8005912:	b932      	cbnz	r2, 8005922 <quorem+0xca>
 8005914:	459a      	cmp	sl, r3
 8005916:	461a      	mov	r2, r3
 8005918:	f105 35ff 	add.w	r5, r5, #4294967295
 800591c:	f1a3 0304 	sub.w	r3, r3, #4
 8005920:	d3f6      	bcc.n	8005910 <quorem+0xb8>
 8005922:	f8cb 5010 	str.w	r5, [fp, #16]
 8005926:	4661      	mov	r1, ip
 8005928:	4658      	mov	r0, fp
 800592a:	f001 fe47 	bl	80075bc <__mcmp>
 800592e:	2800      	cmp	r0, #0
 8005930:	db33      	blt.n	800599a <quorem+0x142>
 8005932:	f108 0801 	add.w	r8, r8, #1
 8005936:	4653      	mov	r3, sl
 8005938:	2200      	movs	r2, #0
 800593a:	f854 6b04 	ldr.w	r6, [r4], #4
 800593e:	6818      	ldr	r0, [r3, #0]
 8005940:	45a1      	cmp	r9, r4
 8005942:	b2b1      	uxth	r1, r6
 8005944:	ea4f 4616 	mov.w	r6, r6, lsr #16
 8005948:	ebc1 0202 	rsb	r2, r1, r2
 800594c:	b287      	uxth	r7, r0
 800594e:	eb02 0107 	add.w	r1, r2, r7
 8005952:	ebc6 4210 	rsb	r2, r6, r0, lsr #16
 8005956:	eb02 4221 	add.w	r2, r2, r1, asr #16
 800595a:	b289      	uxth	r1, r1
 800595c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8005960:	ea4f 4222 	mov.w	r2, r2, asr #16
 8005964:	f843 1b04 	str.w	r1, [r3], #4
 8005968:	d2e7      	bcs.n	800593a <quorem+0xe2>
 800596a:	f85a 2025 	ldr.w	r2, [sl, r5, lsl #2]
 800596e:	eb0a 0385 	add.w	r3, sl, r5, lsl #2
 8005972:	b992      	cbnz	r2, 800599a <quorem+0x142>
 8005974:	1f1a      	subs	r2, r3, #4
 8005976:	4592      	cmp	sl, r2
 8005978:	d20d      	bcs.n	8005996 <quorem+0x13e>
 800597a:	f853 2c04 	ldr.w	r2, [r3, #-4]
 800597e:	b952      	cbnz	r2, 8005996 <quorem+0x13e>
 8005980:	3b08      	subs	r3, #8
 8005982:	e001      	b.n	8005988 <quorem+0x130>
 8005984:	6812      	ldr	r2, [r2, #0]
 8005986:	b932      	cbnz	r2, 8005996 <quorem+0x13e>
 8005988:	459a      	cmp	sl, r3
 800598a:	461a      	mov	r2, r3
 800598c:	f105 35ff 	add.w	r5, r5, #4294967295
 8005990:	f1a3 0304 	sub.w	r3, r3, #4
 8005994:	d3f6      	bcc.n	8005984 <quorem+0x12c>
 8005996:	f8cb 5010 	str.w	r5, [fp, #16]
 800599a:	4640      	mov	r0, r8
 800599c:	b005      	add	sp, #20
 800599e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80059a2:	bf00      	nop

080059a4 <_dtoa_r>:
 80059a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80059a8:	b09b      	sub	sp, #108	; 0x6c
 80059aa:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80059ac:	4604      	mov	r4, r0
 80059ae:	4692      	mov	sl, r2
 80059b0:	469b      	mov	fp, r3
 80059b2:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 80059b4:	2e00      	cmp	r6, #0
 80059b6:	f000 82bb 	beq.w	8005f30 <_dtoa_r+0x58c>
 80059ba:	6833      	ldr	r3, [r6, #0]
 80059bc:	b153      	cbz	r3, 80059d4 <_dtoa_r+0x30>
 80059be:	6872      	ldr	r2, [r6, #4]
 80059c0:	2601      	movs	r6, #1
 80059c2:	4619      	mov	r1, r3
 80059c4:	4096      	lsls	r6, r2
 80059c6:	609e      	str	r6, [r3, #8]
 80059c8:	605a      	str	r2, [r3, #4]
 80059ca:	f001 fb9d 	bl	8007108 <_Bfree>
 80059ce:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80059d0:	2200      	movs	r2, #0
 80059d2:	601a      	str	r2, [r3, #0]
 80059d4:	f1bb 0f00 	cmp.w	fp, #0
 80059d8:	bfb4      	ite	lt
 80059da:	2301      	movlt	r3, #1
 80059dc:	2300      	movge	r3, #0
 80059de:	602b      	str	r3, [r5, #0]
 80059e0:	f04f 0300 	mov.w	r3, #0
 80059e4:	bfb4      	ite	lt
 80059e6:	f02b 4900 	biclt.w	r9, fp, #2147483648	; 0x80000000
 80059ea:	46d9      	movge	r9, fp
 80059ec:	461a      	mov	r2, r3
 80059ee:	f6c7 73f0 	movt	r3, #32752	; 0x7ff0
 80059f2:	f6c7 72f0 	movt	r2, #32752	; 0x7ff0
 80059f6:	ea09 0303 	and.w	r3, r9, r3
 80059fa:	bfb8      	it	lt
 80059fc:	46cb      	movlt	fp, r9
 80059fe:	4293      	cmp	r3, r2
 8005a00:	d014      	beq.n	8005a2c <_dtoa_r+0x88>
 8005a02:	2200      	movs	r2, #0
 8005a04:	2300      	movs	r3, #0
 8005a06:	4650      	mov	r0, sl
 8005a08:	4659      	mov	r1, fp
 8005a0a:	f004 f933 	bl	8009c74 <__aeabi_dcmpeq>
 8005a0e:	4680      	mov	r8, r0
 8005a10:	b328      	cbz	r0, 8005a5e <_dtoa_r+0xba>
 8005a12:	9e26      	ldr	r6, [sp, #152]	; 0x98
 8005a14:	2301      	movs	r3, #1
 8005a16:	6033      	str	r3, [r6, #0]
 8005a18:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 8005a1a:	2e00      	cmp	r6, #0
 8005a1c:	f000 80dc 	beq.w	8005bd8 <_dtoa_r+0x234>
 8005a20:	4baf      	ldr	r3, [pc, #700]	; (8005ce0 <_dtoa_r+0x33c>)
 8005a22:	1e58      	subs	r0, r3, #1
 8005a24:	6033      	str	r3, [r6, #0]
 8005a26:	b01b      	add	sp, #108	; 0x6c
 8005a28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a2c:	9e26      	ldr	r6, [sp, #152]	; 0x98
 8005a2e:	f64a 1050 	movw	r0, #43344	; 0xa950
 8005a32:	f242 730f 	movw	r3, #9999	; 0x270f
 8005a36:	f6c0 0000 	movt	r0, #2048	; 0x800
 8005a3a:	6033      	str	r3, [r6, #0]
 8005a3c:	f1ba 0f00 	cmp.w	sl, #0
 8005a40:	f000 80aa 	beq.w	8005b98 <_dtoa_r+0x1f4>
 8005a44:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 8005a46:	2e00      	cmp	r6, #0
 8005a48:	d0ed      	beq.n	8005a26 <_dtoa_r+0x82>
 8005a4a:	78c3      	ldrb	r3, [r0, #3]
 8005a4c:	2b00      	cmp	r3, #0
 8005a4e:	f040 80b2 	bne.w	8005bb6 <_dtoa_r+0x212>
 8005a52:	1cc3      	adds	r3, r0, #3
 8005a54:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 8005a56:	6033      	str	r3, [r6, #0]
 8005a58:	b01b      	add	sp, #108	; 0x6c
 8005a5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a5e:	aa19      	add	r2, sp, #100	; 0x64
 8005a60:	ab18      	add	r3, sp, #96	; 0x60
 8005a62:	9200      	str	r2, [sp, #0]
 8005a64:	4620      	mov	r0, r4
 8005a66:	9301      	str	r3, [sp, #4]
 8005a68:	4652      	mov	r2, sl
 8005a6a:	465b      	mov	r3, fp
 8005a6c:	f001 feb6 	bl	80077dc <__d2b>
 8005a70:	ea5f 5519 	movs.w	r5, r9, lsr #20
 8005a74:	900b      	str	r0, [sp, #44]	; 0x2c
 8005a76:	f040 80a1 	bne.w	8005bbc <_dtoa_r+0x218>
 8005a7a:	9f18      	ldr	r7, [sp, #96]	; 0x60
 8005a7c:	f46f 6382 	mvn.w	r3, #1040	; 0x410
 8005a80:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8005a82:	443d      	add	r5, r7
 8005a84:	429d      	cmp	r5, r3
 8005a86:	f2c0 8278 	blt.w	8005f7a <_dtoa_r+0x5d6>
 8005a8a:	f64f 430e 	movw	r3, #64526	; 0xfc0e
 8005a8e:	f205 4212 	addw	r2, r5, #1042	; 0x412
 8005a92:	f6cf 73ff 	movt	r3, #65535	; 0xffff
 8005a96:	fa2a f202 	lsr.w	r2, sl, r2
 8005a9a:	1b5b      	subs	r3, r3, r5
 8005a9c:	fa09 f003 	lsl.w	r0, r9, r3
 8005aa0:	4310      	orrs	r0, r2
 8005aa2:	f003 fe09 	bl	80096b8 <__aeabi_ui2d>
 8005aa6:	3d01      	subs	r5, #1
 8005aa8:	46b8      	mov	r8, r7
 8005aaa:	2601      	movs	r6, #1
 8005aac:	9615      	str	r6, [sp, #84]	; 0x54
 8005aae:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8005ab2:	2300      	movs	r3, #0
 8005ab4:	2200      	movs	r2, #0
 8005ab6:	f6c3 73f8 	movt	r3, #16376	; 0x3ff8
 8005aba:	f003 fcbf 	bl	800943c <__aeabi_dsub>
 8005abe:	a382      	add	r3, pc, #520	; (adr r3, 8005cc8 <_dtoa_r+0x324>)
 8005ac0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005ac4:	f003 fe6e 	bl	80097a4 <__aeabi_dmul>
 8005ac8:	a381      	add	r3, pc, #516	; (adr r3, 8005cd0 <_dtoa_r+0x32c>)
 8005aca:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005ace:	f003 fcb7 	bl	8009440 <__adddf3>
 8005ad2:	4606      	mov	r6, r0
 8005ad4:	4628      	mov	r0, r5
 8005ad6:	460f      	mov	r7, r1
 8005ad8:	f003 fdfe 	bl	80096d8 <__aeabi_i2d>
 8005adc:	a37e      	add	r3, pc, #504	; (adr r3, 8005cd8 <_dtoa_r+0x334>)
 8005ade:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005ae2:	f003 fe5f 	bl	80097a4 <__aeabi_dmul>
 8005ae6:	4602      	mov	r2, r0
 8005ae8:	460b      	mov	r3, r1
 8005aea:	4630      	mov	r0, r6
 8005aec:	4639      	mov	r1, r7
 8005aee:	f003 fca7 	bl	8009440 <__adddf3>
 8005af2:	4606      	mov	r6, r0
 8005af4:	460f      	mov	r7, r1
 8005af6:	f004 f8ef 	bl	8009cd8 <__aeabi_d2iz>
 8005afa:	4639      	mov	r1, r7
 8005afc:	2200      	movs	r2, #0
 8005afe:	2300      	movs	r3, #0
 8005b00:	9004      	str	r0, [sp, #16]
 8005b02:	4630      	mov	r0, r6
 8005b04:	f004 f8c0 	bl	8009c88 <__aeabi_dcmplt>
 8005b08:	2800      	cmp	r0, #0
 8005b0a:	f040 8226 	bne.w	8005f5a <_dtoa_r+0x5b6>
 8005b0e:	9e04      	ldr	r6, [sp, #16]
 8005b10:	2e16      	cmp	r6, #22
 8005b12:	bf84      	itt	hi
 8005b14:	2601      	movhi	r6, #1
 8005b16:	960f      	strhi	r6, [sp, #60]	; 0x3c
 8005b18:	d812      	bhi.n	8005b40 <_dtoa_r+0x19c>
 8005b1a:	f24a 41a8 	movw	r1, #42152	; 0xa4a8
 8005b1e:	4652      	mov	r2, sl
 8005b20:	f6c0 0100 	movt	r1, #2048	; 0x800
 8005b24:	465b      	mov	r3, fp
 8005b26:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 8005b2a:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005b2e:	f004 f8c9 	bl	8009cc4 <__aeabi_dcmpgt>
 8005b32:	2800      	cmp	r0, #0
 8005b34:	f000 821f 	beq.w	8005f76 <_dtoa_r+0x5d2>
 8005b38:	3e01      	subs	r6, #1
 8005b3a:	9604      	str	r6, [sp, #16]
 8005b3c:	2600      	movs	r6, #0
 8005b3e:	960f      	str	r6, [sp, #60]	; 0x3c
 8005b40:	ebc5 0508 	rsb	r5, r5, r8
 8005b44:	3d01      	subs	r5, #1
 8005b46:	9506      	str	r5, [sp, #24]
 8005b48:	bf49      	itett	mi
 8005b4a:	426e      	negmi	r6, r5
 8005b4c:	2600      	movpl	r6, #0
 8005b4e:	960a      	strmi	r6, [sp, #40]	; 0x28
 8005b50:	2600      	movmi	r6, #0
 8005b52:	bf54      	ite	pl
 8005b54:	960a      	strpl	r6, [sp, #40]	; 0x28
 8005b56:	9606      	strmi	r6, [sp, #24]
 8005b58:	9e04      	ldr	r6, [sp, #16]
 8005b5a:	2e00      	cmp	r6, #0
 8005b5c:	f2c0 81f1 	blt.w	8005f42 <_dtoa_r+0x59e>
 8005b60:	f8dd e018 	ldr.w	lr, [sp, #24]
 8005b64:	960e      	str	r6, [sp, #56]	; 0x38
 8005b66:	44b6      	add	lr, r6
 8005b68:	2600      	movs	r6, #0
 8005b6a:	f8cd e018 	str.w	lr, [sp, #24]
 8005b6e:	960c      	str	r6, [sp, #48]	; 0x30
 8005b70:	9e24      	ldr	r6, [sp, #144]	; 0x90
 8005b72:	2e09      	cmp	r6, #9
 8005b74:	d835      	bhi.n	8005be2 <_dtoa_r+0x23e>
 8005b76:	2e05      	cmp	r6, #5
 8005b78:	bfc4      	itt	gt
 8005b7a:	3e04      	subgt	r6, #4
 8005b7c:	9624      	strgt	r6, [sp, #144]	; 0x90
 8005b7e:	9e24      	ldr	r6, [sp, #144]	; 0x90
 8005b80:	bfcc      	ite	gt
 8005b82:	2500      	movgt	r5, #0
 8005b84:	2501      	movle	r5, #1
 8005b86:	1eb3      	subs	r3, r6, #2
 8005b88:	2b03      	cmp	r3, #3
 8005b8a:	d82c      	bhi.n	8005be6 <_dtoa_r+0x242>
 8005b8c:	e8df f013 	tbh	[pc, r3, lsl #1]
 8005b90:	02290361 	eoreq	r0, r9, #-2080374783	; 0x84000001
 8005b94:	058d0370 	streq	r0, [sp, #880]	; 0x370
 8005b98:	f64a 1244 	movw	r2, #43332	; 0xa944
 8005b9c:	f64a 1350 	movw	r3, #43344	; 0xa950
 8005ba0:	f3c9 0013 	ubfx	r0, r9, #0, #20
 8005ba4:	f6c0 0200 	movt	r2, #2048	; 0x800
 8005ba8:	f6c0 0300 	movt	r3, #2048	; 0x800
 8005bac:	2800      	cmp	r0, #0
 8005bae:	bf0c      	ite	eq
 8005bb0:	4610      	moveq	r0, r2
 8005bb2:	4618      	movne	r0, r3
 8005bb4:	e746      	b.n	8005a44 <_dtoa_r+0xa0>
 8005bb6:	f100 0308 	add.w	r3, r0, #8
 8005bba:	e74b      	b.n	8005a54 <_dtoa_r+0xb0>
 8005bbc:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8005bc0:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
 8005bc4:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 8005bc8:	4650      	mov	r0, sl
 8005bca:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8005bce:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8005bd2:	f443 1140 	orr.w	r1, r3, #3145728	; 0x300000
 8005bd6:	e76c      	b.n	8005ab2 <_dtoa_r+0x10e>
 8005bd8:	f64a 1040 	movw	r0, #43328	; 0xa940
 8005bdc:	f6c0 0000 	movt	r0, #2048	; 0x800
 8005be0:	e721      	b.n	8005a26 <_dtoa_r+0x82>
 8005be2:	2600      	movs	r6, #0
 8005be4:	9624      	str	r6, [sp, #144]	; 0x90
 8005be6:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8005be8:	2300      	movs	r3, #0
 8005bea:	4619      	mov	r1, r3
 8005bec:	4620      	mov	r0, r4
 8005bee:	f04f 36ff 	mov.w	r6, #4294967295
 8005bf2:	9325      	str	r3, [sp, #148]	; 0x94
 8005bf4:	606b      	str	r3, [r5, #4]
 8005bf6:	9609      	str	r6, [sp, #36]	; 0x24
 8005bf8:	9614      	str	r6, [sp, #80]	; 0x50
 8005bfa:	f001 fa4f 	bl	800709c <_Balloc>
 8005bfe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005c00:	2601      	movs	r6, #1
 8005c02:	960d      	str	r6, [sp, #52]	; 0x34
 8005c04:	6028      	str	r0, [r5, #0]
 8005c06:	681b      	ldr	r3, [r3, #0]
 8005c08:	9308      	str	r3, [sp, #32]
 8005c0a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005c0c:	2b00      	cmp	r3, #0
 8005c0e:	f2c0 80c7 	blt.w	8005da0 <_dtoa_r+0x3fc>
 8005c12:	9e04      	ldr	r6, [sp, #16]
 8005c14:	2e0e      	cmp	r6, #14
 8005c16:	f300 80c3 	bgt.w	8005da0 <_dtoa_r+0x3fc>
 8005c1a:	f8dd e094 	ldr.w	lr, [sp, #148]	; 0x94
 8005c1e:	f24a 43a8 	movw	r3, #42152	; 0xa4a8
 8005c22:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8005c24:	f6c0 0300 	movt	r3, #2048	; 0x800
 8005c28:	ea4f 72de 	mov.w	r2, lr, lsr #31
 8005c2c:	2e00      	cmp	r6, #0
 8005c2e:	bfcc      	ite	gt
 8005c30:	2200      	movgt	r2, #0
 8005c32:	f002 0201 	andle.w	r2, r2, #1
 8005c36:	9e04      	ldr	r6, [sp, #16]
 8005c38:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8005c3c:	e9d3 0100 	ldrd	r0, r1, [r3]
 8005c40:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8005c44:	2a00      	cmp	r2, #0
 8005c46:	f040 846e 	bne.w	8006526 <_dtoa_r+0xb82>
 8005c4a:	4602      	mov	r2, r0
 8005c4c:	460b      	mov	r3, r1
 8005c4e:	4650      	mov	r0, sl
 8005c50:	4659      	mov	r1, fp
 8005c52:	f003 fed1 	bl	80099f8 <__aeabi_ddiv>
 8005c56:	9e08      	ldr	r6, [sp, #32]
 8005c58:	f004 f83e 	bl	8009cd8 <__aeabi_d2iz>
 8005c5c:	1c75      	adds	r5, r6, #1
 8005c5e:	4680      	mov	r8, r0
 8005c60:	f003 fd3a 	bl	80096d8 <__aeabi_i2d>
 8005c64:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8005c68:	f003 fd9c 	bl	80097a4 <__aeabi_dmul>
 8005c6c:	4602      	mov	r2, r0
 8005c6e:	460b      	mov	r3, r1
 8005c70:	4650      	mov	r0, sl
 8005c72:	4659      	mov	r1, fp
 8005c74:	f003 fbe2 	bl	800943c <__aeabi_dsub>
 8005c78:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005c7a:	f8dd e020 	ldr.w	lr, [sp, #32]
 8005c7e:	f108 0330 	add.w	r3, r8, #48	; 0x30
 8005c82:	2a01      	cmp	r2, #1
 8005c84:	f88e 3000 	strb.w	r3, [lr]
 8005c88:	4606      	mov	r6, r0
 8005c8a:	460f      	mov	r7, r1
 8005c8c:	d05b      	beq.n	8005d46 <_dtoa_r+0x3a2>
 8005c8e:	2300      	movs	r3, #0
 8005c90:	2200      	movs	r2, #0
 8005c92:	f2c4 0324 	movt	r3, #16420	; 0x4024
 8005c96:	f003 fd85 	bl	80097a4 <__aeabi_dmul>
 8005c9a:	2200      	movs	r2, #0
 8005c9c:	2300      	movs	r3, #0
 8005c9e:	4606      	mov	r6, r0
 8005ca0:	460f      	mov	r7, r1
 8005ca2:	f003 ffe7 	bl	8009c74 <__aeabi_dcmpeq>
 8005ca6:	2800      	cmp	r0, #0
 8005ca8:	f040 8519 	bne.w	80066de <_dtoa_r+0xd3a>
 8005cac:	f8dd a020 	ldr.w	sl, [sp, #32]
 8005cb0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005cb2:	9908      	ldr	r1, [sp, #32]
 8005cb4:	4482      	add	sl, r0
 8005cb6:	f8cd a00c 	str.w	sl, [sp, #12]
 8005cba:	f101 0902 	add.w	r9, r1, #2
 8005cbe:	e9dd ab06 	ldrd	sl, fp, [sp, #24]
 8005cc2:	e01a      	b.n	8005cfa <_dtoa_r+0x356>
 8005cc4:	f3af 8000 	nop.w
 8005cc8:	636f4361 	cmnvs	pc, #-2080374783	; 0x84000001
 8005ccc:	3fd287a7 	svccc	0x00d287a7
 8005cd0:	8b60c8b3 	blhi	9837fa4 <__RW_LOAD_ADDR__+0x182d644>
 8005cd4:	3fc68a28 	svccc	0x00c68a28
 8005cd8:	509f79fb 			; <UNDEFINED> instruction: 0x509f79fb
 8005cdc:	3fd34413 	svccc	0x00d34413
 8005ce0:	0800a941 	stmdaeq	r0, {r0, r6, r8, fp, sp, pc}
 8005ce4:	f003 fd5e 	bl	80097a4 <__aeabi_dmul>
 8005ce8:	2200      	movs	r2, #0
 8005cea:	2300      	movs	r3, #0
 8005cec:	4606      	mov	r6, r0
 8005cee:	460f      	mov	r7, r1
 8005cf0:	f003 ffc0 	bl	8009c74 <__aeabi_dcmpeq>
 8005cf4:	2800      	cmp	r0, #0
 8005cf6:	f040 84f2 	bne.w	80066de <_dtoa_r+0xd3a>
 8005cfa:	4652      	mov	r2, sl
 8005cfc:	465b      	mov	r3, fp
 8005cfe:	4630      	mov	r0, r6
 8005d00:	4639      	mov	r1, r7
 8005d02:	f003 fe79 	bl	80099f8 <__aeabi_ddiv>
 8005d06:	464d      	mov	r5, r9
 8005d08:	f003 ffe6 	bl	8009cd8 <__aeabi_d2iz>
 8005d0c:	4680      	mov	r8, r0
 8005d0e:	f003 fce3 	bl	80096d8 <__aeabi_i2d>
 8005d12:	4652      	mov	r2, sl
 8005d14:	465b      	mov	r3, fp
 8005d16:	f003 fd45 	bl	80097a4 <__aeabi_dmul>
 8005d1a:	4602      	mov	r2, r0
 8005d1c:	460b      	mov	r3, r1
 8005d1e:	4630      	mov	r0, r6
 8005d20:	4639      	mov	r1, r7
 8005d22:	f003 fb8b 	bl	800943c <__aeabi_dsub>
 8005d26:	f108 0e30 	add.w	lr, r8, #48	; 0x30
 8005d2a:	f809 ec01 	strb.w	lr, [r9, #-1]
 8005d2e:	2300      	movs	r3, #0
 8005d30:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8005d34:	2200      	movs	r2, #0
 8005d36:	f2c4 0324 	movt	r3, #16420	; 0x4024
 8005d3a:	45f1      	cmp	r9, lr
 8005d3c:	f109 0901 	add.w	r9, r9, #1
 8005d40:	4606      	mov	r6, r0
 8005d42:	460f      	mov	r7, r1
 8005d44:	d1ce      	bne.n	8005ce4 <_dtoa_r+0x340>
 8005d46:	4632      	mov	r2, r6
 8005d48:	463b      	mov	r3, r7
 8005d4a:	4630      	mov	r0, r6
 8005d4c:	4639      	mov	r1, r7
 8005d4e:	f003 fb77 	bl	8009440 <__adddf3>
 8005d52:	4606      	mov	r6, r0
 8005d54:	460f      	mov	r7, r1
 8005d56:	4632      	mov	r2, r6
 8005d58:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8005d5c:	463b      	mov	r3, r7
 8005d5e:	f003 ff93 	bl	8009c88 <__aeabi_dcmplt>
 8005d62:	2800      	cmp	r0, #0
 8005d64:	f000 8570 	beq.w	8006848 <_dtoa_r+0xea4>
 8005d68:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8005d6c:	9e04      	ldr	r6, [sp, #16]
 8005d6e:	462a      	mov	r2, r5
 8005d70:	f815 8c01 	ldrb.w	r8, [r5, #-1]
 8005d74:	9508      	str	r5, [sp, #32]
 8005d76:	9616      	str	r6, [sp, #88]	; 0x58
 8005d78:	e005      	b.n	8005d86 <_dtoa_r+0x3e2>
 8005d7a:	454b      	cmp	r3, r9
 8005d7c:	f000 84b8 	beq.w	80066f0 <_dtoa_r+0xd4c>
 8005d80:	f813 8c01 	ldrb.w	r8, [r3, #-1]
 8005d84:	461a      	mov	r2, r3
 8005d86:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8005d8a:	f102 33ff 	add.w	r3, r2, #4294967295
 8005d8e:	d0f4      	beq.n	8005d7a <_dtoa_r+0x3d6>
 8005d90:	9e16      	ldr	r6, [sp, #88]	; 0x58
 8005d92:	9208      	str	r2, [sp, #32]
 8005d94:	f108 0201 	add.w	r2, r8, #1
 8005d98:	9604      	str	r6, [sp, #16]
 8005d9a:	b2d2      	uxtb	r2, r2
 8005d9c:	701a      	strb	r2, [r3, #0]
 8005d9e:	e0b1      	b.n	8005f04 <_dtoa_r+0x560>
 8005da0:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8005da2:	2e00      	cmp	r6, #0
 8005da4:	f040 80f1 	bne.w	8005f8a <_dtoa_r+0x5e6>
 8005da8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8005daa:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8005dac:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 8005db0:	9806      	ldr	r0, [sp, #24]
 8005db2:	2800      	cmp	r0, #0
 8005db4:	bfc8      	it	gt
 8005db6:	2d00      	cmpgt	r5, #0
 8005db8:	dd09      	ble.n	8005dce <_dtoa_r+0x42a>
 8005dba:	4603      	mov	r3, r0
 8005dbc:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005dbe:	42ab      	cmp	r3, r5
 8005dc0:	bfa8      	it	ge
 8005dc2:	462b      	movge	r3, r5
 8005dc4:	1aed      	subs	r5, r5, r3
 8005dc6:	1ac9      	subs	r1, r1, r3
 8005dc8:	1ac0      	subs	r0, r0, r3
 8005dca:	910a      	str	r1, [sp, #40]	; 0x28
 8005dcc:	9006      	str	r0, [sp, #24]
 8005dce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005dd0:	2a00      	cmp	r2, #0
 8005dd2:	dd1c      	ble.n	8005e0e <_dtoa_r+0x46a>
 8005dd4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005dd6:	2b00      	cmp	r3, #0
 8005dd8:	f000 8479 	beq.w	80066ce <_dtoa_r+0xd2a>
 8005ddc:	2e00      	cmp	r6, #0
 8005dde:	dd10      	ble.n	8005e02 <_dtoa_r+0x45e>
 8005de0:	4641      	mov	r1, r8
 8005de2:	4632      	mov	r2, r6
 8005de4:	4620      	mov	r0, r4
 8005de6:	f001 fb31 	bl	800744c <__pow5mult>
 8005dea:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005dec:	4680      	mov	r8, r0
 8005dee:	4620      	mov	r0, r4
 8005df0:	4641      	mov	r1, r8
 8005df2:	f001 fa8b 	bl	800730c <__multiply>
 8005df6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005df8:	4607      	mov	r7, r0
 8005dfa:	4620      	mov	r0, r4
 8005dfc:	f001 f984 	bl	8007108 <_Bfree>
 8005e00:	970b      	str	r7, [sp, #44]	; 0x2c
 8005e02:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 8005e06:	ebbe 0206 	subs.w	r2, lr, r6
 8005e0a:	f040 84a7 	bne.w	800675c <_dtoa_r+0xdb8>
 8005e0e:	4620      	mov	r0, r4
 8005e10:	2101      	movs	r1, #1
 8005e12:	f001 fa71 	bl	80072f8 <__i2b>
 8005e16:	4606      	mov	r6, r0
 8005e18:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005e1a:	2800      	cmp	r0, #0
 8005e1c:	dd05      	ble.n	8005e2a <_dtoa_r+0x486>
 8005e1e:	4631      	mov	r1, r6
 8005e20:	4620      	mov	r0, r4
 8005e22:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005e24:	f001 fb12 	bl	800744c <__pow5mult>
 8005e28:	4606      	mov	r6, r0
 8005e2a:	9924      	ldr	r1, [sp, #144]	; 0x90
 8005e2c:	2901      	cmp	r1, #1
 8005e2e:	f340 8390 	ble.w	8006552 <_dtoa_r+0xbae>
 8005e32:	2700      	movs	r7, #0
 8005e34:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005e36:	2800      	cmp	r0, #0
 8005e38:	f040 836c 	bne.w	8006514 <_dtoa_r+0xb70>
 8005e3c:	2001      	movs	r0, #1
 8005e3e:	9b06      	ldr	r3, [sp, #24]
 8005e40:	4403      	add	r3, r0
 8005e42:	f013 031f 	ands.w	r3, r3, #31
 8005e46:	f000 8293 	beq.w	8006370 <_dtoa_r+0x9cc>
 8005e4a:	f1c3 0220 	rsb	r2, r3, #32
 8005e4e:	2a04      	cmp	r2, #4
 8005e50:	f340 8568 	ble.w	8006924 <_dtoa_r+0xf80>
 8005e54:	f1c3 031c 	rsb	r3, r3, #28
 8005e58:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005e5a:	9a06      	ldr	r2, [sp, #24]
 8005e5c:	441d      	add	r5, r3
 8005e5e:	4419      	add	r1, r3
 8005e60:	910a      	str	r1, [sp, #40]	; 0x28
 8005e62:	441a      	add	r2, r3
 8005e64:	9206      	str	r2, [sp, #24]
 8005e66:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005e68:	2900      	cmp	r1, #0
 8005e6a:	dd05      	ble.n	8005e78 <_dtoa_r+0x4d4>
 8005e6c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005e6e:	4620      	mov	r0, r4
 8005e70:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005e72:	f001 fb47 	bl	8007504 <__lshift>
 8005e76:	900b      	str	r0, [sp, #44]	; 0x2c
 8005e78:	9a06      	ldr	r2, [sp, #24]
 8005e7a:	2a00      	cmp	r2, #0
 8005e7c:	dd04      	ble.n	8005e88 <_dtoa_r+0x4e4>
 8005e7e:	4631      	mov	r1, r6
 8005e80:	4620      	mov	r0, r4
 8005e82:	f001 fb3f 	bl	8007504 <__lshift>
 8005e86:	4606      	mov	r6, r0
 8005e88:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005e8a:	2b00      	cmp	r3, #0
 8005e8c:	f040 8321 	bne.w	80064d2 <_dtoa_r+0xb2e>
 8005e90:	9824      	ldr	r0, [sp, #144]	; 0x90
 8005e92:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005e94:	2802      	cmp	r0, #2
 8005e96:	bfd4      	ite	le
 8005e98:	2300      	movle	r3, #0
 8005e9a:	2301      	movgt	r3, #1
 8005e9c:	2900      	cmp	r1, #0
 8005e9e:	bfc8      	it	gt
 8005ea0:	2300      	movgt	r3, #0
 8005ea2:	2b00      	cmp	r3, #0
 8005ea4:	f000 821a 	beq.w	80062dc <_dtoa_r+0x938>
 8005ea8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005eaa:	2800      	cmp	r0, #0
 8005eac:	f040 820f 	bne.w	80062ce <_dtoa_r+0x92a>
 8005eb0:	4631      	mov	r1, r6
 8005eb2:	4603      	mov	r3, r0
 8005eb4:	2205      	movs	r2, #5
 8005eb6:	4620      	mov	r0, r4
 8005eb8:	f001 f942 	bl	8007140 <__multadd>
 8005ebc:	4606      	mov	r6, r0
 8005ebe:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8005ec0:	4631      	mov	r1, r6
 8005ec2:	f001 fb7b 	bl	80075bc <__mcmp>
 8005ec6:	2800      	cmp	r0, #0
 8005ec8:	f340 8201 	ble.w	80062ce <_dtoa_r+0x92a>
 8005ecc:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8005ed0:	2500      	movs	r5, #0
 8005ed2:	9a04      	ldr	r2, [sp, #16]
 8005ed4:	2331      	movs	r3, #49	; 0x31
 8005ed6:	3201      	adds	r2, #1
 8005ed8:	f889 3000 	strb.w	r3, [r9]
 8005edc:	9204      	str	r2, [sp, #16]
 8005ede:	f109 0301 	add.w	r3, r9, #1
 8005ee2:	9308      	str	r3, [sp, #32]
 8005ee4:	4631      	mov	r1, r6
 8005ee6:	4620      	mov	r0, r4
 8005ee8:	f001 f90e 	bl	8007108 <_Bfree>
 8005eec:	f1b8 0f00 	cmp.w	r8, #0
 8005ef0:	d008      	beq.n	8005f04 <_dtoa_r+0x560>
 8005ef2:	4545      	cmp	r5, r8
 8005ef4:	bf18      	it	ne
 8005ef6:	2d00      	cmpne	r5, #0
 8005ef8:	f040 824a 	bne.w	8006390 <_dtoa_r+0x9ec>
 8005efc:	4641      	mov	r1, r8
 8005efe:	4620      	mov	r0, r4
 8005f00:	f001 f902 	bl	8007108 <_Bfree>
 8005f04:	4620      	mov	r0, r4
 8005f06:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005f08:	f001 f8fe 	bl	8007108 <_Bfree>
 8005f0c:	9e04      	ldr	r6, [sp, #16]
 8005f0e:	2200      	movs	r2, #0
 8005f10:	4648      	mov	r0, r9
 8005f12:	1c73      	adds	r3, r6, #1
 8005f14:	9e08      	ldr	r6, [sp, #32]
 8005f16:	7032      	strb	r2, [r6, #0]
 8005f18:	9e26      	ldr	r6, [sp, #152]	; 0x98
 8005f1a:	6033      	str	r3, [r6, #0]
 8005f1c:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 8005f1e:	2e00      	cmp	r6, #0
 8005f20:	f43f ad81 	beq.w	8005a26 <_dtoa_r+0x82>
 8005f24:	9808      	ldr	r0, [sp, #32]
 8005f26:	6030      	str	r0, [r6, #0]
 8005f28:	4648      	mov	r0, r9
 8005f2a:	b01b      	add	sp, #108	; 0x6c
 8005f2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f30:	2010      	movs	r0, #16
 8005f32:	f000 fd4b 	bl	80069cc <malloc>
 8005f36:	6260      	str	r0, [r4, #36]	; 0x24
 8005f38:	6046      	str	r6, [r0, #4]
 8005f3a:	6086      	str	r6, [r0, #8]
 8005f3c:	6006      	str	r6, [r0, #0]
 8005f3e:	60c6      	str	r6, [r0, #12]
 8005f40:	e548      	b.n	80059d4 <_dtoa_r+0x30>
 8005f42:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8005f44:	f8dd e010 	ldr.w	lr, [sp, #16]
 8005f48:	ebce 0606 	rsb	r6, lr, r6
 8005f4c:	960a      	str	r6, [sp, #40]	; 0x28
 8005f4e:	f1ce 0600 	rsb	r6, lr, #0
 8005f52:	960c      	str	r6, [sp, #48]	; 0x30
 8005f54:	2600      	movs	r6, #0
 8005f56:	960e      	str	r6, [sp, #56]	; 0x38
 8005f58:	e60a      	b.n	8005b70 <_dtoa_r+0x1cc>
 8005f5a:	9804      	ldr	r0, [sp, #16]
 8005f5c:	f003 fbbc 	bl	80096d8 <__aeabi_i2d>
 8005f60:	4632      	mov	r2, r6
 8005f62:	463b      	mov	r3, r7
 8005f64:	f003 fe86 	bl	8009c74 <__aeabi_dcmpeq>
 8005f68:	2800      	cmp	r0, #0
 8005f6a:	f47f add0 	bne.w	8005b0e <_dtoa_r+0x16a>
 8005f6e:	9e04      	ldr	r6, [sp, #16]
 8005f70:	3e01      	subs	r6, #1
 8005f72:	9604      	str	r6, [sp, #16]
 8005f74:	e5cb      	b.n	8005b0e <_dtoa_r+0x16a>
 8005f76:	900f      	str	r0, [sp, #60]	; 0x3c
 8005f78:	e5e2      	b.n	8005b40 <_dtoa_r+0x19c>
 8005f7a:	f64f 30ee 	movw	r0, #64494	; 0xfbee
 8005f7e:	f6cf 70ff 	movt	r0, #65535	; 0xffff
 8005f82:	1b40      	subs	r0, r0, r5
 8005f84:	fa0a f000 	lsl.w	r0, sl, r0
 8005f88:	e58b      	b.n	8005aa2 <_dtoa_r+0xfe>
 8005f8a:	9e24      	ldr	r6, [sp, #144]	; 0x90
 8005f8c:	2e01      	cmp	r6, #1
 8005f8e:	f340 8415 	ble.w	80067bc <_dtoa_r+0xe18>
 8005f92:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005f94:	990c      	ldr	r1, [sp, #48]	; 0x30
 8005f96:	1e46      	subs	r6, r0, #1
 8005f98:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005f9a:	42b1      	cmp	r1, r6
 8005f9c:	bfaf      	iteee	ge
 8005f9e:	ebc6 0601 	rsbge	r6, r6, r1
 8005fa2:	9a0c      	ldrlt	r2, [sp, #48]	; 0x30
 8005fa4:	960c      	strlt	r6, [sp, #48]	; 0x30
 8005fa6:	ebc2 0306 	rsblt	r3, r2, r6
 8005faa:	bfbf      	itttt	lt
 8005fac:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 8005fae:	18f6      	addlt	r6, r6, r3
 8005fb0:	960e      	strlt	r6, [sp, #56]	; 0x38
 8005fb2:	2600      	movlt	r6, #0
 8005fb4:	2800      	cmp	r0, #0
 8005fb6:	bfb9      	ittee	lt
 8005fb8:	2300      	movlt	r3, #0
 8005fba:	990a      	ldrlt	r1, [sp, #40]	; 0x28
 8005fbc:	9d0a      	ldrge	r5, [sp, #40]	; 0x28
 8005fbe:	9b09      	ldrge	r3, [sp, #36]	; 0x24
 8005fc0:	bfb8      	it	lt
 8005fc2:	ebc0 0501 	rsblt	r5, r0, r1
 8005fc6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005fc8:	4620      	mov	r0, r4
 8005fca:	f8dd e018 	ldr.w	lr, [sp, #24]
 8005fce:	2101      	movs	r1, #1
 8005fd0:	441a      	add	r2, r3
 8005fd2:	920a      	str	r2, [sp, #40]	; 0x28
 8005fd4:	449e      	add	lr, r3
 8005fd6:	f8cd e018 	str.w	lr, [sp, #24]
 8005fda:	f001 f98d 	bl	80072f8 <__i2b>
 8005fde:	4680      	mov	r8, r0
 8005fe0:	e6e6      	b.n	8005db0 <_dtoa_r+0x40c>
 8005fe2:	2600      	movs	r6, #0
 8005fe4:	960d      	str	r6, [sp, #52]	; 0x34
 8005fe6:	9e04      	ldr	r6, [sp, #16]
 8005fe8:	f8dd e094 	ldr.w	lr, [sp, #148]	; 0x94
 8005fec:	44b6      	add	lr, r6
 8005fee:	f8cd e050 	str.w	lr, [sp, #80]	; 0x50
 8005ff2:	f10e 0601 	add.w	r6, lr, #1
 8005ff6:	9609      	str	r6, [sp, #36]	; 0x24
 8005ff8:	2e00      	cmp	r6, #0
 8005ffa:	f340 8359 	ble.w	80066b0 <_dtoa_r+0xd0c>
 8005ffe:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8006000:	2e0e      	cmp	r6, #14
 8006002:	bf8c      	ite	hi
 8006004:	2500      	movhi	r5, #0
 8006006:	f005 0501 	andls.w	r5, r5, #1
 800600a:	4637      	mov	r7, r6
 800600c:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800600e:	2f17      	cmp	r7, #23
 8006010:	f04f 0100 	mov.w	r1, #0
 8006014:	6071      	str	r1, [r6, #4]
 8006016:	d909      	bls.n	800602c <_dtoa_r+0x688>
 8006018:	2201      	movs	r2, #1
 800601a:	2304      	movs	r3, #4
 800601c:	005b      	lsls	r3, r3, #1
 800601e:	4611      	mov	r1, r2
 8006020:	f103 0014 	add.w	r0, r3, #20
 8006024:	3201      	adds	r2, #1
 8006026:	42b8      	cmp	r0, r7
 8006028:	d9f8      	bls.n	800601c <_dtoa_r+0x678>
 800602a:	6071      	str	r1, [r6, #4]
 800602c:	4620      	mov	r0, r4
 800602e:	f001 f835 	bl	800709c <_Balloc>
 8006032:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006034:	6030      	str	r0, [r6, #0]
 8006036:	681b      	ldr	r3, [r3, #0]
 8006038:	9308      	str	r3, [sp, #32]
 800603a:	2d00      	cmp	r5, #0
 800603c:	f43f ade5 	beq.w	8005c0a <_dtoa_r+0x266>
 8006040:	9e04      	ldr	r6, [sp, #16]
 8006042:	e9cd ab12 	strd	sl, fp, [sp, #72]	; 0x48
 8006046:	2e00      	cmp	r6, #0
 8006048:	f340 81ab 	ble.w	80063a2 <_dtoa_r+0x9fe>
 800604c:	f006 020f 	and.w	r2, r6, #15
 8006050:	f24a 43a8 	movw	r3, #42152	; 0xa4a8
 8006054:	1135      	asrs	r5, r6, #4
 8006056:	f6c0 0300 	movt	r3, #2048	; 0x800
 800605a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800605e:	06e9      	lsls	r1, r5, #27
 8006060:	e9d3 6700 	ldrd	r6, r7, [r3]
 8006064:	f140 818f 	bpl.w	8006386 <_dtoa_r+0x9e2>
 8006068:	f24a 5398 	movw	r3, #42392	; 0xa598
 800606c:	4650      	mov	r0, sl
 800606e:	f6c0 0300 	movt	r3, #2048	; 0x800
 8006072:	4659      	mov	r1, fp
 8006074:	f005 050f 	and.w	r5, r5, #15
 8006078:	f04f 0803 	mov.w	r8, #3
 800607c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8006080:	f003 fcba 	bl	80099f8 <__aeabi_ddiv>
 8006084:	4682      	mov	sl, r0
 8006086:	468b      	mov	fp, r1
 8006088:	b19d      	cbz	r5, 80060b2 <_dtoa_r+0x70e>
 800608a:	f24a 5998 	movw	r9, #42392	; 0xa598
 800608e:	f6c0 0900 	movt	r9, #2048	; 0x800
 8006092:	07ea      	lsls	r2, r5, #31
 8006094:	4630      	mov	r0, r6
 8006096:	4639      	mov	r1, r7
 8006098:	d507      	bpl.n	80060aa <_dtoa_r+0x706>
 800609a:	e9d9 2300 	ldrd	r2, r3, [r9]
 800609e:	f108 0801 	add.w	r8, r8, #1
 80060a2:	f003 fb7f 	bl	80097a4 <__aeabi_dmul>
 80060a6:	4606      	mov	r6, r0
 80060a8:	460f      	mov	r7, r1
 80060aa:	106d      	asrs	r5, r5, #1
 80060ac:	f109 0908 	add.w	r9, r9, #8
 80060b0:	d1ef      	bne.n	8006092 <_dtoa_r+0x6ee>
 80060b2:	4632      	mov	r2, r6
 80060b4:	463b      	mov	r3, r7
 80060b6:	4650      	mov	r0, sl
 80060b8:	4659      	mov	r1, fp
 80060ba:	f003 fc9d 	bl	80099f8 <__aeabi_ddiv>
 80060be:	4606      	mov	r6, r0
 80060c0:	460f      	mov	r7, r1
 80060c2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80060c4:	b150      	cbz	r0, 80060dc <_dtoa_r+0x738>
 80060c6:	2300      	movs	r3, #0
 80060c8:	4630      	mov	r0, r6
 80060ca:	4639      	mov	r1, r7
 80060cc:	2200      	movs	r2, #0
 80060ce:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
 80060d2:	f003 fdd9 	bl	8009c88 <__aeabi_dcmplt>
 80060d6:	2800      	cmp	r0, #0
 80060d8:	f040 8315 	bne.w	8006706 <_dtoa_r+0xd62>
 80060dc:	4640      	mov	r0, r8
 80060de:	f003 fafb 	bl	80096d8 <__aeabi_i2d>
 80060e2:	4632      	mov	r2, r6
 80060e4:	463b      	mov	r3, r7
 80060e6:	f003 fb5d 	bl	80097a4 <__aeabi_dmul>
 80060ea:	2300      	movs	r3, #0
 80060ec:	2200      	movs	r2, #0
 80060ee:	f2c4 031c 	movt	r3, #16412	; 0x401c
 80060f2:	f003 f9a5 	bl	8009440 <__adddf3>
 80060f6:	4680      	mov	r8, r0
 80060f8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80060fa:	f1a1 7950 	sub.w	r9, r1, #54525952	; 0x3400000
 80060fe:	2800      	cmp	r0, #0
 8006100:	f000 80c9 	beq.w	8006296 <_dtoa_r+0x8f2>
 8006104:	9904      	ldr	r1, [sp, #16]
 8006106:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 800610a:	9116      	str	r1, [sp, #88]	; 0x58
 800610c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800610e:	2a00      	cmp	r2, #0
 8006110:	f000 8179 	beq.w	8006406 <_dtoa_r+0xa62>
 8006114:	f24a 43a8 	movw	r3, #42152	; 0xa4a8
 8006118:	9a08      	ldr	r2, [sp, #32]
 800611a:	f6c0 0300 	movt	r3, #2048	; 0x800
 800611e:	2100      	movs	r1, #0
 8006120:	eb03 03cc 	add.w	r3, r3, ip, lsl #3
 8006124:	2000      	movs	r0, #0
 8006126:	f6c3 71e0 	movt	r1, #16352	; 0x3fe0
 800612a:	1c55      	adds	r5, r2, #1
 800612c:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8006130:	f8cd c008 	str.w	ip, [sp, #8]
 8006134:	f003 fc60 	bl	80099f8 <__aeabi_ddiv>
 8006138:	4642      	mov	r2, r8
 800613a:	464b      	mov	r3, r9
 800613c:	f003 f97e 	bl	800943c <__aeabi_dsub>
 8006140:	4682      	mov	sl, r0
 8006142:	468b      	mov	fp, r1
 8006144:	4630      	mov	r0, r6
 8006146:	4639      	mov	r1, r7
 8006148:	f003 fdc6 	bl	8009cd8 <__aeabi_d2iz>
 800614c:	4680      	mov	r8, r0
 800614e:	f003 fac3 	bl	80096d8 <__aeabi_i2d>
 8006152:	f108 0830 	add.w	r8, r8, #48	; 0x30
 8006156:	fa5f f888 	uxtb.w	r8, r8
 800615a:	4602      	mov	r2, r0
 800615c:	460b      	mov	r3, r1
 800615e:	4630      	mov	r0, r6
 8006160:	4639      	mov	r1, r7
 8006162:	f003 f96b 	bl	800943c <__aeabi_dsub>
 8006166:	f8dd e020 	ldr.w	lr, [sp, #32]
 800616a:	f88e 8000 	strb.w	r8, [lr]
 800616e:	4606      	mov	r6, r0
 8006170:	460f      	mov	r7, r1
 8006172:	4650      	mov	r0, sl
 8006174:	4659      	mov	r1, fp
 8006176:	4632      	mov	r2, r6
 8006178:	463b      	mov	r3, r7
 800617a:	f003 fda3 	bl	8009cc4 <__aeabi_dcmpgt>
 800617e:	2800      	cmp	r0, #0
 8006180:	f040 83c2 	bne.w	8006908 <_dtoa_r+0xf64>
 8006184:	2100      	movs	r1, #0
 8006186:	4632      	mov	r2, r6
 8006188:	463b      	mov	r3, r7
 800618a:	2000      	movs	r0, #0
 800618c:	f6c3 71f0 	movt	r1, #16368	; 0x3ff0
 8006190:	f003 f954 	bl	800943c <__aeabi_dsub>
 8006194:	4602      	mov	r2, r0
 8006196:	460b      	mov	r3, r1
 8006198:	4650      	mov	r0, sl
 800619a:	4659      	mov	r1, fp
 800619c:	f003 fd92 	bl	8009cc4 <__aeabi_dcmpgt>
 80061a0:	f8dd c008 	ldr.w	ip, [sp, #8]
 80061a4:	2800      	cmp	r0, #0
 80061a6:	f040 8314 	bne.w	80067d2 <_dtoa_r+0xe2e>
 80061aa:	f1bc 0f01 	cmp.w	ip, #1
 80061ae:	f340 80f5 	ble.w	800639c <_dtoa_r+0x9f8>
 80061b2:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80061b6:	9417      	str	r4, [sp, #92]	; 0x5c
 80061b8:	44e1      	add	r9, ip
 80061ba:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 80061be:	46a9      	mov	r9, r5
 80061c0:	e010      	b.n	80061e4 <_dtoa_r+0x840>
 80061c2:	2100      	movs	r1, #0
 80061c4:	2000      	movs	r0, #0
 80061c6:	f6c3 71f0 	movt	r1, #16368	; 0x3ff0
 80061ca:	f003 f937 	bl	800943c <__aeabi_dsub>
 80061ce:	4652      	mov	r2, sl
 80061d0:	465b      	mov	r3, fp
 80061d2:	f003 fd59 	bl	8009c88 <__aeabi_dcmplt>
 80061d6:	2800      	cmp	r0, #0
 80061d8:	f040 82f9 	bne.w	80067ce <_dtoa_r+0xe2a>
 80061dc:	9810      	ldr	r0, [sp, #64]	; 0x40
 80061de:	4581      	cmp	r9, r0
 80061e0:	f000 80db 	beq.w	800639a <_dtoa_r+0x9f6>
 80061e4:	2300      	movs	r3, #0
 80061e6:	4650      	mov	r0, sl
 80061e8:	4659      	mov	r1, fp
 80061ea:	2200      	movs	r2, #0
 80061ec:	f2c4 0324 	movt	r3, #16420	; 0x4024
 80061f0:	f003 fad8 	bl	80097a4 <__aeabi_dmul>
 80061f4:	2300      	movs	r3, #0
 80061f6:	2200      	movs	r2, #0
 80061f8:	f2c4 0324 	movt	r3, #16420	; 0x4024
 80061fc:	4682      	mov	sl, r0
 80061fe:	468b      	mov	fp, r1
 8006200:	4630      	mov	r0, r6
 8006202:	4639      	mov	r1, r7
 8006204:	f003 face 	bl	80097a4 <__aeabi_dmul>
 8006208:	460d      	mov	r5, r1
 800620a:	4604      	mov	r4, r0
 800620c:	f003 fd64 	bl	8009cd8 <__aeabi_d2iz>
 8006210:	4680      	mov	r8, r0
 8006212:	f003 fa61 	bl	80096d8 <__aeabi_i2d>
 8006216:	f108 0830 	add.w	r8, r8, #48	; 0x30
 800621a:	fa5f f888 	uxtb.w	r8, r8
 800621e:	4602      	mov	r2, r0
 8006220:	460b      	mov	r3, r1
 8006222:	4620      	mov	r0, r4
 8006224:	4629      	mov	r1, r5
 8006226:	f003 f909 	bl	800943c <__aeabi_dsub>
 800622a:	4652      	mov	r2, sl
 800622c:	465b      	mov	r3, fp
 800622e:	f809 8b01 	strb.w	r8, [r9], #1
 8006232:	4606      	mov	r6, r0
 8006234:	460f      	mov	r7, r1
 8006236:	f003 fd27 	bl	8009c88 <__aeabi_dcmplt>
 800623a:	4632      	mov	r2, r6
 800623c:	463b      	mov	r3, r7
 800623e:	2800      	cmp	r0, #0
 8006240:	d0bf      	beq.n	80061c2 <_dtoa_r+0x81e>
 8006242:	9e16      	ldr	r6, [sp, #88]	; 0x58
 8006244:	464d      	mov	r5, r9
 8006246:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8006248:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800624c:	9604      	str	r6, [sp, #16]
 800624e:	9508      	str	r5, [sp, #32]
 8006250:	e658      	b.n	8005f04 <_dtoa_r+0x560>
 8006252:	2600      	movs	r6, #0
 8006254:	960d      	str	r6, [sp, #52]	; 0x34
 8006256:	9825      	ldr	r0, [sp, #148]	; 0x94
 8006258:	2800      	cmp	r0, #0
 800625a:	f340 8233 	ble.w	80066c4 <_dtoa_r+0xd20>
 800625e:	280e      	cmp	r0, #14
 8006260:	bf8c      	ite	hi
 8006262:	2500      	movhi	r5, #0
 8006264:	f005 0501 	andls.w	r5, r5, #1
 8006268:	4607      	mov	r7, r0
 800626a:	9014      	str	r0, [sp, #80]	; 0x50
 800626c:	9009      	str	r0, [sp, #36]	; 0x24
 800626e:	e6cd      	b.n	800600c <_dtoa_r+0x668>
 8006270:	2601      	movs	r6, #1
 8006272:	960d      	str	r6, [sp, #52]	; 0x34
 8006274:	e7ef      	b.n	8006256 <_dtoa_r+0x8b2>
 8006276:	4640      	mov	r0, r8
 8006278:	f003 fa2e 	bl	80096d8 <__aeabi_i2d>
 800627c:	4632      	mov	r2, r6
 800627e:	463b      	mov	r3, r7
 8006280:	f003 fa90 	bl	80097a4 <__aeabi_dmul>
 8006284:	2300      	movs	r3, #0
 8006286:	2200      	movs	r2, #0
 8006288:	f2c4 031c 	movt	r3, #16412	; 0x401c
 800628c:	f003 f8d8 	bl	8009440 <__adddf3>
 8006290:	4680      	mov	r8, r0
 8006292:	f1a1 7950 	sub.w	r9, r1, #54525952	; 0x3400000
 8006296:	2300      	movs	r3, #0
 8006298:	4630      	mov	r0, r6
 800629a:	2200      	movs	r2, #0
 800629c:	f2c4 0314 	movt	r3, #16404	; 0x4014
 80062a0:	4639      	mov	r1, r7
 80062a2:	f003 f8cb 	bl	800943c <__aeabi_dsub>
 80062a6:	4642      	mov	r2, r8
 80062a8:	464b      	mov	r3, r9
 80062aa:	4682      	mov	sl, r0
 80062ac:	468b      	mov	fp, r1
 80062ae:	f003 fd09 	bl	8009cc4 <__aeabi_dcmpgt>
 80062b2:	4606      	mov	r6, r0
 80062b4:	2800      	cmp	r0, #0
 80062b6:	f040 80a3 	bne.w	8006400 <_dtoa_r+0xa5c>
 80062ba:	4642      	mov	r2, r8
 80062bc:	4650      	mov	r0, sl
 80062be:	4659      	mov	r1, fp
 80062c0:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 80062c4:	f003 fce0 	bl	8009c88 <__aeabi_dcmplt>
 80062c8:	2800      	cmp	r0, #0
 80062ca:	d067      	beq.n	800639c <_dtoa_r+0x9f8>
 80062cc:	46b0      	mov	r8, r6
 80062ce:	9925      	ldr	r1, [sp, #148]	; 0x94
 80062d0:	2500      	movs	r5, #0
 80062d2:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80062d6:	43c9      	mvns	r1, r1
 80062d8:	9104      	str	r1, [sp, #16]
 80062da:	e603      	b.n	8005ee4 <_dtoa_r+0x540>
 80062dc:	980d      	ldr	r0, [sp, #52]	; 0x34
 80062de:	2800      	cmp	r0, #0
 80062e0:	f040 8164 	bne.w	80065ac <_dtoa_r+0xc08>
 80062e4:	2500      	movs	r5, #0
 80062e6:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
 80062ea:	f8dd b020 	ldr.w	fp, [sp, #32]
 80062ee:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 80062f2:	e002      	b.n	80062fa <_dtoa_r+0x956>
 80062f4:	f000 ff24 	bl	8007140 <__multadd>
 80062f8:	4681      	mov	r9, r0
 80062fa:	4631      	mov	r1, r6
 80062fc:	4648      	mov	r0, r9
 80062fe:	f7ff faab 	bl	8005858 <quorem>
 8006302:	4649      	mov	r1, r9
 8006304:	220a      	movs	r2, #10
 8006306:	2300      	movs	r3, #0
 8006308:	f100 0730 	add.w	r7, r0, #48	; 0x30
 800630c:	f80b 7005 	strb.w	r7, [fp, r5]
 8006310:	3501      	adds	r5, #1
 8006312:	4620      	mov	r0, r4
 8006314:	4555      	cmp	r5, sl
 8006316:	dbed      	blt.n	80062f4 <_dtoa_r+0x950>
 8006318:	f8dd b020 	ldr.w	fp, [sp, #32]
 800631c:	461d      	mov	r5, r3
 800631e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006320:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 8006324:	2801      	cmp	r0, #1
 8006326:	bfac      	ite	ge
 8006328:	4483      	addge	fp, r0
 800632a:	f10b 0b01 	addlt.w	fp, fp, #1
 800632e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006330:	2201      	movs	r2, #1
 8006332:	4620      	mov	r0, r4
 8006334:	f001 f8e6 	bl	8007504 <__lshift>
 8006338:	4631      	mov	r1, r6
 800633a:	900b      	str	r0, [sp, #44]	; 0x2c
 800633c:	f001 f93e 	bl	80075bc <__mcmp>
 8006340:	2800      	cmp	r0, #0
 8006342:	f340 826f 	ble.w	8006824 <_dtoa_r+0xe80>
 8006346:	f81b 2c01 	ldrb.w	r2, [fp, #-1]
 800634a:	9908      	ldr	r1, [sp, #32]
 800634c:	e005      	b.n	800635a <_dtoa_r+0x9b6>
 800634e:	428b      	cmp	r3, r1
 8006350:	f000 8228 	beq.w	80067a4 <_dtoa_r+0xe00>
 8006354:	f813 2c01 	ldrb.w	r2, [r3, #-1]
 8006358:	469b      	mov	fp, r3
 800635a:	2a39      	cmp	r2, #57	; 0x39
 800635c:	f10b 33ff 	add.w	r3, fp, #4294967295
 8006360:	d0f5      	beq.n	800634e <_dtoa_r+0x9aa>
 8006362:	3201      	adds	r2, #1
 8006364:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006368:	701a      	strb	r2, [r3, #0]
 800636a:	f8cd b020 	str.w	fp, [sp, #32]
 800636e:	e5b9      	b.n	8005ee4 <_dtoa_r+0x540>
 8006370:	231c      	movs	r3, #28
 8006372:	f8dd e028 	ldr.w	lr, [sp, #40]	; 0x28
 8006376:	441d      	add	r5, r3
 8006378:	9806      	ldr	r0, [sp, #24]
 800637a:	449e      	add	lr, r3
 800637c:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
 8006380:	4418      	add	r0, r3
 8006382:	9006      	str	r0, [sp, #24]
 8006384:	e56f      	b.n	8005e66 <_dtoa_r+0x4c2>
 8006386:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
 800638a:	f04f 0802 	mov.w	r8, #2
 800638e:	e67b      	b.n	8006088 <_dtoa_r+0x6e4>
 8006390:	4629      	mov	r1, r5
 8006392:	4620      	mov	r0, r4
 8006394:	f000 feb8 	bl	8007108 <_Bfree>
 8006398:	e5b0      	b.n	8005efc <_dtoa_r+0x558>
 800639a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 800639c:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
 80063a0:	e433      	b.n	8005c0a <_dtoa_r+0x266>
 80063a2:	9e04      	ldr	r6, [sp, #16]
 80063a4:	4275      	negs	r5, r6
 80063a6:	2d00      	cmp	r5, #0
 80063a8:	f000 819d 	beq.w	80066e6 <_dtoa_r+0xd42>
 80063ac:	f005 020f 	and.w	r2, r5, #15
 80063b0:	f24a 43a8 	movw	r3, #42152	; 0xa4a8
 80063b4:	f6c0 0300 	movt	r3, #2048	; 0x800
 80063b8:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
 80063bc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80063c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80063c4:	f003 f9ee 	bl	80097a4 <__aeabi_dmul>
 80063c8:	112d      	asrs	r5, r5, #4
 80063ca:	4606      	mov	r6, r0
 80063cc:	460f      	mov	r7, r1
 80063ce:	f000 8297 	beq.w	8006900 <_dtoa_r+0xf5c>
 80063d2:	f24a 5998 	movw	r9, #42392	; 0xa598
 80063d6:	f04f 0802 	mov.w	r8, #2
 80063da:	f6c0 0900 	movt	r9, #2048	; 0x800
 80063de:	07eb      	lsls	r3, r5, #31
 80063e0:	4630      	mov	r0, r6
 80063e2:	4639      	mov	r1, r7
 80063e4:	d507      	bpl.n	80063f6 <_dtoa_r+0xa52>
 80063e6:	e9d9 2300 	ldrd	r2, r3, [r9]
 80063ea:	f108 0801 	add.w	r8, r8, #1
 80063ee:	f003 f9d9 	bl	80097a4 <__aeabi_dmul>
 80063f2:	4606      	mov	r6, r0
 80063f4:	460f      	mov	r7, r1
 80063f6:	106d      	asrs	r5, r5, #1
 80063f8:	f109 0908 	add.w	r9, r9, #8
 80063fc:	d1ef      	bne.n	80063de <_dtoa_r+0xa3a>
 80063fe:	e660      	b.n	80060c2 <_dtoa_r+0x71e>
 8006400:	2600      	movs	r6, #0
 8006402:	46b0      	mov	r8, r6
 8006404:	e562      	b.n	8005ecc <_dtoa_r+0x528>
 8006406:	f10c 3bff 	add.w	fp, ip, #4294967295
 800640a:	f24a 41a8 	movw	r1, #42152	; 0xa4a8
 800640e:	f6c0 0100 	movt	r1, #2048	; 0x800
 8006412:	9808      	ldr	r0, [sp, #32]
 8006414:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
 8006418:	4642      	mov	r2, r8
 800641a:	464b      	mov	r3, r9
 800641c:	f100 0a01 	add.w	sl, r0, #1
 8006420:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006424:	f8cd c008 	str.w	ip, [sp, #8]
 8006428:	f003 f9bc 	bl	80097a4 <__aeabi_dmul>
 800642c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8006430:	4639      	mov	r1, r7
 8006432:	4630      	mov	r0, r6
 8006434:	f003 fc50 	bl	8009cd8 <__aeabi_d2iz>
 8006438:	4605      	mov	r5, r0
 800643a:	f003 f94d 	bl	80096d8 <__aeabi_i2d>
 800643e:	3530      	adds	r5, #48	; 0x30
 8006440:	4602      	mov	r2, r0
 8006442:	460b      	mov	r3, r1
 8006444:	4630      	mov	r0, r6
 8006446:	4639      	mov	r1, r7
 8006448:	f002 fff8 	bl	800943c <__aeabi_dsub>
 800644c:	460f      	mov	r7, r1
 800644e:	9908      	ldr	r1, [sp, #32]
 8006450:	4606      	mov	r6, r0
 8006452:	700d      	strb	r5, [r1, #0]
 8006454:	f8dd c008 	ldr.w	ip, [sp, #8]
 8006458:	f1bc 0f01 	cmp.w	ip, #1
 800645c:	d022      	beq.n	80064a4 <_dtoa_r+0xb00>
 800645e:	9a08      	ldr	r2, [sp, #32]
 8006460:	4630      	mov	r0, r6
 8006462:	4639      	mov	r1, r7
 8006464:	f102 39ff 	add.w	r9, r2, #4294967295
 8006468:	4615      	mov	r5, r2
 800646a:	44e1      	add	r9, ip
 800646c:	2300      	movs	r3, #0
 800646e:	2200      	movs	r2, #0
 8006470:	f2c4 0324 	movt	r3, #16420	; 0x4024
 8006474:	f003 f996 	bl	80097a4 <__aeabi_dmul>
 8006478:	460f      	mov	r7, r1
 800647a:	4606      	mov	r6, r0
 800647c:	f003 fc2c 	bl	8009cd8 <__aeabi_d2iz>
 8006480:	4680      	mov	r8, r0
 8006482:	f003 f929 	bl	80096d8 <__aeabi_i2d>
 8006486:	f108 0830 	add.w	r8, r8, #48	; 0x30
 800648a:	4602      	mov	r2, r0
 800648c:	460b      	mov	r3, r1
 800648e:	4630      	mov	r0, r6
 8006490:	4639      	mov	r1, r7
 8006492:	f002 ffd3 	bl	800943c <__aeabi_dsub>
 8006496:	f805 8f01 	strb.w	r8, [r5, #1]!
 800649a:	454d      	cmp	r5, r9
 800649c:	d1e6      	bne.n	800646c <_dtoa_r+0xac8>
 800649e:	4606      	mov	r6, r0
 80064a0:	460f      	mov	r7, r1
 80064a2:	44da      	add	sl, fp
 80064a4:	2300      	movs	r3, #0
 80064a6:	2200      	movs	r2, #0
 80064a8:	f6c3 73e0 	movt	r3, #16352	; 0x3fe0
 80064ac:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80064b0:	f002 ffc6 	bl	8009440 <__adddf3>
 80064b4:	4632      	mov	r2, r6
 80064b6:	463b      	mov	r3, r7
 80064b8:	f003 fbe6 	bl	8009c88 <__aeabi_dcmplt>
 80064bc:	2800      	cmp	r0, #0
 80064be:	f000 8154 	beq.w	800676a <_dtoa_r+0xdc6>
 80064c2:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80064c6:	4652      	mov	r2, sl
 80064c8:	f81a 8c01 	ldrb.w	r8, [sl, #-1]
 80064cc:	f8cd a020 	str.w	sl, [sp, #32]
 80064d0:	e459      	b.n	8005d86 <_dtoa_r+0x3e2>
 80064d2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80064d4:	4631      	mov	r1, r6
 80064d6:	f001 f871 	bl	80075bc <__mcmp>
 80064da:	2800      	cmp	r0, #0
 80064dc:	f6bf acd8 	bge.w	8005e90 <_dtoa_r+0x4ec>
 80064e0:	f8dd e010 	ldr.w	lr, [sp, #16]
 80064e4:	4620      	mov	r0, r4
 80064e6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80064e8:	220a      	movs	r2, #10
 80064ea:	2300      	movs	r3, #0
 80064ec:	f10e 3eff 	add.w	lr, lr, #4294967295
 80064f0:	f8cd e010 	str.w	lr, [sp, #16]
 80064f4:	f000 fe24 	bl	8007140 <__multadd>
 80064f8:	900b      	str	r0, [sp, #44]	; 0x2c
 80064fa:	980d      	ldr	r0, [sp, #52]	; 0x34
 80064fc:	2800      	cmp	r0, #0
 80064fe:	d141      	bne.n	8006584 <_dtoa_r+0xbe0>
 8006500:	9914      	ldr	r1, [sp, #80]	; 0x50
 8006502:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006504:	2900      	cmp	r1, #0
 8006506:	dc03      	bgt.n	8006510 <_dtoa_r+0xb6c>
 8006508:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800650a:	2a02      	cmp	r2, #2
 800650c:	f300 8207 	bgt.w	800691e <_dtoa_r+0xf7a>
 8006510:	9309      	str	r3, [sp, #36]	; 0x24
 8006512:	e6e7      	b.n	80062e4 <_dtoa_r+0x940>
 8006514:	6933      	ldr	r3, [r6, #16]
 8006516:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800651a:	6918      	ldr	r0, [r3, #16]
 800651c:	f000 fea2 	bl	8007264 <__hi0bits>
 8006520:	f1c0 0020 	rsb	r0, r0, #32
 8006524:	e48b      	b.n	8005e3e <_dtoa_r+0x49a>
 8006526:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8006528:	2e00      	cmp	r6, #0
 800652a:	f040 818b 	bne.w	8006844 <_dtoa_r+0xea0>
 800652e:	2300      	movs	r3, #0
 8006530:	2200      	movs	r2, #0
 8006532:	f2c4 0314 	movt	r3, #16404	; 0x4014
 8006536:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800653a:	f003 f933 	bl	80097a4 <__aeabi_dmul>
 800653e:	4652      	mov	r2, sl
 8006540:	465b      	mov	r3, fp
 8006542:	f003 fbb5 	bl	8009cb0 <__aeabi_dcmpge>
 8006546:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8006548:	46b0      	mov	r8, r6
 800654a:	2800      	cmp	r0, #0
 800654c:	f47f aebf 	bne.w	80062ce <_dtoa_r+0x92a>
 8006550:	e4bc      	b.n	8005ecc <_dtoa_r+0x528>
 8006552:	f1ba 0f00 	cmp.w	sl, #0
 8006556:	f47f ac6c 	bne.w	8005e32 <_dtoa_r+0x48e>
 800655a:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800655e:	4657      	mov	r7, sl
 8006560:	2b00      	cmp	r3, #0
 8006562:	f47f ac67 	bne.w	8005e34 <_dtoa_r+0x490>
 8006566:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
 800656a:	0d3f      	lsrs	r7, r7, #20
 800656c:	053f      	lsls	r7, r7, #20
 800656e:	2f00      	cmp	r7, #0
 8006570:	f43f ac60 	beq.w	8005e34 <_dtoa_r+0x490>
 8006574:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006576:	2701      	movs	r7, #1
 8006578:	9b06      	ldr	r3, [sp, #24]
 800657a:	3201      	adds	r2, #1
 800657c:	920a      	str	r2, [sp, #40]	; 0x28
 800657e:	3301      	adds	r3, #1
 8006580:	9306      	str	r3, [sp, #24]
 8006582:	e457      	b.n	8005e34 <_dtoa_r+0x490>
 8006584:	2300      	movs	r3, #0
 8006586:	4641      	mov	r1, r8
 8006588:	220a      	movs	r2, #10
 800658a:	4620      	mov	r0, r4
 800658c:	f000 fdd8 	bl	8007140 <__multadd>
 8006590:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006592:	9924      	ldr	r1, [sp, #144]	; 0x90
 8006594:	2a00      	cmp	r2, #0
 8006596:	bfcc      	ite	gt
 8006598:	2300      	movgt	r3, #0
 800659a:	2301      	movle	r3, #1
 800659c:	2902      	cmp	r1, #2
 800659e:	bfd8      	it	le
 80065a0:	2300      	movle	r3, #0
 80065a2:	4680      	mov	r8, r0
 80065a4:	2b00      	cmp	r3, #0
 80065a6:	f040 81b6 	bne.w	8006916 <_dtoa_r+0xf72>
 80065aa:	9209      	str	r2, [sp, #36]	; 0x24
 80065ac:	2d00      	cmp	r5, #0
 80065ae:	dd05      	ble.n	80065bc <_dtoa_r+0xc18>
 80065b0:	4641      	mov	r1, r8
 80065b2:	462a      	mov	r2, r5
 80065b4:	4620      	mov	r0, r4
 80065b6:	f000 ffa5 	bl	8007504 <__lshift>
 80065ba:	4680      	mov	r8, r0
 80065bc:	46c4      	mov	ip, r8
 80065be:	2f00      	cmp	r7, #0
 80065c0:	f040 8153 	bne.w	800686a <_dtoa_r+0xec6>
 80065c4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80065c6:	f00a 0301 	and.w	r3, sl, #1
 80065ca:	9a08      	ldr	r2, [sp, #32]
 80065cc:	4637      	mov	r7, r6
 80065ce:	9808      	ldr	r0, [sp, #32]
 80065d0:	46e1      	mov	r9, ip
 80065d2:	440a      	add	r2, r1
 80065d4:	9309      	str	r3, [sp, #36]	; 0x24
 80065d6:	920a      	str	r2, [sp, #40]	; 0x28
 80065d8:	1c45      	adds	r5, r0, #1
 80065da:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80065dc:	e00a      	b.n	80065f4 <_dtoa_r+0xc50>
 80065de:	f000 fdaf 	bl	8007140 <__multadd>
 80065e2:	4649      	mov	r1, r9
 80065e4:	220a      	movs	r2, #10
 80065e6:	2300      	movs	r3, #0
 80065e8:	4680      	mov	r8, r0
 80065ea:	4620      	mov	r0, r4
 80065ec:	f000 fda8 	bl	8007140 <__multadd>
 80065f0:	4681      	mov	r9, r0
 80065f2:	3501      	adds	r5, #1
 80065f4:	4639      	mov	r1, r7
 80065f6:	4630      	mov	r0, r6
 80065f8:	f7ff f92e 	bl	8005858 <quorem>
 80065fc:	4641      	mov	r1, r8
 80065fe:	4682      	mov	sl, r0
 8006600:	4630      	mov	r0, r6
 8006602:	f000 ffdb 	bl	80075bc <__mcmp>
 8006606:	464a      	mov	r2, r9
 8006608:	4639      	mov	r1, r7
 800660a:	4683      	mov	fp, r0
 800660c:	4620      	mov	r0, r4
 800660e:	f000 fff7 	bl	8007600 <__mdiff>
 8006612:	f10a 0230 	add.w	r2, sl, #48	; 0x30
 8006616:	9205      	str	r2, [sp, #20]
 8006618:	f105 3eff 	add.w	lr, r5, #4294967295
 800661c:	f8cd e018 	str.w	lr, [sp, #24]
 8006620:	68c2      	ldr	r2, [r0, #12]
 8006622:	4603      	mov	r3, r0
 8006624:	2a00      	cmp	r2, #0
 8006626:	d13e      	bne.n	80066a6 <_dtoa_r+0xd02>
 8006628:	4619      	mov	r1, r3
 800662a:	4630      	mov	r0, r6
 800662c:	9302      	str	r3, [sp, #8]
 800662e:	f000 ffc5 	bl	80075bc <__mcmp>
 8006632:	9b02      	ldr	r3, [sp, #8]
 8006634:	4602      	mov	r2, r0
 8006636:	4620      	mov	r0, r4
 8006638:	4619      	mov	r1, r3
 800663a:	9202      	str	r2, [sp, #8]
 800663c:	f000 fd64 	bl	8007108 <_Bfree>
 8006640:	9a02      	ldr	r2, [sp, #8]
 8006642:	9824      	ldr	r0, [sp, #144]	; 0x90
 8006644:	4310      	orrs	r0, r2
 8006646:	d103      	bne.n	8006650 <_dtoa_r+0xcac>
 8006648:	9909      	ldr	r1, [sp, #36]	; 0x24
 800664a:	2900      	cmp	r1, #0
 800664c:	f000 814a 	beq.w	80068e4 <_dtoa_r+0xf40>
 8006650:	f1bb 0f00 	cmp.w	fp, #0
 8006654:	f2c0 80c3 	blt.w	80067de <_dtoa_r+0xe3a>
 8006658:	9924      	ldr	r1, [sp, #144]	; 0x90
 800665a:	ea5b 0101 	orrs.w	r1, fp, r1
 800665e:	d103      	bne.n	8006668 <_dtoa_r+0xcc4>
 8006660:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006662:	2b00      	cmp	r3, #0
 8006664:	f000 80bb 	beq.w	80067de <_dtoa_r+0xe3a>
 8006668:	2a00      	cmp	r2, #0
 800666a:	f300 811b 	bgt.w	80068a4 <_dtoa_r+0xf00>
 800666e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006670:	46ab      	mov	fp, r5
 8006672:	9a05      	ldr	r2, [sp, #20]
 8006674:	429d      	cmp	r5, r3
 8006676:	f805 2c01 	strb.w	r2, [r5, #-1]
 800667a:	f000 8124 	beq.w	80068c6 <_dtoa_r+0xf22>
 800667e:	4631      	mov	r1, r6
 8006680:	220a      	movs	r2, #10
 8006682:	2300      	movs	r3, #0
 8006684:	4620      	mov	r0, r4
 8006686:	f000 fd5b 	bl	8007140 <__multadd>
 800668a:	45c8      	cmp	r8, r9
 800668c:	4641      	mov	r1, r8
 800668e:	f04f 020a 	mov.w	r2, #10
 8006692:	f04f 0300 	mov.w	r3, #0
 8006696:	4606      	mov	r6, r0
 8006698:	4620      	mov	r0, r4
 800669a:	d1a0      	bne.n	80065de <_dtoa_r+0xc3a>
 800669c:	f000 fd50 	bl	8007140 <__multadd>
 80066a0:	4680      	mov	r8, r0
 80066a2:	4681      	mov	r9, r0
 80066a4:	e7a5      	b.n	80065f2 <_dtoa_r+0xc4e>
 80066a6:	2201      	movs	r2, #1
 80066a8:	e7c5      	b.n	8006636 <_dtoa_r+0xc92>
 80066aa:	2601      	movs	r6, #1
 80066ac:	960d      	str	r6, [sp, #52]	; 0x34
 80066ae:	e49a      	b.n	8005fe6 <_dtoa_r+0x642>
 80066b0:	2e0e      	cmp	r6, #14
 80066b2:	bf8c      	ite	hi
 80066b4:	2200      	movhi	r2, #0
 80066b6:	2201      	movls	r2, #1
 80066b8:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80066ba:	2300      	movs	r3, #0
 80066bc:	4015      	ands	r5, r2
 80066be:	4619      	mov	r1, r3
 80066c0:	6073      	str	r3, [r6, #4]
 80066c2:	e4b3      	b.n	800602c <_dtoa_r+0x688>
 80066c4:	2201      	movs	r2, #1
 80066c6:	9225      	str	r2, [sp, #148]	; 0x94
 80066c8:	9214      	str	r2, [sp, #80]	; 0x50
 80066ca:	9209      	str	r2, [sp, #36]	; 0x24
 80066cc:	e7f4      	b.n	80066b8 <_dtoa_r+0xd14>
 80066ce:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80066d0:	4620      	mov	r0, r4
 80066d2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80066d4:	f000 feba 	bl	800744c <__pow5mult>
 80066d8:	900b      	str	r0, [sp, #44]	; 0x2c
 80066da:	f7ff bb98 	b.w	8005e0e <_dtoa_r+0x46a>
 80066de:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80066e2:	9508      	str	r5, [sp, #32]
 80066e4:	e40e      	b.n	8005f04 <_dtoa_r+0x560>
 80066e6:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 80066ea:	f04f 0802 	mov.w	r8, #2
 80066ee:	e4e8      	b.n	80060c2 <_dtoa_r+0x71e>
 80066f0:	9e16      	ldr	r6, [sp, #88]	; 0x58
 80066f2:	2130      	movs	r1, #48	; 0x30
 80066f4:	9208      	str	r2, [sp, #32]
 80066f6:	2231      	movs	r2, #49	; 0x31
 80066f8:	3601      	adds	r6, #1
 80066fa:	f889 1000 	strb.w	r1, [r9]
 80066fe:	9604      	str	r6, [sp, #16]
 8006700:	701a      	strb	r2, [r3, #0]
 8006702:	f7ff bbff 	b.w	8005f04 <_dtoa_r+0x560>
 8006706:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006708:	2900      	cmp	r1, #0
 800670a:	f43f adb4 	beq.w	8006276 <_dtoa_r+0x8d2>
 800670e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006710:	2a00      	cmp	r2, #0
 8006712:	f77f ae43 	ble.w	800639c <_dtoa_r+0x9f8>
 8006716:	2300      	movs	r3, #0
 8006718:	2200      	movs	r2, #0
 800671a:	4630      	mov	r0, r6
 800671c:	4639      	mov	r1, r7
 800671e:	f2c4 0324 	movt	r3, #16420	; 0x4024
 8006722:	f003 f83f 	bl	80097a4 <__aeabi_dmul>
 8006726:	9b04      	ldr	r3, [sp, #16]
 8006728:	3b01      	subs	r3, #1
 800672a:	9316      	str	r3, [sp, #88]	; 0x58
 800672c:	4606      	mov	r6, r0
 800672e:	f108 0001 	add.w	r0, r8, #1
 8006732:	460f      	mov	r7, r1
 8006734:	f002 ffd0 	bl	80096d8 <__aeabi_i2d>
 8006738:	4602      	mov	r2, r0
 800673a:	460b      	mov	r3, r1
 800673c:	4630      	mov	r0, r6
 800673e:	4639      	mov	r1, r7
 8006740:	f003 f830 	bl	80097a4 <__aeabi_dmul>
 8006744:	2300      	movs	r3, #0
 8006746:	2200      	movs	r2, #0
 8006748:	f2c4 031c 	movt	r3, #16412	; 0x401c
 800674c:	f002 fe78 	bl	8009440 <__adddf3>
 8006750:	f8dd c050 	ldr.w	ip, [sp, #80]	; 0x50
 8006754:	4680      	mov	r8, r0
 8006756:	f1a1 7950 	sub.w	r9, r1, #54525952	; 0x3400000
 800675a:	e4d7      	b.n	800610c <_dtoa_r+0x768>
 800675c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800675e:	4620      	mov	r0, r4
 8006760:	f000 fe74 	bl	800744c <__pow5mult>
 8006764:	900b      	str	r0, [sp, #44]	; 0x2c
 8006766:	f7ff bb52 	b.w	8005e0e <_dtoa_r+0x46a>
 800676a:	2100      	movs	r1, #0
 800676c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8006770:	2000      	movs	r0, #0
 8006772:	f6c3 71e0 	movt	r1, #16352	; 0x3fe0
 8006776:	f002 fe61 	bl	800943c <__aeabi_dsub>
 800677a:	4632      	mov	r2, r6
 800677c:	463b      	mov	r3, r7
 800677e:	f003 faa1 	bl	8009cc4 <__aeabi_dcmpgt>
 8006782:	2800      	cmp	r0, #0
 8006784:	f43f ae0a 	beq.w	800639c <_dtoa_r+0x9f8>
 8006788:	4653      	mov	r3, sl
 800678a:	f10a 3aff 	add.w	sl, sl, #4294967295
 800678e:	f813 2c01 	ldrb.w	r2, [r3, #-1]
 8006792:	2a30      	cmp	r2, #48	; 0x30
 8006794:	d0f8      	beq.n	8006788 <_dtoa_r+0xde4>
 8006796:	9e16      	ldr	r6, [sp, #88]	; 0x58
 8006798:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800679c:	9308      	str	r3, [sp, #32]
 800679e:	9604      	str	r6, [sp, #16]
 80067a0:	f7ff bbb0 	b.w	8005f04 <_dtoa_r+0x560>
 80067a4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80067a8:	2331      	movs	r3, #49	; 0x31
 80067aa:	9904      	ldr	r1, [sp, #16]
 80067ac:	f8cd b020 	str.w	fp, [sp, #32]
 80067b0:	3101      	adds	r1, #1
 80067b2:	f889 3000 	strb.w	r3, [r9]
 80067b6:	9104      	str	r1, [sp, #16]
 80067b8:	f7ff bb94 	b.w	8005ee4 <_dtoa_r+0x540>
 80067bc:	9e15      	ldr	r6, [sp, #84]	; 0x54
 80067be:	2e00      	cmp	r6, #0
 80067c0:	d069      	beq.n	8006896 <_dtoa_r+0xef2>
 80067c2:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80067c6:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80067c8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80067ca:	f7ff bbfc 	b.w	8005fc6 <_dtoa_r+0x622>
 80067ce:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80067d0:	464d      	mov	r5, r9
 80067d2:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80067d6:	462a      	mov	r2, r5
 80067d8:	9508      	str	r5, [sp, #32]
 80067da:	f7ff bad4 	b.w	8005d86 <_dtoa_r+0x3e2>
 80067de:	2a00      	cmp	r2, #0
 80067e0:	960b      	str	r6, [sp, #44]	; 0x2c
 80067e2:	46cc      	mov	ip, r9
 80067e4:	463e      	mov	r6, r7
 80067e6:	9f05      	ldr	r7, [sp, #20]
 80067e8:	dd12      	ble.n	8006810 <_dtoa_r+0xe6c>
 80067ea:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80067ec:	2201      	movs	r2, #1
 80067ee:	4620      	mov	r0, r4
 80067f0:	f8cd 9008 	str.w	r9, [sp, #8]
 80067f4:	f000 fe86 	bl	8007504 <__lshift>
 80067f8:	4631      	mov	r1, r6
 80067fa:	900b      	str	r0, [sp, #44]	; 0x2c
 80067fc:	f000 fede 	bl	80075bc <__mcmp>
 8006800:	f8dd c008 	ldr.w	ip, [sp, #8]
 8006804:	2800      	cmp	r0, #0
 8006806:	dd77      	ble.n	80068f8 <_dtoa_r+0xf54>
 8006808:	2f39      	cmp	r7, #57	; 0x39
 800680a:	d062      	beq.n	80068d2 <_dtoa_r+0xf2e>
 800680c:	f10a 0731 	add.w	r7, sl, #49	; 0x31
 8006810:	9b06      	ldr	r3, [sp, #24]
 8006812:	4645      	mov	r5, r8
 8006814:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006818:	46e0      	mov	r8, ip
 800681a:	1c58      	adds	r0, r3, #1
 800681c:	701f      	strb	r7, [r3, #0]
 800681e:	9008      	str	r0, [sp, #32]
 8006820:	f7ff bb60 	b.w	8005ee4 <_dtoa_r+0x540>
 8006824:	d102      	bne.n	800682c <_dtoa_r+0xe88>
 8006826:	07fb      	lsls	r3, r7, #31
 8006828:	f53f ad8d 	bmi.w	8006346 <_dtoa_r+0x9a2>
 800682c:	465b      	mov	r3, fp
 800682e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8006832:	f813 2c01 	ldrb.w	r2, [r3, #-1]
 8006836:	2a30      	cmp	r2, #48	; 0x30
 8006838:	d0f8      	beq.n	800682c <_dtoa_r+0xe88>
 800683a:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800683e:	9308      	str	r3, [sp, #32]
 8006840:	f7ff bb50 	b.w	8005ee4 <_dtoa_r+0x540>
 8006844:	2600      	movs	r6, #0
 8006846:	e541      	b.n	80062cc <_dtoa_r+0x928>
 8006848:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800684c:	4632      	mov	r2, r6
 800684e:	463b      	mov	r3, r7
 8006850:	f003 fa10 	bl	8009c74 <__aeabi_dcmpeq>
 8006854:	2800      	cmp	r0, #0
 8006856:	f43f af42 	beq.w	80066de <_dtoa_r+0xd3a>
 800685a:	f018 0f01 	tst.w	r8, #1
 800685e:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006862:	f43f af3e 	beq.w	80066e2 <_dtoa_r+0xd3e>
 8006866:	f7ff ba81 	b.w	8005d6c <_dtoa_r+0x3c8>
 800686a:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800686e:	4620      	mov	r0, r4
 8006870:	f000 fc14 	bl	800709c <_Balloc>
 8006874:	f8d8 3010 	ldr.w	r3, [r8, #16]
 8006878:	f108 010c 	add.w	r1, r8, #12
 800687c:	1c9a      	adds	r2, r3, #2
 800687e:	0092      	lsls	r2, r2, #2
 8006880:	4605      	mov	r5, r0
 8006882:	300c      	adds	r0, #12
 8006884:	f000 fbb2 	bl	8006fec <memcpy>
 8006888:	4620      	mov	r0, r4
 800688a:	4629      	mov	r1, r5
 800688c:	2201      	movs	r2, #1
 800688e:	f000 fe39 	bl	8007504 <__lshift>
 8006892:	4684      	mov	ip, r0
 8006894:	e696      	b.n	80065c4 <_dtoa_r+0xc20>
 8006896:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8006898:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800689a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800689c:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 80068a0:	f7ff bb91 	b.w	8005fc6 <_dtoa_r+0x622>
 80068a4:	960b      	str	r6, [sp, #44]	; 0x2c
 80068a6:	463e      	mov	r6, r7
 80068a8:	9f05      	ldr	r7, [sp, #20]
 80068aa:	46cc      	mov	ip, r9
 80068ac:	2f39      	cmp	r7, #57	; 0x39
 80068ae:	d010      	beq.n	80068d2 <_dtoa_r+0xf2e>
 80068b0:	9b06      	ldr	r3, [sp, #24]
 80068b2:	3701      	adds	r7, #1
 80068b4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80068b8:	4645      	mov	r5, r8
 80068ba:	1c58      	adds	r0, r3, #1
 80068bc:	46e0      	mov	r8, ip
 80068be:	701f      	strb	r7, [r3, #0]
 80068c0:	9008      	str	r0, [sp, #32]
 80068c2:	f7ff bb0f 	b.w	8005ee4 <_dtoa_r+0x540>
 80068c6:	960b      	str	r6, [sp, #44]	; 0x2c
 80068c8:	4645      	mov	r5, r8
 80068ca:	463e      	mov	r6, r7
 80068cc:	46c8      	mov	r8, r9
 80068ce:	9f05      	ldr	r7, [sp, #20]
 80068d0:	e52d      	b.n	800632e <_dtoa_r+0x98a>
 80068d2:	9b06      	ldr	r3, [sp, #24]
 80068d4:	2239      	movs	r2, #57	; 0x39
 80068d6:	4645      	mov	r5, r8
 80068d8:	9908      	ldr	r1, [sp, #32]
 80068da:	46e0      	mov	r8, ip
 80068dc:	f103 0b01 	add.w	fp, r3, #1
 80068e0:	701a      	strb	r2, [r3, #0]
 80068e2:	e53a      	b.n	800635a <_dtoa_r+0x9b6>
 80068e4:	960b      	str	r6, [sp, #44]	; 0x2c
 80068e6:	463e      	mov	r6, r7
 80068e8:	9f05      	ldr	r7, [sp, #20]
 80068ea:	46cc      	mov	ip, r9
 80068ec:	2f39      	cmp	r7, #57	; 0x39
 80068ee:	d0f0      	beq.n	80068d2 <_dtoa_r+0xf2e>
 80068f0:	f1bb 0f00 	cmp.w	fp, #0
 80068f4:	dc8a      	bgt.n	800680c <_dtoa_r+0xe68>
 80068f6:	e78b      	b.n	8006810 <_dtoa_r+0xe6c>
 80068f8:	d18a      	bne.n	8006810 <_dtoa_r+0xe6c>
 80068fa:	07fa      	lsls	r2, r7, #31
 80068fc:	d588      	bpl.n	8006810 <_dtoa_r+0xe6c>
 80068fe:	e783      	b.n	8006808 <_dtoa_r+0xe64>
 8006900:	f04f 0802 	mov.w	r8, #2
 8006904:	f7ff bbdd 	b.w	80060c2 <_dtoa_r+0x71e>
 8006908:	9e16      	ldr	r6, [sp, #88]	; 0x58
 800690a:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800690e:	9508      	str	r5, [sp, #32]
 8006910:	9604      	str	r6, [sp, #16]
 8006912:	f7ff baf7 	b.w	8005f04 <_dtoa_r+0x560>
 8006916:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006918:	9209      	str	r2, [sp, #36]	; 0x24
 800691a:	f7ff bac5 	b.w	8005ea8 <_dtoa_r+0x504>
 800691e:	9309      	str	r3, [sp, #36]	; 0x24
 8006920:	f7ff bac2 	b.w	8005ea8 <_dtoa_r+0x504>
 8006924:	f43f aa9f 	beq.w	8005e66 <_dtoa_r+0x4c2>
 8006928:	f1c3 033c 	rsb	r3, r3, #60	; 0x3c
 800692c:	e521      	b.n	8006372 <_dtoa_r+0x9ce>
 800692e:	bf00      	nop

08006930 <_setlocale_r>:
 8006930:	b510      	push	{r4, lr}
 8006932:	4614      	mov	r4, r2
 8006934:	b13a      	cbz	r2, 8006946 <_setlocale_r+0x16>
 8006936:	f64a 1154 	movw	r1, #43348	; 0xa954
 800693a:	4610      	mov	r0, r2
 800693c:	f6c0 0100 	movt	r1, #2048	; 0x800
 8006940:	f001 f884 	bl	8007a4c <strcmp>
 8006944:	b920      	cbnz	r0, 8006950 <_setlocale_r+0x20>
 8006946:	f64a 00fc 	movw	r0, #43260	; 0xa8fc
 800694a:	f6c0 0000 	movt	r0, #2048	; 0x800
 800694e:	bd10      	pop	{r4, pc}
 8006950:	f64a 01fc 	movw	r1, #43260	; 0xa8fc
 8006954:	4620      	mov	r0, r4
 8006956:	f6c0 0100 	movt	r1, #2048	; 0x800
 800695a:	f001 f877 	bl	8007a4c <strcmp>
 800695e:	2800      	cmp	r0, #0
 8006960:	d0f1      	beq.n	8006946 <_setlocale_r+0x16>
 8006962:	f24a 61f4 	movw	r1, #42740	; 0xa6f4
 8006966:	4620      	mov	r0, r4
 8006968:	f6c0 0100 	movt	r1, #2048	; 0x800
 800696c:	f001 f86e 	bl	8007a4c <strcmp>
 8006970:	f64a 03fc 	movw	r3, #43260	; 0xa8fc
 8006974:	f6c0 0300 	movt	r3, #2048	; 0x800
 8006978:	2800      	cmp	r0, #0
 800697a:	bf0c      	ite	eq
 800697c:	4618      	moveq	r0, r3
 800697e:	2000      	movne	r0, #0
 8006980:	bd10      	pop	{r4, pc}
 8006982:	bf00      	nop

08006984 <__locale_charset>:
 8006984:	f240 00f8 	movw	r0, #248	; 0xf8
 8006988:	f2c2 0000 	movt	r0, #8192	; 0x2000
 800698c:	4770      	bx	lr
 800698e:	bf00      	nop

08006990 <__locale_mb_cur_max>:
 8006990:	f240 03f8 	movw	r3, #248	; 0xf8
 8006994:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8006998:	6a18      	ldr	r0, [r3, #32]
 800699a:	4770      	bx	lr

0800699c <__locale_msgcharset>:
 800699c:	4800      	ldr	r0, [pc, #0]	; (80069a0 <__locale_msgcharset+0x4>)
 800699e:	4770      	bx	lr
 80069a0:	2000011c 	andcs	r0, r0, ip, lsl r1

080069a4 <__locale_cjk_lang>:
 80069a4:	2000      	movs	r0, #0
 80069a6:	4770      	bx	lr

080069a8 <_localeconv_r>:
 80069a8:	4800      	ldr	r0, [pc, #0]	; (80069ac <_localeconv_r+0x4>)
 80069aa:	4770      	bx	lr
 80069ac:	2000013c 	andcs	r0, r0, ip, lsr r1

080069b0 <setlocale>:
 80069b0:	f240 0304 	movw	r3, #4
 80069b4:	460a      	mov	r2, r1
 80069b6:	f2c2 0300 	movt	r3, #8192	; 0x2000
 80069ba:	4601      	mov	r1, r0
 80069bc:	6818      	ldr	r0, [r3, #0]
 80069be:	f7ff bfb7 	b.w	8006930 <_setlocale_r>
 80069c2:	bf00      	nop

080069c4 <localeconv>:
 80069c4:	4800      	ldr	r0, [pc, #0]	; (80069c8 <localeconv+0x4>)
 80069c6:	4770      	bx	lr
 80069c8:	2000013c 	andcs	r0, r0, ip, lsr r1

080069cc <malloc>:
 80069cc:	f240 0304 	movw	r3, #4
 80069d0:	4601      	mov	r1, r0
 80069d2:	f2c2 0300 	movt	r3, #8192	; 0x2000
 80069d6:	6818      	ldr	r0, [r3, #0]
 80069d8:	f000 b808 	b.w	80069ec <_malloc_r>

080069dc <free>:
 80069dc:	f240 0304 	movw	r3, #4
 80069e0:	4601      	mov	r1, r0
 80069e2:	f2c2 0300 	movt	r3, #8192	; 0x2000
 80069e6:	6818      	ldr	r0, [r3, #0]
 80069e8:	f001 bff2 	b.w	80089d0 <_free_r>

080069ec <_malloc_r>:
 80069ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80069f0:	f101 040b 	add.w	r4, r1, #11
 80069f4:	2c16      	cmp	r4, #22
 80069f6:	b083      	sub	sp, #12
 80069f8:	bf8e      	itee	hi
 80069fa:	f024 0407 	bichi.w	r4, r4, #7
 80069fe:	2300      	movls	r3, #0
 8006a00:	2410      	movls	r4, #16
 8006a02:	4607      	mov	r7, r0
 8006a04:	bf88      	it	hi
 8006a06:	0fe3      	lsrhi	r3, r4, #31
 8006a08:	428c      	cmp	r4, r1
 8006a0a:	bf2c      	ite	cs
 8006a0c:	4619      	movcs	r1, r3
 8006a0e:	f043 0101 	orrcc.w	r1, r3, #1
 8006a12:	2900      	cmp	r1, #0
 8006a14:	f040 80ba 	bne.w	8006b8c <_malloc_r+0x1a0>
 8006a18:	f000 fb3c 	bl	8007094 <__malloc_lock>
 8006a1c:	f5b4 7ffc 	cmp.w	r4, #504	; 0x1f8
 8006a20:	d220      	bcs.n	8006a64 <_malloc_r+0x78>
 8006a22:	f240 1674 	movw	r6, #372	; 0x174
 8006a26:	ea4f 0cd4 	mov.w	ip, r4, lsr #3
 8006a2a:	f2c2 0600 	movt	r6, #8192	; 0x2000
 8006a2e:	eb06 02cc 	add.w	r2, r6, ip, lsl #3
 8006a32:	68d3      	ldr	r3, [r2, #12]
 8006a34:	4293      	cmp	r3, r2
 8006a36:	f000 81f7 	beq.w	8006e28 <_malloc_r+0x43c>
 8006a3a:	6859      	ldr	r1, [r3, #4]
 8006a3c:	f103 0808 	add.w	r8, r3, #8
 8006a40:	68da      	ldr	r2, [r3, #12]
 8006a42:	4638      	mov	r0, r7
 8006a44:	f021 0403 	bic.w	r4, r1, #3
 8006a48:	6899      	ldr	r1, [r3, #8]
 8006a4a:	4423      	add	r3, r4
 8006a4c:	685c      	ldr	r4, [r3, #4]
 8006a4e:	60ca      	str	r2, [r1, #12]
 8006a50:	f044 0401 	orr.w	r4, r4, #1
 8006a54:	6091      	str	r1, [r2, #8]
 8006a56:	605c      	str	r4, [r3, #4]
 8006a58:	f000 fb1e 	bl	8007098 <__malloc_unlock>
 8006a5c:	4640      	mov	r0, r8
 8006a5e:	b003      	add	sp, #12
 8006a60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006a64:	ea5f 2c54 	movs.w	ip, r4, lsr #9
 8006a68:	bf04      	itt	eq
 8006a6a:	257e      	moveq	r5, #126	; 0x7e
 8006a6c:	f04f 0c3f 	moveq.w	ip, #63	; 0x3f
 8006a70:	f040 8094 	bne.w	8006b9c <_malloc_r+0x1b0>
 8006a74:	f240 1674 	movw	r6, #372	; 0x174
 8006a78:	f2c2 0600 	movt	r6, #8192	; 0x2000
 8006a7c:	eb06 0585 	add.w	r5, r6, r5, lsl #2
 8006a80:	68eb      	ldr	r3, [r5, #12]
 8006a82:	429d      	cmp	r5, r3
 8006a84:	d106      	bne.n	8006a94 <_malloc_r+0xa8>
 8006a86:	e00d      	b.n	8006aa4 <_malloc_r+0xb8>
 8006a88:	2a00      	cmp	r2, #0
 8006a8a:	f280 8164 	bge.w	8006d56 <_malloc_r+0x36a>
 8006a8e:	68db      	ldr	r3, [r3, #12]
 8006a90:	429d      	cmp	r5, r3
 8006a92:	d007      	beq.n	8006aa4 <_malloc_r+0xb8>
 8006a94:	6859      	ldr	r1, [r3, #4]
 8006a96:	f021 0103 	bic.w	r1, r1, #3
 8006a9a:	1b0a      	subs	r2, r1, r4
 8006a9c:	2a0f      	cmp	r2, #15
 8006a9e:	ddf3      	ble.n	8006a88 <_malloc_r+0x9c>
 8006aa0:	f10c 3cff 	add.w	ip, ip, #4294967295
 8006aa4:	f10c 0c01 	add.w	ip, ip, #1
 8006aa8:	f240 1274 	movw	r2, #372	; 0x174
 8006aac:	6933      	ldr	r3, [r6, #16]
 8006aae:	f2c2 0200 	movt	r2, #8192	; 0x2000
 8006ab2:	f102 0e08 	add.w	lr, r2, #8
 8006ab6:	4573      	cmp	r3, lr
 8006ab8:	bf08      	it	eq
 8006aba:	6851      	ldreq	r1, [r2, #4]
 8006abc:	d023      	beq.n	8006b06 <_malloc_r+0x11a>
 8006abe:	6858      	ldr	r0, [r3, #4]
 8006ac0:	f020 0003 	bic.w	r0, r0, #3
 8006ac4:	1b01      	subs	r1, r0, r4
 8006ac6:	290f      	cmp	r1, #15
 8006ac8:	f300 8192 	bgt.w	8006df0 <_malloc_r+0x404>
 8006acc:	2900      	cmp	r1, #0
 8006ace:	f8c2 e014 	str.w	lr, [r2, #20]
 8006ad2:	f8c2 e010 	str.w	lr, [r2, #16]
 8006ad6:	da6c      	bge.n	8006bb2 <_malloc_r+0x1c6>
 8006ad8:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8006adc:	f080 8161 	bcs.w	8006da2 <_malloc_r+0x3b6>
 8006ae0:	08c0      	lsrs	r0, r0, #3
 8006ae2:	f04f 0801 	mov.w	r8, #1
 8006ae6:	6851      	ldr	r1, [r2, #4]
 8006ae8:	eb02 05c0 	add.w	r5, r2, r0, lsl #3
 8006aec:	1080      	asrs	r0, r0, #2
 8006aee:	fa08 f800 	lsl.w	r8, r8, r0
 8006af2:	ea48 0801 	orr.w	r8, r8, r1
 8006af6:	68a8      	ldr	r0, [r5, #8]
 8006af8:	4641      	mov	r1, r8
 8006afa:	60dd      	str	r5, [r3, #12]
 8006afc:	f8c2 8004 	str.w	r8, [r2, #4]
 8006b00:	6098      	str	r0, [r3, #8]
 8006b02:	60ab      	str	r3, [r5, #8]
 8006b04:	60c3      	str	r3, [r0, #12]
 8006b06:	2201      	movs	r2, #1
 8006b08:	ea4f 03ac 	mov.w	r3, ip, asr #2
 8006b0c:	fa02 f303 	lsl.w	r3, r2, r3
 8006b10:	428b      	cmp	r3, r1
 8006b12:	d85c      	bhi.n	8006bce <_malloc_r+0x1e2>
 8006b14:	4219      	tst	r1, r3
 8006b16:	d10b      	bne.n	8006b30 <_malloc_r+0x144>
 8006b18:	4093      	lsls	r3, r2
 8006b1a:	f02c 0c03 	bic.w	ip, ip, #3
 8006b1e:	4219      	tst	r1, r3
 8006b20:	f10c 0c04 	add.w	ip, ip, #4
 8006b24:	d104      	bne.n	8006b30 <_malloc_r+0x144>
 8006b26:	005b      	lsls	r3, r3, #1
 8006b28:	f10c 0c04 	add.w	ip, ip, #4
 8006b2c:	4219      	tst	r1, r3
 8006b2e:	d0fa      	beq.n	8006b26 <_malloc_r+0x13a>
 8006b30:	eb06 08cc 	add.w	r8, r6, ip, lsl #3
 8006b34:	46e1      	mov	r9, ip
 8006b36:	4640      	mov	r0, r8
 8006b38:	68c2      	ldr	r2, [r0, #12]
 8006b3a:	4290      	cmp	r0, r2
 8006b3c:	d107      	bne.n	8006b4e <_malloc_r+0x162>
 8006b3e:	e16b      	b.n	8006e18 <_malloc_r+0x42c>
 8006b40:	2900      	cmp	r1, #0
 8006b42:	f280 817b 	bge.w	8006e3c <_malloc_r+0x450>
 8006b46:	68d2      	ldr	r2, [r2, #12]
 8006b48:	4290      	cmp	r0, r2
 8006b4a:	f000 8165 	beq.w	8006e18 <_malloc_r+0x42c>
 8006b4e:	6855      	ldr	r5, [r2, #4]
 8006b50:	f025 0503 	bic.w	r5, r5, #3
 8006b54:	1b29      	subs	r1, r5, r4
 8006b56:	290f      	cmp	r1, #15
 8006b58:	ddf2      	ble.n	8006b40 <_malloc_r+0x154>
 8006b5a:	4690      	mov	r8, r2
 8006b5c:	68d5      	ldr	r5, [r2, #12]
 8006b5e:	4638      	mov	r0, r7
 8006b60:	1913      	adds	r3, r2, r4
 8006b62:	f858 7f08 	ldr.w	r7, [r8, #8]!
 8006b66:	f044 0c01 	orr.w	ip, r4, #1
 8006b6a:	f041 0401 	orr.w	r4, r1, #1
 8006b6e:	f8c2 c004 	str.w	ip, [r2, #4]
 8006b72:	60fd      	str	r5, [r7, #12]
 8006b74:	60af      	str	r7, [r5, #8]
 8006b76:	6173      	str	r3, [r6, #20]
 8006b78:	6133      	str	r3, [r6, #16]
 8006b7a:	f8c3 e00c 	str.w	lr, [r3, #12]
 8006b7e:	f8c3 e008 	str.w	lr, [r3, #8]
 8006b82:	605c      	str	r4, [r3, #4]
 8006b84:	5059      	str	r1, [r3, r1]
 8006b86:	f000 fa87 	bl	8007098 <__malloc_unlock>
 8006b8a:	e767      	b.n	8006a5c <_malloc_r+0x70>
 8006b8c:	f04f 0800 	mov.w	r8, #0
 8006b90:	230c      	movs	r3, #12
 8006b92:	6003      	str	r3, [r0, #0]
 8006b94:	4640      	mov	r0, r8
 8006b96:	b003      	add	sp, #12
 8006b98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b9c:	f1bc 0f04 	cmp.w	ip, #4
 8006ba0:	f200 80eb 	bhi.w	8006d7a <_malloc_r+0x38e>
 8006ba4:	ea4f 1c94 	mov.w	ip, r4, lsr #6
 8006ba8:	f10c 0c38 	add.w	ip, ip, #56	; 0x38
 8006bac:	ea4f 054c 	mov.w	r5, ip, lsl #1
 8006bb0:	e760      	b.n	8006a74 <_malloc_r+0x88>
 8006bb2:	181a      	adds	r2, r3, r0
 8006bb4:	f103 0808 	add.w	r8, r3, #8
 8006bb8:	4638      	mov	r0, r7
 8006bba:	6853      	ldr	r3, [r2, #4]
 8006bbc:	f043 0301 	orr.w	r3, r3, #1
 8006bc0:	6053      	str	r3, [r2, #4]
 8006bc2:	f000 fa69 	bl	8007098 <__malloc_unlock>
 8006bc6:	4640      	mov	r0, r8
 8006bc8:	b003      	add	sp, #12
 8006bca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006bce:	68b5      	ldr	r5, [r6, #8]
 8006bd0:	686b      	ldr	r3, [r5, #4]
 8006bd2:	f023 0a03 	bic.w	sl, r3, #3
 8006bd6:	4554      	cmp	r4, sl
 8006bd8:	d804      	bhi.n	8006be4 <_malloc_r+0x1f8>
 8006bda:	ebc4 030a 	rsb	r3, r4, sl
 8006bde:	2b0f      	cmp	r3, #15
 8006be0:	f300 80a8 	bgt.w	8006d34 <_malloc_r+0x348>
 8006be4:	f240 59a8 	movw	r9, #1448	; 0x5a8
 8006be8:	f8d6 1408 	ldr.w	r1, [r6, #1032]	; 0x408
 8006bec:	f2c2 0900 	movt	r9, #8192	; 0x2000
 8006bf0:	4638      	mov	r0, r7
 8006bf2:	3101      	adds	r1, #1
 8006bf4:	eb05 020a 	add.w	r2, r5, sl
 8006bf8:	f8d9 3000 	ldr.w	r3, [r9]
 8006bfc:	9201      	str	r2, [sp, #4]
 8006bfe:	4423      	add	r3, r4
 8006c00:	bf17      	itett	ne
 8006c02:	f503 5380 	addne.w	r3, r3, #4096	; 0x1000
 8006c06:	f103 0b10 	addeq.w	fp, r3, #16
 8006c0a:	330f      	addne	r3, #15
 8006c0c:	f423 637f 	bicne.w	r3, r3, #4080	; 0xff0
 8006c10:	bf18      	it	ne
 8006c12:	f023 0b0f 	bicne.w	fp, r3, #15
 8006c16:	4659      	mov	r1, fp
 8006c18:	f000 ff04 	bl	8007a24 <_sbrk_r>
 8006c1c:	9a01      	ldr	r2, [sp, #4]
 8006c1e:	f1b0 3fff 	cmp.w	r0, #4294967295
 8006c22:	4680      	mov	r8, r0
 8006c24:	f000 8120 	beq.w	8006e68 <_malloc_r+0x47c>
 8006c28:	4282      	cmp	r2, r0
 8006c2a:	f200 811a 	bhi.w	8006e62 <_malloc_r+0x476>
 8006c2e:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8006c32:	4542      	cmp	r2, r8
 8006c34:	445b      	add	r3, fp
 8006c36:	f8c9 3004 	str.w	r3, [r9, #4]
 8006c3a:	f000 8165 	beq.w	8006f08 <_malloc_r+0x51c>
 8006c3e:	f8d6 1408 	ldr.w	r1, [r6, #1032]	; 0x408
 8006c42:	f240 1074 	movw	r0, #372	; 0x174
 8006c46:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8006c4a:	3101      	adds	r1, #1
 8006c4c:	bf17      	itett	ne
 8006c4e:	ebc2 0208 	rsbne	r2, r2, r8
 8006c52:	f8c0 8408 	streq.w	r8, [r0, #1032]	; 0x408
 8006c56:	189b      	addne	r3, r3, r2
 8006c58:	f8c9 3004 	strne.w	r3, [r9, #4]
 8006c5c:	f018 0307 	ands.w	r3, r8, #7
 8006c60:	4638      	mov	r0, r7
 8006c62:	bf1f      	itttt	ne
 8006c64:	f1c3 0208 	rsbne	r2, r3, #8
 8006c68:	f5c3 5380 	rsbne	r3, r3, #4096	; 0x1000
 8006c6c:	4490      	addne	r8, r2
 8006c6e:	f103 0208 	addne.w	r2, r3, #8
 8006c72:	eb08 030b 	add.w	r3, r8, fp
 8006c76:	bf08      	it	eq
 8006c78:	f44f 5280 	moveq.w	r2, #4096	; 0x1000
 8006c7c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006c80:	ebc3 0b02 	rsb	fp, r3, r2
 8006c84:	4659      	mov	r1, fp
 8006c86:	f000 fecd 	bl	8007a24 <_sbrk_r>
 8006c8a:	f240 52a8 	movw	r2, #1448	; 0x5a8
 8006c8e:	f8c6 8008 	str.w	r8, [r6, #8]
 8006c92:	f2c2 0200 	movt	r2, #8192	; 0x2000
 8006c96:	1c43      	adds	r3, r0, #1
 8006c98:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8006c9c:	bf15      	itete	ne
 8006c9e:	ebc8 0100 	rsbne	r1, r8, r0
 8006ca2:	2101      	moveq	r1, #1
 8006ca4:	4459      	addne	r1, fp
 8006ca6:	f04f 0b00 	moveq.w	fp, #0
 8006caa:	bf18      	it	ne
 8006cac:	f041 0101 	orrne.w	r1, r1, #1
 8006cb0:	42b5      	cmp	r5, r6
 8006cb2:	445b      	add	r3, fp
 8006cb4:	f8c8 1004 	str.w	r1, [r8, #4]
 8006cb8:	f8c9 3004 	str.w	r3, [r9, #4]
 8006cbc:	d018      	beq.n	8006cf0 <_malloc_r+0x304>
 8006cbe:	f1ba 0f0f 	cmp.w	sl, #15
 8006cc2:	f240 8100 	bls.w	8006ec6 <_malloc_r+0x4da>
 8006cc6:	f1aa 000c 	sub.w	r0, sl, #12
 8006cca:	6869      	ldr	r1, [r5, #4]
 8006ccc:	f020 0007 	bic.w	r0, r0, #7
 8006cd0:	f04f 0c05 	mov.w	ip, #5
 8006cd4:	eb05 0e00 	add.w	lr, r5, r0
 8006cd8:	280f      	cmp	r0, #15
 8006cda:	f001 0101 	and.w	r1, r1, #1
 8006cde:	ea40 0101 	orr.w	r1, r0, r1
 8006ce2:	6069      	str	r1, [r5, #4]
 8006ce4:	f8ce c004 	str.w	ip, [lr, #4]
 8006ce8:	f8ce c008 	str.w	ip, [lr, #8]
 8006cec:	f200 8118 	bhi.w	8006f20 <_malloc_r+0x534>
 8006cf0:	f240 52a8 	movw	r2, #1448	; 0x5a8
 8006cf4:	f8d9 102c 	ldr.w	r1, [r9, #44]	; 0x2c
 8006cf8:	f2c2 0200 	movt	r2, #8192	; 0x2000
 8006cfc:	68b5      	ldr	r5, [r6, #8]
 8006cfe:	428b      	cmp	r3, r1
 8006d00:	f8d9 1030 	ldr.w	r1, [r9, #48]	; 0x30
 8006d04:	bf88      	it	hi
 8006d06:	62d3      	strhi	r3, [r2, #44]	; 0x2c
 8006d08:	f240 52a8 	movw	r2, #1448	; 0x5a8
 8006d0c:	f2c2 0200 	movt	r2, #8192	; 0x2000
 8006d10:	428b      	cmp	r3, r1
 8006d12:	bf88      	it	hi
 8006d14:	6313      	strhi	r3, [r2, #48]	; 0x30
 8006d16:	686a      	ldr	r2, [r5, #4]
 8006d18:	f022 0203 	bic.w	r2, r2, #3
 8006d1c:	4294      	cmp	r4, r2
 8006d1e:	ebc4 0302 	rsb	r3, r4, r2
 8006d22:	d801      	bhi.n	8006d28 <_malloc_r+0x33c>
 8006d24:	2b0f      	cmp	r3, #15
 8006d26:	dc05      	bgt.n	8006d34 <_malloc_r+0x348>
 8006d28:	4638      	mov	r0, r7
 8006d2a:	f04f 0800 	mov.w	r8, #0
 8006d2e:	f000 f9b3 	bl	8007098 <__malloc_unlock>
 8006d32:	e693      	b.n	8006a5c <_malloc_r+0x70>
 8006d34:	192a      	adds	r2, r5, r4
 8006d36:	f043 0301 	orr.w	r3, r3, #1
 8006d3a:	4638      	mov	r0, r7
 8006d3c:	f044 0401 	orr.w	r4, r4, #1
 8006d40:	606c      	str	r4, [r5, #4]
 8006d42:	f105 0808 	add.w	r8, r5, #8
 8006d46:	60b2      	str	r2, [r6, #8]
 8006d48:	6053      	str	r3, [r2, #4]
 8006d4a:	f000 f9a5 	bl	8007098 <__malloc_unlock>
 8006d4e:	4640      	mov	r0, r8
 8006d50:	b003      	add	sp, #12
 8006d52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006d56:	4419      	add	r1, r3
 8006d58:	68da      	ldr	r2, [r3, #12]
 8006d5a:	689c      	ldr	r4, [r3, #8]
 8006d5c:	4638      	mov	r0, r7
 8006d5e:	684d      	ldr	r5, [r1, #4]
 8006d60:	f103 0808 	add.w	r8, r3, #8
 8006d64:	60e2      	str	r2, [r4, #12]
 8006d66:	f045 0501 	orr.w	r5, r5, #1
 8006d6a:	6094      	str	r4, [r2, #8]
 8006d6c:	604d      	str	r5, [r1, #4]
 8006d6e:	f000 f993 	bl	8007098 <__malloc_unlock>
 8006d72:	4640      	mov	r0, r8
 8006d74:	b003      	add	sp, #12
 8006d76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006d7a:	f1bc 0f14 	cmp.w	ip, #20
 8006d7e:	bf9c      	itt	ls
 8006d80:	f10c 0c5b 	addls.w	ip, ip, #91	; 0x5b
 8006d84:	ea4f 054c 	movls.w	r5, ip, lsl #1
 8006d88:	f67f ae74 	bls.w	8006a74 <_malloc_r+0x88>
 8006d8c:	f1bc 0f54 	cmp.w	ip, #84	; 0x54
 8006d90:	f200 808f 	bhi.w	8006eb2 <_malloc_r+0x4c6>
 8006d94:	ea4f 3c14 	mov.w	ip, r4, lsr #12
 8006d98:	f10c 0c6e 	add.w	ip, ip, #110	; 0x6e
 8006d9c:	ea4f 054c 	mov.w	r5, ip, lsl #1
 8006da0:	e668      	b.n	8006a74 <_malloc_r+0x88>
 8006da2:	0a42      	lsrs	r2, r0, #9
 8006da4:	2a04      	cmp	r2, #4
 8006da6:	d958      	bls.n	8006e5a <_malloc_r+0x46e>
 8006da8:	2a14      	cmp	r2, #20
 8006daa:	bf9c      	itt	ls
 8006dac:	f102 015b 	addls.w	r1, r2, #91	; 0x5b
 8006db0:	004d      	lslls	r5, r1, #1
 8006db2:	d905      	bls.n	8006dc0 <_malloc_r+0x3d4>
 8006db4:	2a54      	cmp	r2, #84	; 0x54
 8006db6:	f200 80bc 	bhi.w	8006f32 <_malloc_r+0x546>
 8006dba:	0b01      	lsrs	r1, r0, #12
 8006dbc:	316e      	adds	r1, #110	; 0x6e
 8006dbe:	004d      	lsls	r5, r1, #1
 8006dc0:	eb06 0585 	add.w	r5, r6, r5, lsl #2
 8006dc4:	f240 1874 	movw	r8, #372	; 0x174
 8006dc8:	f2c2 0800 	movt	r8, #8192	; 0x2000
 8006dcc:	68aa      	ldr	r2, [r5, #8]
 8006dce:	42aa      	cmp	r2, r5
 8006dd0:	d07f      	beq.n	8006ed2 <_malloc_r+0x4e6>
 8006dd2:	6851      	ldr	r1, [r2, #4]
 8006dd4:	f021 0103 	bic.w	r1, r1, #3
 8006dd8:	4288      	cmp	r0, r1
 8006dda:	d202      	bcs.n	8006de2 <_malloc_r+0x3f6>
 8006ddc:	6892      	ldr	r2, [r2, #8]
 8006dde:	4295      	cmp	r5, r2
 8006de0:	d1f7      	bne.n	8006dd2 <_malloc_r+0x3e6>
 8006de2:	68d0      	ldr	r0, [r2, #12]
 8006de4:	6871      	ldr	r1, [r6, #4]
 8006de6:	60d8      	str	r0, [r3, #12]
 8006de8:	609a      	str	r2, [r3, #8]
 8006dea:	6083      	str	r3, [r0, #8]
 8006dec:	60d3      	str	r3, [r2, #12]
 8006dee:	e68a      	b.n	8006b06 <_malloc_r+0x11a>
 8006df0:	191d      	adds	r5, r3, r4
 8006df2:	f041 0601 	orr.w	r6, r1, #1
 8006df6:	f044 0401 	orr.w	r4, r4, #1
 8006dfa:	4638      	mov	r0, r7
 8006dfc:	605c      	str	r4, [r3, #4]
 8006dfe:	f103 0808 	add.w	r8, r3, #8
 8006e02:	6155      	str	r5, [r2, #20]
 8006e04:	6115      	str	r5, [r2, #16]
 8006e06:	f8c5 e00c 	str.w	lr, [r5, #12]
 8006e0a:	f8c5 e008 	str.w	lr, [r5, #8]
 8006e0e:	606e      	str	r6, [r5, #4]
 8006e10:	5069      	str	r1, [r5, r1]
 8006e12:	f000 f941 	bl	8007098 <__malloc_unlock>
 8006e16:	e621      	b.n	8006a5c <_malloc_r+0x70>
 8006e18:	f109 0901 	add.w	r9, r9, #1
 8006e1c:	3008      	adds	r0, #8
 8006e1e:	f019 0f03 	tst.w	r9, #3
 8006e22:	f47f ae89 	bne.w	8006b38 <_malloc_r+0x14c>
 8006e26:	e028      	b.n	8006e7a <_malloc_r+0x48e>
 8006e28:	f103 0208 	add.w	r2, r3, #8
 8006e2c:	695b      	ldr	r3, [r3, #20]
 8006e2e:	429a      	cmp	r2, r3
 8006e30:	bf08      	it	eq
 8006e32:	f10c 0c02 	addeq.w	ip, ip, #2
 8006e36:	f43f ae37 	beq.w	8006aa8 <_malloc_r+0xbc>
 8006e3a:	e5fe      	b.n	8006a3a <_malloc_r+0x4e>
 8006e3c:	4690      	mov	r8, r2
 8006e3e:	4415      	add	r5, r2
 8006e40:	68d3      	ldr	r3, [r2, #12]
 8006e42:	4638      	mov	r0, r7
 8006e44:	f858 2f08 	ldr.w	r2, [r8, #8]!
 8006e48:	6869      	ldr	r1, [r5, #4]
 8006e4a:	f041 0101 	orr.w	r1, r1, #1
 8006e4e:	6069      	str	r1, [r5, #4]
 8006e50:	60d3      	str	r3, [r2, #12]
 8006e52:	609a      	str	r2, [r3, #8]
 8006e54:	f000 f920 	bl	8007098 <__malloc_unlock>
 8006e58:	e600      	b.n	8006a5c <_malloc_r+0x70>
 8006e5a:	0981      	lsrs	r1, r0, #6
 8006e5c:	3138      	adds	r1, #56	; 0x38
 8006e5e:	004d      	lsls	r5, r1, #1
 8006e60:	e7ae      	b.n	8006dc0 <_malloc_r+0x3d4>
 8006e62:	42b5      	cmp	r5, r6
 8006e64:	f43f aee3 	beq.w	8006c2e <_malloc_r+0x242>
 8006e68:	68b5      	ldr	r5, [r6, #8]
 8006e6a:	686a      	ldr	r2, [r5, #4]
 8006e6c:	f022 0203 	bic.w	r2, r2, #3
 8006e70:	e754      	b.n	8006d1c <_malloc_r+0x330>
 8006e72:	f8d8 8000 	ldr.w	r8, [r8]
 8006e76:	4590      	cmp	r8, r2
 8006e78:	d16d      	bne.n	8006f56 <_malloc_r+0x56a>
 8006e7a:	f01c 0f03 	tst.w	ip, #3
 8006e7e:	f1a8 0208 	sub.w	r2, r8, #8
 8006e82:	f10c 3cff 	add.w	ip, ip, #4294967295
 8006e86:	d1f4      	bne.n	8006e72 <_malloc_r+0x486>
 8006e88:	6872      	ldr	r2, [r6, #4]
 8006e8a:	ea22 0203 	bic.w	r2, r2, r3
 8006e8e:	6072      	str	r2, [r6, #4]
 8006e90:	005b      	lsls	r3, r3, #1
 8006e92:	4293      	cmp	r3, r2
 8006e94:	f63f ae9b 	bhi.w	8006bce <_malloc_r+0x1e2>
 8006e98:	2b00      	cmp	r3, #0
 8006e9a:	f43f ae98 	beq.w	8006bce <_malloc_r+0x1e2>
 8006e9e:	421a      	tst	r2, r3
 8006ea0:	46cc      	mov	ip, r9
 8006ea2:	f47f ae45 	bne.w	8006b30 <_malloc_r+0x144>
 8006ea6:	005b      	lsls	r3, r3, #1
 8006ea8:	f10c 0c04 	add.w	ip, ip, #4
 8006eac:	421a      	tst	r2, r3
 8006eae:	d0fa      	beq.n	8006ea6 <_malloc_r+0x4ba>
 8006eb0:	e63e      	b.n	8006b30 <_malloc_r+0x144>
 8006eb2:	f5bc 7faa 	cmp.w	ip, #340	; 0x154
 8006eb6:	d818      	bhi.n	8006eea <_malloc_r+0x4fe>
 8006eb8:	ea4f 3cd4 	mov.w	ip, r4, lsr #15
 8006ebc:	f10c 0c77 	add.w	ip, ip, #119	; 0x77
 8006ec0:	ea4f 054c 	mov.w	r5, ip, lsl #1
 8006ec4:	e5d6      	b.n	8006a74 <_malloc_r+0x88>
 8006ec6:	2301      	movs	r3, #1
 8006ec8:	4645      	mov	r5, r8
 8006eca:	f8c8 3004 	str.w	r3, [r8, #4]
 8006ece:	2200      	movs	r2, #0
 8006ed0:	e724      	b.n	8006d1c <_malloc_r+0x330>
 8006ed2:	f04f 0901 	mov.w	r9, #1
 8006ed6:	108d      	asrs	r5, r1, #2
 8006ed8:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8006edc:	4610      	mov	r0, r2
 8006ede:	fa09 f505 	lsl.w	r5, r9, r5
 8006ee2:	4329      	orrs	r1, r5
 8006ee4:	f8c8 1004 	str.w	r1, [r8, #4]
 8006ee8:	e77d      	b.n	8006de6 <_malloc_r+0x3fa>
 8006eea:	f240 5354 	movw	r3, #1364	; 0x554
 8006eee:	459c      	cmp	ip, r3
 8006ef0:	bf95      	itete	ls
 8006ef2:	ea4f 4c94 	movls.w	ip, r4, lsr #18
 8006ef6:	25fc      	movhi	r5, #252	; 0xfc
 8006ef8:	f10c 0c7c 	addls.w	ip, ip, #124	; 0x7c
 8006efc:	f04f 0c7e 	movhi.w	ip, #126	; 0x7e
 8006f00:	bf98      	it	ls
 8006f02:	ea4f 054c 	movls.w	r5, ip, lsl #1
 8006f06:	e5b5      	b.n	8006a74 <_malloc_r+0x88>
 8006f08:	f3c2 010b 	ubfx	r1, r2, #0, #12
 8006f0c:	2900      	cmp	r1, #0
 8006f0e:	f47f ae96 	bne.w	8006c3e <_malloc_r+0x252>
 8006f12:	68b2      	ldr	r2, [r6, #8]
 8006f14:	eb0b 010a 	add.w	r1, fp, sl
 8006f18:	f041 0101 	orr.w	r1, r1, #1
 8006f1c:	6051      	str	r1, [r2, #4]
 8006f1e:	e6e7      	b.n	8006cf0 <_malloc_r+0x304>
 8006f20:	f105 0108 	add.w	r1, r5, #8
 8006f24:	4638      	mov	r0, r7
 8006f26:	9201      	str	r2, [sp, #4]
 8006f28:	f001 fd52 	bl	80089d0 <_free_r>
 8006f2c:	9a01      	ldr	r2, [sp, #4]
 8006f2e:	6853      	ldr	r3, [r2, #4]
 8006f30:	e6de      	b.n	8006cf0 <_malloc_r+0x304>
 8006f32:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 8006f36:	d803      	bhi.n	8006f40 <_malloc_r+0x554>
 8006f38:	0bc1      	lsrs	r1, r0, #15
 8006f3a:	3177      	adds	r1, #119	; 0x77
 8006f3c:	004d      	lsls	r5, r1, #1
 8006f3e:	e73f      	b.n	8006dc0 <_malloc_r+0x3d4>
 8006f40:	f240 5154 	movw	r1, #1364	; 0x554
 8006f44:	428a      	cmp	r2, r1
 8006f46:	bf95      	itete	ls
 8006f48:	0c81      	lsrls	r1, r0, #18
 8006f4a:	25fc      	movhi	r5, #252	; 0xfc
 8006f4c:	317c      	addls	r1, #124	; 0x7c
 8006f4e:	217e      	movhi	r1, #126	; 0x7e
 8006f50:	bf98      	it	ls
 8006f52:	004d      	lslls	r5, r1, #1
 8006f54:	e734      	b.n	8006dc0 <_malloc_r+0x3d4>
 8006f56:	6872      	ldr	r2, [r6, #4]
 8006f58:	e79a      	b.n	8006e90 <_malloc_r+0x4a4>
 8006f5a:	bf00      	nop

08006f5c <memchr>:
 8006f5c:	0783      	lsls	r3, r0, #30
 8006f5e:	b2c9      	uxtb	r1, r1
 8006f60:	b470      	push	{r4, r5, r6}
 8006f62:	d03f      	beq.n	8006fe4 <memchr+0x88>
 8006f64:	1e54      	subs	r4, r2, #1
 8006f66:	b32a      	cbz	r2, 8006fb4 <memchr+0x58>
 8006f68:	7803      	ldrb	r3, [r0, #0]
 8006f6a:	428b      	cmp	r3, r1
 8006f6c:	d023      	beq.n	8006fb6 <memchr+0x5a>
 8006f6e:	1c43      	adds	r3, r0, #1
 8006f70:	e004      	b.n	8006f7c <memchr+0x20>
 8006f72:	b1fc      	cbz	r4, 8006fb4 <memchr+0x58>
 8006f74:	7805      	ldrb	r5, [r0, #0]
 8006f76:	4614      	mov	r4, r2
 8006f78:	428d      	cmp	r5, r1
 8006f7a:	d01c      	beq.n	8006fb6 <memchr+0x5a>
 8006f7c:	f013 0f03 	tst.w	r3, #3
 8006f80:	4618      	mov	r0, r3
 8006f82:	f104 32ff 	add.w	r2, r4, #4294967295
 8006f86:	f103 0301 	add.w	r3, r3, #1
 8006f8a:	d1f2      	bne.n	8006f72 <memchr+0x16>
 8006f8c:	2c03      	cmp	r4, #3
 8006f8e:	d814      	bhi.n	8006fba <memchr+0x5e>
 8006f90:	1e65      	subs	r5, r4, #1
 8006f92:	b34c      	cbz	r4, 8006fe8 <memchr+0x8c>
 8006f94:	7803      	ldrb	r3, [r0, #0]
 8006f96:	428b      	cmp	r3, r1
 8006f98:	d00d      	beq.n	8006fb6 <memchr+0x5a>
 8006f9a:	1c42      	adds	r2, r0, #1
 8006f9c:	2300      	movs	r3, #0
 8006f9e:	e002      	b.n	8006fa6 <memchr+0x4a>
 8006fa0:	7804      	ldrb	r4, [r0, #0]
 8006fa2:	428c      	cmp	r4, r1
 8006fa4:	d007      	beq.n	8006fb6 <memchr+0x5a>
 8006fa6:	42ab      	cmp	r3, r5
 8006fa8:	4610      	mov	r0, r2
 8006faa:	f103 0301 	add.w	r3, r3, #1
 8006fae:	f102 0201 	add.w	r2, r2, #1
 8006fb2:	d1f5      	bne.n	8006fa0 <memchr+0x44>
 8006fb4:	2000      	movs	r0, #0
 8006fb6:	bc70      	pop	{r4, r5, r6}
 8006fb8:	4770      	bx	lr
 8006fba:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
 8006fbe:	4603      	mov	r3, r0
 8006fc0:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
 8006fc4:	4618      	mov	r0, r3
 8006fc6:	3304      	adds	r3, #4
 8006fc8:	6802      	ldr	r2, [r0, #0]
 8006fca:	4072      	eors	r2, r6
 8006fcc:	f1a2 3501 	sub.w	r5, r2, #16843009	; 0x1010101
 8006fd0:	ea25 0202 	bic.w	r2, r5, r2
 8006fd4:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
 8006fd8:	d1da      	bne.n	8006f90 <memchr+0x34>
 8006fda:	3c04      	subs	r4, #4
 8006fdc:	4618      	mov	r0, r3
 8006fde:	2c03      	cmp	r4, #3
 8006fe0:	d8f0      	bhi.n	8006fc4 <memchr+0x68>
 8006fe2:	e7d5      	b.n	8006f90 <memchr+0x34>
 8006fe4:	4614      	mov	r4, r2
 8006fe6:	e7d1      	b.n	8006f8c <memchr+0x30>
 8006fe8:	4620      	mov	r0, r4
 8006fea:	e7e4      	b.n	8006fb6 <memchr+0x5a>

08006fec <memcpy>:
 8006fec:	2a0f      	cmp	r2, #15
 8006fee:	b4f0      	push	{r4, r5, r6, r7}
 8006ff0:	d945      	bls.n	800707e <memcpy+0x92>
 8006ff2:	ea40 0301 	orr.w	r3, r0, r1
 8006ff6:	079b      	lsls	r3, r3, #30
 8006ff8:	d145      	bne.n	8007086 <memcpy+0x9a>
 8006ffa:	f1a2 0710 	sub.w	r7, r2, #16
 8006ffe:	460c      	mov	r4, r1
 8007000:	4603      	mov	r3, r0
 8007002:	093f      	lsrs	r7, r7, #4
 8007004:	eb00 1607 	add.w	r6, r0, r7, lsl #4
 8007008:	3610      	adds	r6, #16
 800700a:	6825      	ldr	r5, [r4, #0]
 800700c:	3310      	adds	r3, #16
 800700e:	3410      	adds	r4, #16
 8007010:	f843 5c10 	str.w	r5, [r3, #-16]
 8007014:	f854 5c0c 	ldr.w	r5, [r4, #-12]
 8007018:	f843 5c0c 	str.w	r5, [r3, #-12]
 800701c:	f854 5c08 	ldr.w	r5, [r4, #-8]
 8007020:	f843 5c08 	str.w	r5, [r3, #-8]
 8007024:	f854 5c04 	ldr.w	r5, [r4, #-4]
 8007028:	f843 5c04 	str.w	r5, [r3, #-4]
 800702c:	42b3      	cmp	r3, r6
 800702e:	d1ec      	bne.n	800700a <memcpy+0x1e>
 8007030:	1c7b      	adds	r3, r7, #1
 8007032:	f002 0c0f 	and.w	ip, r2, #15
 8007036:	f1bc 0f03 	cmp.w	ip, #3
 800703a:	ea4f 1303 	mov.w	r3, r3, lsl #4
 800703e:	4419      	add	r1, r3
 8007040:	4403      	add	r3, r0
 8007042:	d922      	bls.n	800708a <memcpy+0x9e>
 8007044:	460e      	mov	r6, r1
 8007046:	461d      	mov	r5, r3
 8007048:	4664      	mov	r4, ip
 800704a:	f856 7b04 	ldr.w	r7, [r6], #4
 800704e:	3c04      	subs	r4, #4
 8007050:	2c03      	cmp	r4, #3
 8007052:	f845 7b04 	str.w	r7, [r5], #4
 8007056:	d8f8      	bhi.n	800704a <memcpy+0x5e>
 8007058:	f1ac 0404 	sub.w	r4, ip, #4
 800705c:	f002 0203 	and.w	r2, r2, #3
 8007060:	f024 0403 	bic.w	r4, r4, #3
 8007064:	3404      	adds	r4, #4
 8007066:	4423      	add	r3, r4
 8007068:	4421      	add	r1, r4
 800706a:	b132      	cbz	r2, 800707a <memcpy+0x8e>
 800706c:	440a      	add	r2, r1
 800706e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007072:	4291      	cmp	r1, r2
 8007074:	f803 4b01 	strb.w	r4, [r3], #1
 8007078:	d1f9      	bne.n	800706e <memcpy+0x82>
 800707a:	bcf0      	pop	{r4, r5, r6, r7}
 800707c:	4770      	bx	lr
 800707e:	4603      	mov	r3, r0
 8007080:	2a00      	cmp	r2, #0
 8007082:	d1f3      	bne.n	800706c <memcpy+0x80>
 8007084:	e7f9      	b.n	800707a <memcpy+0x8e>
 8007086:	4603      	mov	r3, r0
 8007088:	e7f0      	b.n	800706c <memcpy+0x80>
 800708a:	4662      	mov	r2, ip
 800708c:	2a00      	cmp	r2, #0
 800708e:	d1ed      	bne.n	800706c <memcpy+0x80>
 8007090:	e7f3      	b.n	800707a <memcpy+0x8e>
 8007092:	bf00      	nop

08007094 <__malloc_lock>:
 8007094:	4770      	bx	lr
 8007096:	bf00      	nop

08007098 <__malloc_unlock>:
 8007098:	4770      	bx	lr
 800709a:	bf00      	nop

0800709c <_Balloc>:
 800709c:	b570      	push	{r4, r5, r6, lr}
 800709e:	4606      	mov	r6, r0
 80070a0:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80070a2:	460d      	mov	r5, r1
 80070a4:	b164      	cbz	r4, 80070c0 <_Balloc+0x24>
 80070a6:	68e2      	ldr	r2, [r4, #12]
 80070a8:	b19a      	cbz	r2, 80070d2 <_Balloc+0x36>
 80070aa:	f852 3025 	ldr.w	r3, [r2, r5, lsl #2]
 80070ae:	b1e3      	cbz	r3, 80070ea <_Balloc+0x4e>
 80070b0:	6819      	ldr	r1, [r3, #0]
 80070b2:	f842 1025 	str.w	r1, [r2, r5, lsl #2]
 80070b6:	2200      	movs	r2, #0
 80070b8:	4618      	mov	r0, r3
 80070ba:	611a      	str	r2, [r3, #16]
 80070bc:	60da      	str	r2, [r3, #12]
 80070be:	bd70      	pop	{r4, r5, r6, pc}
 80070c0:	2010      	movs	r0, #16
 80070c2:	f7ff fc83 	bl	80069cc <malloc>
 80070c6:	6270      	str	r0, [r6, #36]	; 0x24
 80070c8:	6044      	str	r4, [r0, #4]
 80070ca:	6084      	str	r4, [r0, #8]
 80070cc:	6004      	str	r4, [r0, #0]
 80070ce:	60c4      	str	r4, [r0, #12]
 80070d0:	4604      	mov	r4, r0
 80070d2:	2221      	movs	r2, #33	; 0x21
 80070d4:	4630      	mov	r0, r6
 80070d6:	2104      	movs	r1, #4
 80070d8:	f001 fbf6 	bl	80088c8 <_calloc_r>
 80070dc:	6a73      	ldr	r3, [r6, #36]	; 0x24
 80070de:	60e0      	str	r0, [r4, #12]
 80070e0:	68da      	ldr	r2, [r3, #12]
 80070e2:	2a00      	cmp	r2, #0
 80070e4:	d1e1      	bne.n	80070aa <_Balloc+0xe>
 80070e6:	2000      	movs	r0, #0
 80070e8:	bd70      	pop	{r4, r5, r6, pc}
 80070ea:	2301      	movs	r3, #1
 80070ec:	4630      	mov	r0, r6
 80070ee:	4619      	mov	r1, r3
 80070f0:	fa03 f405 	lsl.w	r4, r3, r5
 80070f4:	1d62      	adds	r2, r4, #5
 80070f6:	0092      	lsls	r2, r2, #2
 80070f8:	f001 fbe6 	bl	80088c8 <_calloc_r>
 80070fc:	4603      	mov	r3, r0
 80070fe:	2800      	cmp	r0, #0
 8007100:	d0f1      	beq.n	80070e6 <_Balloc+0x4a>
 8007102:	6045      	str	r5, [r0, #4]
 8007104:	6084      	str	r4, [r0, #8]
 8007106:	e7d6      	b.n	80070b6 <_Balloc+0x1a>

08007108 <_Bfree>:
 8007108:	b530      	push	{r4, r5, lr}
 800710a:	4604      	mov	r4, r0
 800710c:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800710e:	b083      	sub	sp, #12
 8007110:	b155      	cbz	r5, 8007128 <_Bfree+0x20>
 8007112:	b139      	cbz	r1, 8007124 <_Bfree+0x1c>
 8007114:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007116:	684a      	ldr	r2, [r1, #4]
 8007118:	68db      	ldr	r3, [r3, #12]
 800711a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800711e:	6008      	str	r0, [r1, #0]
 8007120:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8007124:	b003      	add	sp, #12
 8007126:	bd30      	pop	{r4, r5, pc}
 8007128:	2010      	movs	r0, #16
 800712a:	9101      	str	r1, [sp, #4]
 800712c:	f7ff fc4e 	bl	80069cc <malloc>
 8007130:	9901      	ldr	r1, [sp, #4]
 8007132:	6260      	str	r0, [r4, #36]	; 0x24
 8007134:	6045      	str	r5, [r0, #4]
 8007136:	6085      	str	r5, [r0, #8]
 8007138:	6005      	str	r5, [r0, #0]
 800713a:	60c5      	str	r5, [r0, #12]
 800713c:	e7e9      	b.n	8007112 <_Bfree+0xa>
 800713e:	bf00      	nop

08007140 <__multadd>:
 8007140:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007144:	4688      	mov	r8, r1
 8007146:	f8d1 a010 	ldr.w	sl, [r1, #16]
 800714a:	b082      	sub	sp, #8
 800714c:	4681      	mov	r9, r0
 800714e:	f101 0514 	add.w	r5, r1, #20
 8007152:	2400      	movs	r4, #0
 8007154:	682f      	ldr	r7, [r5, #0]
 8007156:	3401      	adds	r4, #1
 8007158:	45a2      	cmp	sl, r4
 800715a:	b2be      	uxth	r6, r7
 800715c:	ea4f 4717 	mov.w	r7, r7, lsr #16
 8007160:	fb02 3606 	mla	r6, r2, r6, r3
 8007164:	fb02 f307 	mul.w	r3, r2, r7
 8007168:	eb03 4316 	add.w	r3, r3, r6, lsr #16
 800716c:	b2b6      	uxth	r6, r6
 800716e:	eb06 4603 	add.w	r6, r6, r3, lsl #16
 8007172:	ea4f 4313 	mov.w	r3, r3, lsr #16
 8007176:	f845 6b04 	str.w	r6, [r5], #4
 800717a:	dceb      	bgt.n	8007154 <__multadd+0x14>
 800717c:	b153      	cbz	r3, 8007194 <__multadd+0x54>
 800717e:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8007182:	4592      	cmp	sl, r2
 8007184:	da0a      	bge.n	800719c <__multadd+0x5c>
 8007186:	eb08 018a 	add.w	r1, r8, sl, lsl #2
 800718a:	f10a 0201 	add.w	r2, sl, #1
 800718e:	614b      	str	r3, [r1, #20]
 8007190:	f8c8 2010 	str.w	r2, [r8, #16]
 8007194:	4640      	mov	r0, r8
 8007196:	b002      	add	sp, #8
 8007198:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800719c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 80071a0:	4648      	mov	r0, r9
 80071a2:	9301      	str	r3, [sp, #4]
 80071a4:	3101      	adds	r1, #1
 80071a6:	f7ff ff79 	bl	800709c <_Balloc>
 80071aa:	f8d8 2010 	ldr.w	r2, [r8, #16]
 80071ae:	f108 010c 	add.w	r1, r8, #12
 80071b2:	3202      	adds	r2, #2
 80071b4:	0092      	lsls	r2, r2, #2
 80071b6:	4604      	mov	r4, r0
 80071b8:	300c      	adds	r0, #12
 80071ba:	f7ff ff17 	bl	8006fec <memcpy>
 80071be:	4641      	mov	r1, r8
 80071c0:	4648      	mov	r0, r9
 80071c2:	46a0      	mov	r8, r4
 80071c4:	f7ff ffa0 	bl	8007108 <_Bfree>
 80071c8:	9b01      	ldr	r3, [sp, #4]
 80071ca:	e7dc      	b.n	8007186 <__multadd+0x46>

080071cc <__s2b>:
 80071cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80071d0:	4699      	mov	r9, r3
 80071d2:	f648 6339 	movw	r3, #36409	; 0x8e39
 80071d6:	f109 0508 	add.w	r5, r9, #8
 80071da:	f6c3 03e3 	movt	r3, #14563	; 0x38e3
 80071de:	460c      	mov	r4, r1
 80071e0:	4607      	mov	r7, r0
 80071e2:	4690      	mov	r8, r2
 80071e4:	fb83 1305 	smull	r1, r3, r3, r5
 80071e8:	17ed      	asrs	r5, r5, #31
 80071ea:	9e08      	ldr	r6, [sp, #32]
 80071ec:	ebc5 0363 	rsb	r3, r5, r3, asr #1
 80071f0:	2b01      	cmp	r3, #1
 80071f2:	dd35      	ble.n	8007260 <__s2b+0x94>
 80071f4:	2501      	movs	r5, #1
 80071f6:	2100      	movs	r1, #0
 80071f8:	006d      	lsls	r5, r5, #1
 80071fa:	3101      	adds	r1, #1
 80071fc:	42ab      	cmp	r3, r5
 80071fe:	dcfb      	bgt.n	80071f8 <__s2b+0x2c>
 8007200:	4638      	mov	r0, r7
 8007202:	f7ff ff4b 	bl	800709c <_Balloc>
 8007206:	f1b8 0f09 	cmp.w	r8, #9
 800720a:	f04f 0301 	mov.w	r3, #1
 800720e:	bfdc      	itt	le
 8007210:	340a      	addle	r4, #10
 8007212:	f04f 0809 	movle.w	r8, #9
 8007216:	6146      	str	r6, [r0, #20]
 8007218:	6103      	str	r3, [r0, #16]
 800721a:	dd10      	ble.n	800723e <__s2b+0x72>
 800721c:	f104 0609 	add.w	r6, r4, #9
 8007220:	4444      	add	r4, r8
 8007222:	4635      	mov	r5, r6
 8007224:	f815 3b01 	ldrb.w	r3, [r5], #1
 8007228:	4601      	mov	r1, r0
 800722a:	220a      	movs	r2, #10
 800722c:	4638      	mov	r0, r7
 800722e:	3b30      	subs	r3, #48	; 0x30
 8007230:	f7ff ff86 	bl	8007140 <__multadd>
 8007234:	42a5      	cmp	r5, r4
 8007236:	d1f5      	bne.n	8007224 <__s2b+0x58>
 8007238:	eb06 0408 	add.w	r4, r6, r8
 800723c:	3c08      	subs	r4, #8
 800723e:	45c1      	cmp	r9, r8
 8007240:	dd0c      	ble.n	800725c <__s2b+0x90>
 8007242:	ebc8 0809 	rsb	r8, r8, r9
 8007246:	44a0      	add	r8, r4
 8007248:	f814 3b01 	ldrb.w	r3, [r4], #1
 800724c:	4601      	mov	r1, r0
 800724e:	220a      	movs	r2, #10
 8007250:	4638      	mov	r0, r7
 8007252:	3b30      	subs	r3, #48	; 0x30
 8007254:	f7ff ff74 	bl	8007140 <__multadd>
 8007258:	4544      	cmp	r4, r8
 800725a:	d1f5      	bne.n	8007248 <__s2b+0x7c>
 800725c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007260:	2100      	movs	r1, #0
 8007262:	e7cd      	b.n	8007200 <__s2b+0x34>

08007264 <__hi0bits>:
 8007264:	0c03      	lsrs	r3, r0, #16
 8007266:	bf06      	itte	eq
 8007268:	0400      	lsleq	r0, r0, #16
 800726a:	2310      	moveq	r3, #16
 800726c:	2300      	movne	r3, #0
 800726e:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8007272:	bf04      	itt	eq
 8007274:	0200      	lsleq	r0, r0, #8
 8007276:	3308      	addeq	r3, #8
 8007278:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800727c:	bf04      	itt	eq
 800727e:	0100      	lsleq	r0, r0, #4
 8007280:	3304      	addeq	r3, #4
 8007282:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8007286:	bf04      	itt	eq
 8007288:	0080      	lsleq	r0, r0, #2
 800728a:	3302      	addeq	r3, #2
 800728c:	2800      	cmp	r0, #0
 800728e:	db05      	blt.n	800729c <__hi0bits+0x38>
 8007290:	0042      	lsls	r2, r0, #1
 8007292:	d401      	bmi.n	8007298 <__hi0bits+0x34>
 8007294:	2020      	movs	r0, #32
 8007296:	4770      	bx	lr
 8007298:	1c58      	adds	r0, r3, #1
 800729a:	4770      	bx	lr
 800729c:	4618      	mov	r0, r3
 800729e:	4770      	bx	lr

080072a0 <__lo0bits>:
 80072a0:	6803      	ldr	r3, [r0, #0]
 80072a2:	4602      	mov	r2, r0
 80072a4:	f013 0007 	ands.w	r0, r3, #7
 80072a8:	d009      	beq.n	80072be <__lo0bits+0x1e>
 80072aa:	07d9      	lsls	r1, r3, #31
 80072ac:	d421      	bmi.n	80072f2 <__lo0bits+0x52>
 80072ae:	0798      	lsls	r0, r3, #30
 80072b0:	bf4b      	itete	mi
 80072b2:	085b      	lsrmi	r3, r3, #1
 80072b4:	089b      	lsrpl	r3, r3, #2
 80072b6:	2001      	movmi	r0, #1
 80072b8:	2002      	movpl	r0, #2
 80072ba:	6013      	str	r3, [r2, #0]
 80072bc:	4770      	bx	lr
 80072be:	b299      	uxth	r1, r3
 80072c0:	b909      	cbnz	r1, 80072c6 <__lo0bits+0x26>
 80072c2:	0c1b      	lsrs	r3, r3, #16
 80072c4:	2010      	movs	r0, #16
 80072c6:	f013 0fff 	tst.w	r3, #255	; 0xff
 80072ca:	bf04      	itt	eq
 80072cc:	0a1b      	lsreq	r3, r3, #8
 80072ce:	3008      	addeq	r0, #8
 80072d0:	0719      	lsls	r1, r3, #28
 80072d2:	bf04      	itt	eq
 80072d4:	091b      	lsreq	r3, r3, #4
 80072d6:	3004      	addeq	r0, #4
 80072d8:	0799      	lsls	r1, r3, #30
 80072da:	bf04      	itt	eq
 80072dc:	089b      	lsreq	r3, r3, #2
 80072de:	3002      	addeq	r0, #2
 80072e0:	07d9      	lsls	r1, r3, #31
 80072e2:	d404      	bmi.n	80072ee <__lo0bits+0x4e>
 80072e4:	085b      	lsrs	r3, r3, #1
 80072e6:	d101      	bne.n	80072ec <__lo0bits+0x4c>
 80072e8:	2020      	movs	r0, #32
 80072ea:	4770      	bx	lr
 80072ec:	3001      	adds	r0, #1
 80072ee:	6013      	str	r3, [r2, #0]
 80072f0:	4770      	bx	lr
 80072f2:	2000      	movs	r0, #0
 80072f4:	4770      	bx	lr
 80072f6:	bf00      	nop

080072f8 <__i2b>:
 80072f8:	b510      	push	{r4, lr}
 80072fa:	460c      	mov	r4, r1
 80072fc:	2101      	movs	r1, #1
 80072fe:	f7ff fecd 	bl	800709c <_Balloc>
 8007302:	2201      	movs	r2, #1
 8007304:	6144      	str	r4, [r0, #20]
 8007306:	6102      	str	r2, [r0, #16]
 8007308:	bd10      	pop	{r4, pc}
 800730a:	bf00      	nop

0800730c <__multiply>:
 800730c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007310:	460c      	mov	r4, r1
 8007312:	690e      	ldr	r6, [r1, #16]
 8007314:	b085      	sub	sp, #20
 8007316:	6915      	ldr	r5, [r2, #16]
 8007318:	4693      	mov	fp, r2
 800731a:	42ae      	cmp	r6, r5
 800731c:	da04      	bge.n	8007328 <__multiply+0x1c>
 800731e:	4632      	mov	r2, r6
 8007320:	465c      	mov	r4, fp
 8007322:	462e      	mov	r6, r5
 8007324:	468b      	mov	fp, r1
 8007326:	4615      	mov	r5, r2
 8007328:	68a3      	ldr	r3, [r4, #8]
 800732a:	eb06 0905 	add.w	r9, r6, r5
 800732e:	6861      	ldr	r1, [r4, #4]
 8007330:	4599      	cmp	r9, r3
 8007332:	bfc8      	it	gt
 8007334:	3101      	addgt	r1, #1
 8007336:	f7ff feb1 	bl	800709c <_Balloc>
 800733a:	f100 0a14 	add.w	sl, r0, #20
 800733e:	9002      	str	r0, [sp, #8]
 8007340:	eb0a 0189 	add.w	r1, sl, r9, lsl #2
 8007344:	9101      	str	r1, [sp, #4]
 8007346:	458a      	cmp	sl, r1
 8007348:	d206      	bcs.n	8007358 <__multiply+0x4c>
 800734a:	9a01      	ldr	r2, [sp, #4]
 800734c:	4653      	mov	r3, sl
 800734e:	2000      	movs	r0, #0
 8007350:	f843 0b04 	str.w	r0, [r3], #4
 8007354:	429a      	cmp	r2, r3
 8007356:	d8fb      	bhi.n	8007350 <__multiply+0x44>
 8007358:	f10b 0b14 	add.w	fp, fp, #20
 800735c:	3414      	adds	r4, #20
 800735e:	eb0b 0585 	add.w	r5, fp, r5, lsl #2
 8007362:	9400      	str	r4, [sp, #0]
 8007364:	45ab      	cmp	fp, r5
 8007366:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 800736a:	bf3c      	itt	cc
 800736c:	f8cd 900c 	strcc.w	r9, [sp, #12]
 8007370:	46a9      	movcc	r9, r5
 8007372:	d254      	bcs.n	800741e <__multiply+0x112>
 8007374:	f85b 3b04 	ldr.w	r3, [fp], #4
 8007378:	b29c      	uxth	r4, r3
 800737a:	2c00      	cmp	r4, #0
 800737c:	d064      	beq.n	8007448 <__multiply+0x13c>
 800737e:	9900      	ldr	r1, [sp, #0]
 8007380:	4652      	mov	r2, sl
 8007382:	2500      	movs	r5, #0
 8007384:	46a4      	mov	ip, r4
 8007386:	e000      	b.n	800738a <__multiply+0x7e>
 8007388:	461a      	mov	r2, r3
 800738a:	f851 4b04 	ldr.w	r4, [r1], #4
 800738e:	4613      	mov	r3, r2
 8007390:	6817      	ldr	r7, [r2, #0]
 8007392:	428e      	cmp	r6, r1
 8007394:	fa1f f884 	uxth.w	r8, r4
 8007398:	ea4f 4414 	mov.w	r4, r4, lsr #16
 800739c:	b2b8      	uxth	r0, r7
 800739e:	ea4f 4717 	mov.w	r7, r7, lsr #16
 80073a2:	fb0c 0808 	mla	r8, ip, r8, r0
 80073a6:	fb0c 7004 	mla	r0, ip, r4, r7
 80073aa:	4445      	add	r5, r8
 80073ac:	eb00 4015 	add.w	r0, r0, r5, lsr #16
 80073b0:	b2ad      	uxth	r5, r5
 80073b2:	ea45 4400 	orr.w	r4, r5, r0, lsl #16
 80073b6:	ea4f 4510 	mov.w	r5, r0, lsr #16
 80073ba:	f843 4b04 	str.w	r4, [r3], #4
 80073be:	d8e3      	bhi.n	8007388 <__multiply+0x7c>
 80073c0:	6055      	str	r5, [r2, #4]
 80073c2:	f85b 4c04 	ldr.w	r4, [fp, #-4]
 80073c6:	0c24      	lsrs	r4, r4, #16
 80073c8:	d023      	beq.n	8007412 <__multiply+0x106>
 80073ca:	f8da 1000 	ldr.w	r1, [sl]
 80073ce:	4650      	mov	r0, sl
 80073d0:	9b00      	ldr	r3, [sp, #0]
 80073d2:	2700      	movs	r7, #0
 80073d4:	460d      	mov	r5, r1
 80073d6:	e000      	b.n	80073da <__multiply+0xce>
 80073d8:	4610      	mov	r0, r2
 80073da:	f8b3 c000 	ldrh.w	ip, [r3]
 80073de:	0c2d      	lsrs	r5, r5, #16
 80073e0:	4602      	mov	r2, r0
 80073e2:	b289      	uxth	r1, r1
 80073e4:	fb04 550c 	mla	r5, r4, ip, r5
 80073e8:	442f      	add	r7, r5
 80073ea:	ea41 4107 	orr.w	r1, r1, r7, lsl #16
 80073ee:	f842 1b04 	str.w	r1, [r2], #4
 80073f2:	6841      	ldr	r1, [r0, #4]
 80073f4:	f853 cb04 	ldr.w	ip, [r3], #4
 80073f8:	460d      	mov	r5, r1
 80073fa:	b289      	uxth	r1, r1
 80073fc:	429e      	cmp	r6, r3
 80073fe:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8007402:	fb04 110c 	mla	r1, r4, ip, r1
 8007406:	eb01 4117 	add.w	r1, r1, r7, lsr #16
 800740a:	ea4f 4711 	mov.w	r7, r1, lsr #16
 800740e:	d8e3      	bhi.n	80073d8 <__multiply+0xcc>
 8007410:	6041      	str	r1, [r0, #4]
 8007412:	45d9      	cmp	r9, fp
 8007414:	f10a 0a04 	add.w	sl, sl, #4
 8007418:	d8ac      	bhi.n	8007374 <__multiply+0x68>
 800741a:	f8dd 900c 	ldr.w	r9, [sp, #12]
 800741e:	f1b9 0f00 	cmp.w	r9, #0
 8007422:	dd0a      	ble.n	800743a <__multiply+0x12e>
 8007424:	9b01      	ldr	r3, [sp, #4]
 8007426:	3b04      	subs	r3, #4
 8007428:	681a      	ldr	r2, [r3, #0]
 800742a:	b11a      	cbz	r2, 8007434 <__multiply+0x128>
 800742c:	e005      	b.n	800743a <__multiply+0x12e>
 800742e:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8007432:	b912      	cbnz	r2, 800743a <__multiply+0x12e>
 8007434:	f1b9 0901 	subs.w	r9, r9, #1
 8007438:	d1f9      	bne.n	800742e <__multiply+0x122>
 800743a:	9902      	ldr	r1, [sp, #8]
 800743c:	4608      	mov	r0, r1
 800743e:	f8c1 9010 	str.w	r9, [r1, #16]
 8007442:	b005      	add	sp, #20
 8007444:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007448:	461c      	mov	r4, r3
 800744a:	e7bc      	b.n	80073c6 <__multiply+0xba>

0800744c <__pow5mult>:
 800744c:	f012 0303 	ands.w	r3, r2, #3
 8007450:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007454:	4614      	mov	r4, r2
 8007456:	b083      	sub	sp, #12
 8007458:	4607      	mov	r7, r0
 800745a:	460e      	mov	r6, r1
 800745c:	d12b      	bne.n	80074b6 <__pow5mult+0x6a>
 800745e:	10a4      	asrs	r4, r4, #2
 8007460:	d01c      	beq.n	800749c <__pow5mult+0x50>
 8007462:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007464:	2b00      	cmp	r3, #0
 8007466:	d032      	beq.n	80074ce <__pow5mult+0x82>
 8007468:	689d      	ldr	r5, [r3, #8]
 800746a:	2d00      	cmp	r5, #0
 800746c:	d03a      	beq.n	80074e4 <__pow5mult+0x98>
 800746e:	f04f 0900 	mov.w	r9, #0
 8007472:	e004      	b.n	800747e <__pow5mult+0x32>
 8007474:	1064      	asrs	r4, r4, #1
 8007476:	d011      	beq.n	800749c <__pow5mult+0x50>
 8007478:	6828      	ldr	r0, [r5, #0]
 800747a:	b198      	cbz	r0, 80074a4 <__pow5mult+0x58>
 800747c:	4605      	mov	r5, r0
 800747e:	07e0      	lsls	r0, r4, #31
 8007480:	d5f8      	bpl.n	8007474 <__pow5mult+0x28>
 8007482:	4631      	mov	r1, r6
 8007484:	462a      	mov	r2, r5
 8007486:	4638      	mov	r0, r7
 8007488:	f7ff ff40 	bl	800730c <__multiply>
 800748c:	4631      	mov	r1, r6
 800748e:	4680      	mov	r8, r0
 8007490:	4638      	mov	r0, r7
 8007492:	f7ff fe39 	bl	8007108 <_Bfree>
 8007496:	1064      	asrs	r4, r4, #1
 8007498:	4646      	mov	r6, r8
 800749a:	d1ed      	bne.n	8007478 <__pow5mult+0x2c>
 800749c:	4630      	mov	r0, r6
 800749e:	b003      	add	sp, #12
 80074a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80074a4:	4638      	mov	r0, r7
 80074a6:	4629      	mov	r1, r5
 80074a8:	462a      	mov	r2, r5
 80074aa:	f7ff ff2f 	bl	800730c <__multiply>
 80074ae:	6028      	str	r0, [r5, #0]
 80074b0:	f8c0 9000 	str.w	r9, [r0]
 80074b4:	e7e2      	b.n	800747c <__pow5mult+0x30>
 80074b6:	f24a 4298 	movw	r2, #42136	; 0xa498
 80074ba:	1e5d      	subs	r5, r3, #1
 80074bc:	f6c0 0200 	movt	r2, #2048	; 0x800
 80074c0:	2300      	movs	r3, #0
 80074c2:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 80074c6:	f7ff fe3b 	bl	8007140 <__multadd>
 80074ca:	4606      	mov	r6, r0
 80074cc:	e7c7      	b.n	800745e <__pow5mult+0x12>
 80074ce:	2010      	movs	r0, #16
 80074d0:	9301      	str	r3, [sp, #4]
 80074d2:	f7ff fa7b 	bl	80069cc <malloc>
 80074d6:	9b01      	ldr	r3, [sp, #4]
 80074d8:	6278      	str	r0, [r7, #36]	; 0x24
 80074da:	6043      	str	r3, [r0, #4]
 80074dc:	6083      	str	r3, [r0, #8]
 80074de:	6003      	str	r3, [r0, #0]
 80074e0:	60c3      	str	r3, [r0, #12]
 80074e2:	4603      	mov	r3, r0
 80074e4:	2101      	movs	r1, #1
 80074e6:	4638      	mov	r0, r7
 80074e8:	9301      	str	r3, [sp, #4]
 80074ea:	f7ff fdd7 	bl	800709c <_Balloc>
 80074ee:	9b01      	ldr	r3, [sp, #4]
 80074f0:	f240 2271 	movw	r2, #625	; 0x271
 80074f4:	2101      	movs	r1, #1
 80074f6:	6142      	str	r2, [r0, #20]
 80074f8:	4605      	mov	r5, r0
 80074fa:	2200      	movs	r2, #0
 80074fc:	6101      	str	r1, [r0, #16]
 80074fe:	6098      	str	r0, [r3, #8]
 8007500:	6002      	str	r2, [r0, #0]
 8007502:	e7b4      	b.n	800746e <__pow5mult+0x22>

08007504 <__lshift>:
 8007504:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007508:	4693      	mov	fp, r2
 800750a:	690a      	ldr	r2, [r1, #16]
 800750c:	460f      	mov	r7, r1
 800750e:	ea4f 156b 	mov.w	r5, fp, asr #5
 8007512:	688b      	ldr	r3, [r1, #8]
 8007514:	eb05 0902 	add.w	r9, r5, r2
 8007518:	4680      	mov	r8, r0
 800751a:	f109 0601 	add.w	r6, r9, #1
 800751e:	6849      	ldr	r1, [r1, #4]
 8007520:	429e      	cmp	r6, r3
 8007522:	dd03      	ble.n	800752c <__lshift+0x28>
 8007524:	005b      	lsls	r3, r3, #1
 8007526:	3101      	adds	r1, #1
 8007528:	429e      	cmp	r6, r3
 800752a:	dcfb      	bgt.n	8007524 <__lshift+0x20>
 800752c:	4640      	mov	r0, r8
 800752e:	f7ff fdb5 	bl	800709c <_Balloc>
 8007532:	2d00      	cmp	r5, #0
 8007534:	4682      	mov	sl, r0
 8007536:	f100 0414 	add.w	r4, r0, #20
 800753a:	dd09      	ble.n	8007550 <__lshift+0x4c>
 800753c:	2300      	movs	r3, #0
 800753e:	4622      	mov	r2, r4
 8007540:	4619      	mov	r1, r3
 8007542:	3301      	adds	r3, #1
 8007544:	f842 1b04 	str.w	r1, [r2], #4
 8007548:	42ab      	cmp	r3, r5
 800754a:	d1fa      	bne.n	8007542 <__lshift+0x3e>
 800754c:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 8007550:	693a      	ldr	r2, [r7, #16]
 8007552:	f01b 0b1f 	ands.w	fp, fp, #31
 8007556:	f107 0314 	add.w	r3, r7, #20
 800755a:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 800755e:	d01f      	beq.n	80075a0 <__lshift+0x9c>
 8007560:	f1cb 0e20 	rsb	lr, fp, #32
 8007564:	2000      	movs	r0, #0
 8007566:	e000      	b.n	800756a <__lshift+0x66>
 8007568:	462c      	mov	r4, r5
 800756a:	6819      	ldr	r1, [r3, #0]
 800756c:	4625      	mov	r5, r4
 800756e:	fa01 f10b 	lsl.w	r1, r1, fp
 8007572:	4308      	orrs	r0, r1
 8007574:	f845 0b04 	str.w	r0, [r5], #4
 8007578:	f853 0b04 	ldr.w	r0, [r3], #4
 800757c:	4293      	cmp	r3, r2
 800757e:	fa20 f00e 	lsr.w	r0, r0, lr
 8007582:	d3f1      	bcc.n	8007568 <__lshift+0x64>
 8007584:	6060      	str	r0, [r4, #4]
 8007586:	b108      	cbz	r0, 800758c <__lshift+0x88>
 8007588:	f109 0602 	add.w	r6, r9, #2
 800758c:	4640      	mov	r0, r8
 800758e:	3e01      	subs	r6, #1
 8007590:	4639      	mov	r1, r7
 8007592:	f8ca 6010 	str.w	r6, [sl, #16]
 8007596:	f7ff fdb7 	bl	8007108 <_Bfree>
 800759a:	4650      	mov	r0, sl
 800759c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80075a0:	f853 1b04 	ldr.w	r1, [r3], #4
 80075a4:	429a      	cmp	r2, r3
 80075a6:	f844 1b04 	str.w	r1, [r4], #4
 80075aa:	d9ef      	bls.n	800758c <__lshift+0x88>
 80075ac:	f853 1b04 	ldr.w	r1, [r3], #4
 80075b0:	429a      	cmp	r2, r3
 80075b2:	f844 1b04 	str.w	r1, [r4], #4
 80075b6:	d8f3      	bhi.n	80075a0 <__lshift+0x9c>
 80075b8:	e7e8      	b.n	800758c <__lshift+0x88>
 80075ba:	bf00      	nop

080075bc <__mcmp>:
 80075bc:	6902      	ldr	r2, [r0, #16]
 80075be:	690b      	ldr	r3, [r1, #16]
 80075c0:	b410      	push	{r4}
 80075c2:	1ad2      	subs	r2, r2, r3
 80075c4:	bf18      	it	ne
 80075c6:	4610      	movne	r0, r2
 80075c8:	d112      	bne.n	80075f0 <__mcmp+0x34>
 80075ca:	009a      	lsls	r2, r3, #2
 80075cc:	3014      	adds	r0, #20
 80075ce:	3114      	adds	r1, #20
 80075d0:	1883      	adds	r3, r0, r2
 80075d2:	4411      	add	r1, r2
 80075d4:	e001      	b.n	80075da <__mcmp+0x1e>
 80075d6:	4298      	cmp	r0, r3
 80075d8:	d20d      	bcs.n	80075f6 <__mcmp+0x3a>
 80075da:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 80075de:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 80075e2:	42a2      	cmp	r2, r4
 80075e4:	d0f7      	beq.n	80075d6 <__mcmp+0x1a>
 80075e6:	4294      	cmp	r4, r2
 80075e8:	bf94      	ite	ls
 80075ea:	2001      	movls	r0, #1
 80075ec:	f04f 30ff 	movhi.w	r0, #4294967295
 80075f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80075f4:	4770      	bx	lr
 80075f6:	2000      	movs	r0, #0
 80075f8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80075fc:	4770      	bx	lr
 80075fe:	bf00      	nop

08007600 <__mdiff>:
 8007600:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007604:	4688      	mov	r8, r1
 8007606:	4605      	mov	r5, r0
 8007608:	4611      	mov	r1, r2
 800760a:	4640      	mov	r0, r8
 800760c:	4614      	mov	r4, r2
 800760e:	f7ff ffd5 	bl	80075bc <__mcmp>
 8007612:	1e06      	subs	r6, r0, #0
 8007614:	d05f      	beq.n	80076d6 <__mdiff+0xd6>
 8007616:	bfbc      	itt	lt
 8007618:	4643      	movlt	r3, r8
 800761a:	46a0      	movlt	r8, r4
 800761c:	4628      	mov	r0, r5
 800761e:	bfb8      	it	lt
 8007620:	461c      	movlt	r4, r3
 8007622:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8007626:	bfac      	ite	ge
 8007628:	2600      	movge	r6, #0
 800762a:	2601      	movlt	r6, #1
 800762c:	f7ff fd36 	bl	800709c <_Balloc>
 8007630:	f8d8 c010 	ldr.w	ip, [r8, #16]
 8007634:	f104 0914 	add.w	r9, r4, #20
 8007638:	6922      	ldr	r2, [r4, #16]
 800763a:	f108 0814 	add.w	r8, r8, #20
 800763e:	4644      	mov	r4, r8
 8007640:	464d      	mov	r5, r9
 8007642:	eb08 088c 	add.w	r8, r8, ip, lsl #2
 8007646:	eb09 0982 	add.w	r9, r9, r2, lsl #2
 800764a:	2200      	movs	r2, #0
 800764c:	4682      	mov	sl, r0
 800764e:	f100 0314 	add.w	r3, r0, #20
 8007652:	60c6      	str	r6, [r0, #12]
 8007654:	f854 7b04 	ldr.w	r7, [r4], #4
 8007658:	f855 0b04 	ldr.w	r0, [r5], #4
 800765c:	4621      	mov	r1, r4
 800765e:	b2be      	uxth	r6, r7
 8007660:	45a9      	cmp	r9, r5
 8007662:	4432      	add	r2, r6
 8007664:	fa1f fb80 	uxth.w	fp, r0
 8007668:	ebcb 0602 	rsb	r6, fp, r2
 800766c:	ea4f 4210 	mov.w	r2, r0, lsr #16
 8007670:	ebc2 4217 	rsb	r2, r2, r7, lsr #16
 8007674:	eb02 4226 	add.w	r2, r2, r6, asr #16
 8007678:	b2b6      	uxth	r6, r6
 800767a:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
 800767e:	ea4f 4222 	mov.w	r2, r2, asr #16
 8007682:	f843 6b04 	str.w	r6, [r3], #4
 8007686:	d8e5      	bhi.n	8007654 <__mdiff+0x54>
 8007688:	45a0      	cmp	r8, r4
 800768a:	461d      	mov	r5, r3
 800768c:	d916      	bls.n	80076bc <__mdiff+0xbc>
 800768e:	f851 0b04 	ldr.w	r0, [r1], #4
 8007692:	4588      	cmp	r8, r1
 8007694:	b286      	uxth	r6, r0
 8007696:	ea4f 4010 	mov.w	r0, r0, lsr #16
 800769a:	4432      	add	r2, r6
 800769c:	eb00 4022 	add.w	r0, r0, r2, asr #16
 80076a0:	b292      	uxth	r2, r2
 80076a2:	ea42 4600 	orr.w	r6, r2, r0, lsl #16
 80076a6:	ea4f 4220 	mov.w	r2, r0, asr #16
 80076aa:	f843 6b04 	str.w	r6, [r3], #4
 80076ae:	d8ee      	bhi.n	800768e <__mdiff+0x8e>
 80076b0:	43e3      	mvns	r3, r4
 80076b2:	4443      	add	r3, r8
 80076b4:	f023 0303 	bic.w	r3, r3, #3
 80076b8:	3304      	adds	r3, #4
 80076ba:	442b      	add	r3, r5
 80076bc:	3b04      	subs	r3, #4
 80076be:	b92e      	cbnz	r6, 80076cc <__mdiff+0xcc>
 80076c0:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 80076c4:	f10c 3cff 	add.w	ip, ip, #4294967295
 80076c8:	2a00      	cmp	r2, #0
 80076ca:	d0f9      	beq.n	80076c0 <__mdiff+0xc0>
 80076cc:	4650      	mov	r0, sl
 80076ce:	f8ca c010 	str.w	ip, [sl, #16]
 80076d2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80076d6:	4628      	mov	r0, r5
 80076d8:	4631      	mov	r1, r6
 80076da:	f7ff fcdf 	bl	800709c <_Balloc>
 80076de:	2201      	movs	r2, #1
 80076e0:	4603      	mov	r3, r0
 80076e2:	615e      	str	r6, [r3, #20]
 80076e4:	611a      	str	r2, [r3, #16]
 80076e6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80076ea:	bf00      	nop

080076ec <__ulp>:
 80076ec:	2300      	movs	r3, #0
 80076ee:	f6c7 73f0 	movt	r3, #32752	; 0x7ff0
 80076f2:	400b      	ands	r3, r1
 80076f4:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 80076f8:	2b00      	cmp	r3, #0
 80076fa:	dd02      	ble.n	8007702 <__ulp+0x16>
 80076fc:	4619      	mov	r1, r3
 80076fe:	2000      	movs	r0, #0
 8007700:	4770      	bx	lr
 8007702:	425b      	negs	r3, r3
 8007704:	151b      	asrs	r3, r3, #20
 8007706:	2b13      	cmp	r3, #19
 8007708:	dd0b      	ble.n	8007722 <__ulp+0x36>
 800770a:	2b32      	cmp	r3, #50	; 0x32
 800770c:	f04f 0100 	mov.w	r1, #0
 8007710:	bfdb      	ittet	le
 8007712:	2201      	movle	r2, #1
 8007714:	f1c3 0333 	rsble	r3, r3, #51	; 0x33
 8007718:	2301      	movgt	r3, #1
 800771a:	fa02 f303 	lslle.w	r3, r2, r3
 800771e:	4618      	mov	r0, r3
 8007720:	4770      	bx	lr
 8007722:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 8007726:	2000      	movs	r0, #0
 8007728:	fa42 f103 	asr.w	r1, r2, r3
 800772c:	4770      	bx	lr
 800772e:	bf00      	nop

08007730 <__b2d>:
 8007730:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007732:	f100 0614 	add.w	r6, r0, #20
 8007736:	6904      	ldr	r4, [r0, #16]
 8007738:	eb06 0484 	add.w	r4, r6, r4, lsl #2
 800773c:	1f27      	subs	r7, r4, #4
 800773e:	f854 5c04 	ldr.w	r5, [r4, #-4]
 8007742:	4628      	mov	r0, r5
 8007744:	f7ff fd8e 	bl	8007264 <__hi0bits>
 8007748:	280a      	cmp	r0, #10
 800774a:	f1c0 0320 	rsb	r3, r0, #32
 800774e:	600b      	str	r3, [r1, #0]
 8007750:	dc18      	bgt.n	8007784 <__b2d+0x54>
 8007752:	42be      	cmp	r6, r7
 8007754:	f1c0 010b 	rsb	r1, r0, #11
 8007758:	fa25 fc01 	lsr.w	ip, r5, r1
 800775c:	f100 0015 	add.w	r0, r0, #21
 8007760:	bf34      	ite	cc
 8007762:	f854 4c08 	ldrcc.w	r4, [r4, #-8]
 8007766:	2100      	movcs	r1, #0
 8007768:	fa05 f500 	lsl.w	r5, r5, r0
 800776c:	f04c 5c7f 	orr.w	ip, ip, #1069547520	; 0x3fc00000
 8007770:	f44c 1340 	orr.w	r3, ip, #3145728	; 0x300000
 8007774:	bf38      	it	cc
 8007776:	fa24 f101 	lsrcc.w	r1, r4, r1
 800777a:	ea41 0205 	orr.w	r2, r1, r5
 800777e:	4619      	mov	r1, r3
 8007780:	4610      	mov	r0, r2
 8007782:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007784:	42be      	cmp	r6, r7
 8007786:	bf36      	itet	cc
 8007788:	f1a4 0708 	subcc.w	r7, r4, #8
 800778c:	2100      	movcs	r1, #0
 800778e:	f854 1c08 	ldrcc.w	r1, [r4, #-8]
 8007792:	f1b0 040b 	subs.w	r4, r0, #11
 8007796:	d019      	beq.n	80077cc <__b2d+0x9c>
 8007798:	40a5      	lsls	r5, r4
 800779a:	f1c0 002b 	rsb	r0, r0, #43	; 0x2b
 800779e:	42b7      	cmp	r7, r6
 80077a0:	f045 557f 	orr.w	r5, r5, #1069547520	; 0x3fc00000
 80077a4:	fa21 fc00 	lsr.w	ip, r1, r0
 80077a8:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 80077ac:	ea45 030c 	orr.w	r3, r5, ip
 80077b0:	bf8c      	ite	hi
 80077b2:	f857 5c04 	ldrhi.w	r5, [r7, #-4]
 80077b6:	2000      	movls	r0, #0
 80077b8:	fa01 f104 	lsl.w	r1, r1, r4
 80077bc:	bf88      	it	hi
 80077be:	fa25 f000 	lsrhi.w	r0, r5, r0
 80077c2:	ea40 0201 	orr.w	r2, r0, r1
 80077c6:	4619      	mov	r1, r3
 80077c8:	4610      	mov	r0, r2
 80077ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80077cc:	f045 557f 	orr.w	r5, r5, #1069547520	; 0x3fc00000
 80077d0:	460a      	mov	r2, r1
 80077d2:	f445 1340 	orr.w	r3, r5, #3145728	; 0x300000
 80077d6:	4610      	mov	r0, r2
 80077d8:	4619      	mov	r1, r3
 80077da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080077dc <__d2b>:
 80077dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80077e0:	b082      	sub	sp, #8
 80077e2:	2101      	movs	r1, #1
 80077e4:	461d      	mov	r5, r3
 80077e6:	f3c3 560a 	ubfx	r6, r3, #20, #11
 80077ea:	4614      	mov	r4, r2
 80077ec:	9f08      	ldr	r7, [sp, #32]
 80077ee:	f7ff fc55 	bl	800709c <_Balloc>
 80077f2:	f3c5 0313 	ubfx	r3, r5, #0, #20
 80077f6:	4684      	mov	ip, r0
 80077f8:	b10e      	cbz	r6, 80077fe <__d2b+0x22>
 80077fa:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80077fe:	9301      	str	r3, [sp, #4]
 8007800:	b324      	cbz	r4, 800784c <__d2b+0x70>
 8007802:	a802      	add	r0, sp, #8
 8007804:	f840 4d08 	str.w	r4, [r0, #-8]!
 8007808:	4668      	mov	r0, sp
 800780a:	f7ff fd49 	bl	80072a0 <__lo0bits>
 800780e:	2800      	cmp	r0, #0
 8007810:	d134      	bne.n	800787c <__d2b+0xa0>
 8007812:	9b00      	ldr	r3, [sp, #0]
 8007814:	9901      	ldr	r1, [sp, #4]
 8007816:	f8cc 3014 	str.w	r3, [ip, #20]
 800781a:	f8cc 1018 	str.w	r1, [ip, #24]
 800781e:	2900      	cmp	r1, #0
 8007820:	bf0c      	ite	eq
 8007822:	2101      	moveq	r1, #1
 8007824:	2102      	movne	r1, #2
 8007826:	f8cc 1010 	str.w	r1, [ip, #16]
 800782a:	b9de      	cbnz	r6, 8007864 <__d2b+0x88>
 800782c:	eb0c 0381 	add.w	r3, ip, r1, lsl #2
 8007830:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8007834:	6038      	str	r0, [r7, #0]
 8007836:	6918      	ldr	r0, [r3, #16]
 8007838:	f7ff fd14 	bl	8007264 <__hi0bits>
 800783c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800783e:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8007842:	6018      	str	r0, [r3, #0]
 8007844:	4660      	mov	r0, ip
 8007846:	b002      	add	sp, #8
 8007848:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800784c:	a801      	add	r0, sp, #4
 800784e:	f7ff fd27 	bl	80072a0 <__lo0bits>
 8007852:	9b01      	ldr	r3, [sp, #4]
 8007854:	2101      	movs	r1, #1
 8007856:	f8cc 3014 	str.w	r3, [ip, #20]
 800785a:	3020      	adds	r0, #32
 800785c:	f8cc 1010 	str.w	r1, [ip, #16]
 8007860:	2e00      	cmp	r6, #0
 8007862:	d0e3      	beq.n	800782c <__d2b+0x50>
 8007864:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8007866:	f2a6 4833 	subw	r8, r6, #1075	; 0x433
 800786a:	f1c0 0335 	rsb	r3, r0, #53	; 0x35
 800786e:	4440      	add	r0, r8
 8007870:	6038      	str	r0, [r7, #0]
 8007872:	4660      	mov	r0, ip
 8007874:	6013      	str	r3, [r2, #0]
 8007876:	b002      	add	sp, #8
 8007878:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800787c:	9b01      	ldr	r3, [sp, #4]
 800787e:	f1c0 0420 	rsb	r4, r0, #32
 8007882:	9a00      	ldr	r2, [sp, #0]
 8007884:	fa03 f404 	lsl.w	r4, r3, r4
 8007888:	40c3      	lsrs	r3, r0
 800788a:	4322      	orrs	r2, r4
 800788c:	4619      	mov	r1, r3
 800788e:	9301      	str	r3, [sp, #4]
 8007890:	f8cc 2014 	str.w	r2, [ip, #20]
 8007894:	e7c1      	b.n	800781a <__d2b+0x3e>
 8007896:	bf00      	nop

08007898 <__ratio>:
 8007898:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800789c:	b083      	sub	sp, #12
 800789e:	4688      	mov	r8, r1
 80078a0:	4669      	mov	r1, sp
 80078a2:	4606      	mov	r6, r0
 80078a4:	f7ff ff44 	bl	8007730 <__b2d>
 80078a8:	460d      	mov	r5, r1
 80078aa:	4604      	mov	r4, r0
 80078ac:	a901      	add	r1, sp, #4
 80078ae:	4640      	mov	r0, r8
 80078b0:	f7ff ff3e 	bl	8007730 <__b2d>
 80078b4:	f8d8 e010 	ldr.w	lr, [r8, #16]
 80078b8:	462f      	mov	r7, r5
 80078ba:	4602      	mov	r2, r0
 80078bc:	6930      	ldr	r0, [r6, #16]
 80078be:	460b      	mov	r3, r1
 80078c0:	4689      	mov	r9, r1
 80078c2:	ebce 0e00 	rsb	lr, lr, r0
 80078c6:	e89d 0003 	ldmia.w	sp, {r0, r1}
 80078ca:	ebc1 0c00 	rsb	ip, r1, r0
 80078ce:	eb0c 114e 	add.w	r1, ip, lr, lsl #5
 80078d2:	2900      	cmp	r1, #0
 80078d4:	bfc9      	itett	gt
 80078d6:	eb05 5701 	addgt.w	r7, r5, r1, lsl #20
 80078da:	eba3 5901 	suble.w	r9, r3, r1, lsl #20
 80078de:	4624      	movgt	r4, r4
 80078e0:	463d      	movgt	r5, r7
 80078e2:	bfdc      	itt	le
 80078e4:	4612      	movle	r2, r2
 80078e6:	464b      	movle	r3, r9
 80078e8:	4620      	mov	r0, r4
 80078ea:	4629      	mov	r1, r5
 80078ec:	f002 f884 	bl	80099f8 <__aeabi_ddiv>
 80078f0:	b003      	add	sp, #12
 80078f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80078f6:	bf00      	nop

080078f8 <_mprec_log10>:
 80078f8:	2817      	cmp	r0, #23
 80078fa:	b510      	push	{r4, lr}
 80078fc:	4604      	mov	r4, r0
 80078fe:	dd0c      	ble.n	800791a <_mprec_log10+0x22>
 8007900:	2100      	movs	r1, #0
 8007902:	2000      	movs	r0, #0
 8007904:	f6c3 71f0 	movt	r1, #16368	; 0x3ff0
 8007908:	2300      	movs	r3, #0
 800790a:	2200      	movs	r2, #0
 800790c:	f2c4 0324 	movt	r3, #16420	; 0x4024
 8007910:	f001 ff48 	bl	80097a4 <__aeabi_dmul>
 8007914:	3c01      	subs	r4, #1
 8007916:	d1f7      	bne.n	8007908 <_mprec_log10+0x10>
 8007918:	bd10      	pop	{r4, pc}
 800791a:	f24a 4398 	movw	r3, #42136	; 0xa498
 800791e:	f6c0 0300 	movt	r3, #2048	; 0x800
 8007922:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 8007926:	e9d3 0104 	ldrd	r0, r1, [r3, #16]
 800792a:	bd10      	pop	{r4, pc}

0800792c <__copybits>:
 800792c:	b470      	push	{r4, r5, r6}
 800792e:	3901      	subs	r1, #1
 8007930:	6915      	ldr	r5, [r2, #16]
 8007932:	f102 0314 	add.w	r3, r2, #20
 8007936:	114e      	asrs	r6, r1, #5
 8007938:	3601      	adds	r6, #1
 800793a:	eb03 0585 	add.w	r5, r3, r5, lsl #2
 800793e:	42ab      	cmp	r3, r5
 8007940:	eb00 0686 	add.w	r6, r0, r6, lsl #2
 8007944:	d20c      	bcs.n	8007960 <__copybits+0x34>
 8007946:	4601      	mov	r1, r0
 8007948:	f853 4b04 	ldr.w	r4, [r3], #4
 800794c:	429d      	cmp	r5, r3
 800794e:	f841 4b04 	str.w	r4, [r1], #4
 8007952:	d8f9      	bhi.n	8007948 <__copybits+0x1c>
 8007954:	1aab      	subs	r3, r5, r2
 8007956:	3b15      	subs	r3, #21
 8007958:	f023 0303 	bic.w	r3, r3, #3
 800795c:	3304      	adds	r3, #4
 800795e:	4418      	add	r0, r3
 8007960:	4286      	cmp	r6, r0
 8007962:	d904      	bls.n	800796e <__copybits+0x42>
 8007964:	2300      	movs	r3, #0
 8007966:	f840 3b04 	str.w	r3, [r0], #4
 800796a:	4286      	cmp	r6, r0
 800796c:	d8fb      	bhi.n	8007966 <__copybits+0x3a>
 800796e:	bc70      	pop	{r4, r5, r6}
 8007970:	4770      	bx	lr
 8007972:	bf00      	nop

08007974 <__any_on>:
 8007974:	6903      	ldr	r3, [r0, #16]
 8007976:	114a      	asrs	r2, r1, #5
 8007978:	b410      	push	{r4}
 800797a:	4293      	cmp	r3, r2
 800797c:	f100 0414 	add.w	r4, r0, #20
 8007980:	bfb8      	it	lt
 8007982:	eb04 0383 	addlt.w	r3, r4, r3, lsl #2
 8007986:	db13      	blt.n	80079b0 <__any_on+0x3c>
 8007988:	dd10      	ble.n	80079ac <__any_on+0x38>
 800798a:	f011 011f 	ands.w	r1, r1, #31
 800798e:	d00d      	beq.n	80079ac <__any_on+0x38>
 8007990:	f854 0022 	ldr.w	r0, [r4, r2, lsl #2]
 8007994:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8007998:	fa20 f201 	lsr.w	r2, r0, r1
 800799c:	fa02 f101 	lsl.w	r1, r2, r1
 80079a0:	4281      	cmp	r1, r0
 80079a2:	d005      	beq.n	80079b0 <__any_on+0x3c>
 80079a4:	2001      	movs	r0, #1
 80079a6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80079aa:	4770      	bx	lr
 80079ac:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80079b0:	429c      	cmp	r4, r3
 80079b2:	d20a      	bcs.n	80079ca <__any_on+0x56>
 80079b4:	f853 2c04 	ldr.w	r2, [r3, #-4]
 80079b8:	3b04      	subs	r3, #4
 80079ba:	b122      	cbz	r2, 80079c6 <__any_on+0x52>
 80079bc:	e7f2      	b.n	80079a4 <__any_on+0x30>
 80079be:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 80079c2:	2a00      	cmp	r2, #0
 80079c4:	d1ee      	bne.n	80079a4 <__any_on+0x30>
 80079c6:	429c      	cmp	r4, r3
 80079c8:	d3f9      	bcc.n	80079be <__any_on+0x4a>
 80079ca:	2000      	movs	r0, #0
 80079cc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80079d0:	4770      	bx	lr
 80079d2:	bf00      	nop

080079d4 <__fpclassifyd>:
 80079d4:	ea50 0301 	orrs.w	r3, r0, r1
 80079d8:	d101      	bne.n	80079de <__fpclassifyd+0xa>
 80079da:	2002      	movs	r0, #2
 80079dc:	4770      	bx	lr
 80079de:	f1d0 0301 	rsbs	r3, r0, #1
 80079e2:	bf38      	it	cc
 80079e4:	2300      	movcc	r3, #0
 80079e6:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 80079ea:	bf08      	it	eq
 80079ec:	2800      	cmpeq	r0, #0
 80079ee:	d0f4      	beq.n	80079da <__fpclassifyd+0x6>
 80079f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80079f4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80079f8:	f5a1 1080 	sub.w	r0, r1, #1048576	; 0x100000
 80079fc:	f6c7 72df 	movt	r2, #32735	; 0x7fdf
 8007a00:	4290      	cmp	r0, r2
 8007a02:	d801      	bhi.n	8007a08 <__fpclassifyd+0x34>
 8007a04:	2004      	movs	r0, #4
 8007a06:	4770      	bx	lr
 8007a08:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8007a0c:	d201      	bcs.n	8007a12 <__fpclassifyd+0x3e>
 8007a0e:	2003      	movs	r0, #3
 8007a10:	4770      	bx	lr
 8007a12:	2000      	movs	r0, #0
 8007a14:	f6c7 70f0 	movt	r0, #32752	; 0x7ff0
 8007a18:	4281      	cmp	r1, r0
 8007a1a:	bf14      	ite	ne
 8007a1c:	2000      	movne	r0, #0
 8007a1e:	f003 0001 	andeq.w	r0, r3, #1
 8007a22:	4770      	bx	lr

08007a24 <_sbrk_r>:
 8007a24:	b538      	push	{r3, r4, r5, lr}
 8007a26:	f240 54dc 	movw	r4, #1500	; 0x5dc
 8007a2a:	f2c2 0400 	movt	r4, #8192	; 0x2000
 8007a2e:	4605      	mov	r5, r0
 8007a30:	4608      	mov	r0, r1
 8007a32:	2300      	movs	r3, #0
 8007a34:	6023      	str	r3, [r4, #0]
 8007a36:	f7fb ffad 	bl	8003994 <_sbrk>
 8007a3a:	1c43      	adds	r3, r0, #1
 8007a3c:	d000      	beq.n	8007a40 <_sbrk_r+0x1c>
 8007a3e:	bd38      	pop	{r3, r4, r5, pc}
 8007a40:	6823      	ldr	r3, [r4, #0]
 8007a42:	2b00      	cmp	r3, #0
 8007a44:	d0fb      	beq.n	8007a3e <_sbrk_r+0x1a>
 8007a46:	602b      	str	r3, [r5, #0]
 8007a48:	bd38      	pop	{r3, r4, r5, pc}
 8007a4a:	bf00      	nop

08007a4c <strcmp>:
 8007a4c:	ea40 0c01 	orr.w	ip, r0, r1
 8007a50:	f01c 0f07 	tst.w	ip, #7
 8007a54:	d127      	bne.n	8007aa6 <strcmp+0x5a>
 8007a56:	f1bd 0d10 	subs.w	sp, sp, #16
 8007a5a:	e9cd 4502 	strd	r4, r5, [sp, #8]
 8007a5e:	e9cd 6700 	strd	r6, r7, [sp]
 8007a62:	f06f 0600 	mvn.w	r6, #0
 8007a66:	f04f 0700 	mov.w	r7, #0
 8007a6a:	bf00      	nop
 8007a6c:	e8f0 2302 	ldrd	r2, r3, [r0], #8
 8007a70:	e8f1 4502 	ldrd	r4, r5, [r1], #8
 8007a74:	42a2      	cmp	r2, r4
 8007a76:	f1a2 3c01 	sub.w	ip, r2, #16843009	; 0x1010101
 8007a7a:	ea2c 0c02 	bic.w	ip, ip, r2
 8007a7e:	f00c 3c80 	and.w	ip, ip, #2155905152	; 0x80808080
 8007a82:	bf08      	it	eq
 8007a84:	f1bc 0f00 	cmpeq.w	ip, #0
 8007a88:	f040 80e5 	bne.w	8007c56 <strcmp+0x20a>
 8007a8c:	42ab      	cmp	r3, r5
 8007a8e:	f1a3 3c01 	sub.w	ip, r3, #16843009	; 0x1010101
 8007a92:	ea2c 0c03 	bic.w	ip, ip, r3
 8007a96:	f00c 3c80 	and.w	ip, ip, #2155905152	; 0x80808080
 8007a9a:	bf08      	it	eq
 8007a9c:	f1bc 0f00 	cmpeq.w	ip, #0
 8007aa0:	f040 80d6 	bne.w	8007c50 <strcmp+0x204>
 8007aa4:	e7e2      	b.n	8007a6c <strcmp+0x20>
 8007aa6:	f010 0c03 	ands.w	ip, r0, #3
 8007aaa:	d021      	beq.n	8007af0 <strcmp+0xa4>
 8007aac:	f020 0003 	bic.w	r0, r0, #3
 8007ab0:	f850 2b04 	ldr.w	r2, [r0], #4
 8007ab4:	ea5f 7ccc 	movs.w	ip, ip, lsl #31
 8007ab8:	d008      	beq.n	8007acc <strcmp+0x80>
 8007aba:	d20f      	bcs.n	8007adc <strcmp+0x90>
 8007abc:	f811 cb01 	ldrb.w	ip, [r1], #1
 8007ac0:	fa5f f392 	uxtb.w	r3, r2, ror #8
 8007ac4:	ebb3 0c0c 	subs.w	ip, r3, ip
 8007ac8:	d110      	bne.n	8007aec <strcmp+0xa0>
 8007aca:	b17b      	cbz	r3, 8007aec <strcmp+0xa0>
 8007acc:	f811 cb01 	ldrb.w	ip, [r1], #1
 8007ad0:	fa5f f3a2 	uxtb.w	r3, r2, ror #16
 8007ad4:	ebb3 0c0c 	subs.w	ip, r3, ip
 8007ad8:	d108      	bne.n	8007aec <strcmp+0xa0>
 8007ada:	b13b      	cbz	r3, 8007aec <strcmp+0xa0>
 8007adc:	f811 cb01 	ldrb.w	ip, [r1], #1
 8007ae0:	fa5f f3b2 	uxtb.w	r3, r2, ror #24
 8007ae4:	ebb3 0c0c 	subs.w	ip, r3, ip
 8007ae8:	d100      	bne.n	8007aec <strcmp+0xa0>
 8007aea:	b90b      	cbnz	r3, 8007af0 <strcmp+0xa4>
 8007aec:	4660      	mov	r0, ip
 8007aee:	4770      	bx	lr
 8007af0:	f1bd 0d10 	subs.w	sp, sp, #16
 8007af4:	e9cd 4502 	strd	r4, r5, [sp, #8]
 8007af8:	e9cd 6700 	strd	r6, r7, [sp]
 8007afc:	f06f 0600 	mvn.w	r6, #0
 8007b00:	f04f 0700 	mov.w	r7, #0
 8007b04:	f011 0c03 	ands.w	ip, r1, #3
 8007b08:	d133      	bne.n	8007b72 <strcmp+0x126>
 8007b0a:	f010 0f04 	tst.w	r0, #4
 8007b0e:	d00f      	beq.n	8007b30 <strcmp+0xe4>
 8007b10:	f850 2b04 	ldr.w	r2, [r0], #4
 8007b14:	f851 4b04 	ldr.w	r4, [r1], #4
 8007b18:	42a2      	cmp	r2, r4
 8007b1a:	f1a2 3c01 	sub.w	ip, r2, #16843009	; 0x1010101
 8007b1e:	ea2c 0c02 	bic.w	ip, ip, r2
 8007b22:	f00c 3c80 	and.w	ip, ip, #2155905152	; 0x80808080
 8007b26:	bf08      	it	eq
 8007b28:	f1bc 0f00 	cmpeq.w	ip, #0
 8007b2c:	f040 8093 	bne.w	8007c56 <strcmp+0x20a>
 8007b30:	f011 0f04 	tst.w	r1, #4
 8007b34:	d099      	beq.n	8007a6a <strcmp+0x1e>
 8007b36:	f851 5b04 	ldr.w	r5, [r1], #4
 8007b3a:	bf00      	nop
 8007b3c:	e8f0 2302 	ldrd	r2, r3, [r0], #8
 8007b40:	42aa      	cmp	r2, r5
 8007b42:	f1a2 3c01 	sub.w	ip, r2, #16843009	; 0x1010101
 8007b46:	ea2c 0c02 	bic.w	ip, ip, r2
 8007b4a:	f00c 3c80 	and.w	ip, ip, #2155905152	; 0x80808080
 8007b4e:	bf08      	it	eq
 8007b50:	f1bc 0f00 	cmpeq.w	ip, #0
 8007b54:	d179      	bne.n	8007c4a <strcmp+0x1fe>
 8007b56:	e8f1 4502 	ldrd	r4, r5, [r1], #8
 8007b5a:	42a3      	cmp	r3, r4
 8007b5c:	f1a3 3c01 	sub.w	ip, r3, #16843009	; 0x1010101
 8007b60:	ea2c 0c03 	bic.w	ip, ip, r3
 8007b64:	f00c 3c80 	and.w	ip, ip, #2155905152	; 0x80808080
 8007b68:	bf08      	it	eq
 8007b6a:	f1bc 0f00 	cmpeq.w	ip, #0
 8007b6e:	d169      	bne.n	8007c44 <strcmp+0x1f8>
 8007b70:	e7e4      	b.n	8007b3c <strcmp+0xf0>
 8007b72:	f021 0103 	bic.w	r1, r1, #3
 8007b76:	f1bc 0f02 	cmp.w	ip, #2
 8007b7a:	d020      	beq.n	8007bbe <strcmp+0x172>
 8007b7c:	da3f      	bge.n	8007bfe <strcmp+0x1b2>
 8007b7e:	f851 5b04 	ldr.w	r5, [r1], #4
 8007b82:	bf00      	nop
 8007b84:	f850 3b04 	ldr.w	r3, [r0], #4
 8007b88:	ea4f 2515 	mov.w	r5, r5, lsr #8
 8007b8c:	f1a3 3c01 	sub.w	ip, r3, #16843009	; 0x1010101
 8007b90:	ea2c 0c03 	bic.w	ip, ip, r3
 8007b94:	f00c 3c80 	and.w	ip, ip, #2155905152	; 0x80808080
 8007b98:	ebb7 2f0c 	cmp.w	r7, ip, lsl #8
 8007b9c:	ea03 2216 	and.w	r2, r3, r6, lsr #8
 8007ba0:	bf08      	it	eq
 8007ba2:	42aa      	cmpeq	r2, r5
 8007ba4:	d151      	bne.n	8007c4a <strcmp+0x1fe>
 8007ba6:	f851 5b04 	ldr.w	r5, [r1], #4
 8007baa:	f1bc 0f00 	cmp.w	ip, #0
 8007bae:	ea82 0303 	eor.w	r3, r2, r3
 8007bb2:	ea4f 6205 	mov.w	r2, r5, lsl #24
 8007bb6:	bf08      	it	eq
 8007bb8:	4293      	cmpeq	r3, r2
 8007bba:	d140      	bne.n	8007c3e <strcmp+0x1f2>
 8007bbc:	e7e2      	b.n	8007b84 <strcmp+0x138>
 8007bbe:	f851 5b04 	ldr.w	r5, [r1], #4
 8007bc2:	bf00      	nop
 8007bc4:	f850 3b04 	ldr.w	r3, [r0], #4
 8007bc8:	ea4f 4515 	mov.w	r5, r5, lsr #16
 8007bcc:	f1a3 3c01 	sub.w	ip, r3, #16843009	; 0x1010101
 8007bd0:	ea2c 0c03 	bic.w	ip, ip, r3
 8007bd4:	f00c 3c80 	and.w	ip, ip, #2155905152	; 0x80808080
 8007bd8:	ebb7 4f0c 	cmp.w	r7, ip, lsl #16
 8007bdc:	ea03 4216 	and.w	r2, r3, r6, lsr #16
 8007be0:	bf08      	it	eq
 8007be2:	42aa      	cmpeq	r2, r5
 8007be4:	d131      	bne.n	8007c4a <strcmp+0x1fe>
 8007be6:	f851 5b04 	ldr.w	r5, [r1], #4
 8007bea:	f1bc 0f00 	cmp.w	ip, #0
 8007bee:	ea82 0303 	eor.w	r3, r2, r3
 8007bf2:	ea4f 4205 	mov.w	r2, r5, lsl #16
 8007bf6:	bf08      	it	eq
 8007bf8:	4293      	cmpeq	r3, r2
 8007bfa:	d120      	bne.n	8007c3e <strcmp+0x1f2>
 8007bfc:	e7e2      	b.n	8007bc4 <strcmp+0x178>
 8007bfe:	f851 5b04 	ldr.w	r5, [r1], #4
 8007c02:	bf00      	nop
 8007c04:	f850 3b04 	ldr.w	r3, [r0], #4
 8007c08:	ea4f 6515 	mov.w	r5, r5, lsr #24
 8007c0c:	f1a3 3c01 	sub.w	ip, r3, #16843009	; 0x1010101
 8007c10:	ea2c 0c03 	bic.w	ip, ip, r3
 8007c14:	f00c 3c80 	and.w	ip, ip, #2155905152	; 0x80808080
 8007c18:	ebb7 6f0c 	cmp.w	r7, ip, lsl #24
 8007c1c:	ea03 6216 	and.w	r2, r3, r6, lsr #24
 8007c20:	bf08      	it	eq
 8007c22:	42aa      	cmpeq	r2, r5
 8007c24:	d111      	bne.n	8007c4a <strcmp+0x1fe>
 8007c26:	f851 5b04 	ldr.w	r5, [r1], #4
 8007c2a:	f1bc 0f00 	cmp.w	ip, #0
 8007c2e:	ea82 0303 	eor.w	r3, r2, r3
 8007c32:	ea4f 2205 	mov.w	r2, r5, lsl #8
 8007c36:	bf08      	it	eq
 8007c38:	4293      	cmpeq	r3, r2
 8007c3a:	d100      	bne.n	8007c3e <strcmp+0x1f2>
 8007c3c:	e7e2      	b.n	8007c04 <strcmp+0x1b8>
 8007c3e:	ba19      	rev	r1, r3
 8007c40:	ba12      	rev	r2, r2
 8007c42:	e00a      	b.n	8007c5a <strcmp+0x20e>
 8007c44:	ba19      	rev	r1, r3
 8007c46:	ba22      	rev	r2, r4
 8007c48:	e007      	b.n	8007c5a <strcmp+0x20e>
 8007c4a:	ba11      	rev	r1, r2
 8007c4c:	ba2a      	rev	r2, r5
 8007c4e:	e004      	b.n	8007c5a <strcmp+0x20e>
 8007c50:	ba19      	rev	r1, r3
 8007c52:	ba2a      	rev	r2, r5
 8007c54:	e001      	b.n	8007c5a <strcmp+0x20e>
 8007c56:	ba11      	rev	r1, r2
 8007c58:	ba22      	rev	r2, r4
 8007c5a:	fa9c f08c 	rev.w	r0, ip
 8007c5e:	e9dd 6700 	ldrd	r6, r7, [sp]
 8007c62:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8007c66:	f11d 0d10 	adds.w	sp, sp, #16
 8007c6a:	b138      	cbz	r0, 8007c7c <strcmp+0x230>
 8007c6c:	fab0 f080 	clz	r0, r0
 8007c70:	f1c0 0018 	rsb	r0, r0, #24
 8007c74:	fa21 f100 	lsr.w	r1, r1, r0
 8007c78:	fa22 f200 	lsr.w	r2, r2, r0
 8007c7c:	2001      	movs	r0, #1
 8007c7e:	4291      	cmp	r1, r2
 8007c80:	bf98      	it	ls
 8007c82:	4180      	sbcls	r0, r0
 8007c84:	4770      	bx	lr
 8007c86:	bf00      	nop

08007c88 <strlen>:
 8007c88:	f020 0103 	bic.w	r1, r0, #3
 8007c8c:	f010 0003 	ands.w	r0, r0, #3
 8007c90:	f1c0 0000 	rsb	r0, r0, #0
 8007c94:	f851 3b04 	ldr.w	r3, [r1], #4
 8007c98:	f100 0c04 	add.w	ip, r0, #4
 8007c9c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8007ca0:	f06f 0200 	mvn.w	r2, #0
 8007ca4:	bf1c      	itt	ne
 8007ca6:	fa22 f20c 	lsrne.w	r2, r2, ip
 8007caa:	4313      	orrne	r3, r2
 8007cac:	f04f 0c01 	mov.w	ip, #1
 8007cb0:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
 8007cb4:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
 8007cb8:	eba3 020c 	sub.w	r2, r3, ip
 8007cbc:	ea22 0203 	bic.w	r2, r2, r3
 8007cc0:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
 8007cc4:	bf04      	itt	eq
 8007cc6:	f851 3b04 	ldreq.w	r3, [r1], #4
 8007cca:	3004      	addeq	r0, #4
 8007ccc:	d0f4      	beq.n	8007cb8 <strlen+0x30>
 8007cce:	f013 0fff 	tst.w	r3, #255	; 0xff
 8007cd2:	bf1f      	itttt	ne
 8007cd4:	3001      	addne	r0, #1
 8007cd6:	f413 4f7f 	tstne.w	r3, #65280	; 0xff00
 8007cda:	3001      	addne	r0, #1
 8007cdc:	f413 0f7f 	tstne.w	r3, #16711680	; 0xff0000
 8007ce0:	bf18      	it	ne
 8007ce2:	3001      	addne	r0, #1
 8007ce4:	4770      	bx	lr
 8007ce6:	bf00      	nop

08007ce8 <__ssprint_r>:
 8007ce8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007cec:	4692      	mov	sl, r2
 8007cee:	6894      	ldr	r4, [r2, #8]
 8007cf0:	b083      	sub	sp, #12
 8007cf2:	4680      	mov	r8, r0
 8007cf4:	460d      	mov	r5, r1
 8007cf6:	6816      	ldr	r6, [r2, #0]
 8007cf8:	2c00      	cmp	r4, #0
 8007cfa:	d071      	beq.n	8007de0 <__ssprint_r+0xf8>
 8007cfc:	f04f 0b00 	mov.w	fp, #0
 8007d00:	6808      	ldr	r0, [r1, #0]
 8007d02:	688b      	ldr	r3, [r1, #8]
 8007d04:	465c      	mov	r4, fp
 8007d06:	2c00      	cmp	r4, #0
 8007d08:	d045      	beq.n	8007d96 <__ssprint_r+0xae>
 8007d0a:	429c      	cmp	r4, r3
 8007d0c:	461f      	mov	r7, r3
 8007d0e:	d348      	bcc.n	8007da2 <__ssprint_r+0xba>
 8007d10:	89ab      	ldrh	r3, [r5, #12]
 8007d12:	f413 6f90 	tst.w	r3, #1152	; 0x480
 8007d16:	bf08      	it	eq
 8007d18:	46b9      	moveq	r9, r7
 8007d1a:	d02c      	beq.n	8007d76 <__ssprint_r+0x8e>
 8007d1c:	696f      	ldr	r7, [r5, #20]
 8007d1e:	1c62      	adds	r2, r4, #1
 8007d20:	6929      	ldr	r1, [r5, #16]
 8007d22:	eb07 0947 	add.w	r9, r7, r7, lsl #1
 8007d26:	1a47      	subs	r7, r0, r1
 8007d28:	443a      	add	r2, r7
 8007d2a:	eb09 79d9 	add.w	r9, r9, r9, lsr #31
 8007d2e:	ea4f 0969 	mov.w	r9, r9, asr #1
 8007d32:	4591      	cmp	r9, r2
 8007d34:	bf34      	ite	cc
 8007d36:	4691      	movcc	r9, r2
 8007d38:	464a      	movcs	r2, r9
 8007d3a:	055b      	lsls	r3, r3, #21
 8007d3c:	d534      	bpl.n	8007da8 <__ssprint_r+0xc0>
 8007d3e:	4611      	mov	r1, r2
 8007d40:	4640      	mov	r0, r8
 8007d42:	f7fe fe53 	bl	80069ec <_malloc_r>
 8007d46:	2800      	cmp	r0, #0
 8007d48:	d038      	beq.n	8007dbc <__ssprint_r+0xd4>
 8007d4a:	6929      	ldr	r1, [r5, #16]
 8007d4c:	463a      	mov	r2, r7
 8007d4e:	9001      	str	r0, [sp, #4]
 8007d50:	f7ff f94c 	bl	8006fec <memcpy>
 8007d54:	89aa      	ldrh	r2, [r5, #12]
 8007d56:	9b01      	ldr	r3, [sp, #4]
 8007d58:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 8007d5c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8007d60:	81aa      	strh	r2, [r5, #12]
 8007d62:	19d8      	adds	r0, r3, r7
 8007d64:	f8c5 9014 	str.w	r9, [r5, #20]
 8007d68:	ebc7 0709 	rsb	r7, r7, r9
 8007d6c:	46a1      	mov	r9, r4
 8007d6e:	60af      	str	r7, [r5, #8]
 8007d70:	4627      	mov	r7, r4
 8007d72:	612b      	str	r3, [r5, #16]
 8007d74:	6028      	str	r0, [r5, #0]
 8007d76:	464a      	mov	r2, r9
 8007d78:	4659      	mov	r1, fp
 8007d7a:	f000 fef5 	bl	8008b68 <memmove>
 8007d7e:	f8da 2008 	ldr.w	r2, [sl, #8]
 8007d82:	68ab      	ldr	r3, [r5, #8]
 8007d84:	6828      	ldr	r0, [r5, #0]
 8007d86:	1b14      	subs	r4, r2, r4
 8007d88:	1bdb      	subs	r3, r3, r7
 8007d8a:	60ab      	str	r3, [r5, #8]
 8007d8c:	4448      	add	r0, r9
 8007d8e:	6028      	str	r0, [r5, #0]
 8007d90:	f8ca 4008 	str.w	r4, [sl, #8]
 8007d94:	b324      	cbz	r4, 8007de0 <__ssprint_r+0xf8>
 8007d96:	f8d6 b000 	ldr.w	fp, [r6]
 8007d9a:	3608      	adds	r6, #8
 8007d9c:	f856 4c04 	ldr.w	r4, [r6, #-4]
 8007da0:	e7b1      	b.n	8007d06 <__ssprint_r+0x1e>
 8007da2:	4627      	mov	r7, r4
 8007da4:	46a1      	mov	r9, r4
 8007da6:	e7e6      	b.n	8007d76 <__ssprint_r+0x8e>
 8007da8:	4640      	mov	r0, r8
 8007daa:	f000 ff95 	bl	8008cd8 <_realloc_r>
 8007dae:	4603      	mov	r3, r0
 8007db0:	2800      	cmp	r0, #0
 8007db2:	d1d6      	bne.n	8007d62 <__ssprint_r+0x7a>
 8007db4:	4640      	mov	r0, r8
 8007db6:	6929      	ldr	r1, [r5, #16]
 8007db8:	f000 fe0a 	bl	80089d0 <_free_r>
 8007dbc:	89aa      	ldrh	r2, [r5, #12]
 8007dbe:	f04f 34ff 	mov.w	r4, #4294967295
 8007dc2:	230c      	movs	r3, #12
 8007dc4:	4620      	mov	r0, r4
 8007dc6:	f8c8 3000 	str.w	r3, [r8]
 8007dca:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8007dce:	2300      	movs	r3, #0
 8007dd0:	81aa      	strh	r2, [r5, #12]
 8007dd2:	f8ca 3008 	str.w	r3, [sl, #8]
 8007dd6:	f8ca 3004 	str.w	r3, [sl, #4]
 8007dda:	b003      	add	sp, #12
 8007ddc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007de0:	4620      	mov	r0, r4
 8007de2:	f8ca 4004 	str.w	r4, [sl, #4]
 8007de6:	b003      	add	sp, #12
 8007de8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08007dec <_svfiprintf_r>:
 8007dec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007df0:	b0b3      	sub	sp, #204	; 0xcc
 8007df2:	4692      	mov	sl, r2
 8007df4:	930b      	str	r3, [sp, #44]	; 0x2c
 8007df6:	898b      	ldrh	r3, [r1, #12]
 8007df8:	9108      	str	r1, [sp, #32]
 8007dfa:	061a      	lsls	r2, r3, #24
 8007dfc:	9005      	str	r0, [sp, #20]
 8007dfe:	d503      	bpl.n	8007e08 <_svfiprintf_r+0x1c>
 8007e00:	690b      	ldr	r3, [r1, #16]
 8007e02:	2b00      	cmp	r3, #0
 8007e04:	f000 8522 	beq.w	800884c <_svfiprintf_r+0xa60>
 8007e08:	f10d 0888 	add.w	r8, sp, #136	; 0x88
 8007e0c:	f24a 55c0 	movw	r5, #42432	; 0xa5c0
 8007e10:	4646      	mov	r6, r8
 8007e12:	f6c0 0500 	movt	r5, #2048	; 0x800
 8007e16:	f10d 0487 	add.w	r4, sp, #135	; 0x87
 8007e1a:	2300      	movs	r3, #0
 8007e1c:	950d      	str	r5, [sp, #52]	; 0x34
 8007e1e:	f105 0710 	add.w	r7, r5, #16
 8007e22:	930e      	str	r3, [sp, #56]	; 0x38
 8007e24:	ebc4 0508 	rsb	r5, r4, r8
 8007e28:	9401      	str	r4, [sp, #4]
 8007e2a:	930a      	str	r3, [sp, #40]	; 0x28
 8007e2c:	9511      	str	r5, [sp, #68]	; 0x44
 8007e2e:	9317      	str	r3, [sp, #92]	; 0x5c
 8007e30:	9316      	str	r3, [sp, #88]	; 0x58
 8007e32:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
 8007e36:	f89a 3000 	ldrb.w	r3, [sl]
 8007e3a:	2b00      	cmp	r3, #0
 8007e3c:	bf18      	it	ne
 8007e3e:	2b25      	cmpne	r3, #37	; 0x25
 8007e40:	f000 83ca 	beq.w	80085d8 <_svfiprintf_r+0x7ec>
 8007e44:	f10a 0201 	add.w	r2, sl, #1
 8007e48:	4614      	mov	r4, r2
 8007e4a:	3201      	adds	r2, #1
 8007e4c:	7823      	ldrb	r3, [r4, #0]
 8007e4e:	2b25      	cmp	r3, #37	; 0x25
 8007e50:	bf18      	it	ne
 8007e52:	2b00      	cmpne	r3, #0
 8007e54:	d1f8      	bne.n	8007e48 <_svfiprintf_r+0x5c>
 8007e56:	ebb4 050a 	subs.w	r5, r4, sl
 8007e5a:	d010      	beq.n	8007e7e <_svfiprintf_r+0x92>
 8007e5c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8007e5e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8007e60:	3301      	adds	r3, #1
 8007e62:	f8c6 a000 	str.w	sl, [r6]
 8007e66:	2b07      	cmp	r3, #7
 8007e68:	6075      	str	r5, [r6, #4]
 8007e6a:	442a      	add	r2, r5
 8007e6c:	9316      	str	r3, [sp, #88]	; 0x58
 8007e6e:	9217      	str	r2, [sp, #92]	; 0x5c
 8007e70:	bfd8      	it	le
 8007e72:	3608      	addle	r6, #8
 8007e74:	f300 8436 	bgt.w	80086e4 <_svfiprintf_r+0x8f8>
 8007e78:	980a      	ldr	r0, [sp, #40]	; 0x28
 8007e7a:	4428      	add	r0, r5
 8007e7c:	900a      	str	r0, [sp, #40]	; 0x28
 8007e7e:	7823      	ldrb	r3, [r4, #0]
 8007e80:	2b00      	cmp	r3, #0
 8007e82:	f000 83bc 	beq.w	80085fe <_svfiprintf_r+0x812>
 8007e86:	2300      	movs	r3, #0
 8007e88:	f104 0a01 	add.w	sl, r4, #1
 8007e8c:	4619      	mov	r1, r3
 8007e8e:	f88d 304f 	strb.w	r3, [sp, #79]	; 0x4f
 8007e92:	4608      	mov	r0, r1
 8007e94:	9304      	str	r3, [sp, #16]
 8007e96:	9302      	str	r3, [sp, #8]
 8007e98:	7863      	ldrb	r3, [r4, #1]
 8007e9a:	f04f 34ff 	mov.w	r4, #4294967295
 8007e9e:	9403      	str	r4, [sp, #12]
 8007ea0:	f10a 0a01 	add.w	sl, sl, #1
 8007ea4:	f1a3 0220 	sub.w	r2, r3, #32
 8007ea8:	2a58      	cmp	r2, #88	; 0x58
 8007eaa:	f200 82b5 	bhi.w	8008418 <_svfiprintf_r+0x62c>
 8007eae:	e8df f012 	tbh	[pc, r2, lsl #1]
 8007eb2:	02b302a3 	adcseq	r0, r3, #805306378	; 0x3000000a
 8007eb6:	02aa02b3 	adceq	r0, sl, #805306379	; 0x3000000b
 8007eba:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007ebe:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007ec2:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007ec6:	02850059 	addeq	r0, r5, #89	; 0x59
 8007eca:	006102b3 	strhteq	r0, [r1], #-35	; 0xffffffdd
 8007ece:	02b3020c 	adcseq	r0, r3, #12, 4	; 0xc0000000
 8007ed2:	01f70205 	mvnseq	r0, r5, lsl #4
 8007ed6:	01f701f7 	ldrsheq	r0, [r7, #23]!
 8007eda:	01f701f7 	ldrsheq	r0, [r7, #23]!
 8007ede:	01f701f7 	ldrsheq	r0, [r7, #23]!
 8007ee2:	01f701f7 	ldrsheq	r0, [r7, #23]!
 8007ee6:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007eea:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007eee:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007ef2:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007ef6:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007efa:	02b301dc 	adcseq	r0, r3, #220, 2	; 0x37
 8007efe:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007f02:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007f06:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007f0a:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007f0e:	026902b3 	rsbeq	r0, r9, #805306379	; 0x3000000b
 8007f12:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007f16:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007f1a:	022c02b3 	eoreq	r0, ip, #805306379	; 0x3000000b
 8007f1e:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007f22:	02b30245 	adcseq	r0, r3, #1342177284	; 0x50000004
 8007f26:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007f2a:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007f2e:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007f32:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007f36:	01ca02b3 	strheq	r0, [sl, #35]	; 0x23
 8007f3a:	02b301b0 	adcseq	r0, r3, #176, 2	; 0x2c
 8007f3e:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007f42:	01b001a9 	lsrseq	r0, r9, #3
 8007f46:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007f4a:	02b30197 	adcseq	r0, r3, #-1073741787	; 0xc0000025
 8007f4e:	01310185 	teqeq	r1, r5, lsl #3
 8007f52:	017e0142 	cmneq	lr, r2, asr #2
 8007f56:	015902b3 	ldrheq	r0, [r9, #-35]	; 0xffffffdd
 8007f5a:	006802b3 	strhteq	r0, [r8], #-35	; 0xffffffdd
 8007f5e:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8007f62:	9c0b0289 	sfmls	f0, 4, [fp], {137}	; 0x89
 8007f66:	1d23      	adds	r3, r4, #4
 8007f68:	6820      	ldr	r0, [r4, #0]
 8007f6a:	2800      	cmp	r0, #0
 8007f6c:	f280 8400 	bge.w	8008770 <_svfiprintf_r+0x984>
 8007f70:	4240      	negs	r0, r0
 8007f72:	930b      	str	r3, [sp, #44]	; 0x2c
 8007f74:	9d02      	ldr	r5, [sp, #8]
 8007f76:	f045 0504 	orr.w	r5, r5, #4
 8007f7a:	9502      	str	r5, [sp, #8]
 8007f7c:	f89a 3000 	ldrb.w	r3, [sl]
 8007f80:	e78e      	b.n	8007ea0 <_svfiprintf_r+0xb4>
 8007f82:	9d02      	ldr	r5, [sp, #8]
 8007f84:	9004      	str	r0, [sp, #16]
 8007f86:	06aa      	lsls	r2, r5, #26
 8007f88:	f140 81c8 	bpl.w	800831c <_svfiprintf_r+0x530>
 8007f8c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8007f8e:	2301      	movs	r3, #1
 8007f90:	1de2      	adds	r2, r4, #7
 8007f92:	f022 0207 	bic.w	r2, r2, #7
 8007f96:	f102 0508 	add.w	r5, r2, #8
 8007f9a:	950b      	str	r5, [sp, #44]	; 0x2c
 8007f9c:	e9d2 4500 	ldrd	r4, r5, [r2]
 8007fa0:	f04f 0c00 	mov.w	ip, #0
 8007fa4:	f88d c04f 	strb.w	ip, [sp, #79]	; 0x4f
 8007fa8:	9a03      	ldr	r2, [sp, #12]
 8007faa:	2a00      	cmp	r2, #0
 8007fac:	bfa2      	ittt	ge
 8007fae:	9802      	ldrge	r0, [sp, #8]
 8007fb0:	f020 0080 	bicge.w	r0, r0, #128	; 0x80
 8007fb4:	9002      	strge	r0, [sp, #8]
 8007fb6:	ea54 0105 	orrs.w	r1, r4, r5
 8007fba:	9803      	ldr	r0, [sp, #12]
 8007fbc:	bf0c      	ite	eq
 8007fbe:	2200      	moveq	r2, #0
 8007fc0:	2201      	movne	r2, #1
 8007fc2:	2800      	cmp	r0, #0
 8007fc4:	bf18      	it	ne
 8007fc6:	f042 0201 	orrne.w	r2, r2, #1
 8007fca:	2a00      	cmp	r2, #0
 8007fcc:	f000 8306 	beq.w	80085dc <_svfiprintf_r+0x7f0>
 8007fd0:	2b01      	cmp	r3, #1
 8007fd2:	f000 83ab 	beq.w	800872c <_svfiprintf_r+0x940>
 8007fd6:	2b02      	cmp	r3, #2
 8007fd8:	f10d 0287 	add.w	r2, sp, #135	; 0x87
 8007fdc:	d179      	bne.n	80080d2 <_svfiprintf_r+0x2e6>
 8007fde:	f8dd b038 	ldr.w	fp, [sp, #56]	; 0x38
 8007fe2:	f004 010f 	and.w	r1, r4, #15
 8007fe6:	0923      	lsrs	r3, r4, #4
 8007fe8:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
 8007fec:	0928      	lsrs	r0, r5, #4
 8007fee:	f81b 1001 	ldrb.w	r1, [fp, r1]
 8007ff2:	461c      	mov	r4, r3
 8007ff4:	4605      	mov	r5, r0
 8007ff6:	4691      	mov	r9, r2
 8007ff8:	ea54 0005 	orrs.w	r0, r4, r5
 8007ffc:	f102 32ff 	add.w	r2, r2, #4294967295
 8008000:	f889 1000 	strb.w	r1, [r9]
 8008004:	d1ed      	bne.n	8007fe2 <_svfiprintf_r+0x1f6>
 8008006:	ebc9 0308 	rsb	r3, r9, r8
 800800a:	9306      	str	r3, [sp, #24]
 800800c:	9c06      	ldr	r4, [sp, #24]
 800800e:	9d03      	ldr	r5, [sp, #12]
 8008010:	42ac      	cmp	r4, r5
 8008012:	bfb8      	it	lt
 8008014:	462c      	movlt	r4, r5
 8008016:	f1bc 0f00 	cmp.w	ip, #0
 800801a:	d000      	beq.n	800801e <_svfiprintf_r+0x232>
 800801c:	3401      	adds	r4, #1
 800801e:	9b02      	ldr	r3, [sp, #8]
 8008020:	9d02      	ldr	r5, [sp, #8]
 8008022:	f013 0302 	ands.w	r3, r3, #2
 8008026:	9309      	str	r3, [sp, #36]	; 0x24
 8008028:	bf18      	it	ne
 800802a:	3402      	addne	r4, #2
 800802c:	f015 0584 	ands.w	r5, r5, #132	; 0x84
 8008030:	950c      	str	r5, [sp, #48]	; 0x30
 8008032:	f040 8201 	bne.w	8008438 <_svfiprintf_r+0x64c>
 8008036:	9804      	ldr	r0, [sp, #16]
 8008038:	1b05      	subs	r5, r0, r4
 800803a:	2d00      	cmp	r5, #0
 800803c:	f340 81fc 	ble.w	8008438 <_svfiprintf_r+0x64c>
 8008040:	2d10      	cmp	r5, #16
 8008042:	f24a 53c0 	movw	r3, #42432	; 0xa5c0
 8008046:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8008048:	f340 840d 	ble.w	8008866 <_svfiprintf_r+0xa7a>
 800804c:	f6c0 0300 	movt	r3, #2048	; 0x800
 8008050:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
 8008054:	9410      	str	r4, [sp, #64]	; 0x40
 8008056:	f04f 0b10 	mov.w	fp, #16
 800805a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800805c:	9307      	str	r3, [sp, #28]
 800805e:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8008062:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8008064:	e002      	b.n	800806c <_svfiprintf_r+0x280>
 8008066:	3d10      	subs	r5, #16
 8008068:	2d10      	cmp	r5, #16
 800806a:	dd17      	ble.n	800809c <_svfiprintf_r+0x2b0>
 800806c:	3201      	adds	r2, #1
 800806e:	3110      	adds	r1, #16
 8008070:	2a07      	cmp	r2, #7
 8008072:	e886 0810 	stmia.w	r6, {r4, fp}
 8008076:	9216      	str	r2, [sp, #88]	; 0x58
 8008078:	f106 0608 	add.w	r6, r6, #8
 800807c:	9117      	str	r1, [sp, #92]	; 0x5c
 800807e:	ddf2      	ble.n	8008066 <_svfiprintf_r+0x27a>
 8008080:	9805      	ldr	r0, [sp, #20]
 8008082:	4649      	mov	r1, r9
 8008084:	aa15      	add	r2, sp, #84	; 0x54
 8008086:	4646      	mov	r6, r8
 8008088:	f7ff fe2e 	bl	8007ce8 <__ssprint_r>
 800808c:	2800      	cmp	r0, #0
 800808e:	f040 82bd 	bne.w	800860c <_svfiprintf_r+0x820>
 8008092:	3d10      	subs	r5, #16
 8008094:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8008096:	2d10      	cmp	r5, #16
 8008098:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800809a:	dce7      	bgt.n	800806c <_svfiprintf_r+0x280>
 800809c:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
 80080a0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80080a2:	3201      	adds	r2, #1
 80080a4:	9b07      	ldr	r3, [sp, #28]
 80080a6:	2a07      	cmp	r2, #7
 80080a8:	4429      	add	r1, r5
 80080aa:	9216      	str	r2, [sp, #88]	; 0x58
 80080ac:	e886 0028 	stmia.w	r6, {r3, r5}
 80080b0:	bfd8      	it	le
 80080b2:	3608      	addle	r6, #8
 80080b4:	9117      	str	r1, [sp, #92]	; 0x5c
 80080b6:	f340 81c1 	ble.w	800843c <_svfiprintf_r+0x650>
 80080ba:	9805      	ldr	r0, [sp, #20]
 80080bc:	aa15      	add	r2, sp, #84	; 0x54
 80080be:	9908      	ldr	r1, [sp, #32]
 80080c0:	f7ff fe12 	bl	8007ce8 <__ssprint_r>
 80080c4:	2800      	cmp	r0, #0
 80080c6:	f040 82a1 	bne.w	800860c <_svfiprintf_r+0x820>
 80080ca:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80080cc:	4646      	mov	r6, r8
 80080ce:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80080d0:	e1b4      	b.n	800843c <_svfiprintf_r+0x650>
 80080d2:	08e3      	lsrs	r3, r4, #3
 80080d4:	08e9      	lsrs	r1, r5, #3
 80080d6:	ea43 7345 	orr.w	r3, r3, r5, lsl #29
 80080da:	4691      	mov	r9, r2
 80080dc:	460d      	mov	r5, r1
 80080de:	f004 0207 	and.w	r2, r4, #7
 80080e2:	461c      	mov	r4, r3
 80080e4:	f102 0330 	add.w	r3, r2, #48	; 0x30
 80080e8:	ea54 0105 	orrs.w	r1, r4, r5
 80080ec:	f109 32ff 	add.w	r2, r9, #4294967295
 80080f0:	f889 3000 	strb.w	r3, [r9]
 80080f4:	d1ed      	bne.n	80080d2 <_svfiprintf_r+0x2e6>
 80080f6:	9c02      	ldr	r4, [sp, #8]
 80080f8:	4649      	mov	r1, r9
 80080fa:	07e0      	lsls	r0, r4, #31
 80080fc:	f140 8347 	bpl.w	800878e <_svfiprintf_r+0x9a2>
 8008100:	2b30      	cmp	r3, #48	; 0x30
 8008102:	d080      	beq.n	8008006 <_svfiprintf_r+0x21a>
 8008104:	2330      	movs	r3, #48	; 0x30
 8008106:	ebc2 0408 	rsb	r4, r2, r8
 800810a:	4691      	mov	r9, r2
 800810c:	9406      	str	r4, [sp, #24]
 800810e:	f801 3c01 	strb.w	r3, [r1, #-1]
 8008112:	e77b      	b.n	800800c <_svfiprintf_r+0x220>
 8008114:	9d02      	ldr	r5, [sp, #8]
 8008116:	9004      	str	r0, [sp, #16]
 8008118:	f015 0320 	ands.w	r3, r5, #32
 800811c:	f000 813c 	beq.w	8008398 <_svfiprintf_r+0x5ac>
 8008120:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8008122:	2300      	movs	r3, #0
 8008124:	1de2      	adds	r2, r4, #7
 8008126:	f022 0207 	bic.w	r2, r2, #7
 800812a:	f102 0508 	add.w	r5, r2, #8
 800812e:	950b      	str	r5, [sp, #44]	; 0x2c
 8008130:	e9d2 4500 	ldrd	r4, r5, [r2]
 8008134:	e734      	b.n	8007fa0 <_svfiprintf_r+0x1b4>
 8008136:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008138:	9d02      	ldr	r5, [sp, #8]
 800813a:	9004      	str	r0, [sp, #16]
 800813c:	f045 0502 	orr.w	r5, r5, #2
 8008140:	9502      	str	r5, [sp, #8]
 8008142:	1d1d      	adds	r5, r3, #4
 8008144:	950b      	str	r5, [sp, #44]	; 0x2c
 8008146:	f64a 1524 	movw	r5, #43300	; 0xa924
 800814a:	681c      	ldr	r4, [r3, #0]
 800814c:	f6c0 0500 	movt	r5, #2048	; 0x800
 8008150:	2330      	movs	r3, #48	; 0x30
 8008152:	950e      	str	r5, [sp, #56]	; 0x38
 8008154:	2500      	movs	r5, #0
 8008156:	f88d 3050 	strb.w	r3, [sp, #80]	; 0x50
 800815a:	2378      	movs	r3, #120	; 0x78
 800815c:	f88d 3051 	strb.w	r3, [sp, #81]	; 0x51
 8008160:	2302      	movs	r3, #2
 8008162:	e71d      	b.n	8007fa0 <_svfiprintf_r+0x1b4>
 8008164:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8008166:	9004      	str	r0, [sp, #16]
 8008168:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800816a:	f8d4 9000 	ldr.w	r9, [r4]
 800816e:	2400      	movs	r4, #0
 8008170:	1d05      	adds	r5, r0, #4
 8008172:	f88d 404f 	strb.w	r4, [sp, #79]	; 0x4f
 8008176:	f1b9 0f00 	cmp.w	r9, #0
 800817a:	f000 8379 	beq.w	8008870 <_svfiprintf_r+0xa84>
 800817e:	9803      	ldr	r0, [sp, #12]
 8008180:	2800      	cmp	r0, #0
 8008182:	4648      	mov	r0, r9
 8008184:	f2c0 834b 	blt.w	800881e <_svfiprintf_r+0xa32>
 8008188:	4621      	mov	r1, r4
 800818a:	9a03      	ldr	r2, [sp, #12]
 800818c:	f7fe fee6 	bl	8006f5c <memchr>
 8008190:	2800      	cmp	r0, #0
 8008192:	f000 837a 	beq.w	800888a <_svfiprintf_r+0xa9e>
 8008196:	950b      	str	r5, [sp, #44]	; 0x2c
 8008198:	ebc9 0000 	rsb	r0, r9, r0
 800819c:	9d03      	ldr	r5, [sp, #12]
 800819e:	f89d c04f 	ldrb.w	ip, [sp, #79]	; 0x4f
 80081a2:	42a8      	cmp	r0, r5
 80081a4:	bfb8      	it	lt
 80081a6:	4605      	movlt	r5, r0
 80081a8:	9403      	str	r4, [sp, #12]
 80081aa:	9506      	str	r5, [sp, #24]
 80081ac:	e72e      	b.n	800800c <_svfiprintf_r+0x220>
 80081ae:	9c02      	ldr	r4, [sp, #8]
 80081b0:	f044 0420 	orr.w	r4, r4, #32
 80081b4:	9402      	str	r4, [sp, #8]
 80081b6:	f89a 3000 	ldrb.w	r3, [sl]
 80081ba:	e671      	b.n	8007ea0 <_svfiprintf_r+0xb4>
 80081bc:	9c02      	ldr	r4, [sp, #8]
 80081be:	f88d 104f 	strb.w	r1, [sp, #79]	; 0x4f
 80081c2:	06a0      	lsls	r0, r4, #26
 80081c4:	f100 831e 	bmi.w	8008804 <_svfiprintf_r+0xa18>
 80081c8:	9c02      	ldr	r4, [sp, #8]
 80081ca:	06e1      	lsls	r1, r4, #27
 80081cc:	f140 8330 	bpl.w	8008830 <_svfiprintf_r+0xa44>
 80081d0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80081d2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80081d4:	3504      	adds	r5, #4
 80081d6:	f855 3c04 	ldr.w	r3, [r5, #-4]
 80081da:	950b      	str	r5, [sp, #44]	; 0x2c
 80081dc:	601c      	str	r4, [r3, #0]
 80081de:	e62a      	b.n	8007e36 <_svfiprintf_r+0x4a>
 80081e0:	f89a 3000 	ldrb.w	r3, [sl]
 80081e4:	4652      	mov	r2, sl
 80081e6:	2b6c      	cmp	r3, #108	; 0x6c
 80081e8:	bf05      	ittet	eq
 80081ea:	f10a 0a01 	addeq.w	sl, sl, #1
 80081ee:	9c02      	ldreq	r4, [sp, #8]
 80081f0:	9d02      	ldrne	r5, [sp, #8]
 80081f2:	f044 0420 	orreq.w	r4, r4, #32
 80081f6:	bf0b      	itete	eq
 80081f8:	7853      	ldrbeq	r3, [r2, #1]
 80081fa:	f045 0510 	orrne.w	r5, r5, #16
 80081fe:	9402      	streq	r4, [sp, #8]
 8008200:	9502      	strne	r5, [sp, #8]
 8008202:	e64d      	b.n	8007ea0 <_svfiprintf_r+0xb4>
 8008204:	9d02      	ldr	r5, [sp, #8]
 8008206:	f045 0540 	orr.w	r5, r5, #64	; 0x40
 800820a:	9502      	str	r5, [sp, #8]
 800820c:	f89a 3000 	ldrb.w	r3, [sl]
 8008210:	e646      	b.n	8007ea0 <_svfiprintf_r+0xb4>
 8008212:	9d02      	ldr	r5, [sp, #8]
 8008214:	9004      	str	r0, [sp, #16]
 8008216:	06ab      	lsls	r3, r5, #26
 8008218:	f88d 104f 	strb.w	r1, [sp, #79]	; 0x4f
 800821c:	d52f      	bpl.n	800827e <_svfiprintf_r+0x492>
 800821e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8008220:	1de3      	adds	r3, r4, #7
 8008222:	f023 0307 	bic.w	r3, r3, #7
 8008226:	f103 0508 	add.w	r5, r3, #8
 800822a:	950b      	str	r5, [sp, #44]	; 0x2c
 800822c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008230:	4614      	mov	r4, r2
 8008232:	461d      	mov	r5, r3
 8008234:	2a00      	cmp	r2, #0
 8008236:	f173 0000 	sbcs.w	r0, r3, #0
 800823a:	f2c0 82c8 	blt.w	80087ce <_svfiprintf_r+0x9e2>
 800823e:	f89d c04f 	ldrb.w	ip, [sp, #79]	; 0x4f
 8008242:	2301      	movs	r3, #1
 8008244:	e6b0      	b.n	8007fa8 <_svfiprintf_r+0x1bc>
 8008246:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008248:	f10d 0960 	add.w	r9, sp, #96	; 0x60
 800824c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800824e:	2401      	movs	r4, #1
 8008250:	2200      	movs	r2, #0
 8008252:	9004      	str	r0, [sp, #16]
 8008254:	681b      	ldr	r3, [r3, #0]
 8008256:	3504      	adds	r5, #4
 8008258:	9406      	str	r4, [sp, #24]
 800825a:	950b      	str	r5, [sp, #44]	; 0x2c
 800825c:	f88d 204f 	strb.w	r2, [sp, #79]	; 0x4f
 8008260:	f88d 3060 	strb.w	r3, [sp, #96]	; 0x60
 8008264:	2500      	movs	r5, #0
 8008266:	9503      	str	r5, [sp, #12]
 8008268:	e6d9      	b.n	800801e <_svfiprintf_r+0x232>
 800826a:	9c02      	ldr	r4, [sp, #8]
 800826c:	9004      	str	r0, [sp, #16]
 800826e:	f044 0410 	orr.w	r4, r4, #16
 8008272:	9402      	str	r4, [sp, #8]
 8008274:	9d02      	ldr	r5, [sp, #8]
 8008276:	f88d 104f 	strb.w	r1, [sp, #79]	; 0x4f
 800827a:	06ab      	lsls	r3, r5, #26
 800827c:	d4cf      	bmi.n	800821e <_svfiprintf_r+0x432>
 800827e:	9c02      	ldr	r4, [sp, #8]
 8008280:	06e5      	lsls	r5, r4, #27
 8008282:	f100 8297 	bmi.w	80087b4 <_svfiprintf_r+0x9c8>
 8008286:	9c02      	ldr	r4, [sp, #8]
 8008288:	0664      	lsls	r4, r4, #25
 800828a:	f140 8293 	bpl.w	80087b4 <_svfiprintf_r+0x9c8>
 800828e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8008290:	3004      	adds	r0, #4
 8008292:	f930 4c04 	ldrsh.w	r4, [r0, #-4]
 8008296:	900b      	str	r0, [sp, #44]	; 0x2c
 8008298:	4622      	mov	r2, r4
 800829a:	17e5      	asrs	r5, r4, #31
 800829c:	462b      	mov	r3, r5
 800829e:	e7c9      	b.n	8008234 <_svfiprintf_r+0x448>
 80082a0:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 80082a4:	2000      	movs	r0, #0
 80082a6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80082aa:	f81a 3b01 	ldrb.w	r3, [sl], #1
 80082ae:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80082b2:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 80082b6:	2a09      	cmp	r2, #9
 80082b8:	d9f5      	bls.n	80082a6 <_svfiprintf_r+0x4ba>
 80082ba:	e5f3      	b.n	8007ea4 <_svfiprintf_r+0xb8>
 80082bc:	9c02      	ldr	r4, [sp, #8]
 80082be:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 80082c2:	9402      	str	r4, [sp, #8]
 80082c4:	f89a 3000 	ldrb.w	r3, [sl]
 80082c8:	e5ea      	b.n	8007ea0 <_svfiprintf_r+0xb4>
 80082ca:	f89a 3000 	ldrb.w	r3, [sl]
 80082ce:	f10a 0501 	add.w	r5, sl, #1
 80082d2:	2b2a      	cmp	r3, #42	; 0x2a
 80082d4:	f000 82e1 	beq.w	800889a <_svfiprintf_r+0xaae>
 80082d8:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 80082dc:	2a09      	cmp	r2, #9
 80082de:	bf82      	ittt	hi
 80082e0:	2400      	movhi	r4, #0
 80082e2:	46aa      	movhi	sl, r5
 80082e4:	9403      	strhi	r4, [sp, #12]
 80082e6:	f63f addd 	bhi.w	8007ea4 <_svfiprintf_r+0xb8>
 80082ea:	2400      	movs	r4, #0
 80082ec:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 80082f0:	f815 3b01 	ldrb.w	r3, [r5], #1
 80082f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80082f8:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 80082fc:	2a09      	cmp	r2, #9
 80082fe:	d9f5      	bls.n	80082ec <_svfiprintf_r+0x500>
 8008300:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
 8008304:	46aa      	mov	sl, r5
 8008306:	9403      	str	r4, [sp, #12]
 8008308:	e5cc      	b.n	8007ea4 <_svfiprintf_r+0xb8>
 800830a:	9c02      	ldr	r4, [sp, #8]
 800830c:	9004      	str	r0, [sp, #16]
 800830e:	f044 0410 	orr.w	r4, r4, #16
 8008312:	9402      	str	r4, [sp, #8]
 8008314:	9d02      	ldr	r5, [sp, #8]
 8008316:	06aa      	lsls	r2, r5, #26
 8008318:	f53f ae38 	bmi.w	8007f8c <_svfiprintf_r+0x1a0>
 800831c:	9c02      	ldr	r4, [sp, #8]
 800831e:	06e3      	lsls	r3, r4, #27
 8008320:	f100 8267 	bmi.w	80087f2 <_svfiprintf_r+0xa06>
 8008324:	9c02      	ldr	r4, [sp, #8]
 8008326:	0665      	lsls	r5, r4, #25
 8008328:	f140 8263 	bpl.w	80087f2 <_svfiprintf_r+0xa06>
 800832c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800832e:	2500      	movs	r5, #0
 8008330:	2301      	movs	r3, #1
 8008332:	3004      	adds	r0, #4
 8008334:	f830 4c04 	ldrh.w	r4, [r0, #-4]
 8008338:	900b      	str	r0, [sp, #44]	; 0x2c
 800833a:	e631      	b.n	8007fa0 <_svfiprintf_r+0x1b4>
 800833c:	9d02      	ldr	r5, [sp, #8]
 800833e:	f64a 1410 	movw	r4, #43280	; 0xa910
 8008342:	f6c0 0400 	movt	r4, #2048	; 0x800
 8008346:	940e      	str	r4, [sp, #56]	; 0x38
 8008348:	06ac      	lsls	r4, r5, #26
 800834a:	9004      	str	r0, [sp, #16]
 800834c:	f88d 104f 	strb.w	r1, [sp, #79]	; 0x4f
 8008350:	d543      	bpl.n	80083da <_svfiprintf_r+0x5ee>
 8008352:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8008354:	1de2      	adds	r2, r4, #7
 8008356:	f022 0207 	bic.w	r2, r2, #7
 800835a:	f102 0508 	add.w	r5, r2, #8
 800835e:	950b      	str	r5, [sp, #44]	; 0x2c
 8008360:	e9d2 4500 	ldrd	r4, r5, [r2]
 8008364:	9802      	ldr	r0, [sp, #8]
 8008366:	07c2      	lsls	r2, r0, #31
 8008368:	d554      	bpl.n	8008414 <_svfiprintf_r+0x628>
 800836a:	ea54 0105 	orrs.w	r1, r4, r5
 800836e:	d051      	beq.n	8008414 <_svfiprintf_r+0x628>
 8008370:	f88d 3051 	strb.w	r3, [sp, #81]	; 0x51
 8008374:	f040 0002 	orr.w	r0, r0, #2
 8008378:	2330      	movs	r3, #48	; 0x30
 800837a:	9002      	str	r0, [sp, #8]
 800837c:	f88d 3050 	strb.w	r3, [sp, #80]	; 0x50
 8008380:	2302      	movs	r3, #2
 8008382:	e60d      	b.n	8007fa0 <_svfiprintf_r+0x1b4>
 8008384:	9c02      	ldr	r4, [sp, #8]
 8008386:	9004      	str	r0, [sp, #16]
 8008388:	f044 0410 	orr.w	r4, r4, #16
 800838c:	9402      	str	r4, [sp, #8]
 800838e:	9d02      	ldr	r5, [sp, #8]
 8008390:	f015 0320 	ands.w	r3, r5, #32
 8008394:	f47f aec4 	bne.w	8008120 <_svfiprintf_r+0x334>
 8008398:	9c02      	ldr	r4, [sp, #8]
 800839a:	f014 0210 	ands.w	r2, r4, #16
 800839e:	f040 8220 	bne.w	80087e2 <_svfiprintf_r+0x9f6>
 80083a2:	9c02      	ldr	r4, [sp, #8]
 80083a4:	f014 0340 	ands.w	r3, r4, #64	; 0x40
 80083a8:	f000 821b 	beq.w	80087e2 <_svfiprintf_r+0x9f6>
 80083ac:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80083ae:	4613      	mov	r3, r2
 80083b0:	2500      	movs	r5, #0
 80083b2:	3004      	adds	r0, #4
 80083b4:	f830 4c04 	ldrh.w	r4, [r0, #-4]
 80083b8:	900b      	str	r0, [sp, #44]	; 0x2c
 80083ba:	e5f1      	b.n	8007fa0 <_svfiprintf_r+0x1b4>
 80083bc:	f89a 3000 	ldrb.w	r3, [sl]
 80083c0:	212b      	movs	r1, #43	; 0x2b
 80083c2:	e56d      	b.n	8007ea0 <_svfiprintf_r+0xb4>
 80083c4:	9d02      	ldr	r5, [sp, #8]
 80083c6:	f64a 1424 	movw	r4, #43300	; 0xa924
 80083ca:	f6c0 0400 	movt	r4, #2048	; 0x800
 80083ce:	940e      	str	r4, [sp, #56]	; 0x38
 80083d0:	06ac      	lsls	r4, r5, #26
 80083d2:	9004      	str	r0, [sp, #16]
 80083d4:	f88d 104f 	strb.w	r1, [sp, #79]	; 0x4f
 80083d8:	d4bb      	bmi.n	8008352 <_svfiprintf_r+0x566>
 80083da:	9c02      	ldr	r4, [sp, #8]
 80083dc:	06e0      	lsls	r0, r4, #27
 80083de:	f100 81e2 	bmi.w	80087a6 <_svfiprintf_r+0x9ba>
 80083e2:	9c02      	ldr	r4, [sp, #8]
 80083e4:	0661      	lsls	r1, r4, #25
 80083e6:	f140 81de 	bpl.w	80087a6 <_svfiprintf_r+0x9ba>
 80083ea:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80083ec:	2500      	movs	r5, #0
 80083ee:	3004      	adds	r0, #4
 80083f0:	f830 4c04 	ldrh.w	r4, [r0, #-4]
 80083f4:	900b      	str	r0, [sp, #44]	; 0x2c
 80083f6:	e7b5      	b.n	8008364 <_svfiprintf_r+0x578>
 80083f8:	f89a 3000 	ldrb.w	r3, [sl]
 80083fc:	2900      	cmp	r1, #0
 80083fe:	f47f ad4f 	bne.w	8007ea0 <_svfiprintf_r+0xb4>
 8008402:	2120      	movs	r1, #32
 8008404:	e54c      	b.n	8007ea0 <_svfiprintf_r+0xb4>
 8008406:	9d02      	ldr	r5, [sp, #8]
 8008408:	f045 0501 	orr.w	r5, r5, #1
 800840c:	9502      	str	r5, [sp, #8]
 800840e:	f89a 3000 	ldrb.w	r3, [sl]
 8008412:	e545      	b.n	8007ea0 <_svfiprintf_r+0xb4>
 8008414:	2302      	movs	r3, #2
 8008416:	e5c3      	b.n	8007fa0 <_svfiprintf_r+0x1b4>
 8008418:	9004      	str	r0, [sp, #16]
 800841a:	f88d 104f 	strb.w	r1, [sp, #79]	; 0x4f
 800841e:	2b00      	cmp	r3, #0
 8008420:	f000 80ed 	beq.w	80085fe <_svfiprintf_r+0x812>
 8008424:	2401      	movs	r4, #1
 8008426:	f88d 3060 	strb.w	r3, [sp, #96]	; 0x60
 800842a:	9406      	str	r4, [sp, #24]
 800842c:	2300      	movs	r3, #0
 800842e:	f10d 0960 	add.w	r9, sp, #96	; 0x60
 8008432:	f88d 304f 	strb.w	r3, [sp, #79]	; 0x4f
 8008436:	e715      	b.n	8008264 <_svfiprintf_r+0x478>
 8008438:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800843a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800843c:	f89d 304f 	ldrb.w	r3, [sp, #79]	; 0x4f
 8008440:	b173      	cbz	r3, 8008460 <_svfiprintf_r+0x674>
 8008442:	3201      	adds	r2, #1
 8008444:	3101      	adds	r1, #1
 8008446:	2a07      	cmp	r2, #7
 8008448:	f10d 004f 	add.w	r0, sp, #79	; 0x4f
 800844c:	f04f 0301 	mov.w	r3, #1
 8008450:	9216      	str	r2, [sp, #88]	; 0x58
 8008452:	e886 0009 	stmia.w	r6, {r0, r3}
 8008456:	bfd8      	it	le
 8008458:	3608      	addle	r6, #8
 800845a:	9117      	str	r1, [sp, #92]	; 0x5c
 800845c:	f300 8157 	bgt.w	800870e <_svfiprintf_r+0x922>
 8008460:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8008462:	b16d      	cbz	r5, 8008480 <_svfiprintf_r+0x694>
 8008464:	3201      	adds	r2, #1
 8008466:	3102      	adds	r1, #2
 8008468:	2a07      	cmp	r2, #7
 800846a:	a814      	add	r0, sp, #80	; 0x50
 800846c:	f04f 0302 	mov.w	r3, #2
 8008470:	9216      	str	r2, [sp, #88]	; 0x58
 8008472:	e886 0009 	stmia.w	r6, {r0, r3}
 8008476:	bfd8      	it	le
 8008478:	3608      	addle	r6, #8
 800847a:	9117      	str	r1, [sp, #92]	; 0x5c
 800847c:	f300 813c 	bgt.w	80086f8 <_svfiprintf_r+0x90c>
 8008480:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008482:	2b80      	cmp	r3, #128	; 0x80
 8008484:	f000 80cd 	beq.w	8008622 <_svfiprintf_r+0x836>
 8008488:	9803      	ldr	r0, [sp, #12]
 800848a:	9b06      	ldr	r3, [sp, #24]
 800848c:	1ac5      	subs	r5, r0, r3
 800848e:	2d00      	cmp	r5, #0
 8008490:	dd44      	ble.n	800851c <_svfiprintf_r+0x730>
 8008492:	4ba5      	ldr	r3, [pc, #660]	; (8008728 <_svfiprintf_r+0x93c>)
 8008494:	2d10      	cmp	r5, #16
 8008496:	9307      	str	r3, [sp, #28]
 8008498:	dd2b      	ble.n	80084f2 <_svfiprintf_r+0x706>
 800849a:	f8cd 900c 	str.w	r9, [sp, #12]
 800849e:	f04f 0b10 	mov.w	fp, #16
 80084a2:	9409      	str	r4, [sp, #36]	; 0x24
 80084a4:	46a9      	mov	r9, r5
 80084a6:	9c05      	ldr	r4, [sp, #20]
 80084a8:	9d08      	ldr	r5, [sp, #32]
 80084aa:	e004      	b.n	80084b6 <_svfiprintf_r+0x6ca>
 80084ac:	f1a9 0910 	sub.w	r9, r9, #16
 80084b0:	f1b9 0f10 	cmp.w	r9, #16
 80084b4:	dd19      	ble.n	80084ea <_svfiprintf_r+0x6fe>
 80084b6:	3201      	adds	r2, #1
 80084b8:	3110      	adds	r1, #16
 80084ba:	2a07      	cmp	r2, #7
 80084bc:	e886 0880 	stmia.w	r6, {r7, fp}
 80084c0:	9216      	str	r2, [sp, #88]	; 0x58
 80084c2:	f106 0608 	add.w	r6, r6, #8
 80084c6:	9117      	str	r1, [sp, #92]	; 0x5c
 80084c8:	ddf0      	ble.n	80084ac <_svfiprintf_r+0x6c0>
 80084ca:	4620      	mov	r0, r4
 80084cc:	4629      	mov	r1, r5
 80084ce:	aa15      	add	r2, sp, #84	; 0x54
 80084d0:	4646      	mov	r6, r8
 80084d2:	f7ff fc09 	bl	8007ce8 <__ssprint_r>
 80084d6:	2800      	cmp	r0, #0
 80084d8:	f040 8098 	bne.w	800860c <_svfiprintf_r+0x820>
 80084dc:	f1a9 0910 	sub.w	r9, r9, #16
 80084e0:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80084e2:	f1b9 0f10 	cmp.w	r9, #16
 80084e6:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80084e8:	dce5      	bgt.n	80084b6 <_svfiprintf_r+0x6ca>
 80084ea:	464d      	mov	r5, r9
 80084ec:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80084ee:	f8dd 900c 	ldr.w	r9, [sp, #12]
 80084f2:	3201      	adds	r2, #1
 80084f4:	9b07      	ldr	r3, [sp, #28]
 80084f6:	2a07      	cmp	r2, #7
 80084f8:	4429      	add	r1, r5
 80084fa:	9216      	str	r2, [sp, #88]	; 0x58
 80084fc:	e886 0028 	stmia.w	r6, {r3, r5}
 8008500:	bfd8      	it	le
 8008502:	3608      	addle	r6, #8
 8008504:	9117      	str	r1, [sp, #92]	; 0x5c
 8008506:	dd09      	ble.n	800851c <_svfiprintf_r+0x730>
 8008508:	9805      	ldr	r0, [sp, #20]
 800850a:	aa15      	add	r2, sp, #84	; 0x54
 800850c:	9908      	ldr	r1, [sp, #32]
 800850e:	f7ff fbeb 	bl	8007ce8 <__ssprint_r>
 8008512:	2800      	cmp	r0, #0
 8008514:	d17a      	bne.n	800860c <_svfiprintf_r+0x820>
 8008516:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8008518:	4646      	mov	r6, r8
 800851a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800851c:	3201      	adds	r2, #1
 800851e:	9d06      	ldr	r5, [sp, #24]
 8008520:	2a07      	cmp	r2, #7
 8008522:	9216      	str	r2, [sp, #88]	; 0x58
 8008524:	4429      	add	r1, r5
 8008526:	f8c6 9000 	str.w	r9, [r6]
 800852a:	9117      	str	r1, [sp, #92]	; 0x5c
 800852c:	bfd8      	it	le
 800852e:	f106 0308 	addle.w	r3, r6, #8
 8008532:	6075      	str	r5, [r6, #4]
 8008534:	f300 80c0 	bgt.w	80086b8 <_svfiprintf_r+0x8cc>
 8008538:	9d02      	ldr	r5, [sp, #8]
 800853a:	076a      	lsls	r2, r5, #29
 800853c:	d538      	bpl.n	80085b0 <_svfiprintf_r+0x7c4>
 800853e:	9804      	ldr	r0, [sp, #16]
 8008540:	1b05      	subs	r5, r0, r4
 8008542:	2d00      	cmp	r5, #0
 8008544:	dd34      	ble.n	80085b0 <_svfiprintf_r+0x7c4>
 8008546:	2d10      	cmp	r5, #16
 8008548:	f24a 50c0 	movw	r0, #42432	; 0xa5c0
 800854c:	f6c0 0000 	movt	r0, #2048	; 0x800
 8008550:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8008552:	9007      	str	r0, [sp, #28]
 8008554:	dd22      	ble.n	800859c <_svfiprintf_r+0x7b0>
 8008556:	9402      	str	r4, [sp, #8]
 8008558:	2610      	movs	r6, #16
 800855a:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800855e:	f8dd b020 	ldr.w	fp, [sp, #32]
 8008562:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8008564:	e002      	b.n	800856c <_svfiprintf_r+0x780>
 8008566:	3d10      	subs	r5, #16
 8008568:	2d10      	cmp	r5, #16
 800856a:	dd16      	ble.n	800859a <_svfiprintf_r+0x7ae>
 800856c:	3201      	adds	r2, #1
 800856e:	3110      	adds	r1, #16
 8008570:	2a07      	cmp	r2, #7
 8008572:	e883 0050 	stmia.w	r3, {r4, r6}
 8008576:	9216      	str	r2, [sp, #88]	; 0x58
 8008578:	f103 0308 	add.w	r3, r3, #8
 800857c:	9117      	str	r1, [sp, #92]	; 0x5c
 800857e:	ddf2      	ble.n	8008566 <_svfiprintf_r+0x77a>
 8008580:	4648      	mov	r0, r9
 8008582:	4659      	mov	r1, fp
 8008584:	aa15      	add	r2, sp, #84	; 0x54
 8008586:	f7ff fbaf 	bl	8007ce8 <__ssprint_r>
 800858a:	4643      	mov	r3, r8
 800858c:	2800      	cmp	r0, #0
 800858e:	d13d      	bne.n	800860c <_svfiprintf_r+0x820>
 8008590:	3d10      	subs	r5, #16
 8008592:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8008594:	2d10      	cmp	r5, #16
 8008596:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8008598:	dce8      	bgt.n	800856c <_svfiprintf_r+0x780>
 800859a:	9c02      	ldr	r4, [sp, #8]
 800859c:	3201      	adds	r2, #1
 800859e:	9807      	ldr	r0, [sp, #28]
 80085a0:	2a07      	cmp	r2, #7
 80085a2:	4429      	add	r1, r5
 80085a4:	9216      	str	r2, [sp, #88]	; 0x58
 80085a6:	9117      	str	r1, [sp, #92]	; 0x5c
 80085a8:	e883 0021 	stmia.w	r3, {r0, r5}
 80085ac:	f300 80e5 	bgt.w	800877a <_svfiprintf_r+0x98e>
 80085b0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80085b2:	9804      	ldr	r0, [sp, #16]
 80085b4:	4284      	cmp	r4, r0
 80085b6:	bfac      	ite	ge
 80085b8:	192d      	addge	r5, r5, r4
 80085ba:	182d      	addlt	r5, r5, r0
 80085bc:	950a      	str	r5, [sp, #40]	; 0x28
 80085be:	2900      	cmp	r1, #0
 80085c0:	f040 8084 	bne.w	80086cc <_svfiprintf_r+0x8e0>
 80085c4:	2300      	movs	r3, #0
 80085c6:	9316      	str	r3, [sp, #88]	; 0x58
 80085c8:	f89a 3000 	ldrb.w	r3, [sl]
 80085cc:	4646      	mov	r6, r8
 80085ce:	2b00      	cmp	r3, #0
 80085d0:	bf18      	it	ne
 80085d2:	2b25      	cmpne	r3, #37	; 0x25
 80085d4:	f47f ac36 	bne.w	8007e44 <_svfiprintf_r+0x58>
 80085d8:	4654      	mov	r4, sl
 80085da:	e450      	b.n	8007e7e <_svfiprintf_r+0x92>
 80085dc:	2b00      	cmp	r3, #0
 80085de:	d17e      	bne.n	80086de <_svfiprintf_r+0x8f2>
 80085e0:	9c02      	ldr	r4, [sp, #8]
 80085e2:	07e1      	lsls	r1, r4, #31
 80085e4:	bf5c      	itt	pl
 80085e6:	9306      	strpl	r3, [sp, #24]
 80085e8:	46c1      	movpl	r9, r8
 80085ea:	f57f ad0f 	bpl.w	800800c <_svfiprintf_r+0x220>
 80085ee:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80085f0:	2330      	movs	r3, #48	; 0x30
 80085f2:	f10d 0987 	add.w	r9, sp, #135	; 0x87
 80085f6:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
 80085fa:	9506      	str	r5, [sp, #24]
 80085fc:	e506      	b.n	800800c <_svfiprintf_r+0x220>
 80085fe:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008600:	b123      	cbz	r3, 800860c <_svfiprintf_r+0x820>
 8008602:	9805      	ldr	r0, [sp, #20]
 8008604:	aa15      	add	r2, sp, #84	; 0x54
 8008606:	9908      	ldr	r1, [sp, #32]
 8008608:	f7ff fb6e 	bl	8007ce8 <__ssprint_r>
 800860c:	9c08      	ldr	r4, [sp, #32]
 800860e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8008610:	89a3      	ldrh	r3, [r4, #12]
 8008612:	f013 0f40 	tst.w	r3, #64	; 0x40
 8008616:	bf18      	it	ne
 8008618:	f04f 30ff 	movne.w	r0, #4294967295
 800861c:	b033      	add	sp, #204	; 0xcc
 800861e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008622:	9804      	ldr	r0, [sp, #16]
 8008624:	1b05      	subs	r5, r0, r4
 8008626:	2d00      	cmp	r5, #0
 8008628:	f77f af2e 	ble.w	8008488 <_svfiprintf_r+0x69c>
 800862c:	4b3e      	ldr	r3, [pc, #248]	; (8008728 <_svfiprintf_r+0x93c>)
 800862e:	2d10      	cmp	r5, #16
 8008630:	9307      	str	r3, [sp, #28]
 8008632:	dd2a      	ble.n	800868a <_svfiprintf_r+0x89e>
 8008634:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 8008638:	f04f 0b10 	mov.w	fp, #16
 800863c:	940c      	str	r4, [sp, #48]	; 0x30
 800863e:	46a9      	mov	r9, r5
 8008640:	9c05      	ldr	r4, [sp, #20]
 8008642:	9d08      	ldr	r5, [sp, #32]
 8008644:	e004      	b.n	8008650 <_svfiprintf_r+0x864>
 8008646:	f1a9 0910 	sub.w	r9, r9, #16
 800864a:	f1b9 0f10 	cmp.w	r9, #16
 800864e:	dd18      	ble.n	8008682 <_svfiprintf_r+0x896>
 8008650:	3201      	adds	r2, #1
 8008652:	3110      	adds	r1, #16
 8008654:	2a07      	cmp	r2, #7
 8008656:	e886 0880 	stmia.w	r6, {r7, fp}
 800865a:	9216      	str	r2, [sp, #88]	; 0x58
 800865c:	f106 0608 	add.w	r6, r6, #8
 8008660:	9117      	str	r1, [sp, #92]	; 0x5c
 8008662:	ddf0      	ble.n	8008646 <_svfiprintf_r+0x85a>
 8008664:	4620      	mov	r0, r4
 8008666:	4629      	mov	r1, r5
 8008668:	aa15      	add	r2, sp, #84	; 0x54
 800866a:	4646      	mov	r6, r8
 800866c:	f7ff fb3c 	bl	8007ce8 <__ssprint_r>
 8008670:	2800      	cmp	r0, #0
 8008672:	d1cb      	bne.n	800860c <_svfiprintf_r+0x820>
 8008674:	f1a9 0910 	sub.w	r9, r9, #16
 8008678:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800867a:	f1b9 0f10 	cmp.w	r9, #16
 800867e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8008680:	dce6      	bgt.n	8008650 <_svfiprintf_r+0x864>
 8008682:	464d      	mov	r5, r9
 8008684:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8008686:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800868a:	3201      	adds	r2, #1
 800868c:	9b07      	ldr	r3, [sp, #28]
 800868e:	2a07      	cmp	r2, #7
 8008690:	4429      	add	r1, r5
 8008692:	9216      	str	r2, [sp, #88]	; 0x58
 8008694:	e886 0028 	stmia.w	r6, {r3, r5}
 8008698:	bfd8      	it	le
 800869a:	3608      	addle	r6, #8
 800869c:	9117      	str	r1, [sp, #92]	; 0x5c
 800869e:	f77f aef3 	ble.w	8008488 <_svfiprintf_r+0x69c>
 80086a2:	9805      	ldr	r0, [sp, #20]
 80086a4:	aa15      	add	r2, sp, #84	; 0x54
 80086a6:	9908      	ldr	r1, [sp, #32]
 80086a8:	f7ff fb1e 	bl	8007ce8 <__ssprint_r>
 80086ac:	2800      	cmp	r0, #0
 80086ae:	d1ad      	bne.n	800860c <_svfiprintf_r+0x820>
 80086b0:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80086b2:	4646      	mov	r6, r8
 80086b4:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80086b6:	e6e7      	b.n	8008488 <_svfiprintf_r+0x69c>
 80086b8:	9805      	ldr	r0, [sp, #20]
 80086ba:	aa15      	add	r2, sp, #84	; 0x54
 80086bc:	9908      	ldr	r1, [sp, #32]
 80086be:	f7ff fb13 	bl	8007ce8 <__ssprint_r>
 80086c2:	2800      	cmp	r0, #0
 80086c4:	d1a2      	bne.n	800860c <_svfiprintf_r+0x820>
 80086c6:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80086c8:	4643      	mov	r3, r8
 80086ca:	e735      	b.n	8008538 <_svfiprintf_r+0x74c>
 80086cc:	9805      	ldr	r0, [sp, #20]
 80086ce:	aa15      	add	r2, sp, #84	; 0x54
 80086d0:	9908      	ldr	r1, [sp, #32]
 80086d2:	f7ff fb09 	bl	8007ce8 <__ssprint_r>
 80086d6:	2800      	cmp	r0, #0
 80086d8:	f43f af74 	beq.w	80085c4 <_svfiprintf_r+0x7d8>
 80086dc:	e796      	b.n	800860c <_svfiprintf_r+0x820>
 80086de:	9206      	str	r2, [sp, #24]
 80086e0:	46c1      	mov	r9, r8
 80086e2:	e493      	b.n	800800c <_svfiprintf_r+0x220>
 80086e4:	9805      	ldr	r0, [sp, #20]
 80086e6:	aa15      	add	r2, sp, #84	; 0x54
 80086e8:	9908      	ldr	r1, [sp, #32]
 80086ea:	f7ff fafd 	bl	8007ce8 <__ssprint_r>
 80086ee:	2800      	cmp	r0, #0
 80086f0:	d18c      	bne.n	800860c <_svfiprintf_r+0x820>
 80086f2:	4646      	mov	r6, r8
 80086f4:	f7ff bbc0 	b.w	8007e78 <_svfiprintf_r+0x8c>
 80086f8:	9805      	ldr	r0, [sp, #20]
 80086fa:	aa15      	add	r2, sp, #84	; 0x54
 80086fc:	9908      	ldr	r1, [sp, #32]
 80086fe:	f7ff faf3 	bl	8007ce8 <__ssprint_r>
 8008702:	2800      	cmp	r0, #0
 8008704:	d182      	bne.n	800860c <_svfiprintf_r+0x820>
 8008706:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8008708:	4646      	mov	r6, r8
 800870a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800870c:	e6b8      	b.n	8008480 <_svfiprintf_r+0x694>
 800870e:	9805      	ldr	r0, [sp, #20]
 8008710:	aa15      	add	r2, sp, #84	; 0x54
 8008712:	9908      	ldr	r1, [sp, #32]
 8008714:	f7ff fae8 	bl	8007ce8 <__ssprint_r>
 8008718:	2800      	cmp	r0, #0
 800871a:	f47f af77 	bne.w	800860c <_svfiprintf_r+0x820>
 800871e:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8008720:	4646      	mov	r6, r8
 8008722:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8008724:	e69c      	b.n	8008460 <_svfiprintf_r+0x674>
 8008726:	bf00      	nop
 8008728:	0800a5d0 	stmdaeq	r0, {r4, r6, r7, r8, sl, sp, pc}
 800872c:	2d00      	cmp	r5, #0
 800872e:	bf08      	it	eq
 8008730:	2c0a      	cmpeq	r4, #10
 8008732:	d330      	bcc.n	8008796 <_svfiprintf_r+0x9aa>
 8008734:	f10d 0b87 	add.w	fp, sp, #135	; 0x87
 8008738:	46e1      	mov	r9, ip
 800873a:	9606      	str	r6, [sp, #24]
 800873c:	4620      	mov	r0, r4
 800873e:	4629      	mov	r1, r5
 8008740:	220a      	movs	r2, #10
 8008742:	2300      	movs	r3, #0
 8008744:	f001 fb10 	bl	8009d68 <__aeabi_uldivmod>
 8008748:	465e      	mov	r6, fp
 800874a:	4620      	mov	r0, r4
 800874c:	4629      	mov	r1, r5
 800874e:	2300      	movs	r3, #0
 8008750:	f10b 3bff 	add.w	fp, fp, #4294967295
 8008754:	3230      	adds	r2, #48	; 0x30
 8008756:	7032      	strb	r2, [r6, #0]
 8008758:	220a      	movs	r2, #10
 800875a:	f001 fb05 	bl	8009d68 <__aeabi_uldivmod>
 800875e:	4604      	mov	r4, r0
 8008760:	460d      	mov	r5, r1
 8008762:	ea54 0005 	orrs.w	r0, r4, r5
 8008766:	d1e9      	bne.n	800873c <_svfiprintf_r+0x950>
 8008768:	46cc      	mov	ip, r9
 800876a:	46b1      	mov	r9, r6
 800876c:	9e06      	ldr	r6, [sp, #24]
 800876e:	e44a      	b.n	8008006 <_svfiprintf_r+0x21a>
 8008770:	930b      	str	r3, [sp, #44]	; 0x2c
 8008772:	f89a 3000 	ldrb.w	r3, [sl]
 8008776:	f7ff bb93 	b.w	8007ea0 <_svfiprintf_r+0xb4>
 800877a:	9805      	ldr	r0, [sp, #20]
 800877c:	aa15      	add	r2, sp, #84	; 0x54
 800877e:	9908      	ldr	r1, [sp, #32]
 8008780:	f7ff fab2 	bl	8007ce8 <__ssprint_r>
 8008784:	2800      	cmp	r0, #0
 8008786:	f47f af41 	bne.w	800860c <_svfiprintf_r+0x820>
 800878a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800878c:	e710      	b.n	80085b0 <_svfiprintf_r+0x7c4>
 800878e:	ebc9 0508 	rsb	r5, r9, r8
 8008792:	9506      	str	r5, [sp, #24]
 8008794:	e43a      	b.n	800800c <_svfiprintf_r+0x220>
 8008796:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8008798:	3430      	adds	r4, #48	; 0x30
 800879a:	f10d 0987 	add.w	r9, sp, #135	; 0x87
 800879e:	f88d 4087 	strb.w	r4, [sp, #135]	; 0x87
 80087a2:	9506      	str	r5, [sp, #24]
 80087a4:	e432      	b.n	800800c <_svfiprintf_r+0x220>
 80087a6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80087a8:	3504      	adds	r5, #4
 80087aa:	f855 4c04 	ldr.w	r4, [r5, #-4]
 80087ae:	950b      	str	r5, [sp, #44]	; 0x2c
 80087b0:	2500      	movs	r5, #0
 80087b2:	e5d7      	b.n	8008364 <_svfiprintf_r+0x578>
 80087b4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80087b6:	3504      	adds	r5, #4
 80087b8:	f855 4c04 	ldr.w	r4, [r5, #-4]
 80087bc:	950b      	str	r5, [sp, #44]	; 0x2c
 80087be:	4622      	mov	r2, r4
 80087c0:	17e5      	asrs	r5, r4, #31
 80087c2:	462b      	mov	r3, r5
 80087c4:	2a00      	cmp	r2, #0
 80087c6:	f173 0000 	sbcs.w	r0, r3, #0
 80087ca:	f6bf ad38 	bge.w	800823e <_svfiprintf_r+0x452>
 80087ce:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
 80087d2:	4264      	negs	r4, r4
 80087d4:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 80087d8:	f88d c04f 	strb.w	ip, [sp, #79]	; 0x4f
 80087dc:	2301      	movs	r3, #1
 80087de:	f7ff bbe3 	b.w	8007fa8 <_svfiprintf_r+0x1bc>
 80087e2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80087e4:	3504      	adds	r5, #4
 80087e6:	f855 4c04 	ldr.w	r4, [r5, #-4]
 80087ea:	950b      	str	r5, [sp, #44]	; 0x2c
 80087ec:	2500      	movs	r5, #0
 80087ee:	f7ff bbd7 	b.w	8007fa0 <_svfiprintf_r+0x1b4>
 80087f2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80087f4:	2301      	movs	r3, #1
 80087f6:	3504      	adds	r5, #4
 80087f8:	f855 4c04 	ldr.w	r4, [r5, #-4]
 80087fc:	950b      	str	r5, [sp, #44]	; 0x2c
 80087fe:	2500      	movs	r5, #0
 8008800:	f7ff bbce 	b.w	8007fa0 <_svfiprintf_r+0x1b4>
 8008804:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8008806:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8008808:	6829      	ldr	r1, [r5, #0]
 800880a:	4622      	mov	r2, r4
 800880c:	17e5      	asrs	r5, r4, #31
 800880e:	462b      	mov	r3, r5
 8008810:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8008812:	e9c1 2300 	strd	r2, r3, [r1]
 8008816:	3504      	adds	r5, #4
 8008818:	950b      	str	r5, [sp, #44]	; 0x2c
 800881a:	f7ff bb0c 	b.w	8007e36 <_svfiprintf_r+0x4a>
 800881e:	950b      	str	r5, [sp, #44]	; 0x2c
 8008820:	9403      	str	r4, [sp, #12]
 8008822:	f7ff fa31 	bl	8007c88 <strlen>
 8008826:	f89d c04f 	ldrb.w	ip, [sp, #79]	; 0x4f
 800882a:	9006      	str	r0, [sp, #24]
 800882c:	f7ff bbee 	b.w	800800c <_svfiprintf_r+0x220>
 8008830:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8008832:	9d02      	ldr	r5, [sp, #8]
 8008834:	3404      	adds	r4, #4
 8008836:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800883a:	f015 0f40 	tst.w	r5, #64	; 0x40
 800883e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8008840:	940b      	str	r4, [sp, #44]	; 0x2c
 8008842:	bf14      	ite	ne
 8008844:	801d      	strhne	r5, [r3, #0]
 8008846:	601d      	streq	r5, [r3, #0]
 8008848:	f7ff baf5 	b.w	8007e36 <_svfiprintf_r+0x4a>
 800884c:	2140      	movs	r1, #64	; 0x40
 800884e:	f7fe f8cd 	bl	80069ec <_malloc_r>
 8008852:	9c08      	ldr	r4, [sp, #32]
 8008854:	6020      	str	r0, [r4, #0]
 8008856:	6120      	str	r0, [r4, #16]
 8008858:	2800      	cmp	r0, #0
 800885a:	d02f      	beq.n	80088bc <_svfiprintf_r+0xad0>
 800885c:	9c08      	ldr	r4, [sp, #32]
 800885e:	2340      	movs	r3, #64	; 0x40
 8008860:	6163      	str	r3, [r4, #20]
 8008862:	f7ff bad1 	b.w	8007e08 <_svfiprintf_r+0x1c>
 8008866:	f6c0 0300 	movt	r3, #2048	; 0x800
 800886a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800886c:	9307      	str	r3, [sp, #28]
 800886e:	e418      	b.n	80080a2 <_svfiprintf_r+0x2b6>
 8008870:	9c03      	ldr	r4, [sp, #12]
 8008872:	f64a 1938 	movw	r9, #43320	; 0xa938
 8008876:	950b      	str	r5, [sp, #44]	; 0x2c
 8008878:	f6c0 0900 	movt	r9, #2048	; 0x800
 800887c:	2c06      	cmp	r4, #6
 800887e:	bf28      	it	cs
 8008880:	2406      	movcs	r4, #6
 8008882:	9406      	str	r4, [sp, #24]
 8008884:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 8008888:	e4ec      	b.n	8008264 <_svfiprintf_r+0x478>
 800888a:	9c03      	ldr	r4, [sp, #12]
 800888c:	f89d c04f 	ldrb.w	ip, [sp, #79]	; 0x4f
 8008890:	950b      	str	r5, [sp, #44]	; 0x2c
 8008892:	9406      	str	r4, [sp, #24]
 8008894:	9003      	str	r0, [sp, #12]
 8008896:	f7ff bbb9 	b.w	800800c <_svfiprintf_r+0x220>
 800889a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800889c:	f89a 3001 	ldrb.w	r3, [sl, #1]
 80088a0:	46aa      	mov	sl, r5
 80088a2:	6824      	ldr	r4, [r4, #0]
 80088a4:	9403      	str	r4, [sp, #12]
 80088a6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80088a8:	1d22      	adds	r2, r4, #4
 80088aa:	9c03      	ldr	r4, [sp, #12]
 80088ac:	920b      	str	r2, [sp, #44]	; 0x2c
 80088ae:	2c00      	cmp	r4, #0
 80088b0:	bfbc      	itt	lt
 80088b2:	f04f 35ff 	movlt.w	r5, #4294967295
 80088b6:	9503      	strlt	r5, [sp, #12]
 80088b8:	f7ff baf2 	b.w	8007ea0 <_svfiprintf_r+0xb4>
 80088bc:	9d05      	ldr	r5, [sp, #20]
 80088be:	230c      	movs	r3, #12
 80088c0:	f04f 30ff 	mov.w	r0, #4294967295
 80088c4:	602b      	str	r3, [r5, #0]
 80088c6:	e6a9      	b.n	800861c <_svfiprintf_r+0x830>

080088c8 <_calloc_r>:
 80088c8:	b510      	push	{r4, lr}
 80088ca:	fb02 f101 	mul.w	r1, r2, r1
 80088ce:	f7fe f88d 	bl	80069ec <_malloc_r>
 80088d2:	4604      	mov	r4, r0
 80088d4:	b170      	cbz	r0, 80088f4 <_calloc_r+0x2c>
 80088d6:	f850 2c04 	ldr.w	r2, [r0, #-4]
 80088da:	f022 0203 	bic.w	r2, r2, #3
 80088de:	3a04      	subs	r2, #4
 80088e0:	2a24      	cmp	r2, #36	; 0x24
 80088e2:	d81d      	bhi.n	8008920 <_calloc_r+0x58>
 80088e4:	2a13      	cmp	r2, #19
 80088e6:	bf98      	it	ls
 80088e8:	4603      	movls	r3, r0
 80088ea:	d805      	bhi.n	80088f8 <_calloc_r+0x30>
 80088ec:	2200      	movs	r2, #0
 80088ee:	601a      	str	r2, [r3, #0]
 80088f0:	605a      	str	r2, [r3, #4]
 80088f2:	609a      	str	r2, [r3, #8]
 80088f4:	4620      	mov	r0, r4
 80088f6:	bd10      	pop	{r4, pc}
 80088f8:	2a1b      	cmp	r2, #27
 80088fa:	f04f 0100 	mov.w	r1, #0
 80088fe:	bf98      	it	ls
 8008900:	f100 0308 	addls.w	r3, r0, #8
 8008904:	6001      	str	r1, [r0, #0]
 8008906:	6041      	str	r1, [r0, #4]
 8008908:	d9f0      	bls.n	80088ec <_calloc_r+0x24>
 800890a:	2a24      	cmp	r2, #36	; 0x24
 800890c:	6081      	str	r1, [r0, #8]
 800890e:	60c1      	str	r1, [r0, #12]
 8008910:	bf11      	iteee	ne
 8008912:	f100 0310 	addne.w	r3, r0, #16
 8008916:	6101      	streq	r1, [r0, #16]
 8008918:	f100 0318 	addeq.w	r3, r0, #24
 800891c:	6141      	streq	r1, [r0, #20]
 800891e:	e7e5      	b.n	80088ec <_calloc_r+0x24>
 8008920:	2100      	movs	r1, #0
 8008922:	f000 f989 	bl	8008c38 <memset>
 8008926:	4620      	mov	r0, r4
 8008928:	bd10      	pop	{r4, pc}
 800892a:	bf00      	nop

0800892c <_malloc_trim_r>:
 800892c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800892e:	f240 1474 	movw	r4, #372	; 0x174
 8008932:	f2c2 0400 	movt	r4, #8192	; 0x2000
 8008936:	460f      	mov	r7, r1
 8008938:	4605      	mov	r5, r0
 800893a:	f7fe fbab 	bl	8007094 <__malloc_lock>
 800893e:	68a3      	ldr	r3, [r4, #8]
 8008940:	685e      	ldr	r6, [r3, #4]
 8008942:	f026 0603 	bic.w	r6, r6, #3
 8008946:	1bf7      	subs	r7, r6, r7
 8008948:	f607 77ef 	addw	r7, r7, #4079	; 0xfef
 800894c:	0b3f      	lsrs	r7, r7, #12
 800894e:	3f01      	subs	r7, #1
 8008950:	033f      	lsls	r7, r7, #12
 8008952:	f5b7 5f80 	cmp.w	r7, #4096	; 0x1000
 8008956:	db07      	blt.n	8008968 <_malloc_trim_r+0x3c>
 8008958:	4628      	mov	r0, r5
 800895a:	2100      	movs	r1, #0
 800895c:	f7ff f862 	bl	8007a24 <_sbrk_r>
 8008960:	68a3      	ldr	r3, [r4, #8]
 8008962:	4433      	add	r3, r6
 8008964:	4298      	cmp	r0, r3
 8008966:	d004      	beq.n	8008972 <_malloc_trim_r+0x46>
 8008968:	4628      	mov	r0, r5
 800896a:	f7fe fb95 	bl	8007098 <__malloc_unlock>
 800896e:	2000      	movs	r0, #0
 8008970:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008972:	4628      	mov	r0, r5
 8008974:	4279      	negs	r1, r7
 8008976:	f7ff f855 	bl	8007a24 <_sbrk_r>
 800897a:	3001      	adds	r0, #1
 800897c:	d010      	beq.n	80089a0 <_malloc_trim_r+0x74>
 800897e:	f240 53ac 	movw	r3, #1452	; 0x5ac
 8008982:	68a1      	ldr	r1, [r4, #8]
 8008984:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8008988:	1bf6      	subs	r6, r6, r7
 800898a:	4628      	mov	r0, r5
 800898c:	f046 0601 	orr.w	r6, r6, #1
 8008990:	681a      	ldr	r2, [r3, #0]
 8008992:	604e      	str	r6, [r1, #4]
 8008994:	1bd7      	subs	r7, r2, r7
 8008996:	601f      	str	r7, [r3, #0]
 8008998:	f7fe fb7e 	bl	8007098 <__malloc_unlock>
 800899c:	2001      	movs	r0, #1
 800899e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80089a0:	4628      	mov	r0, r5
 80089a2:	2100      	movs	r1, #0
 80089a4:	f7ff f83e 	bl	8007a24 <_sbrk_r>
 80089a8:	68a3      	ldr	r3, [r4, #8]
 80089aa:	1ac2      	subs	r2, r0, r3
 80089ac:	2a0f      	cmp	r2, #15
 80089ae:	dddb      	ble.n	8008968 <_malloc_trim_r+0x3c>
 80089b0:	f240 547c 	movw	r4, #1404	; 0x57c
 80089b4:	f240 51ac 	movw	r1, #1452	; 0x5ac
 80089b8:	f2c2 0400 	movt	r4, #8192	; 0x2000
 80089bc:	f2c2 0100 	movt	r1, #8192	; 0x2000
 80089c0:	f042 0201 	orr.w	r2, r2, #1
 80089c4:	605a      	str	r2, [r3, #4]
 80089c6:	6823      	ldr	r3, [r4, #0]
 80089c8:	1ac0      	subs	r0, r0, r3
 80089ca:	6008      	str	r0, [r1, #0]
 80089cc:	e7cc      	b.n	8008968 <_malloc_trim_r+0x3c>
 80089ce:	bf00      	nop

080089d0 <_free_r>:
 80089d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80089d4:	460e      	mov	r6, r1
 80089d6:	4680      	mov	r8, r0
 80089d8:	2900      	cmp	r1, #0
 80089da:	d05e      	beq.n	8008a9a <_free_r+0xca>
 80089dc:	f7fe fb5a 	bl	8007094 <__malloc_lock>
 80089e0:	f240 1574 	movw	r5, #372	; 0x174
 80089e4:	f856 1c04 	ldr.w	r1, [r6, #-4]
 80089e8:	f2c2 0500 	movt	r5, #8192	; 0x2000
 80089ec:	f1a6 0408 	sub.w	r4, r6, #8
 80089f0:	f021 0301 	bic.w	r3, r1, #1
 80089f4:	68af      	ldr	r7, [r5, #8]
 80089f6:	18e2      	adds	r2, r4, r3
 80089f8:	4297      	cmp	r7, r2
 80089fa:	6850      	ldr	r0, [r2, #4]
 80089fc:	f020 0003 	bic.w	r0, r0, #3
 8008a00:	d061      	beq.n	8008ac6 <_free_r+0xf6>
 8008a02:	f011 0101 	ands.w	r1, r1, #1
 8008a06:	6050      	str	r0, [r2, #4]
 8008a08:	bf18      	it	ne
 8008a0a:	2100      	movne	r1, #0
 8008a0c:	d10f      	bne.n	8008a2e <_free_r+0x5e>
 8008a0e:	f856 6c08 	ldr.w	r6, [r6, #-8]
 8008a12:	f105 0c08 	add.w	ip, r5, #8
 8008a16:	1ba4      	subs	r4, r4, r6
 8008a18:	4433      	add	r3, r6
 8008a1a:	68a6      	ldr	r6, [r4, #8]
 8008a1c:	4566      	cmp	r6, ip
 8008a1e:	bf0f      	iteee	eq
 8008a20:	2101      	moveq	r1, #1
 8008a22:	f8d4 c00c 	ldrne.w	ip, [r4, #12]
 8008a26:	f8c6 c00c 	strne.w	ip, [r6, #12]
 8008a2a:	f8cc 6008 	strne.w	r6, [ip, #8]
 8008a2e:	1816      	adds	r6, r2, r0
 8008a30:	6876      	ldr	r6, [r6, #4]
 8008a32:	07f6      	lsls	r6, r6, #31
 8008a34:	d408      	bmi.n	8008a48 <_free_r+0x78>
 8008a36:	4403      	add	r3, r0
 8008a38:	6890      	ldr	r0, [r2, #8]
 8008a3a:	b911      	cbnz	r1, 8008a42 <_free_r+0x72>
 8008a3c:	4e49      	ldr	r6, [pc, #292]	; (8008b64 <_free_r+0x194>)
 8008a3e:	42b0      	cmp	r0, r6
 8008a40:	d060      	beq.n	8008b04 <_free_r+0x134>
 8008a42:	68d2      	ldr	r2, [r2, #12]
 8008a44:	60c2      	str	r2, [r0, #12]
 8008a46:	6090      	str	r0, [r2, #8]
 8008a48:	f043 0201 	orr.w	r2, r3, #1
 8008a4c:	6062      	str	r2, [r4, #4]
 8008a4e:	50e3      	str	r3, [r4, r3]
 8008a50:	b9f1      	cbnz	r1, 8008a90 <_free_r+0xc0>
 8008a52:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008a56:	d322      	bcc.n	8008a9e <_free_r+0xce>
 8008a58:	0a5a      	lsrs	r2, r3, #9
 8008a5a:	2a04      	cmp	r2, #4
 8008a5c:	d85b      	bhi.n	8008b16 <_free_r+0x146>
 8008a5e:	0998      	lsrs	r0, r3, #6
 8008a60:	3038      	adds	r0, #56	; 0x38
 8008a62:	0041      	lsls	r1, r0, #1
 8008a64:	eb05 0581 	add.w	r5, r5, r1, lsl #2
 8008a68:	f240 1174 	movw	r1, #372	; 0x174
 8008a6c:	f2c2 0100 	movt	r1, #8192	; 0x2000
 8008a70:	68aa      	ldr	r2, [r5, #8]
 8008a72:	42aa      	cmp	r2, r5
 8008a74:	d05b      	beq.n	8008b2e <_free_r+0x15e>
 8008a76:	6851      	ldr	r1, [r2, #4]
 8008a78:	f021 0103 	bic.w	r1, r1, #3
 8008a7c:	428b      	cmp	r3, r1
 8008a7e:	d202      	bcs.n	8008a86 <_free_r+0xb6>
 8008a80:	6892      	ldr	r2, [r2, #8]
 8008a82:	4295      	cmp	r5, r2
 8008a84:	d1f7      	bne.n	8008a76 <_free_r+0xa6>
 8008a86:	68d3      	ldr	r3, [r2, #12]
 8008a88:	60e3      	str	r3, [r4, #12]
 8008a8a:	60a2      	str	r2, [r4, #8]
 8008a8c:	609c      	str	r4, [r3, #8]
 8008a8e:	60d4      	str	r4, [r2, #12]
 8008a90:	4640      	mov	r0, r8
 8008a92:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008a96:	f7fe baff 	b.w	8007098 <__malloc_unlock>
 8008a9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008a9e:	08db      	lsrs	r3, r3, #3
 8008aa0:	2101      	movs	r1, #1
 8008aa2:	6868      	ldr	r0, [r5, #4]
 8008aa4:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 8008aa8:	109b      	asrs	r3, r3, #2
 8008aaa:	fa01 f303 	lsl.w	r3, r1, r3
 8008aae:	6891      	ldr	r1, [r2, #8]
 8008ab0:	4318      	orrs	r0, r3
 8008ab2:	60e2      	str	r2, [r4, #12]
 8008ab4:	6068      	str	r0, [r5, #4]
 8008ab6:	4640      	mov	r0, r8
 8008ab8:	60a1      	str	r1, [r4, #8]
 8008aba:	6094      	str	r4, [r2, #8]
 8008abc:	60cc      	str	r4, [r1, #12]
 8008abe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008ac2:	f7fe bae9 	b.w	8007098 <__malloc_unlock>
 8008ac6:	07cf      	lsls	r7, r1, #31
 8008ac8:	4418      	add	r0, r3
 8008aca:	d407      	bmi.n	8008adc <_free_r+0x10c>
 8008acc:	f856 3c08 	ldr.w	r3, [r6, #-8]
 8008ad0:	1ae4      	subs	r4, r4, r3
 8008ad2:	4418      	add	r0, r3
 8008ad4:	68a2      	ldr	r2, [r4, #8]
 8008ad6:	68e3      	ldr	r3, [r4, #12]
 8008ad8:	60d3      	str	r3, [r2, #12]
 8008ada:	609a      	str	r2, [r3, #8]
 8008adc:	f240 5280 	movw	r2, #1408	; 0x580
 8008ae0:	f040 0301 	orr.w	r3, r0, #1
 8008ae4:	f2c2 0200 	movt	r2, #8192	; 0x2000
 8008ae8:	6063      	str	r3, [r4, #4]
 8008aea:	60ac      	str	r4, [r5, #8]
 8008aec:	6813      	ldr	r3, [r2, #0]
 8008aee:	4298      	cmp	r0, r3
 8008af0:	d3ce      	bcc.n	8008a90 <_free_r+0xc0>
 8008af2:	f240 53a8 	movw	r3, #1448	; 0x5a8
 8008af6:	4640      	mov	r0, r8
 8008af8:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8008afc:	6819      	ldr	r1, [r3, #0]
 8008afe:	f7ff ff15 	bl	800892c <_malloc_trim_r>
 8008b02:	e7c5      	b.n	8008a90 <_free_r+0xc0>
 8008b04:	616c      	str	r4, [r5, #20]
 8008b06:	f043 0201 	orr.w	r2, r3, #1
 8008b0a:	612c      	str	r4, [r5, #16]
 8008b0c:	60e0      	str	r0, [r4, #12]
 8008b0e:	60a0      	str	r0, [r4, #8]
 8008b10:	6062      	str	r2, [r4, #4]
 8008b12:	50e3      	str	r3, [r4, r3]
 8008b14:	e7bc      	b.n	8008a90 <_free_r+0xc0>
 8008b16:	2a14      	cmp	r2, #20
 8008b18:	bf9c      	itt	ls
 8008b1a:	f102 005b 	addls.w	r0, r2, #91	; 0x5b
 8008b1e:	0041      	lslls	r1, r0, #1
 8008b20:	d9a0      	bls.n	8008a64 <_free_r+0x94>
 8008b22:	2a54      	cmp	r2, #84	; 0x54
 8008b24:	d80c      	bhi.n	8008b40 <_free_r+0x170>
 8008b26:	0b18      	lsrs	r0, r3, #12
 8008b28:	306e      	adds	r0, #110	; 0x6e
 8008b2a:	0041      	lsls	r1, r0, #1
 8008b2c:	e79a      	b.n	8008a64 <_free_r+0x94>
 8008b2e:	2601      	movs	r6, #1
 8008b30:	684d      	ldr	r5, [r1, #4]
 8008b32:	1080      	asrs	r0, r0, #2
 8008b34:	4613      	mov	r3, r2
 8008b36:	fa06 f000 	lsl.w	r0, r6, r0
 8008b3a:	4305      	orrs	r5, r0
 8008b3c:	604d      	str	r5, [r1, #4]
 8008b3e:	e7a3      	b.n	8008a88 <_free_r+0xb8>
 8008b40:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 8008b44:	d803      	bhi.n	8008b4e <_free_r+0x17e>
 8008b46:	0bd8      	lsrs	r0, r3, #15
 8008b48:	3077      	adds	r0, #119	; 0x77
 8008b4a:	0041      	lsls	r1, r0, #1
 8008b4c:	e78a      	b.n	8008a64 <_free_r+0x94>
 8008b4e:	f240 5154 	movw	r1, #1364	; 0x554
 8008b52:	428a      	cmp	r2, r1
 8008b54:	bf95      	itete	ls
 8008b56:	0c98      	lsrls	r0, r3, #18
 8008b58:	21fc      	movhi	r1, #252	; 0xfc
 8008b5a:	307c      	addls	r0, #124	; 0x7c
 8008b5c:	207e      	movhi	r0, #126	; 0x7e
 8008b5e:	bf98      	it	ls
 8008b60:	0041      	lslls	r1, r0, #1
 8008b62:	e77f      	b.n	8008a64 <_free_r+0x94>
 8008b64:	2000017c 	andcs	r0, r0, ip, ror r1

08008b68 <memmove>:
 8008b68:	4288      	cmp	r0, r1
 8008b6a:	b4f0      	push	{r4, r5, r6, r7}
 8008b6c:	d910      	bls.n	8008b90 <memmove+0x28>
 8008b6e:	188c      	adds	r4, r1, r2
 8008b70:	42a0      	cmp	r0, r4
 8008b72:	d20d      	bcs.n	8008b90 <memmove+0x28>
 8008b74:	1885      	adds	r5, r0, r2
 8008b76:	1e53      	subs	r3, r2, #1
 8008b78:	b142      	cbz	r2, 8008b8c <memmove+0x24>
 8008b7a:	4621      	mov	r1, r4
 8008b7c:	462a      	mov	r2, r5
 8008b7e:	f811 4d01 	ldrb.w	r4, [r1, #-1]!
 8008b82:	3b01      	subs	r3, #1
 8008b84:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8008b88:	1c5c      	adds	r4, r3, #1
 8008b8a:	d1f8      	bne.n	8008b7e <memmove+0x16>
 8008b8c:	bcf0      	pop	{r4, r5, r6, r7}
 8008b8e:	4770      	bx	lr
 8008b90:	2a0f      	cmp	r2, #15
 8008b92:	d946      	bls.n	8008c22 <memmove+0xba>
 8008b94:	ea40 0301 	orr.w	r3, r0, r1
 8008b98:	079b      	lsls	r3, r3, #30
 8008b9a:	d146      	bne.n	8008c2a <memmove+0xc2>
 8008b9c:	f1a2 0710 	sub.w	r7, r2, #16
 8008ba0:	460c      	mov	r4, r1
 8008ba2:	4603      	mov	r3, r0
 8008ba4:	093f      	lsrs	r7, r7, #4
 8008ba6:	eb00 1607 	add.w	r6, r0, r7, lsl #4
 8008baa:	3610      	adds	r6, #16
 8008bac:	6825      	ldr	r5, [r4, #0]
 8008bae:	3310      	adds	r3, #16
 8008bb0:	3410      	adds	r4, #16
 8008bb2:	f843 5c10 	str.w	r5, [r3, #-16]
 8008bb6:	f854 5c0c 	ldr.w	r5, [r4, #-12]
 8008bba:	f843 5c0c 	str.w	r5, [r3, #-12]
 8008bbe:	f854 5c08 	ldr.w	r5, [r4, #-8]
 8008bc2:	f843 5c08 	str.w	r5, [r3, #-8]
 8008bc6:	f854 5c04 	ldr.w	r5, [r4, #-4]
 8008bca:	f843 5c04 	str.w	r5, [r3, #-4]
 8008bce:	42b3      	cmp	r3, r6
 8008bd0:	d1ec      	bne.n	8008bac <memmove+0x44>
 8008bd2:	1c7b      	adds	r3, r7, #1
 8008bd4:	f002 0c0f 	and.w	ip, r2, #15
 8008bd8:	f1bc 0f03 	cmp.w	ip, #3
 8008bdc:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8008be0:	4419      	add	r1, r3
 8008be2:	4403      	add	r3, r0
 8008be4:	d923      	bls.n	8008c2e <memmove+0xc6>
 8008be6:	460e      	mov	r6, r1
 8008be8:	461d      	mov	r5, r3
 8008bea:	4664      	mov	r4, ip
 8008bec:	f856 7b04 	ldr.w	r7, [r6], #4
 8008bf0:	3c04      	subs	r4, #4
 8008bf2:	2c03      	cmp	r4, #3
 8008bf4:	f845 7b04 	str.w	r7, [r5], #4
 8008bf8:	d8f8      	bhi.n	8008bec <memmove+0x84>
 8008bfa:	f1ac 0404 	sub.w	r4, ip, #4
 8008bfe:	f002 0203 	and.w	r2, r2, #3
 8008c02:	f024 0403 	bic.w	r4, r4, #3
 8008c06:	3404      	adds	r4, #4
 8008c08:	4423      	add	r3, r4
 8008c0a:	4421      	add	r1, r4
 8008c0c:	2a00      	cmp	r2, #0
 8008c0e:	d0bd      	beq.n	8008b8c <memmove+0x24>
 8008c10:	441a      	add	r2, r3
 8008c12:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008c16:	f803 4b01 	strb.w	r4, [r3], #1
 8008c1a:	4293      	cmp	r3, r2
 8008c1c:	d1f9      	bne.n	8008c12 <memmove+0xaa>
 8008c1e:	bcf0      	pop	{r4, r5, r6, r7}
 8008c20:	4770      	bx	lr
 8008c22:	4603      	mov	r3, r0
 8008c24:	2a00      	cmp	r2, #0
 8008c26:	d1f3      	bne.n	8008c10 <memmove+0xa8>
 8008c28:	e7b0      	b.n	8008b8c <memmove+0x24>
 8008c2a:	4603      	mov	r3, r0
 8008c2c:	e7f0      	b.n	8008c10 <memmove+0xa8>
 8008c2e:	4662      	mov	r2, ip
 8008c30:	2a00      	cmp	r2, #0
 8008c32:	d1ed      	bne.n	8008c10 <memmove+0xa8>
 8008c34:	e7aa      	b.n	8008b8c <memmove+0x24>
 8008c36:	bf00      	nop

08008c38 <memset>:
 8008c38:	0783      	lsls	r3, r0, #30
 8008c3a:	b4f0      	push	{r4, r5, r6, r7}
 8008c3c:	d048      	beq.n	8008cd0 <memset+0x98>
 8008c3e:	1e54      	subs	r4, r2, #1
 8008c40:	2a00      	cmp	r2, #0
 8008c42:	d043      	beq.n	8008ccc <memset+0x94>
 8008c44:	b2cd      	uxtb	r5, r1
 8008c46:	4603      	mov	r3, r0
 8008c48:	e002      	b.n	8008c50 <memset+0x18>
 8008c4a:	2c00      	cmp	r4, #0
 8008c4c:	d03e      	beq.n	8008ccc <memset+0x94>
 8008c4e:	4614      	mov	r4, r2
 8008c50:	f803 5b01 	strb.w	r5, [r3], #1
 8008c54:	f013 0f03 	tst.w	r3, #3
 8008c58:	f104 32ff 	add.w	r2, r4, #4294967295
 8008c5c:	d1f5      	bne.n	8008c4a <memset+0x12>
 8008c5e:	2c03      	cmp	r4, #3
 8008c60:	d92d      	bls.n	8008cbe <memset+0x86>
 8008c62:	b2cd      	uxtb	r5, r1
 8008c64:	2c0f      	cmp	r4, #15
 8008c66:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
 8008c6a:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
 8008c6e:	d918      	bls.n	8008ca2 <memset+0x6a>
 8008c70:	f1a4 0710 	sub.w	r7, r4, #16
 8008c74:	f103 0610 	add.w	r6, r3, #16
 8008c78:	461a      	mov	r2, r3
 8008c7a:	093f      	lsrs	r7, r7, #4
 8008c7c:	eb06 1607 	add.w	r6, r6, r7, lsl #4
 8008c80:	6015      	str	r5, [r2, #0]
 8008c82:	3210      	adds	r2, #16
 8008c84:	f842 5c0c 	str.w	r5, [r2, #-12]
 8008c88:	f842 5c08 	str.w	r5, [r2, #-8]
 8008c8c:	f842 5c04 	str.w	r5, [r2, #-4]
 8008c90:	42b2      	cmp	r2, r6
 8008c92:	d1f5      	bne.n	8008c80 <memset+0x48>
 8008c94:	f004 040f 	and.w	r4, r4, #15
 8008c98:	3701      	adds	r7, #1
 8008c9a:	2c03      	cmp	r4, #3
 8008c9c:	eb03 1307 	add.w	r3, r3, r7, lsl #4
 8008ca0:	d90d      	bls.n	8008cbe <memset+0x86>
 8008ca2:	461e      	mov	r6, r3
 8008ca4:	4622      	mov	r2, r4
 8008ca6:	3a04      	subs	r2, #4
 8008ca8:	f846 5b04 	str.w	r5, [r6], #4
 8008cac:	2a03      	cmp	r2, #3
 8008cae:	d8fa      	bhi.n	8008ca6 <memset+0x6e>
 8008cb0:	1f22      	subs	r2, r4, #4
 8008cb2:	f004 0403 	and.w	r4, r4, #3
 8008cb6:	f022 0203 	bic.w	r2, r2, #3
 8008cba:	3204      	adds	r2, #4
 8008cbc:	4413      	add	r3, r2
 8008cbe:	b12c      	cbz	r4, 8008ccc <memset+0x94>
 8008cc0:	b2c9      	uxtb	r1, r1
 8008cc2:	441c      	add	r4, r3
 8008cc4:	f803 1b01 	strb.w	r1, [r3], #1
 8008cc8:	42a3      	cmp	r3, r4
 8008cca:	d1fb      	bne.n	8008cc4 <memset+0x8c>
 8008ccc:	bcf0      	pop	{r4, r5, r6, r7}
 8008cce:	4770      	bx	lr
 8008cd0:	4614      	mov	r4, r2
 8008cd2:	4603      	mov	r3, r0
 8008cd4:	e7c3      	b.n	8008c5e <memset+0x26>
 8008cd6:	bf00      	nop

08008cd8 <_realloc_r>:
 8008cd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008cdc:	460c      	mov	r4, r1
 8008cde:	b083      	sub	sp, #12
 8008ce0:	4690      	mov	r8, r2
 8008ce2:	4681      	mov	r9, r0
 8008ce4:	2900      	cmp	r1, #0
 8008ce6:	f000 8148 	beq.w	8008f7a <_realloc_r+0x2a2>
 8008cea:	f7fe f9d3 	bl	8007094 <__malloc_lock>
 8008cee:	f108 060b 	add.w	r6, r8, #11
 8008cf2:	2e16      	cmp	r6, #22
 8008cf4:	f854 cc04 	ldr.w	ip, [r4, #-4]
 8008cf8:	bf8d      	iteet	hi
 8008cfa:	f026 0607 	bichi.w	r6, r6, #7
 8008cfe:	2210      	movls	r2, #16
 8008d00:	2300      	movls	r3, #0
 8008d02:	4632      	movhi	r2, r6
 8008d04:	bf88      	it	hi
 8008d06:	0ff3      	lsrhi	r3, r6, #31
 8008d08:	f1a4 0708 	sub.w	r7, r4, #8
 8008d0c:	f02c 0503 	bic.w	r5, ip, #3
 8008d10:	bf98      	it	ls
 8008d12:	4616      	movls	r6, r2
 8008d14:	4546      	cmp	r6, r8
 8008d16:	bf38      	it	cc
 8008d18:	f043 0301 	orrcc.w	r3, r3, #1
 8008d1c:	2b00      	cmp	r3, #0
 8008d1e:	f040 8132 	bne.w	8008f86 <_realloc_r+0x2ae>
 8008d22:	4295      	cmp	r5, r2
 8008d24:	db16      	blt.n	8008d54 <_realloc_r+0x7c>
 8008d26:	46a0      	mov	r8, r4
 8008d28:	4660      	mov	r0, ip
 8008d2a:	1bab      	subs	r3, r5, r6
 8008d2c:	2b0f      	cmp	r3, #15
 8008d2e:	f200 80cc 	bhi.w	8008eca <_realloc_r+0x1f2>
 8008d32:	197b      	adds	r3, r7, r5
 8008d34:	f000 0c01 	and.w	ip, r0, #1
 8008d38:	ea4c 0505 	orr.w	r5, ip, r5
 8008d3c:	607d      	str	r5, [r7, #4]
 8008d3e:	685a      	ldr	r2, [r3, #4]
 8008d40:	f042 0201 	orr.w	r2, r2, #1
 8008d44:	605a      	str	r2, [r3, #4]
 8008d46:	4648      	mov	r0, r9
 8008d48:	f7fe f9a6 	bl	8007098 <__malloc_unlock>
 8008d4c:	4640      	mov	r0, r8
 8008d4e:	b003      	add	sp, #12
 8008d50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008d54:	f240 1a74 	movw	sl, #372	; 0x174
 8008d58:	1979      	adds	r1, r7, r5
 8008d5a:	f2c2 0a00 	movt	sl, #8192	; 0x2000
 8008d5e:	f8da 0008 	ldr.w	r0, [sl, #8]
 8008d62:	4288      	cmp	r0, r1
 8008d64:	f000 8114 	beq.w	8008f90 <_realloc_r+0x2b8>
 8008d68:	f8d1 e004 	ldr.w	lr, [r1, #4]
 8008d6c:	f02e 0b01 	bic.w	fp, lr, #1
 8008d70:	448b      	add	fp, r1
 8008d72:	f8db b004 	ldr.w	fp, [fp, #4]
 8008d76:	f01b 0f01 	tst.w	fp, #1
 8008d7a:	bf1c      	itt	ne
 8008d7c:	469e      	movne	lr, r3
 8008d7e:	4671      	movne	r1, lr
 8008d80:	d056      	beq.n	8008e30 <_realloc_r+0x158>
 8008d82:	f01c 0f01 	tst.w	ip, #1
 8008d86:	f040 80b3 	bne.w	8008ef0 <_realloc_r+0x218>
 8008d8a:	f854 3c08 	ldr.w	r3, [r4, #-8]
 8008d8e:	ebc3 0b07 	rsb	fp, r3, r7
 8008d92:	f8db 3004 	ldr.w	r3, [fp, #4]
 8008d96:	f023 0303 	bic.w	r3, r3, #3
 8008d9a:	442b      	add	r3, r5
 8008d9c:	2900      	cmp	r1, #0
 8008d9e:	d055      	beq.n	8008e4c <_realloc_r+0x174>
 8008da0:	4281      	cmp	r1, r0
 8008da2:	f000 8121 	beq.w	8008fe8 <_realloc_r+0x310>
 8008da6:	449e      	add	lr, r3
 8008da8:	4596      	cmp	lr, r2
 8008daa:	db4f      	blt.n	8008e4c <_realloc_r+0x174>
 8008dac:	68cb      	ldr	r3, [r1, #12]
 8008dae:	46d8      	mov	r8, fp
 8008db0:	6889      	ldr	r1, [r1, #8]
 8008db2:	1f2a      	subs	r2, r5, #4
 8008db4:	2a24      	cmp	r2, #36	; 0x24
 8008db6:	60cb      	str	r3, [r1, #12]
 8008db8:	6099      	str	r1, [r3, #8]
 8008dba:	f8db 300c 	ldr.w	r3, [fp, #12]
 8008dbe:	f858 1f08 	ldr.w	r1, [r8, #8]!
 8008dc2:	60cb      	str	r3, [r1, #12]
 8008dc4:	6099      	str	r1, [r3, #8]
 8008dc6:	f200 816a 	bhi.w	800909e <_realloc_r+0x3c6>
 8008dca:	2a13      	cmp	r2, #19
 8008dcc:	bf98      	it	ls
 8008dce:	4642      	movls	r2, r8
 8008dd0:	d923      	bls.n	8008e1a <_realloc_r+0x142>
 8008dd2:	6823      	ldr	r3, [r4, #0]
 8008dd4:	2a1b      	cmp	r2, #27
 8008dd6:	bf98      	it	ls
 8008dd8:	f10b 0210 	addls.w	r2, fp, #16
 8008ddc:	f8cb 3008 	str.w	r3, [fp, #8]
 8008de0:	6863      	ldr	r3, [r4, #4]
 8008de2:	bf98      	it	ls
 8008de4:	3408      	addls	r4, #8
 8008de6:	f8cb 300c 	str.w	r3, [fp, #12]
 8008dea:	d916      	bls.n	8008e1a <_realloc_r+0x142>
 8008dec:	68a3      	ldr	r3, [r4, #8]
 8008dee:	2a24      	cmp	r2, #36	; 0x24
 8008df0:	bf14      	ite	ne
 8008df2:	f10b 0218 	addne.w	r2, fp, #24
 8008df6:	f10b 0220 	addeq.w	r2, fp, #32
 8008dfa:	f8cb 3010 	str.w	r3, [fp, #16]
 8008dfe:	68e3      	ldr	r3, [r4, #12]
 8008e00:	bf18      	it	ne
 8008e02:	3410      	addne	r4, #16
 8008e04:	f8cb 3014 	str.w	r3, [fp, #20]
 8008e08:	bf01      	itttt	eq
 8008e0a:	6923      	ldreq	r3, [r4, #16]
 8008e0c:	f8cb 3018 	streq.w	r3, [fp, #24]
 8008e10:	6963      	ldreq	r3, [r4, #20]
 8008e12:	3418      	addeq	r4, #24
 8008e14:	bf08      	it	eq
 8008e16:	f8cb 301c 	streq.w	r3, [fp, #28]
 8008e1a:	6823      	ldr	r3, [r4, #0]
 8008e1c:	4675      	mov	r5, lr
 8008e1e:	465f      	mov	r7, fp
 8008e20:	6013      	str	r3, [r2, #0]
 8008e22:	6863      	ldr	r3, [r4, #4]
 8008e24:	6053      	str	r3, [r2, #4]
 8008e26:	68a3      	ldr	r3, [r4, #8]
 8008e28:	6093      	str	r3, [r2, #8]
 8008e2a:	f8db 0004 	ldr.w	r0, [fp, #4]
 8008e2e:	e77c      	b.n	8008d2a <_realloc_r+0x52>
 8008e30:	f02e 0e03 	bic.w	lr, lr, #3
 8008e34:	eb0e 0305 	add.w	r3, lr, r5
 8008e38:	4293      	cmp	r3, r2
 8008e3a:	dba2      	blt.n	8008d82 <_realloc_r+0xaa>
 8008e3c:	68ca      	ldr	r2, [r1, #12]
 8008e3e:	46a0      	mov	r8, r4
 8008e40:	6889      	ldr	r1, [r1, #8]
 8008e42:	4660      	mov	r0, ip
 8008e44:	461d      	mov	r5, r3
 8008e46:	60ca      	str	r2, [r1, #12]
 8008e48:	6091      	str	r1, [r2, #8]
 8008e4a:	e76e      	b.n	8008d2a <_realloc_r+0x52>
 8008e4c:	4293      	cmp	r3, r2
 8008e4e:	db4f      	blt.n	8008ef0 <_realloc_r+0x218>
 8008e50:	46d8      	mov	r8, fp
 8008e52:	f8db 100c 	ldr.w	r1, [fp, #12]
 8008e56:	1f2a      	subs	r2, r5, #4
 8008e58:	f858 0f08 	ldr.w	r0, [r8, #8]!
 8008e5c:	2a24      	cmp	r2, #36	; 0x24
 8008e5e:	60c1      	str	r1, [r0, #12]
 8008e60:	6088      	str	r0, [r1, #8]
 8008e62:	f200 80b4 	bhi.w	8008fce <_realloc_r+0x2f6>
 8008e66:	2a13      	cmp	r2, #19
 8008e68:	bf98      	it	ls
 8008e6a:	4641      	movls	r1, r8
 8008e6c:	d922      	bls.n	8008eb4 <_realloc_r+0x1dc>
 8008e6e:	6821      	ldr	r1, [r4, #0]
 8008e70:	2a1b      	cmp	r2, #27
 8008e72:	f8cb 1008 	str.w	r1, [fp, #8]
 8008e76:	6861      	ldr	r1, [r4, #4]
 8008e78:	bf98      	it	ls
 8008e7a:	3408      	addls	r4, #8
 8008e7c:	f8cb 100c 	str.w	r1, [fp, #12]
 8008e80:	bf98      	it	ls
 8008e82:	f10b 0110 	addls.w	r1, fp, #16
 8008e86:	d915      	bls.n	8008eb4 <_realloc_r+0x1dc>
 8008e88:	68a1      	ldr	r1, [r4, #8]
 8008e8a:	2a24      	cmp	r2, #36	; 0x24
 8008e8c:	f8cb 1010 	str.w	r1, [fp, #16]
 8008e90:	68e1      	ldr	r1, [r4, #12]
 8008e92:	bf18      	it	ne
 8008e94:	3410      	addne	r4, #16
 8008e96:	f8cb 1014 	str.w	r1, [fp, #20]
 8008e9a:	bf11      	iteee	ne
 8008e9c:	f10b 0118 	addne.w	r1, fp, #24
 8008ea0:	6922      	ldreq	r2, [r4, #16]
 8008ea2:	f10b 0120 	addeq.w	r1, fp, #32
 8008ea6:	f8cb 2018 	streq.w	r2, [fp, #24]
 8008eaa:	bf02      	ittt	eq
 8008eac:	6962      	ldreq	r2, [r4, #20]
 8008eae:	3418      	addeq	r4, #24
 8008eb0:	f8cb 201c 	streq.w	r2, [fp, #28]
 8008eb4:	6822      	ldr	r2, [r4, #0]
 8008eb6:	461d      	mov	r5, r3
 8008eb8:	465f      	mov	r7, fp
 8008eba:	600a      	str	r2, [r1, #0]
 8008ebc:	6863      	ldr	r3, [r4, #4]
 8008ebe:	604b      	str	r3, [r1, #4]
 8008ec0:	68a3      	ldr	r3, [r4, #8]
 8008ec2:	608b      	str	r3, [r1, #8]
 8008ec4:	f8db 0004 	ldr.w	r0, [fp, #4]
 8008ec8:	e72f      	b.n	8008d2a <_realloc_r+0x52>
 8008eca:	19b9      	adds	r1, r7, r6
 8008ecc:	f000 0c01 	and.w	ip, r0, #1
 8008ed0:	18ca      	adds	r2, r1, r3
 8008ed2:	ea4c 0606 	orr.w	r6, ip, r6
 8008ed6:	f043 0301 	orr.w	r3, r3, #1
 8008eda:	607e      	str	r6, [r7, #4]
 8008edc:	604b      	str	r3, [r1, #4]
 8008ede:	4648      	mov	r0, r9
 8008ee0:	6853      	ldr	r3, [r2, #4]
 8008ee2:	3108      	adds	r1, #8
 8008ee4:	f043 0301 	orr.w	r3, r3, #1
 8008ee8:	6053      	str	r3, [r2, #4]
 8008eea:	f7ff fd71 	bl	80089d0 <_free_r>
 8008eee:	e72a      	b.n	8008d46 <_realloc_r+0x6e>
 8008ef0:	4641      	mov	r1, r8
 8008ef2:	4648      	mov	r0, r9
 8008ef4:	f7fd fd7a 	bl	80069ec <_malloc_r>
 8008ef8:	4680      	mov	r8, r0
 8008efa:	2800      	cmp	r0, #0
 8008efc:	f43f af23 	beq.w	8008d46 <_realloc_r+0x6e>
 8008f00:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8008f04:	f1a0 0108 	sub.w	r1, r0, #8
 8008f08:	f023 0201 	bic.w	r2, r3, #1
 8008f0c:	443a      	add	r2, r7
 8008f0e:	4291      	cmp	r1, r2
 8008f10:	f000 80bd 	beq.w	800908e <_realloc_r+0x3b6>
 8008f14:	1f2a      	subs	r2, r5, #4
 8008f16:	2a24      	cmp	r2, #36	; 0x24
 8008f18:	d862      	bhi.n	8008fe0 <_realloc_r+0x308>
 8008f1a:	2a13      	cmp	r2, #19
 8008f1c:	bf9c      	itt	ls
 8008f1e:	4603      	movls	r3, r0
 8008f20:	4622      	movls	r2, r4
 8008f22:	d91f      	bls.n	8008f64 <_realloc_r+0x28c>
 8008f24:	6823      	ldr	r3, [r4, #0]
 8008f26:	2a1b      	cmp	r2, #27
 8008f28:	bf98      	it	ls
 8008f2a:	f104 0208 	addls.w	r2, r4, #8
 8008f2e:	6003      	str	r3, [r0, #0]
 8008f30:	6863      	ldr	r3, [r4, #4]
 8008f32:	6043      	str	r3, [r0, #4]
 8008f34:	bf98      	it	ls
 8008f36:	f100 0308 	addls.w	r3, r0, #8
 8008f3a:	d913      	bls.n	8008f64 <_realloc_r+0x28c>
 8008f3c:	68a3      	ldr	r3, [r4, #8]
 8008f3e:	2a24      	cmp	r2, #36	; 0x24
 8008f40:	bf14      	ite	ne
 8008f42:	f104 0210 	addne.w	r2, r4, #16
 8008f46:	f104 0218 	addeq.w	r2, r4, #24
 8008f4a:	6083      	str	r3, [r0, #8]
 8008f4c:	68e3      	ldr	r3, [r4, #12]
 8008f4e:	60c3      	str	r3, [r0, #12]
 8008f50:	bf11      	iteee	ne
 8008f52:	f100 0310 	addne.w	r3, r0, #16
 8008f56:	6921      	ldreq	r1, [r4, #16]
 8008f58:	f100 0318 	addeq.w	r3, r0, #24
 8008f5c:	6101      	streq	r1, [r0, #16]
 8008f5e:	bf04      	itt	eq
 8008f60:	6961      	ldreq	r1, [r4, #20]
 8008f62:	6141      	streq	r1, [r0, #20]
 8008f64:	6811      	ldr	r1, [r2, #0]
 8008f66:	6019      	str	r1, [r3, #0]
 8008f68:	6851      	ldr	r1, [r2, #4]
 8008f6a:	6059      	str	r1, [r3, #4]
 8008f6c:	6892      	ldr	r2, [r2, #8]
 8008f6e:	609a      	str	r2, [r3, #8]
 8008f70:	4621      	mov	r1, r4
 8008f72:	4648      	mov	r0, r9
 8008f74:	f7ff fd2c 	bl	80089d0 <_free_r>
 8008f78:	e6e5      	b.n	8008d46 <_realloc_r+0x6e>
 8008f7a:	4611      	mov	r1, r2
 8008f7c:	b003      	add	sp, #12
 8008f7e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008f82:	f7fd bd33 	b.w	80069ec <_malloc_r>
 8008f86:	230c      	movs	r3, #12
 8008f88:	2000      	movs	r0, #0
 8008f8a:	f8c9 3000 	str.w	r3, [r9]
 8008f8e:	e6de      	b.n	8008d4e <_realloc_r+0x76>
 8008f90:	6843      	ldr	r3, [r0, #4]
 8008f92:	f106 0110 	add.w	r1, r6, #16
 8008f96:	f023 0e03 	bic.w	lr, r3, #3
 8008f9a:	eb0e 0305 	add.w	r3, lr, r5
 8008f9e:	428b      	cmp	r3, r1
 8008fa0:	bfb8      	it	lt
 8008fa2:	4601      	movlt	r1, r0
 8008fa4:	f6ff aeed 	blt.w	8008d82 <_realloc_r+0xaa>
 8008fa8:	4437      	add	r7, r6
 8008faa:	1b9b      	subs	r3, r3, r6
 8008fac:	f8ca 7008 	str.w	r7, [sl, #8]
 8008fb0:	f043 0301 	orr.w	r3, r3, #1
 8008fb4:	607b      	str	r3, [r7, #4]
 8008fb6:	4648      	mov	r0, r9
 8008fb8:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8008fbc:	f003 0301 	and.w	r3, r3, #1
 8008fc0:	431e      	orrs	r6, r3
 8008fc2:	f844 6c04 	str.w	r6, [r4, #-4]
 8008fc6:	f7fe f867 	bl	8007098 <__malloc_unlock>
 8008fca:	4620      	mov	r0, r4
 8008fcc:	e6bf      	b.n	8008d4e <_realloc_r+0x76>
 8008fce:	4621      	mov	r1, r4
 8008fd0:	4640      	mov	r0, r8
 8008fd2:	461d      	mov	r5, r3
 8008fd4:	465f      	mov	r7, fp
 8008fd6:	f7ff fdc7 	bl	8008b68 <memmove>
 8008fda:	f8db 0004 	ldr.w	r0, [fp, #4]
 8008fde:	e6a4      	b.n	8008d2a <_realloc_r+0x52>
 8008fe0:	4621      	mov	r1, r4
 8008fe2:	f7ff fdc1 	bl	8008b68 <memmove>
 8008fe6:	e7c3      	b.n	8008f70 <_realloc_r+0x298>
 8008fe8:	f106 0110 	add.w	r1, r6, #16
 8008fec:	eb0e 0c03 	add.w	ip, lr, r3
 8008ff0:	458c      	cmp	ip, r1
 8008ff2:	f6ff af2b 	blt.w	8008e4c <_realloc_r+0x174>
 8008ff6:	46d8      	mov	r8, fp
 8008ff8:	f8db 300c 	ldr.w	r3, [fp, #12]
 8008ffc:	1f2a      	subs	r2, r5, #4
 8008ffe:	f858 1f08 	ldr.w	r1, [r8, #8]!
 8009002:	2a24      	cmp	r2, #36	; 0x24
 8009004:	60cb      	str	r3, [r1, #12]
 8009006:	6099      	str	r1, [r3, #8]
 8009008:	d852      	bhi.n	80090b0 <_realloc_r+0x3d8>
 800900a:	2a13      	cmp	r2, #19
 800900c:	bf98      	it	ls
 800900e:	4643      	movls	r3, r8
 8009010:	d922      	bls.n	8009058 <_realloc_r+0x380>
 8009012:	6823      	ldr	r3, [r4, #0]
 8009014:	2a1b      	cmp	r2, #27
 8009016:	f8cb 3008 	str.w	r3, [fp, #8]
 800901a:	6863      	ldr	r3, [r4, #4]
 800901c:	bf98      	it	ls
 800901e:	3408      	addls	r4, #8
 8009020:	f8cb 300c 	str.w	r3, [fp, #12]
 8009024:	bf98      	it	ls
 8009026:	f10b 0310 	addls.w	r3, fp, #16
 800902a:	d915      	bls.n	8009058 <_realloc_r+0x380>
 800902c:	68a3      	ldr	r3, [r4, #8]
 800902e:	2a24      	cmp	r2, #36	; 0x24
 8009030:	f8cb 3010 	str.w	r3, [fp, #16]
 8009034:	68e3      	ldr	r3, [r4, #12]
 8009036:	bf18      	it	ne
 8009038:	3410      	addne	r4, #16
 800903a:	f8cb 3014 	str.w	r3, [fp, #20]
 800903e:	bf11      	iteee	ne
 8009040:	f10b 0318 	addne.w	r3, fp, #24
 8009044:	6922      	ldreq	r2, [r4, #16]
 8009046:	f10b 0320 	addeq.w	r3, fp, #32
 800904a:	f8cb 2018 	streq.w	r2, [fp, #24]
 800904e:	bf02      	ittt	eq
 8009050:	6962      	ldreq	r2, [r4, #20]
 8009052:	3418      	addeq	r4, #24
 8009054:	f8cb 201c 	streq.w	r2, [fp, #28]
 8009058:	6822      	ldr	r2, [r4, #0]
 800905a:	601a      	str	r2, [r3, #0]
 800905c:	6862      	ldr	r2, [r4, #4]
 800905e:	605a      	str	r2, [r3, #4]
 8009060:	68a2      	ldr	r2, [r4, #8]
 8009062:	609a      	str	r2, [r3, #8]
 8009064:	eb0b 0306 	add.w	r3, fp, r6
 8009068:	ebc6 020c 	rsb	r2, r6, ip
 800906c:	f8ca 3008 	str.w	r3, [sl, #8]
 8009070:	f042 0201 	orr.w	r2, r2, #1
 8009074:	605a      	str	r2, [r3, #4]
 8009076:	4648      	mov	r0, r9
 8009078:	f8db 3004 	ldr.w	r3, [fp, #4]
 800907c:	f003 0301 	and.w	r3, r3, #1
 8009080:	431e      	orrs	r6, r3
 8009082:	f8cb 6004 	str.w	r6, [fp, #4]
 8009086:	f7fe f807 	bl	8007098 <__malloc_unlock>
 800908a:	4640      	mov	r0, r8
 800908c:	e65f      	b.n	8008d4e <_realloc_r+0x76>
 800908e:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8009092:	4618      	mov	r0, r3
 8009094:	46a0      	mov	r8, r4
 8009096:	f022 0303 	bic.w	r3, r2, #3
 800909a:	441d      	add	r5, r3
 800909c:	e645      	b.n	8008d2a <_realloc_r+0x52>
 800909e:	4621      	mov	r1, r4
 80090a0:	4640      	mov	r0, r8
 80090a2:	4675      	mov	r5, lr
 80090a4:	465f      	mov	r7, fp
 80090a6:	f7ff fd5f 	bl	8008b68 <memmove>
 80090aa:	f8db 0004 	ldr.w	r0, [fp, #4]
 80090ae:	e63c      	b.n	8008d2a <_realloc_r+0x52>
 80090b0:	4621      	mov	r1, r4
 80090b2:	4640      	mov	r0, r8
 80090b4:	f8cd c004 	str.w	ip, [sp, #4]
 80090b8:	f7ff fd56 	bl	8008b68 <memmove>
 80090bc:	f8dd c004 	ldr.w	ip, [sp, #4]
 80090c0:	e7d0      	b.n	8009064 <_realloc_r+0x38c>
 80090c2:	bf00      	nop

080090c4 <cleanup_glue>:
 80090c4:	b538      	push	{r3, r4, r5, lr}
 80090c6:	460c      	mov	r4, r1
 80090c8:	6809      	ldr	r1, [r1, #0]
 80090ca:	4605      	mov	r5, r0
 80090cc:	b109      	cbz	r1, 80090d2 <cleanup_glue+0xe>
 80090ce:	f7ff fff9 	bl	80090c4 <cleanup_glue>
 80090d2:	4628      	mov	r0, r5
 80090d4:	4621      	mov	r1, r4
 80090d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80090da:	f7ff bc79 	b.w	80089d0 <_free_r>
 80090de:	bf00      	nop

080090e0 <_reclaim_reent>:
 80090e0:	f240 0304 	movw	r3, #4
 80090e4:	f2c2 0300 	movt	r3, #8192	; 0x2000
 80090e8:	b570      	push	{r4, r5, r6, lr}
 80090ea:	4605      	mov	r5, r0
 80090ec:	681b      	ldr	r3, [r3, #0]
 80090ee:	4298      	cmp	r0, r3
 80090f0:	d054      	beq.n	800919c <_reclaim_reent+0xbc>
 80090f2:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80090f4:	b1f3      	cbz	r3, 8009134 <_reclaim_reent+0x54>
 80090f6:	68da      	ldr	r2, [r3, #12]
 80090f8:	b1ba      	cbz	r2, 800912a <_reclaim_reent+0x4a>
 80090fa:	2300      	movs	r3, #0
 80090fc:	461e      	mov	r6, r3
 80090fe:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8009102:	b909      	cbnz	r1, 8009108 <_reclaim_reent+0x28>
 8009104:	e008      	b.n	8009118 <_reclaim_reent+0x38>
 8009106:	4621      	mov	r1, r4
 8009108:	680c      	ldr	r4, [r1, #0]
 800910a:	4628      	mov	r0, r5
 800910c:	f7ff fc60 	bl	80089d0 <_free_r>
 8009110:	2c00      	cmp	r4, #0
 8009112:	d1f8      	bne.n	8009106 <_reclaim_reent+0x26>
 8009114:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8009116:	68da      	ldr	r2, [r3, #12]
 8009118:	3601      	adds	r6, #1
 800911a:	2e20      	cmp	r6, #32
 800911c:	4633      	mov	r3, r6
 800911e:	d1ee      	bne.n	80090fe <_reclaim_reent+0x1e>
 8009120:	4611      	mov	r1, r2
 8009122:	4628      	mov	r0, r5
 8009124:	f7ff fc54 	bl	80089d0 <_free_r>
 8009128:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800912a:	6819      	ldr	r1, [r3, #0]
 800912c:	b111      	cbz	r1, 8009134 <_reclaim_reent+0x54>
 800912e:	4628      	mov	r0, r5
 8009130:	f7ff fc4e 	bl	80089d0 <_free_r>
 8009134:	6969      	ldr	r1, [r5, #20]
 8009136:	b111      	cbz	r1, 800913e <_reclaim_reent+0x5e>
 8009138:	4628      	mov	r0, r5
 800913a:	f7ff fc49 	bl	80089d0 <_free_r>
 800913e:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8009140:	b111      	cbz	r1, 8009148 <_reclaim_reent+0x68>
 8009142:	4628      	mov	r0, r5
 8009144:	f7ff fc44 	bl	80089d0 <_free_r>
 8009148:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 800914a:	b111      	cbz	r1, 8009152 <_reclaim_reent+0x72>
 800914c:	4628      	mov	r0, r5
 800914e:	f7ff fc3f 	bl	80089d0 <_free_r>
 8009152:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 8009154:	b111      	cbz	r1, 800915c <_reclaim_reent+0x7c>
 8009156:	4628      	mov	r0, r5
 8009158:	f7ff fc3a 	bl	80089d0 <_free_r>
 800915c:	6c29      	ldr	r1, [r5, #64]	; 0x40
 800915e:	b111      	cbz	r1, 8009166 <_reclaim_reent+0x86>
 8009160:	4628      	mov	r0, r5
 8009162:	f7ff fc35 	bl	80089d0 <_free_r>
 8009166:	f8d5 10ec 	ldr.w	r1, [r5, #236]	; 0xec
 800916a:	b111      	cbz	r1, 8009172 <_reclaim_reent+0x92>
 800916c:	4628      	mov	r0, r5
 800916e:	f7ff fc2f 	bl	80089d0 <_free_r>
 8009172:	f8d5 10e8 	ldr.w	r1, [r5, #232]	; 0xe8
 8009176:	b111      	cbz	r1, 800917e <_reclaim_reent+0x9e>
 8009178:	4628      	mov	r0, r5
 800917a:	f7ff fc29 	bl	80089d0 <_free_r>
 800917e:	6cab      	ldr	r3, [r5, #72]	; 0x48
 8009180:	b12b      	cbz	r3, 800918e <_reclaim_reent+0xae>
 8009182:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
 8009186:	b111      	cbz	r1, 800918e <_reclaim_reent+0xae>
 8009188:	4628      	mov	r0, r5
 800918a:	f7ff fc21 	bl	80089d0 <_free_r>
 800918e:	6b69      	ldr	r1, [r5, #52]	; 0x34
 8009190:	b111      	cbz	r1, 8009198 <_reclaim_reent+0xb8>
 8009192:	4628      	mov	r0, r5
 8009194:	f7ff fc1c 	bl	80089d0 <_free_r>
 8009198:	69ab      	ldr	r3, [r5, #24]
 800919a:	b903      	cbnz	r3, 800919e <_reclaim_reent+0xbe>
 800919c:	bd70      	pop	{r4, r5, r6, pc}
 800919e:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80091a0:	4628      	mov	r0, r5
 80091a2:	4798      	blx	r3
 80091a4:	f8d5 10d8 	ldr.w	r1, [r5, #216]	; 0xd8
 80091a8:	2900      	cmp	r1, #0
 80091aa:	d0f7      	beq.n	800919c <_reclaim_reent+0xbc>
 80091ac:	4628      	mov	r0, r5
 80091ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80091b2:	f7ff bf87 	b.w	80090c4 <cleanup_glue>
 80091b6:	bf00      	nop

080091b8 <__aeabi_uidiv>:
 80091b8:	1e4a      	subs	r2, r1, #1
 80091ba:	bf08      	it	eq
 80091bc:	4770      	bxeq	lr
 80091be:	f0c0 8124 	bcc.w	800940a <__aeabi_uidiv+0x252>
 80091c2:	4288      	cmp	r0, r1
 80091c4:	f240 8116 	bls.w	80093f4 <__aeabi_uidiv+0x23c>
 80091c8:	4211      	tst	r1, r2
 80091ca:	f000 8117 	beq.w	80093fc <__aeabi_uidiv+0x244>
 80091ce:	fab0 f380 	clz	r3, r0
 80091d2:	fab1 f281 	clz	r2, r1
 80091d6:	eba2 0303 	sub.w	r3, r2, r3
 80091da:	f1c3 031f 	rsb	r3, r3, #31
 80091de:	a204      	add	r2, pc, #16	; (adr r2, 80091f0 <__aeabi_uidiv+0x38>)
 80091e0:	eb02 1303 	add.w	r3, r2, r3, lsl #4
 80091e4:	f04f 0200 	mov.w	r2, #0
 80091e8:	469f      	mov	pc, r3
 80091ea:	bf00      	nop
 80091ec:	f3af 8000 	nop.w
 80091f0:	ebb0 7fc1 	cmp.w	r0, r1, lsl #31
 80091f4:	bf00      	nop
 80091f6:	eb42 0202 	adc.w	r2, r2, r2
 80091fa:	bf28      	it	cs
 80091fc:	eba0 70c1 	subcs.w	r0, r0, r1, lsl #31
 8009200:	ebb0 7f81 	cmp.w	r0, r1, lsl #30
 8009204:	bf00      	nop
 8009206:	eb42 0202 	adc.w	r2, r2, r2
 800920a:	bf28      	it	cs
 800920c:	eba0 7081 	subcs.w	r0, r0, r1, lsl #30
 8009210:	ebb0 7f41 	cmp.w	r0, r1, lsl #29
 8009214:	bf00      	nop
 8009216:	eb42 0202 	adc.w	r2, r2, r2
 800921a:	bf28      	it	cs
 800921c:	eba0 7041 	subcs.w	r0, r0, r1, lsl #29
 8009220:	ebb0 7f01 	cmp.w	r0, r1, lsl #28
 8009224:	bf00      	nop
 8009226:	eb42 0202 	adc.w	r2, r2, r2
 800922a:	bf28      	it	cs
 800922c:	eba0 7001 	subcs.w	r0, r0, r1, lsl #28
 8009230:	ebb0 6fc1 	cmp.w	r0, r1, lsl #27
 8009234:	bf00      	nop
 8009236:	eb42 0202 	adc.w	r2, r2, r2
 800923a:	bf28      	it	cs
 800923c:	eba0 60c1 	subcs.w	r0, r0, r1, lsl #27
 8009240:	ebb0 6f81 	cmp.w	r0, r1, lsl #26
 8009244:	bf00      	nop
 8009246:	eb42 0202 	adc.w	r2, r2, r2
 800924a:	bf28      	it	cs
 800924c:	eba0 6081 	subcs.w	r0, r0, r1, lsl #26
 8009250:	ebb0 6f41 	cmp.w	r0, r1, lsl #25
 8009254:	bf00      	nop
 8009256:	eb42 0202 	adc.w	r2, r2, r2
 800925a:	bf28      	it	cs
 800925c:	eba0 6041 	subcs.w	r0, r0, r1, lsl #25
 8009260:	ebb0 6f01 	cmp.w	r0, r1, lsl #24
 8009264:	bf00      	nop
 8009266:	eb42 0202 	adc.w	r2, r2, r2
 800926a:	bf28      	it	cs
 800926c:	eba0 6001 	subcs.w	r0, r0, r1, lsl #24
 8009270:	ebb0 5fc1 	cmp.w	r0, r1, lsl #23
 8009274:	bf00      	nop
 8009276:	eb42 0202 	adc.w	r2, r2, r2
 800927a:	bf28      	it	cs
 800927c:	eba0 50c1 	subcs.w	r0, r0, r1, lsl #23
 8009280:	ebb0 5f81 	cmp.w	r0, r1, lsl #22
 8009284:	bf00      	nop
 8009286:	eb42 0202 	adc.w	r2, r2, r2
 800928a:	bf28      	it	cs
 800928c:	eba0 5081 	subcs.w	r0, r0, r1, lsl #22
 8009290:	ebb0 5f41 	cmp.w	r0, r1, lsl #21
 8009294:	bf00      	nop
 8009296:	eb42 0202 	adc.w	r2, r2, r2
 800929a:	bf28      	it	cs
 800929c:	eba0 5041 	subcs.w	r0, r0, r1, lsl #21
 80092a0:	ebb0 5f01 	cmp.w	r0, r1, lsl #20
 80092a4:	bf00      	nop
 80092a6:	eb42 0202 	adc.w	r2, r2, r2
 80092aa:	bf28      	it	cs
 80092ac:	eba0 5001 	subcs.w	r0, r0, r1, lsl #20
 80092b0:	ebb0 4fc1 	cmp.w	r0, r1, lsl #19
 80092b4:	bf00      	nop
 80092b6:	eb42 0202 	adc.w	r2, r2, r2
 80092ba:	bf28      	it	cs
 80092bc:	eba0 40c1 	subcs.w	r0, r0, r1, lsl #19
 80092c0:	ebb0 4f81 	cmp.w	r0, r1, lsl #18
 80092c4:	bf00      	nop
 80092c6:	eb42 0202 	adc.w	r2, r2, r2
 80092ca:	bf28      	it	cs
 80092cc:	eba0 4081 	subcs.w	r0, r0, r1, lsl #18
 80092d0:	ebb0 4f41 	cmp.w	r0, r1, lsl #17
 80092d4:	bf00      	nop
 80092d6:	eb42 0202 	adc.w	r2, r2, r2
 80092da:	bf28      	it	cs
 80092dc:	eba0 4041 	subcs.w	r0, r0, r1, lsl #17
 80092e0:	ebb0 4f01 	cmp.w	r0, r1, lsl #16
 80092e4:	bf00      	nop
 80092e6:	eb42 0202 	adc.w	r2, r2, r2
 80092ea:	bf28      	it	cs
 80092ec:	eba0 4001 	subcs.w	r0, r0, r1, lsl #16
 80092f0:	ebb0 3fc1 	cmp.w	r0, r1, lsl #15
 80092f4:	bf00      	nop
 80092f6:	eb42 0202 	adc.w	r2, r2, r2
 80092fa:	bf28      	it	cs
 80092fc:	eba0 30c1 	subcs.w	r0, r0, r1, lsl #15
 8009300:	ebb0 3f81 	cmp.w	r0, r1, lsl #14
 8009304:	bf00      	nop
 8009306:	eb42 0202 	adc.w	r2, r2, r2
 800930a:	bf28      	it	cs
 800930c:	eba0 3081 	subcs.w	r0, r0, r1, lsl #14
 8009310:	ebb0 3f41 	cmp.w	r0, r1, lsl #13
 8009314:	bf00      	nop
 8009316:	eb42 0202 	adc.w	r2, r2, r2
 800931a:	bf28      	it	cs
 800931c:	eba0 3041 	subcs.w	r0, r0, r1, lsl #13
 8009320:	ebb0 3f01 	cmp.w	r0, r1, lsl #12
 8009324:	bf00      	nop
 8009326:	eb42 0202 	adc.w	r2, r2, r2
 800932a:	bf28      	it	cs
 800932c:	eba0 3001 	subcs.w	r0, r0, r1, lsl #12
 8009330:	ebb0 2fc1 	cmp.w	r0, r1, lsl #11
 8009334:	bf00      	nop
 8009336:	eb42 0202 	adc.w	r2, r2, r2
 800933a:	bf28      	it	cs
 800933c:	eba0 20c1 	subcs.w	r0, r0, r1, lsl #11
 8009340:	ebb0 2f81 	cmp.w	r0, r1, lsl #10
 8009344:	bf00      	nop
 8009346:	eb42 0202 	adc.w	r2, r2, r2
 800934a:	bf28      	it	cs
 800934c:	eba0 2081 	subcs.w	r0, r0, r1, lsl #10
 8009350:	ebb0 2f41 	cmp.w	r0, r1, lsl #9
 8009354:	bf00      	nop
 8009356:	eb42 0202 	adc.w	r2, r2, r2
 800935a:	bf28      	it	cs
 800935c:	eba0 2041 	subcs.w	r0, r0, r1, lsl #9
 8009360:	ebb0 2f01 	cmp.w	r0, r1, lsl #8
 8009364:	bf00      	nop
 8009366:	eb42 0202 	adc.w	r2, r2, r2
 800936a:	bf28      	it	cs
 800936c:	eba0 2001 	subcs.w	r0, r0, r1, lsl #8
 8009370:	ebb0 1fc1 	cmp.w	r0, r1, lsl #7
 8009374:	bf00      	nop
 8009376:	eb42 0202 	adc.w	r2, r2, r2
 800937a:	bf28      	it	cs
 800937c:	eba0 10c1 	subcs.w	r0, r0, r1, lsl #7
 8009380:	ebb0 1f81 	cmp.w	r0, r1, lsl #6
 8009384:	bf00      	nop
 8009386:	eb42 0202 	adc.w	r2, r2, r2
 800938a:	bf28      	it	cs
 800938c:	eba0 1081 	subcs.w	r0, r0, r1, lsl #6
 8009390:	ebb0 1f41 	cmp.w	r0, r1, lsl #5
 8009394:	bf00      	nop
 8009396:	eb42 0202 	adc.w	r2, r2, r2
 800939a:	bf28      	it	cs
 800939c:	eba0 1041 	subcs.w	r0, r0, r1, lsl #5
 80093a0:	ebb0 1f01 	cmp.w	r0, r1, lsl #4
 80093a4:	bf00      	nop
 80093a6:	eb42 0202 	adc.w	r2, r2, r2
 80093aa:	bf28      	it	cs
 80093ac:	eba0 1001 	subcs.w	r0, r0, r1, lsl #4
 80093b0:	ebb0 0fc1 	cmp.w	r0, r1, lsl #3
 80093b4:	bf00      	nop
 80093b6:	eb42 0202 	adc.w	r2, r2, r2
 80093ba:	bf28      	it	cs
 80093bc:	eba0 00c1 	subcs.w	r0, r0, r1, lsl #3
 80093c0:	ebb0 0f81 	cmp.w	r0, r1, lsl #2
 80093c4:	bf00      	nop
 80093c6:	eb42 0202 	adc.w	r2, r2, r2
 80093ca:	bf28      	it	cs
 80093cc:	eba0 0081 	subcs.w	r0, r0, r1, lsl #2
 80093d0:	ebb0 0f41 	cmp.w	r0, r1, lsl #1
 80093d4:	bf00      	nop
 80093d6:	eb42 0202 	adc.w	r2, r2, r2
 80093da:	bf28      	it	cs
 80093dc:	eba0 0041 	subcs.w	r0, r0, r1, lsl #1
 80093e0:	ebb0 0f01 	cmp.w	r0, r1
 80093e4:	bf00      	nop
 80093e6:	eb42 0202 	adc.w	r2, r2, r2
 80093ea:	bf28      	it	cs
 80093ec:	eba0 0001 	subcs.w	r0, r0, r1
 80093f0:	4610      	mov	r0, r2
 80093f2:	4770      	bx	lr
 80093f4:	bf0c      	ite	eq
 80093f6:	2001      	moveq	r0, #1
 80093f8:	2000      	movne	r0, #0
 80093fa:	4770      	bx	lr
 80093fc:	fab1 f281 	clz	r2, r1
 8009400:	f1c2 021f 	rsb	r2, r2, #31
 8009404:	fa20 f002 	lsr.w	r0, r0, r2
 8009408:	4770      	bx	lr
 800940a:	b108      	cbz	r0, 8009410 <__aeabi_uidiv+0x258>
 800940c:	f04f 30ff 	mov.w	r0, #4294967295
 8009410:	f000 b80e 	b.w	8009430 <__aeabi_idiv0>

08009414 <__aeabi_uidivmod>:
 8009414:	2900      	cmp	r1, #0
 8009416:	d0f8      	beq.n	800940a <__aeabi_uidiv+0x252>
 8009418:	e92d 4003 	stmdb	sp!, {r0, r1, lr}
 800941c:	f7ff fecc 	bl	80091b8 <__aeabi_uidiv>
 8009420:	e8bd 4006 	ldmia.w	sp!, {r1, r2, lr}
 8009424:	fb02 f300 	mul.w	r3, r2, r0
 8009428:	eba1 0103 	sub.w	r1, r1, r3
 800942c:	4770      	bx	lr
 800942e:	bf00      	nop

08009430 <__aeabi_idiv0>:
 8009430:	4770      	bx	lr
 8009432:	bf00      	nop

08009434 <__aeabi_drsub>:
 8009434:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8009438:	e002      	b.n	8009440 <__adddf3>
 800943a:	bf00      	nop

0800943c <__aeabi_dsub>:
 800943c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08009440 <__adddf3>:
 8009440:	b530      	push	{r4, r5, lr}
 8009442:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8009446:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800944a:	ea94 0f05 	teq	r4, r5
 800944e:	bf08      	it	eq
 8009450:	ea90 0f02 	teqeq	r0, r2
 8009454:	bf1f      	itttt	ne
 8009456:	ea54 0c00 	orrsne.w	ip, r4, r0
 800945a:	ea55 0c02 	orrsne.w	ip, r5, r2
 800945e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8009462:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8009466:	f000 80e2 	beq.w	800962e <__adddf3+0x1ee>
 800946a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800946e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8009472:	bfb8      	it	lt
 8009474:	426d      	neglt	r5, r5
 8009476:	dd0c      	ble.n	8009492 <__adddf3+0x52>
 8009478:	442c      	add	r4, r5
 800947a:	ea80 0202 	eor.w	r2, r0, r2
 800947e:	ea81 0303 	eor.w	r3, r1, r3
 8009482:	ea82 0000 	eor.w	r0, r2, r0
 8009486:	ea83 0101 	eor.w	r1, r3, r1
 800948a:	ea80 0202 	eor.w	r2, r0, r2
 800948e:	ea81 0303 	eor.w	r3, r1, r3
 8009492:	2d36      	cmp	r5, #54	; 0x36
 8009494:	bf88      	it	hi
 8009496:	bd30      	pophi	{r4, r5, pc}
 8009498:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800949c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80094a0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80094a4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80094a8:	d002      	beq.n	80094b0 <__adddf3+0x70>
 80094aa:	4240      	negs	r0, r0
 80094ac:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80094b0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80094b4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80094b8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80094bc:	d002      	beq.n	80094c4 <__adddf3+0x84>
 80094be:	4252      	negs	r2, r2
 80094c0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80094c4:	ea94 0f05 	teq	r4, r5
 80094c8:	f000 80a7 	beq.w	800961a <__adddf3+0x1da>
 80094cc:	f1a4 0401 	sub.w	r4, r4, #1
 80094d0:	f1d5 0e20 	rsbs	lr, r5, #32
 80094d4:	db0d      	blt.n	80094f2 <__adddf3+0xb2>
 80094d6:	fa02 fc0e 	lsl.w	ip, r2, lr
 80094da:	fa22 f205 	lsr.w	r2, r2, r5
 80094de:	1880      	adds	r0, r0, r2
 80094e0:	f141 0100 	adc.w	r1, r1, #0
 80094e4:	fa03 f20e 	lsl.w	r2, r3, lr
 80094e8:	1880      	adds	r0, r0, r2
 80094ea:	fa43 f305 	asr.w	r3, r3, r5
 80094ee:	4159      	adcs	r1, r3
 80094f0:	e00e      	b.n	8009510 <__adddf3+0xd0>
 80094f2:	f1a5 0520 	sub.w	r5, r5, #32
 80094f6:	f10e 0e20 	add.w	lr, lr, #32
 80094fa:	2a01      	cmp	r2, #1
 80094fc:	fa03 fc0e 	lsl.w	ip, r3, lr
 8009500:	bf28      	it	cs
 8009502:	f04c 0c02 	orrcs.w	ip, ip, #2
 8009506:	fa43 f305 	asr.w	r3, r3, r5
 800950a:	18c0      	adds	r0, r0, r3
 800950c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8009510:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8009514:	d507      	bpl.n	8009526 <__adddf3+0xe6>
 8009516:	f04f 0e00 	mov.w	lr, #0
 800951a:	f1dc 0c00 	rsbs	ip, ip, #0
 800951e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8009522:	eb6e 0101 	sbc.w	r1, lr, r1
 8009526:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800952a:	d31b      	bcc.n	8009564 <__adddf3+0x124>
 800952c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8009530:	d30c      	bcc.n	800954c <__adddf3+0x10c>
 8009532:	0849      	lsrs	r1, r1, #1
 8009534:	ea5f 0030 	movs.w	r0, r0, rrx
 8009538:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800953c:	f104 0401 	add.w	r4, r4, #1
 8009540:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8009544:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8009548:	f080 809a 	bcs.w	8009680 <__adddf3+0x240>
 800954c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8009550:	bf08      	it	eq
 8009552:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8009556:	f150 0000 	adcs.w	r0, r0, #0
 800955a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800955e:	ea41 0105 	orr.w	r1, r1, r5
 8009562:	bd30      	pop	{r4, r5, pc}
 8009564:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8009568:	4140      	adcs	r0, r0
 800956a:	eb41 0101 	adc.w	r1, r1, r1
 800956e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8009572:	f1a4 0401 	sub.w	r4, r4, #1
 8009576:	d1e9      	bne.n	800954c <__adddf3+0x10c>
 8009578:	f091 0f00 	teq	r1, #0
 800957c:	bf04      	itt	eq
 800957e:	4601      	moveq	r1, r0
 8009580:	2000      	moveq	r0, #0
 8009582:	fab1 f381 	clz	r3, r1
 8009586:	bf08      	it	eq
 8009588:	3320      	addeq	r3, #32
 800958a:	f1a3 030b 	sub.w	r3, r3, #11
 800958e:	f1b3 0220 	subs.w	r2, r3, #32
 8009592:	da0c      	bge.n	80095ae <__adddf3+0x16e>
 8009594:	320c      	adds	r2, #12
 8009596:	dd08      	ble.n	80095aa <__adddf3+0x16a>
 8009598:	f102 0c14 	add.w	ip, r2, #20
 800959c:	f1c2 020c 	rsb	r2, r2, #12
 80095a0:	fa01 f00c 	lsl.w	r0, r1, ip
 80095a4:	fa21 f102 	lsr.w	r1, r1, r2
 80095a8:	e00c      	b.n	80095c4 <__adddf3+0x184>
 80095aa:	f102 0214 	add.w	r2, r2, #20
 80095ae:	bfd8      	it	le
 80095b0:	f1c2 0c20 	rsble	ip, r2, #32
 80095b4:	fa01 f102 	lsl.w	r1, r1, r2
 80095b8:	fa20 fc0c 	lsr.w	ip, r0, ip
 80095bc:	bfdc      	itt	le
 80095be:	ea41 010c 	orrle.w	r1, r1, ip
 80095c2:	4090      	lslle	r0, r2
 80095c4:	1ae4      	subs	r4, r4, r3
 80095c6:	bfa2      	ittt	ge
 80095c8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80095cc:	4329      	orrge	r1, r5
 80095ce:	bd30      	popge	{r4, r5, pc}
 80095d0:	ea6f 0404 	mvn.w	r4, r4
 80095d4:	3c1f      	subs	r4, #31
 80095d6:	da1c      	bge.n	8009612 <__adddf3+0x1d2>
 80095d8:	340c      	adds	r4, #12
 80095da:	dc0e      	bgt.n	80095fa <__adddf3+0x1ba>
 80095dc:	f104 0414 	add.w	r4, r4, #20
 80095e0:	f1c4 0220 	rsb	r2, r4, #32
 80095e4:	fa20 f004 	lsr.w	r0, r0, r4
 80095e8:	fa01 f302 	lsl.w	r3, r1, r2
 80095ec:	ea40 0003 	orr.w	r0, r0, r3
 80095f0:	fa21 f304 	lsr.w	r3, r1, r4
 80095f4:	ea45 0103 	orr.w	r1, r5, r3
 80095f8:	bd30      	pop	{r4, r5, pc}
 80095fa:	f1c4 040c 	rsb	r4, r4, #12
 80095fe:	f1c4 0220 	rsb	r2, r4, #32
 8009602:	fa20 f002 	lsr.w	r0, r0, r2
 8009606:	fa01 f304 	lsl.w	r3, r1, r4
 800960a:	ea40 0003 	orr.w	r0, r0, r3
 800960e:	4629      	mov	r1, r5
 8009610:	bd30      	pop	{r4, r5, pc}
 8009612:	fa21 f004 	lsr.w	r0, r1, r4
 8009616:	4629      	mov	r1, r5
 8009618:	bd30      	pop	{r4, r5, pc}
 800961a:	f094 0f00 	teq	r4, #0
 800961e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8009622:	bf06      	itte	eq
 8009624:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8009628:	3401      	addeq	r4, #1
 800962a:	3d01      	subne	r5, #1
 800962c:	e74e      	b.n	80094cc <__adddf3+0x8c>
 800962e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8009632:	bf18      	it	ne
 8009634:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8009638:	d029      	beq.n	800968e <__adddf3+0x24e>
 800963a:	ea94 0f05 	teq	r4, r5
 800963e:	bf08      	it	eq
 8009640:	ea90 0f02 	teqeq	r0, r2
 8009644:	d005      	beq.n	8009652 <__adddf3+0x212>
 8009646:	ea54 0c00 	orrs.w	ip, r4, r0
 800964a:	bf04      	itt	eq
 800964c:	4619      	moveq	r1, r3
 800964e:	4610      	moveq	r0, r2
 8009650:	bd30      	pop	{r4, r5, pc}
 8009652:	ea91 0f03 	teq	r1, r3
 8009656:	bf1e      	ittt	ne
 8009658:	2100      	movne	r1, #0
 800965a:	2000      	movne	r0, #0
 800965c:	bd30      	popne	{r4, r5, pc}
 800965e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8009662:	d105      	bne.n	8009670 <__adddf3+0x230>
 8009664:	0040      	lsls	r0, r0, #1
 8009666:	4149      	adcs	r1, r1
 8009668:	bf28      	it	cs
 800966a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800966e:	bd30      	pop	{r4, r5, pc}
 8009670:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8009674:	bf3c      	itt	cc
 8009676:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800967a:	bd30      	popcc	{r4, r5, pc}
 800967c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8009680:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8009684:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8009688:	f04f 0000 	mov.w	r0, #0
 800968c:	bd30      	pop	{r4, r5, pc}
 800968e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8009692:	bf1a      	itte	ne
 8009694:	4619      	movne	r1, r3
 8009696:	4610      	movne	r0, r2
 8009698:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800969c:	bf1c      	itt	ne
 800969e:	460b      	movne	r3, r1
 80096a0:	4602      	movne	r2, r0
 80096a2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80096a6:	bf06      	itte	eq
 80096a8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80096ac:	ea91 0f03 	teqeq	r1, r3
 80096b0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80096b4:	bd30      	pop	{r4, r5, pc}
 80096b6:	bf00      	nop

080096b8 <__aeabi_ui2d>:
 80096b8:	f090 0f00 	teq	r0, #0
 80096bc:	bf04      	itt	eq
 80096be:	2100      	moveq	r1, #0
 80096c0:	4770      	bxeq	lr
 80096c2:	b530      	push	{r4, r5, lr}
 80096c4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80096c8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80096cc:	f04f 0500 	mov.w	r5, #0
 80096d0:	f04f 0100 	mov.w	r1, #0
 80096d4:	e750      	b.n	8009578 <__adddf3+0x138>
 80096d6:	bf00      	nop

080096d8 <__aeabi_i2d>:
 80096d8:	f090 0f00 	teq	r0, #0
 80096dc:	bf04      	itt	eq
 80096de:	2100      	moveq	r1, #0
 80096e0:	4770      	bxeq	lr
 80096e2:	b530      	push	{r4, r5, lr}
 80096e4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80096e8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80096ec:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80096f0:	bf48      	it	mi
 80096f2:	4240      	negmi	r0, r0
 80096f4:	f04f 0100 	mov.w	r1, #0
 80096f8:	e73e      	b.n	8009578 <__adddf3+0x138>
 80096fa:	bf00      	nop

080096fc <__aeabi_f2d>:
 80096fc:	0042      	lsls	r2, r0, #1
 80096fe:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8009702:	ea4f 0131 	mov.w	r1, r1, rrx
 8009706:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800970a:	bf1f      	itttt	ne
 800970c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8009710:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8009714:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8009718:	4770      	bxne	lr
 800971a:	f092 0f00 	teq	r2, #0
 800971e:	bf14      	ite	ne
 8009720:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8009724:	4770      	bxeq	lr
 8009726:	b530      	push	{r4, r5, lr}
 8009728:	f44f 7460 	mov.w	r4, #896	; 0x380
 800972c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8009730:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8009734:	e720      	b.n	8009578 <__adddf3+0x138>
 8009736:	bf00      	nop

08009738 <__aeabi_ul2d>:
 8009738:	ea50 0201 	orrs.w	r2, r0, r1
 800973c:	bf08      	it	eq
 800973e:	4770      	bxeq	lr
 8009740:	b530      	push	{r4, r5, lr}
 8009742:	f04f 0500 	mov.w	r5, #0
 8009746:	e00a      	b.n	800975e <__aeabi_l2d+0x16>

08009748 <__aeabi_l2d>:
 8009748:	ea50 0201 	orrs.w	r2, r0, r1
 800974c:	bf08      	it	eq
 800974e:	4770      	bxeq	lr
 8009750:	b530      	push	{r4, r5, lr}
 8009752:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8009756:	d502      	bpl.n	800975e <__aeabi_l2d+0x16>
 8009758:	4240      	negs	r0, r0
 800975a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800975e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8009762:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8009766:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800976a:	f43f aedc 	beq.w	8009526 <__adddf3+0xe6>
 800976e:	f04f 0203 	mov.w	r2, #3
 8009772:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8009776:	bf18      	it	ne
 8009778:	3203      	addne	r2, #3
 800977a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800977e:	bf18      	it	ne
 8009780:	3203      	addne	r2, #3
 8009782:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8009786:	f1c2 0320 	rsb	r3, r2, #32
 800978a:	fa00 fc03 	lsl.w	ip, r0, r3
 800978e:	fa20 f002 	lsr.w	r0, r0, r2
 8009792:	fa01 fe03 	lsl.w	lr, r1, r3
 8009796:	ea40 000e 	orr.w	r0, r0, lr
 800979a:	fa21 f102 	lsr.w	r1, r1, r2
 800979e:	4414      	add	r4, r2
 80097a0:	e6c1      	b.n	8009526 <__adddf3+0xe6>
 80097a2:	bf00      	nop

080097a4 <__aeabi_dmul>:
 80097a4:	b570      	push	{r4, r5, r6, lr}
 80097a6:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80097aa:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80097ae:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80097b2:	bf1d      	ittte	ne
 80097b4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80097b8:	ea94 0f0c 	teqne	r4, ip
 80097bc:	ea95 0f0c 	teqne	r5, ip
 80097c0:	f000 f8de 	bleq	8009980 <__aeabi_dmul+0x1dc>
 80097c4:	442c      	add	r4, r5
 80097c6:	ea81 0603 	eor.w	r6, r1, r3
 80097ca:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80097ce:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80097d2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80097d6:	bf18      	it	ne
 80097d8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80097dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80097e0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80097e4:	d038      	beq.n	8009858 <__aeabi_dmul+0xb4>
 80097e6:	fba0 ce02 	umull	ip, lr, r0, r2
 80097ea:	f04f 0500 	mov.w	r5, #0
 80097ee:	fbe1 e502 	umlal	lr, r5, r1, r2
 80097f2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80097f6:	fbe0 e503 	umlal	lr, r5, r0, r3
 80097fa:	f04f 0600 	mov.w	r6, #0
 80097fe:	fbe1 5603 	umlal	r5, r6, r1, r3
 8009802:	f09c 0f00 	teq	ip, #0
 8009806:	bf18      	it	ne
 8009808:	f04e 0e01 	orrne.w	lr, lr, #1
 800980c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8009810:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8009814:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8009818:	d204      	bcs.n	8009824 <__aeabi_dmul+0x80>
 800981a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800981e:	416d      	adcs	r5, r5
 8009820:	eb46 0606 	adc.w	r6, r6, r6
 8009824:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8009828:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 800982c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8009830:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8009834:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8009838:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800983c:	bf88      	it	hi
 800983e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8009842:	d81e      	bhi.n	8009882 <__aeabi_dmul+0xde>
 8009844:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8009848:	bf08      	it	eq
 800984a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800984e:	f150 0000 	adcs.w	r0, r0, #0
 8009852:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8009856:	bd70      	pop	{r4, r5, r6, pc}
 8009858:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 800985c:	ea46 0101 	orr.w	r1, r6, r1
 8009860:	ea40 0002 	orr.w	r0, r0, r2
 8009864:	ea81 0103 	eor.w	r1, r1, r3
 8009868:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 800986c:	bfc2      	ittt	gt
 800986e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8009872:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8009876:	bd70      	popgt	{r4, r5, r6, pc}
 8009878:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800987c:	f04f 0e00 	mov.w	lr, #0
 8009880:	3c01      	subs	r4, #1
 8009882:	f300 80ab 	bgt.w	80099dc <__aeabi_dmul+0x238>
 8009886:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800988a:	bfde      	ittt	le
 800988c:	2000      	movle	r0, #0
 800988e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8009892:	bd70      	pople	{r4, r5, r6, pc}
 8009894:	f1c4 0400 	rsb	r4, r4, #0
 8009898:	3c20      	subs	r4, #32
 800989a:	da35      	bge.n	8009908 <__aeabi_dmul+0x164>
 800989c:	340c      	adds	r4, #12
 800989e:	dc1b      	bgt.n	80098d8 <__aeabi_dmul+0x134>
 80098a0:	f104 0414 	add.w	r4, r4, #20
 80098a4:	f1c4 0520 	rsb	r5, r4, #32
 80098a8:	fa00 f305 	lsl.w	r3, r0, r5
 80098ac:	fa20 f004 	lsr.w	r0, r0, r4
 80098b0:	fa01 f205 	lsl.w	r2, r1, r5
 80098b4:	ea40 0002 	orr.w	r0, r0, r2
 80098b8:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80098bc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80098c0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80098c4:	fa21 f604 	lsr.w	r6, r1, r4
 80098c8:	eb42 0106 	adc.w	r1, r2, r6
 80098cc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80098d0:	bf08      	it	eq
 80098d2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80098d6:	bd70      	pop	{r4, r5, r6, pc}
 80098d8:	f1c4 040c 	rsb	r4, r4, #12
 80098dc:	f1c4 0520 	rsb	r5, r4, #32
 80098e0:	fa00 f304 	lsl.w	r3, r0, r4
 80098e4:	fa20 f005 	lsr.w	r0, r0, r5
 80098e8:	fa01 f204 	lsl.w	r2, r1, r4
 80098ec:	ea40 0002 	orr.w	r0, r0, r2
 80098f0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80098f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80098f8:	f141 0100 	adc.w	r1, r1, #0
 80098fc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8009900:	bf08      	it	eq
 8009902:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8009906:	bd70      	pop	{r4, r5, r6, pc}
 8009908:	f1c4 0520 	rsb	r5, r4, #32
 800990c:	fa00 f205 	lsl.w	r2, r0, r5
 8009910:	ea4e 0e02 	orr.w	lr, lr, r2
 8009914:	fa20 f304 	lsr.w	r3, r0, r4
 8009918:	fa01 f205 	lsl.w	r2, r1, r5
 800991c:	ea43 0302 	orr.w	r3, r3, r2
 8009920:	fa21 f004 	lsr.w	r0, r1, r4
 8009924:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8009928:	fa21 f204 	lsr.w	r2, r1, r4
 800992c:	ea20 0002 	bic.w	r0, r0, r2
 8009930:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8009934:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8009938:	bf08      	it	eq
 800993a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800993e:	bd70      	pop	{r4, r5, r6, pc}
 8009940:	f094 0f00 	teq	r4, #0
 8009944:	d10f      	bne.n	8009966 <__aeabi_dmul+0x1c2>
 8009946:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800994a:	0040      	lsls	r0, r0, #1
 800994c:	eb41 0101 	adc.w	r1, r1, r1
 8009950:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8009954:	bf08      	it	eq
 8009956:	3c01      	subeq	r4, #1
 8009958:	d0f7      	beq.n	800994a <__aeabi_dmul+0x1a6>
 800995a:	ea41 0106 	orr.w	r1, r1, r6
 800995e:	f095 0f00 	teq	r5, #0
 8009962:	bf18      	it	ne
 8009964:	4770      	bxne	lr
 8009966:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800996a:	0052      	lsls	r2, r2, #1
 800996c:	eb43 0303 	adc.w	r3, r3, r3
 8009970:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8009974:	bf08      	it	eq
 8009976:	3d01      	subeq	r5, #1
 8009978:	d0f7      	beq.n	800996a <__aeabi_dmul+0x1c6>
 800997a:	ea43 0306 	orr.w	r3, r3, r6
 800997e:	4770      	bx	lr
 8009980:	ea94 0f0c 	teq	r4, ip
 8009984:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8009988:	bf18      	it	ne
 800998a:	ea95 0f0c 	teqne	r5, ip
 800998e:	d00c      	beq.n	80099aa <__aeabi_dmul+0x206>
 8009990:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8009994:	bf18      	it	ne
 8009996:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800999a:	d1d1      	bne.n	8009940 <__aeabi_dmul+0x19c>
 800999c:	ea81 0103 	eor.w	r1, r1, r3
 80099a0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80099a4:	f04f 0000 	mov.w	r0, #0
 80099a8:	bd70      	pop	{r4, r5, r6, pc}
 80099aa:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80099ae:	bf06      	itte	eq
 80099b0:	4610      	moveq	r0, r2
 80099b2:	4619      	moveq	r1, r3
 80099b4:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80099b8:	d019      	beq.n	80099ee <__aeabi_dmul+0x24a>
 80099ba:	ea94 0f0c 	teq	r4, ip
 80099be:	d102      	bne.n	80099c6 <__aeabi_dmul+0x222>
 80099c0:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80099c4:	d113      	bne.n	80099ee <__aeabi_dmul+0x24a>
 80099c6:	ea95 0f0c 	teq	r5, ip
 80099ca:	d105      	bne.n	80099d8 <__aeabi_dmul+0x234>
 80099cc:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80099d0:	bf1c      	itt	ne
 80099d2:	4610      	movne	r0, r2
 80099d4:	4619      	movne	r1, r3
 80099d6:	d10a      	bne.n	80099ee <__aeabi_dmul+0x24a>
 80099d8:	ea81 0103 	eor.w	r1, r1, r3
 80099dc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80099e0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80099e4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80099e8:	f04f 0000 	mov.w	r0, #0
 80099ec:	bd70      	pop	{r4, r5, r6, pc}
 80099ee:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80099f2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80099f6:	bd70      	pop	{r4, r5, r6, pc}

080099f8 <__aeabi_ddiv>:
 80099f8:	b570      	push	{r4, r5, r6, lr}
 80099fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80099fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8009a02:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8009a06:	bf1d      	ittte	ne
 8009a08:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8009a0c:	ea94 0f0c 	teqne	r4, ip
 8009a10:	ea95 0f0c 	teqne	r5, ip
 8009a14:	f000 f8a7 	bleq	8009b66 <__aeabi_ddiv+0x16e>
 8009a18:	eba4 0405 	sub.w	r4, r4, r5
 8009a1c:	ea81 0e03 	eor.w	lr, r1, r3
 8009a20:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8009a24:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8009a28:	f000 8088 	beq.w	8009b3c <__aeabi_ddiv+0x144>
 8009a2c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8009a30:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8009a34:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8009a38:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8009a3c:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8009a40:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8009a44:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8009a48:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8009a4c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8009a50:	429d      	cmp	r5, r3
 8009a52:	bf08      	it	eq
 8009a54:	4296      	cmpeq	r6, r2
 8009a56:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8009a5a:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8009a5e:	d202      	bcs.n	8009a66 <__aeabi_ddiv+0x6e>
 8009a60:	085b      	lsrs	r3, r3, #1
 8009a62:	ea4f 0232 	mov.w	r2, r2, rrx
 8009a66:	1ab6      	subs	r6, r6, r2
 8009a68:	eb65 0503 	sbc.w	r5, r5, r3
 8009a6c:	085b      	lsrs	r3, r3, #1
 8009a6e:	ea4f 0232 	mov.w	r2, r2, rrx
 8009a72:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8009a76:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8009a7a:	ebb6 0e02 	subs.w	lr, r6, r2
 8009a7e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8009a82:	bf22      	ittt	cs
 8009a84:	1ab6      	subcs	r6, r6, r2
 8009a86:	4675      	movcs	r5, lr
 8009a88:	ea40 000c 	orrcs.w	r0, r0, ip
 8009a8c:	085b      	lsrs	r3, r3, #1
 8009a8e:	ea4f 0232 	mov.w	r2, r2, rrx
 8009a92:	ebb6 0e02 	subs.w	lr, r6, r2
 8009a96:	eb75 0e03 	sbcs.w	lr, r5, r3
 8009a9a:	bf22      	ittt	cs
 8009a9c:	1ab6      	subcs	r6, r6, r2
 8009a9e:	4675      	movcs	r5, lr
 8009aa0:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8009aa4:	085b      	lsrs	r3, r3, #1
 8009aa6:	ea4f 0232 	mov.w	r2, r2, rrx
 8009aaa:	ebb6 0e02 	subs.w	lr, r6, r2
 8009aae:	eb75 0e03 	sbcs.w	lr, r5, r3
 8009ab2:	bf22      	ittt	cs
 8009ab4:	1ab6      	subcs	r6, r6, r2
 8009ab6:	4675      	movcs	r5, lr
 8009ab8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8009abc:	085b      	lsrs	r3, r3, #1
 8009abe:	ea4f 0232 	mov.w	r2, r2, rrx
 8009ac2:	ebb6 0e02 	subs.w	lr, r6, r2
 8009ac6:	eb75 0e03 	sbcs.w	lr, r5, r3
 8009aca:	bf22      	ittt	cs
 8009acc:	1ab6      	subcs	r6, r6, r2
 8009ace:	4675      	movcs	r5, lr
 8009ad0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8009ad4:	ea55 0e06 	orrs.w	lr, r5, r6
 8009ad8:	d018      	beq.n	8009b0c <__aeabi_ddiv+0x114>
 8009ada:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8009ade:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8009ae2:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8009ae6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8009aea:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8009aee:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8009af2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8009af6:	d1c0      	bne.n	8009a7a <__aeabi_ddiv+0x82>
 8009af8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8009afc:	d10b      	bne.n	8009b16 <__aeabi_ddiv+0x11e>
 8009afe:	ea41 0100 	orr.w	r1, r1, r0
 8009b02:	f04f 0000 	mov.w	r0, #0
 8009b06:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8009b0a:	e7b6      	b.n	8009a7a <__aeabi_ddiv+0x82>
 8009b0c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8009b10:	bf04      	itt	eq
 8009b12:	4301      	orreq	r1, r0
 8009b14:	2000      	moveq	r0, #0
 8009b16:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8009b1a:	bf88      	it	hi
 8009b1c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8009b20:	f63f aeaf 	bhi.w	8009882 <__aeabi_dmul+0xde>
 8009b24:	ebb5 0c03 	subs.w	ip, r5, r3
 8009b28:	bf04      	itt	eq
 8009b2a:	ebb6 0c02 	subseq.w	ip, r6, r2
 8009b2e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8009b32:	f150 0000 	adcs.w	r0, r0, #0
 8009b36:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8009b3a:	bd70      	pop	{r4, r5, r6, pc}
 8009b3c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8009b40:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8009b44:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8009b48:	bfc2      	ittt	gt
 8009b4a:	ebd4 050c 	rsbsgt	r5, r4, ip
 8009b4e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8009b52:	bd70      	popgt	{r4, r5, r6, pc}
 8009b54:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8009b58:	f04f 0e00 	mov.w	lr, #0
 8009b5c:	3c01      	subs	r4, #1
 8009b5e:	e690      	b.n	8009882 <__aeabi_dmul+0xde>
 8009b60:	ea45 0e06 	orr.w	lr, r5, r6
 8009b64:	e68d      	b.n	8009882 <__aeabi_dmul+0xde>
 8009b66:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8009b6a:	ea94 0f0c 	teq	r4, ip
 8009b6e:	bf08      	it	eq
 8009b70:	ea95 0f0c 	teqeq	r5, ip
 8009b74:	f43f af3b 	beq.w	80099ee <__aeabi_dmul+0x24a>
 8009b78:	ea94 0f0c 	teq	r4, ip
 8009b7c:	d10a      	bne.n	8009b94 <__aeabi_ddiv+0x19c>
 8009b7e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8009b82:	f47f af34 	bne.w	80099ee <__aeabi_dmul+0x24a>
 8009b86:	ea95 0f0c 	teq	r5, ip
 8009b8a:	f47f af25 	bne.w	80099d8 <__aeabi_dmul+0x234>
 8009b8e:	4610      	mov	r0, r2
 8009b90:	4619      	mov	r1, r3
 8009b92:	e72c      	b.n	80099ee <__aeabi_dmul+0x24a>
 8009b94:	ea95 0f0c 	teq	r5, ip
 8009b98:	d106      	bne.n	8009ba8 <__aeabi_ddiv+0x1b0>
 8009b9a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8009b9e:	f43f aefd 	beq.w	800999c <__aeabi_dmul+0x1f8>
 8009ba2:	4610      	mov	r0, r2
 8009ba4:	4619      	mov	r1, r3
 8009ba6:	e722      	b.n	80099ee <__aeabi_dmul+0x24a>
 8009ba8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8009bac:	bf18      	it	ne
 8009bae:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8009bb2:	f47f aec5 	bne.w	8009940 <__aeabi_dmul+0x19c>
 8009bb6:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8009bba:	f47f af0d 	bne.w	80099d8 <__aeabi_dmul+0x234>
 8009bbe:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8009bc2:	f47f aeeb 	bne.w	800999c <__aeabi_dmul+0x1f8>
 8009bc6:	e712      	b.n	80099ee <__aeabi_dmul+0x24a>

08009bc8 <__gedf2>:
 8009bc8:	f04f 3cff 	mov.w	ip, #4294967295
 8009bcc:	e006      	b.n	8009bdc <__cmpdf2+0x4>
 8009bce:	bf00      	nop

08009bd0 <__ledf2>:
 8009bd0:	f04f 0c01 	mov.w	ip, #1
 8009bd4:	e002      	b.n	8009bdc <__cmpdf2+0x4>
 8009bd6:	bf00      	nop

08009bd8 <__cmpdf2>:
 8009bd8:	f04f 0c01 	mov.w	ip, #1
 8009bdc:	f84d cd04 	str.w	ip, [sp, #-4]!
 8009be0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8009be4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8009be8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8009bec:	bf18      	it	ne
 8009bee:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8009bf2:	d01b      	beq.n	8009c2c <__cmpdf2+0x54>
 8009bf4:	b001      	add	sp, #4
 8009bf6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8009bfa:	bf0c      	ite	eq
 8009bfc:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8009c00:	ea91 0f03 	teqne	r1, r3
 8009c04:	bf02      	ittt	eq
 8009c06:	ea90 0f02 	teqeq	r0, r2
 8009c0a:	2000      	moveq	r0, #0
 8009c0c:	4770      	bxeq	lr
 8009c0e:	f110 0f00 	cmn.w	r0, #0
 8009c12:	ea91 0f03 	teq	r1, r3
 8009c16:	bf58      	it	pl
 8009c18:	4299      	cmppl	r1, r3
 8009c1a:	bf08      	it	eq
 8009c1c:	4290      	cmpeq	r0, r2
 8009c1e:	bf2c      	ite	cs
 8009c20:	17d8      	asrcs	r0, r3, #31
 8009c22:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8009c26:	f040 0001 	orr.w	r0, r0, #1
 8009c2a:	4770      	bx	lr
 8009c2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8009c30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8009c34:	d102      	bne.n	8009c3c <__cmpdf2+0x64>
 8009c36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8009c3a:	d107      	bne.n	8009c4c <__cmpdf2+0x74>
 8009c3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8009c40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8009c44:	d1d6      	bne.n	8009bf4 <__cmpdf2+0x1c>
 8009c46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8009c4a:	d0d3      	beq.n	8009bf4 <__cmpdf2+0x1c>
 8009c4c:	f85d 0b04 	ldr.w	r0, [sp], #4
 8009c50:	4770      	bx	lr
 8009c52:	bf00      	nop

08009c54 <__aeabi_cdrcmple>:
 8009c54:	4684      	mov	ip, r0
 8009c56:	4610      	mov	r0, r2
 8009c58:	4662      	mov	r2, ip
 8009c5a:	468c      	mov	ip, r1
 8009c5c:	4619      	mov	r1, r3
 8009c5e:	4663      	mov	r3, ip
 8009c60:	e000      	b.n	8009c64 <__aeabi_cdcmpeq>
 8009c62:	bf00      	nop

08009c64 <__aeabi_cdcmpeq>:
 8009c64:	b501      	push	{r0, lr}
 8009c66:	f7ff ffb7 	bl	8009bd8 <__cmpdf2>
 8009c6a:	2800      	cmp	r0, #0
 8009c6c:	bf48      	it	mi
 8009c6e:	f110 0f00 	cmnmi.w	r0, #0
 8009c72:	bd01      	pop	{r0, pc}

08009c74 <__aeabi_dcmpeq>:
 8009c74:	f84d ed08 	str.w	lr, [sp, #-8]!
 8009c78:	f7ff fff4 	bl	8009c64 <__aeabi_cdcmpeq>
 8009c7c:	bf0c      	ite	eq
 8009c7e:	2001      	moveq	r0, #1
 8009c80:	2000      	movne	r0, #0
 8009c82:	f85d fb08 	ldr.w	pc, [sp], #8
 8009c86:	bf00      	nop

08009c88 <__aeabi_dcmplt>:
 8009c88:	f84d ed08 	str.w	lr, [sp, #-8]!
 8009c8c:	f7ff ffea 	bl	8009c64 <__aeabi_cdcmpeq>
 8009c90:	bf34      	ite	cc
 8009c92:	2001      	movcc	r0, #1
 8009c94:	2000      	movcs	r0, #0
 8009c96:	f85d fb08 	ldr.w	pc, [sp], #8
 8009c9a:	bf00      	nop

08009c9c <__aeabi_dcmple>:
 8009c9c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8009ca0:	f7ff ffe0 	bl	8009c64 <__aeabi_cdcmpeq>
 8009ca4:	bf94      	ite	ls
 8009ca6:	2001      	movls	r0, #1
 8009ca8:	2000      	movhi	r0, #0
 8009caa:	f85d fb08 	ldr.w	pc, [sp], #8
 8009cae:	bf00      	nop

08009cb0 <__aeabi_dcmpge>:
 8009cb0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8009cb4:	f7ff ffce 	bl	8009c54 <__aeabi_cdrcmple>
 8009cb8:	bf94      	ite	ls
 8009cba:	2001      	movls	r0, #1
 8009cbc:	2000      	movhi	r0, #0
 8009cbe:	f85d fb08 	ldr.w	pc, [sp], #8
 8009cc2:	bf00      	nop

08009cc4 <__aeabi_dcmpgt>:
 8009cc4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8009cc8:	f7ff ffc4 	bl	8009c54 <__aeabi_cdrcmple>
 8009ccc:	bf34      	ite	cc
 8009cce:	2001      	movcc	r0, #1
 8009cd0:	2000      	movcs	r0, #0
 8009cd2:	f85d fb08 	ldr.w	pc, [sp], #8
 8009cd6:	bf00      	nop

08009cd8 <__aeabi_d2iz>:
 8009cd8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8009cdc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8009ce0:	d215      	bcs.n	8009d0e <__aeabi_d2iz+0x36>
 8009ce2:	d511      	bpl.n	8009d08 <__aeabi_d2iz+0x30>
 8009ce4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8009ce8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8009cec:	d912      	bls.n	8009d14 <__aeabi_d2iz+0x3c>
 8009cee:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8009cf2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8009cf6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8009cfa:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8009cfe:	fa23 f002 	lsr.w	r0, r3, r2
 8009d02:	bf18      	it	ne
 8009d04:	4240      	negne	r0, r0
 8009d06:	4770      	bx	lr
 8009d08:	f04f 0000 	mov.w	r0, #0
 8009d0c:	4770      	bx	lr
 8009d0e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8009d12:	d105      	bne.n	8009d20 <__aeabi_d2iz+0x48>
 8009d14:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8009d18:	bf08      	it	eq
 8009d1a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8009d1e:	4770      	bx	lr
 8009d20:	f04f 0000 	mov.w	r0, #0
 8009d24:	4770      	bx	lr
 8009d26:	bf00      	nop

08009d28 <__aeabi_d2uiz>:
 8009d28:	004a      	lsls	r2, r1, #1
 8009d2a:	d211      	bcs.n	8009d50 <__aeabi_d2uiz+0x28>
 8009d2c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8009d30:	d211      	bcs.n	8009d56 <__aeabi_d2uiz+0x2e>
 8009d32:	d50d      	bpl.n	8009d50 <__aeabi_d2uiz+0x28>
 8009d34:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8009d38:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8009d3c:	d40e      	bmi.n	8009d5c <__aeabi_d2uiz+0x34>
 8009d3e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8009d42:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8009d46:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8009d4a:	fa23 f002 	lsr.w	r0, r3, r2
 8009d4e:	4770      	bx	lr
 8009d50:	f04f 0000 	mov.w	r0, #0
 8009d54:	4770      	bx	lr
 8009d56:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8009d5a:	d102      	bne.n	8009d62 <__aeabi_d2uiz+0x3a>
 8009d5c:	f04f 30ff 	mov.w	r0, #4294967295
 8009d60:	4770      	bx	lr
 8009d62:	f04f 0000 	mov.w	r0, #0
 8009d66:	4770      	bx	lr

08009d68 <__aeabi_uldivmod>:
 8009d68:	b94b      	cbnz	r3, 8009d7e <__aeabi_uldivmod+0x16>
 8009d6a:	b942      	cbnz	r2, 8009d7e <__aeabi_uldivmod+0x16>
 8009d6c:	2900      	cmp	r1, #0
 8009d6e:	bf08      	it	eq
 8009d70:	2800      	cmpeq	r0, #0
 8009d72:	d002      	beq.n	8009d7a <__aeabi_uldivmod+0x12>
 8009d74:	f04f 31ff 	mov.w	r1, #4294967295
 8009d78:	4608      	mov	r0, r1
 8009d7a:	f7ff bb59 	b.w	8009430 <__aeabi_idiv0>
 8009d7e:	b082      	sub	sp, #8
 8009d80:	46ec      	mov	ip, sp
 8009d82:	e92d 5000 	stmdb	sp!, {ip, lr}
 8009d86:	f000 f81d 	bl	8009dc4 <__gnu_uldivmod_helper>
 8009d8a:	f8dd e004 	ldr.w	lr, [sp, #4]
 8009d8e:	b002      	add	sp, #8
 8009d90:	bc0c      	pop	{r2, r3}
 8009d92:	4770      	bx	lr

08009d94 <__gnu_ldivmod_helper>:
 8009d94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009d98:	4617      	mov	r7, r2
 8009d9a:	4680      	mov	r8, r0
 8009d9c:	4689      	mov	r9, r1
 8009d9e:	469a      	mov	sl, r3
 8009da0:	9e08      	ldr	r6, [sp, #32]
 8009da2:	f000 f827 	bl	8009df4 <__divdi3>
 8009da6:	fba7 4500 	umull	r4, r5, r7, r0
 8009daa:	fb07 f701 	mul.w	r7, r7, r1
 8009dae:	fb00 720a 	mla	r2, r0, sl, r7
 8009db2:	4415      	add	r5, r2
 8009db4:	ebb8 0404 	subs.w	r4, r8, r4
 8009db8:	eb69 0505 	sbc.w	r5, r9, r5
 8009dbc:	e9c6 4500 	strd	r4, r5, [r6]
 8009dc0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08009dc4 <__gnu_uldivmod_helper>:
 8009dc4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009dc8:	4617      	mov	r7, r2
 8009dca:	4680      	mov	r8, r0
 8009dcc:	4689      	mov	r9, r1
 8009dce:	461d      	mov	r5, r3
 8009dd0:	9e08      	ldr	r6, [sp, #32]
 8009dd2:	f000 f9b9 	bl	800a148 <__udivdi3>
 8009dd6:	fb00 f305 	mul.w	r3, r0, r5
 8009dda:	fba0 4507 	umull	r4, r5, r0, r7
 8009dde:	fb07 3701 	mla	r7, r7, r1, r3
 8009de2:	443d      	add	r5, r7
 8009de4:	ebb8 0404 	subs.w	r4, r8, r4
 8009de8:	eb69 0505 	sbc.w	r5, r9, r5
 8009dec:	e9c6 4500 	strd	r4, r5, [r6]
 8009df0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08009df4 <__divdi3>:
 8009df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009df8:	4244      	negs	r4, r0
 8009dfa:	eb61 0541 	sbc.w	r5, r1, r1, lsl #1
 8009dfe:	2900      	cmp	r1, #0
 8009e00:	f04f 36ff 	mov.w	r6, #4294967295
 8009e04:	bfa2      	ittt	ge
 8009e06:	4604      	movge	r4, r0
 8009e08:	460d      	movge	r5, r1
 8009e0a:	2600      	movge	r6, #0
 8009e0c:	2b00      	cmp	r3, #0
 8009e0e:	b085      	sub	sp, #20
 8009e10:	f2c0 80c7 	blt.w	8009fa2 <__divdi3+0x1ae>
 8009e14:	4620      	mov	r0, r4
 8009e16:	46aa      	mov	sl, r5
 8009e18:	4694      	mov	ip, r2
 8009e1a:	4619      	mov	r1, r3
 8009e1c:	4690      	mov	r8, r2
 8009e1e:	4627      	mov	r7, r4
 8009e20:	46a9      	mov	r9, r5
 8009e22:	2b00      	cmp	r3, #0
 8009e24:	d158      	bne.n	8009ed8 <__divdi3+0xe4>
 8009e26:	42aa      	cmp	r2, r5
 8009e28:	d96c      	bls.n	8009f04 <__divdi3+0x110>
 8009e2a:	fab2 f382 	clz	r3, r2
 8009e2e:	b15b      	cbz	r3, 8009e48 <__divdi3+0x54>
 8009e30:	f1c3 0220 	rsb	r2, r3, #32
 8009e34:	fa05 f903 	lsl.w	r9, r5, r3
 8009e38:	fa24 f202 	lsr.w	r2, r4, r2
 8009e3c:	fa0c f803 	lsl.w	r8, ip, r3
 8009e40:	ea42 0909 	orr.w	r9, r2, r9
 8009e44:	fa04 f703 	lsl.w	r7, r4, r3
 8009e48:	ea4f 4418 	mov.w	r4, r8, lsr #16
 8009e4c:	4648      	mov	r0, r9
 8009e4e:	4621      	mov	r1, r4
 8009e50:	fa1f fa88 	uxth.w	sl, r8
 8009e54:	f7ff f9b0 	bl	80091b8 <__aeabi_uidiv>
 8009e58:	4621      	mov	r1, r4
 8009e5a:	4683      	mov	fp, r0
 8009e5c:	4648      	mov	r0, r9
 8009e5e:	f7ff fad9 	bl	8009414 <__aeabi_uidivmod>
 8009e62:	0c3a      	lsrs	r2, r7, #16
 8009e64:	fb0a f00b 	mul.w	r0, sl, fp
 8009e68:	ea42 4101 	orr.w	r1, r2, r1, lsl #16
 8009e6c:	4288      	cmp	r0, r1
 8009e6e:	d90b      	bls.n	8009e88 <__divdi3+0x94>
 8009e70:	eb11 0108 	adds.w	r1, r1, r8
 8009e74:	f10b 33ff 	add.w	r3, fp, #4294967295
 8009e78:	d205      	bcs.n	8009e86 <__divdi3+0x92>
 8009e7a:	4288      	cmp	r0, r1
 8009e7c:	bf84      	itt	hi
 8009e7e:	f1ab 0b02 	subhi.w	fp, fp, #2
 8009e82:	4441      	addhi	r1, r8
 8009e84:	d800      	bhi.n	8009e88 <__divdi3+0x94>
 8009e86:	469b      	mov	fp, r3
 8009e88:	ebc0 0901 	rsb	r9, r0, r1
 8009e8c:	4621      	mov	r1, r4
 8009e8e:	4648      	mov	r0, r9
 8009e90:	b2bf      	uxth	r7, r7
 8009e92:	f7ff f991 	bl	80091b8 <__aeabi_uidiv>
 8009e96:	4621      	mov	r1, r4
 8009e98:	4605      	mov	r5, r0
 8009e9a:	4648      	mov	r0, r9
 8009e9c:	f7ff faba 	bl	8009414 <__aeabi_uidivmod>
 8009ea0:	fb0a fa05 	mul.w	sl, sl, r5
 8009ea4:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
 8009ea8:	458a      	cmp	sl, r1
 8009eaa:	d909      	bls.n	8009ec0 <__divdi3+0xcc>
 8009eac:	eb11 0808 	adds.w	r8, r1, r8
 8009eb0:	f105 33ff 	add.w	r3, r5, #4294967295
 8009eb4:	d203      	bcs.n	8009ebe <__divdi3+0xca>
 8009eb6:	45c2      	cmp	sl, r8
 8009eb8:	bf88      	it	hi
 8009eba:	3d02      	subhi	r5, #2
 8009ebc:	d800      	bhi.n	8009ec0 <__divdi3+0xcc>
 8009ebe:	461d      	mov	r5, r3
 8009ec0:	ea45 430b 	orr.w	r3, r5, fp, lsl #16
 8009ec4:	2400      	movs	r4, #0
 8009ec6:	4618      	mov	r0, r3
 8009ec8:	4621      	mov	r1, r4
 8009eca:	b116      	cbz	r6, 8009ed2 <__divdi3+0xde>
 8009ecc:	4240      	negs	r0, r0
 8009ece:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8009ed2:	b005      	add	sp, #20
 8009ed4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009ed8:	42ab      	cmp	r3, r5
 8009eda:	bf84      	itt	hi
 8009edc:	2400      	movhi	r4, #0
 8009ede:	4623      	movhi	r3, r4
 8009ee0:	d8f1      	bhi.n	8009ec6 <__divdi3+0xd2>
 8009ee2:	fab1 f581 	clz	r5, r1
 8009ee6:	2d00      	cmp	r5, #0
 8009ee8:	f040 80b5 	bne.w	800a056 <__divdi3+0x262>
 8009eec:	4551      	cmp	r1, sl
 8009eee:	bf28      	it	cs
 8009ef0:	4282      	cmpcs	r2, r0
 8009ef2:	bf8c      	ite	hi
 8009ef4:	2400      	movhi	r4, #0
 8009ef6:	2401      	movls	r4, #1
 8009ef8:	bf9c      	itt	ls
 8009efa:	2301      	movls	r3, #1
 8009efc:	462c      	movls	r4, r5
 8009efe:	d9e2      	bls.n	8009ec6 <__divdi3+0xd2>
 8009f00:	4623      	mov	r3, r4
 8009f02:	e7e0      	b.n	8009ec6 <__divdi3+0xd2>
 8009f04:	b922      	cbnz	r2, 8009f10 <__divdi3+0x11c>
 8009f06:	4611      	mov	r1, r2
 8009f08:	2001      	movs	r0, #1
 8009f0a:	f7ff f955 	bl	80091b8 <__aeabi_uidiv>
 8009f0e:	4680      	mov	r8, r0
 8009f10:	fab8 f388 	clz	r3, r8
 8009f14:	2b00      	cmp	r3, #0
 8009f16:	d149      	bne.n	8009fac <__divdi3+0x1b8>
 8009f18:	ebc8 0909 	rsb	r9, r8, r9
 8009f1c:	ea4f 4518 	mov.w	r5, r8, lsr #16
 8009f20:	fa1f fa88 	uxth.w	sl, r8
 8009f24:	2401      	movs	r4, #1
 8009f26:	4629      	mov	r1, r5
 8009f28:	4648      	mov	r0, r9
 8009f2a:	f7ff f945 	bl	80091b8 <__aeabi_uidiv>
 8009f2e:	4629      	mov	r1, r5
 8009f30:	4683      	mov	fp, r0
 8009f32:	4648      	mov	r0, r9
 8009f34:	f7ff fa6e 	bl	8009414 <__aeabi_uidivmod>
 8009f38:	0c3a      	lsrs	r2, r7, #16
 8009f3a:	fb0a f00b 	mul.w	r0, sl, fp
 8009f3e:	ea42 4101 	orr.w	r1, r2, r1, lsl #16
 8009f42:	4288      	cmp	r0, r1
 8009f44:	d90c      	bls.n	8009f60 <__divdi3+0x16c>
 8009f46:	eb11 0108 	adds.w	r1, r1, r8
 8009f4a:	f10b 33ff 	add.w	r3, fp, #4294967295
 8009f4e:	f080 80f2 	bcs.w	800a136 <__divdi3+0x342>
 8009f52:	4288      	cmp	r0, r1
 8009f54:	bf84      	itt	hi
 8009f56:	f1ab 0b02 	subhi.w	fp, fp, #2
 8009f5a:	4441      	addhi	r1, r8
 8009f5c:	f240 80eb 	bls.w	800a136 <__divdi3+0x342>
 8009f60:	1a0a      	subs	r2, r1, r0
 8009f62:	4629      	mov	r1, r5
 8009f64:	4610      	mov	r0, r2
 8009f66:	9201      	str	r2, [sp, #4]
 8009f68:	f7ff f926 	bl	80091b8 <__aeabi_uidiv>
 8009f6c:	9a01      	ldr	r2, [sp, #4]
 8009f6e:	4629      	mov	r1, r5
 8009f70:	b2bf      	uxth	r7, r7
 8009f72:	4681      	mov	r9, r0
 8009f74:	4610      	mov	r0, r2
 8009f76:	f7ff fa4d 	bl	8009414 <__aeabi_uidivmod>
 8009f7a:	fb0a fa09 	mul.w	sl, sl, r9
 8009f7e:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
 8009f82:	458a      	cmp	sl, r1
 8009f84:	d90a      	bls.n	8009f9c <__divdi3+0x1a8>
 8009f86:	eb11 0808 	adds.w	r8, r1, r8
 8009f8a:	f109 33ff 	add.w	r3, r9, #4294967295
 8009f8e:	d204      	bcs.n	8009f9a <__divdi3+0x1a6>
 8009f90:	45c2      	cmp	sl, r8
 8009f92:	bf88      	it	hi
 8009f94:	f1a9 0902 	subhi.w	r9, r9, #2
 8009f98:	d800      	bhi.n	8009f9c <__divdi3+0x1a8>
 8009f9a:	4699      	mov	r9, r3
 8009f9c:	ea49 430b 	orr.w	r3, r9, fp, lsl #16
 8009fa0:	e791      	b.n	8009ec6 <__divdi3+0xd2>
 8009fa2:	43f6      	mvns	r6, r6
 8009fa4:	4252      	negs	r2, r2
 8009fa6:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8009faa:	e733      	b.n	8009e14 <__divdi3+0x20>
 8009fac:	fa08 f803 	lsl.w	r8, r8, r3
 8009fb0:	f1c3 0b20 	rsb	fp, r3, #32
 8009fb4:	fa29 f40b 	lsr.w	r4, r9, fp
 8009fb8:	fa09 f903 	lsl.w	r9, r9, r3
 8009fbc:	ea4f 4518 	mov.w	r5, r8, lsr #16
 8009fc0:	4620      	mov	r0, r4
 8009fc2:	4629      	mov	r1, r5
 8009fc4:	fa27 fb0b 	lsr.w	fp, r7, fp
 8009fc8:	409f      	lsls	r7, r3
 8009fca:	f7ff f8f5 	bl	80091b8 <__aeabi_uidiv>
 8009fce:	4629      	mov	r1, r5
 8009fd0:	fa1f fa88 	uxth.w	sl, r8
 8009fd4:	ea4b 0b09 	orr.w	fp, fp, r9
 8009fd8:	4602      	mov	r2, r0
 8009fda:	4620      	mov	r0, r4
 8009fdc:	9201      	str	r2, [sp, #4]
 8009fde:	f7ff fa19 	bl	8009414 <__aeabi_uidivmod>
 8009fe2:	9a01      	ldr	r2, [sp, #4]
 8009fe4:	ea4f 431b 	mov.w	r3, fp, lsr #16
 8009fe8:	fb0a f002 	mul.w	r0, sl, r2
 8009fec:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8009ff0:	4288      	cmp	r0, r1
 8009ff2:	d90b      	bls.n	800a00c <__divdi3+0x218>
 8009ff4:	eb11 0108 	adds.w	r1, r1, r8
 8009ff8:	f102 33ff 	add.w	r3, r2, #4294967295
 8009ffc:	f080 80a1 	bcs.w	800a142 <__divdi3+0x34e>
 800a000:	4288      	cmp	r0, r1
 800a002:	bf84      	itt	hi
 800a004:	3a02      	subhi	r2, #2
 800a006:	4441      	addhi	r1, r8
 800a008:	f240 809b 	bls.w	800a142 <__divdi3+0x34e>
 800a00c:	ebc0 0901 	rsb	r9, r0, r1
 800a010:	4629      	mov	r1, r5
 800a012:	4648      	mov	r0, r9
 800a014:	9201      	str	r2, [sp, #4]
 800a016:	f7ff f8cf 	bl	80091b8 <__aeabi_uidiv>
 800a01a:	4629      	mov	r1, r5
 800a01c:	fa1f fb8b 	uxth.w	fp, fp
 800a020:	4604      	mov	r4, r0
 800a022:	4648      	mov	r0, r9
 800a024:	f7ff f9f6 	bl	8009414 <__aeabi_uidivmod>
 800a028:	9a01      	ldr	r2, [sp, #4]
 800a02a:	fb0a f904 	mul.w	r9, sl, r4
 800a02e:	ea4b 4101 	orr.w	r1, fp, r1, lsl #16
 800a032:	4589      	cmp	r9, r1
 800a034:	d90a      	bls.n	800a04c <__divdi3+0x258>
 800a036:	eb11 0108 	adds.w	r1, r1, r8
 800a03a:	f104 33ff 	add.w	r3, r4, #4294967295
 800a03e:	d204      	bcs.n	800a04a <__divdi3+0x256>
 800a040:	4589      	cmp	r9, r1
 800a042:	bf84      	itt	hi
 800a044:	3c02      	subhi	r4, #2
 800a046:	4441      	addhi	r1, r8
 800a048:	d800      	bhi.n	800a04c <__divdi3+0x258>
 800a04a:	461c      	mov	r4, r3
 800a04c:	ebc9 0901 	rsb	r9, r9, r1
 800a050:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800a054:	e767      	b.n	8009f26 <__divdi3+0x132>
 800a056:	f1c5 0320 	rsb	r3, r5, #32
 800a05a:	40a9      	lsls	r1, r5
 800a05c:	fa22 f803 	lsr.w	r8, r2, r3
 800a060:	fa2a fb03 	lsr.w	fp, sl, r3
 800a064:	ea48 0801 	orr.w	r8, r8, r1
 800a068:	fa20 f303 	lsr.w	r3, r0, r3
 800a06c:	fa0a fa05 	lsl.w	sl, sl, r5
 800a070:	4658      	mov	r0, fp
 800a072:	ea4f 4918 	mov.w	r9, r8, lsr #16
 800a076:	fa02 fc05 	lsl.w	ip, r2, r5
 800a07a:	4649      	mov	r1, r9
 800a07c:	ea43 0a0a 	orr.w	sl, r3, sl
 800a080:	f8cd c00c 	str.w	ip, [sp, #12]
 800a084:	f7ff f898 	bl	80091b8 <__aeabi_uidiv>
 800a088:	4649      	mov	r1, r9
 800a08a:	4604      	mov	r4, r0
 800a08c:	4658      	mov	r0, fp
 800a08e:	f7ff f9c1 	bl	8009414 <__aeabi_uidivmod>
 800a092:	fa1f f288 	uxth.w	r2, r8
 800a096:	ea4f 4e1a 	mov.w	lr, sl, lsr #16
 800a09a:	fb02 f004 	mul.w	r0, r2, r4
 800a09e:	ea4e 4e01 	orr.w	lr, lr, r1, lsl #16
 800a0a2:	4570      	cmp	r0, lr
 800a0a4:	d909      	bls.n	800a0ba <__divdi3+0x2c6>
 800a0a6:	eb1e 0e08 	adds.w	lr, lr, r8
 800a0aa:	f104 31ff 	add.w	r1, r4, #4294967295
 800a0ae:	d246      	bcs.n	800a13e <__divdi3+0x34a>
 800a0b0:	4570      	cmp	r0, lr
 800a0b2:	bf84      	itt	hi
 800a0b4:	3c02      	subhi	r4, #2
 800a0b6:	44c6      	addhi	lr, r8
 800a0b8:	d941      	bls.n	800a13e <__divdi3+0x34a>
 800a0ba:	ebc0 0c0e 	rsb	ip, r0, lr
 800a0be:	4649      	mov	r1, r9
 800a0c0:	4660      	mov	r0, ip
 800a0c2:	9201      	str	r2, [sp, #4]
 800a0c4:	f8cd c008 	str.w	ip, [sp, #8]
 800a0c8:	f7ff f876 	bl	80091b8 <__aeabi_uidiv>
 800a0cc:	f8dd c008 	ldr.w	ip, [sp, #8]
 800a0d0:	4649      	mov	r1, r9
 800a0d2:	fa1f fa8a 	uxth.w	sl, sl
 800a0d6:	4683      	mov	fp, r0
 800a0d8:	4660      	mov	r0, ip
 800a0da:	f7ff f99b 	bl	8009414 <__aeabi_uidivmod>
 800a0de:	9a01      	ldr	r2, [sp, #4]
 800a0e0:	fb02 f20b 	mul.w	r2, r2, fp
 800a0e4:	ea4a 4101 	orr.w	r1, sl, r1, lsl #16
 800a0e8:	428a      	cmp	r2, r1
 800a0ea:	d90a      	bls.n	800a102 <__divdi3+0x30e>
 800a0ec:	eb11 0108 	adds.w	r1, r1, r8
 800a0f0:	f10b 30ff 	add.w	r0, fp, #4294967295
 800a0f4:	d221      	bcs.n	800a13a <__divdi3+0x346>
 800a0f6:	428a      	cmp	r2, r1
 800a0f8:	bf84      	itt	hi
 800a0fa:	f1ab 0b02 	subhi.w	fp, fp, #2
 800a0fe:	4441      	addhi	r1, r8
 800a100:	d91b      	bls.n	800a13a <__divdi3+0x346>
 800a102:	9803      	ldr	r0, [sp, #12]
 800a104:	ea4b 4b04 	orr.w	fp, fp, r4, lsl #16
 800a108:	1a89      	subs	r1, r1, r2
 800a10a:	fbab 2300 	umull	r2, r3, fp, r0
 800a10e:	4299      	cmp	r1, r3
 800a110:	d30d      	bcc.n	800a12e <__divdi3+0x33a>
 800a112:	bf14      	ite	ne
 800a114:	2300      	movne	r3, #0
 800a116:	2301      	moveq	r3, #1
 800a118:	fa07 f405 	lsl.w	r4, r7, r5
 800a11c:	4294      	cmp	r4, r2
 800a11e:	bf2c      	ite	cs
 800a120:	2400      	movcs	r4, #0
 800a122:	f003 0401 	andcc.w	r4, r3, #1
 800a126:	465b      	mov	r3, fp
 800a128:	2c00      	cmp	r4, #0
 800a12a:	f43f aecc 	beq.w	8009ec6 <__divdi3+0xd2>
 800a12e:	f10b 33ff 	add.w	r3, fp, #4294967295
 800a132:	2400      	movs	r4, #0
 800a134:	e6c7      	b.n	8009ec6 <__divdi3+0xd2>
 800a136:	469b      	mov	fp, r3
 800a138:	e712      	b.n	8009f60 <__divdi3+0x16c>
 800a13a:	4683      	mov	fp, r0
 800a13c:	e7e1      	b.n	800a102 <__divdi3+0x30e>
 800a13e:	460c      	mov	r4, r1
 800a140:	e7bb      	b.n	800a0ba <__divdi3+0x2c6>
 800a142:	461a      	mov	r2, r3
 800a144:	e762      	b.n	800a00c <__divdi3+0x218>
 800a146:	bf00      	nop

0800a148 <__udivdi3>:
 800a148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a14c:	4606      	mov	r6, r0
 800a14e:	b083      	sub	sp, #12
 800a150:	460d      	mov	r5, r1
 800a152:	4614      	mov	r4, r2
 800a154:	4607      	mov	r7, r0
 800a156:	4688      	mov	r8, r1
 800a158:	2b00      	cmp	r3, #0
 800a15a:	d151      	bne.n	800a200 <__udivdi3+0xb8>
 800a15c:	428a      	cmp	r2, r1
 800a15e:	d964      	bls.n	800a22a <__udivdi3+0xe2>
 800a160:	fab2 f382 	clz	r3, r2
 800a164:	b15b      	cbz	r3, 800a17e <__udivdi3+0x36>
 800a166:	f1c3 0820 	rsb	r8, r3, #32
 800a16a:	fa01 f503 	lsl.w	r5, r1, r3
 800a16e:	fa20 f808 	lsr.w	r8, r0, r8
 800a172:	fa02 f403 	lsl.w	r4, r2, r3
 800a176:	ea48 0805 	orr.w	r8, r8, r5
 800a17a:	fa00 f703 	lsl.w	r7, r0, r3
 800a17e:	0c25      	lsrs	r5, r4, #16
 800a180:	4640      	mov	r0, r8
 800a182:	4629      	mov	r1, r5
 800a184:	fa1f fa84 	uxth.w	sl, r4
 800a188:	f7ff f816 	bl	80091b8 <__aeabi_uidiv>
 800a18c:	4629      	mov	r1, r5
 800a18e:	4681      	mov	r9, r0
 800a190:	4640      	mov	r0, r8
 800a192:	f7ff f93f 	bl	8009414 <__aeabi_uidivmod>
 800a196:	0c3b      	lsrs	r3, r7, #16
 800a198:	fb0a f009 	mul.w	r0, sl, r9
 800a19c:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 800a1a0:	4288      	cmp	r0, r1
 800a1a2:	d90a      	bls.n	800a1ba <__udivdi3+0x72>
 800a1a4:	1909      	adds	r1, r1, r4
 800a1a6:	f109 32ff 	add.w	r2, r9, #4294967295
 800a1aa:	d205      	bcs.n	800a1b8 <__udivdi3+0x70>
 800a1ac:	4288      	cmp	r0, r1
 800a1ae:	bf84      	itt	hi
 800a1b0:	f1a9 0902 	subhi.w	r9, r9, #2
 800a1b4:	1909      	addhi	r1, r1, r4
 800a1b6:	d800      	bhi.n	800a1ba <__udivdi3+0x72>
 800a1b8:	4691      	mov	r9, r2
 800a1ba:	ebc0 0801 	rsb	r8, r0, r1
 800a1be:	4629      	mov	r1, r5
 800a1c0:	4640      	mov	r0, r8
 800a1c2:	b2bf      	uxth	r7, r7
 800a1c4:	f7fe fff8 	bl	80091b8 <__aeabi_uidiv>
 800a1c8:	4629      	mov	r1, r5
 800a1ca:	4606      	mov	r6, r0
 800a1cc:	4640      	mov	r0, r8
 800a1ce:	f7ff f921 	bl	8009414 <__aeabi_uidivmod>
 800a1d2:	fb0a fa06 	mul.w	sl, sl, r6
 800a1d6:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
 800a1da:	458a      	cmp	sl, r1
 800a1dc:	d909      	bls.n	800a1f2 <__udivdi3+0xaa>
 800a1de:	190c      	adds	r4, r1, r4
 800a1e0:	f106 33ff 	add.w	r3, r6, #4294967295
 800a1e4:	f080 8119 	bcs.w	800a41a <__udivdi3+0x2d2>
 800a1e8:	45a2      	cmp	sl, r4
 800a1ea:	bf88      	it	hi
 800a1ec:	3e02      	subhi	r6, #2
 800a1ee:	f240 8114 	bls.w	800a41a <__udivdi3+0x2d2>
 800a1f2:	ea46 4009 	orr.w	r0, r6, r9, lsl #16
 800a1f6:	2600      	movs	r6, #0
 800a1f8:	4631      	mov	r1, r6
 800a1fa:	b003      	add	sp, #12
 800a1fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a200:	428b      	cmp	r3, r1
 800a202:	bf84      	itt	hi
 800a204:	2600      	movhi	r6, #0
 800a206:	4630      	movhi	r0, r6
 800a208:	d8f6      	bhi.n	800a1f8 <__udivdi3+0xb0>
 800a20a:	fab3 f483 	clz	r4, r3
 800a20e:	2c00      	cmp	r4, #0
 800a210:	d15a      	bne.n	800a2c8 <__udivdi3+0x180>
 800a212:	428b      	cmp	r3, r1
 800a214:	bf28      	it	cs
 800a216:	42b2      	cmpcs	r2, r6
 800a218:	bf8c      	ite	hi
 800a21a:	2600      	movhi	r6, #0
 800a21c:	2601      	movls	r6, #1
 800a21e:	bf9c      	itt	ls
 800a220:	2001      	movls	r0, #1
 800a222:	4626      	movls	r6, r4
 800a224:	d9e8      	bls.n	800a1f8 <__udivdi3+0xb0>
 800a226:	4630      	mov	r0, r6
 800a228:	e7e6      	b.n	800a1f8 <__udivdi3+0xb0>
 800a22a:	b922      	cbnz	r2, 800a236 <__udivdi3+0xee>
 800a22c:	4611      	mov	r1, r2
 800a22e:	2001      	movs	r0, #1
 800a230:	f7fe ffc2 	bl	80091b8 <__aeabi_uidiv>
 800a234:	4604      	mov	r4, r0
 800a236:	fab4 f384 	clz	r3, r4
 800a23a:	2b00      	cmp	r3, #0
 800a23c:	f040 80a2 	bne.w	800a384 <__udivdi3+0x23c>
 800a240:	1b2d      	subs	r5, r5, r4
 800a242:	ea4f 4814 	mov.w	r8, r4, lsr #16
 800a246:	fa1f fa84 	uxth.w	sl, r4
 800a24a:	2601      	movs	r6, #1
 800a24c:	4641      	mov	r1, r8
 800a24e:	4628      	mov	r0, r5
 800a250:	f7fe ffb2 	bl	80091b8 <__aeabi_uidiv>
 800a254:	4641      	mov	r1, r8
 800a256:	4681      	mov	r9, r0
 800a258:	4628      	mov	r0, r5
 800a25a:	f7ff f8db 	bl	8009414 <__aeabi_uidivmod>
 800a25e:	0c3b      	lsrs	r3, r7, #16
 800a260:	fb0a f009 	mul.w	r0, sl, r9
 800a264:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 800a268:	4288      	cmp	r0, r1
 800a26a:	d90b      	bls.n	800a284 <__udivdi3+0x13c>
 800a26c:	1909      	adds	r1, r1, r4
 800a26e:	f109 32ff 	add.w	r2, r9, #4294967295
 800a272:	f080 80d4 	bcs.w	800a41e <__udivdi3+0x2d6>
 800a276:	4288      	cmp	r0, r1
 800a278:	bf84      	itt	hi
 800a27a:	f1a9 0902 	subhi.w	r9, r9, #2
 800a27e:	1909      	addhi	r1, r1, r4
 800a280:	f240 80cd 	bls.w	800a41e <__udivdi3+0x2d6>
 800a284:	ebc0 0b01 	rsb	fp, r0, r1
 800a288:	4641      	mov	r1, r8
 800a28a:	4658      	mov	r0, fp
 800a28c:	b2bf      	uxth	r7, r7
 800a28e:	f7fe ff93 	bl	80091b8 <__aeabi_uidiv>
 800a292:	4641      	mov	r1, r8
 800a294:	4605      	mov	r5, r0
 800a296:	4658      	mov	r0, fp
 800a298:	f7ff f8bc 	bl	8009414 <__aeabi_uidivmod>
 800a29c:	fb0a fa05 	mul.w	sl, sl, r5
 800a2a0:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
 800a2a4:	458a      	cmp	sl, r1
 800a2a6:	d909      	bls.n	800a2bc <__udivdi3+0x174>
 800a2a8:	190c      	adds	r4, r1, r4
 800a2aa:	f105 33ff 	add.w	r3, r5, #4294967295
 800a2ae:	f080 80b8 	bcs.w	800a422 <__udivdi3+0x2da>
 800a2b2:	45a2      	cmp	sl, r4
 800a2b4:	bf88      	it	hi
 800a2b6:	3d02      	subhi	r5, #2
 800a2b8:	f240 80b3 	bls.w	800a422 <__udivdi3+0x2da>
 800a2bc:	ea45 4009 	orr.w	r0, r5, r9, lsl #16
 800a2c0:	4631      	mov	r1, r6
 800a2c2:	b003      	add	sp, #12
 800a2c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a2c8:	f1c4 0120 	rsb	r1, r4, #32
 800a2cc:	40a3      	lsls	r3, r4
 800a2ce:	fa22 f801 	lsr.w	r8, r2, r1
 800a2d2:	fa25 f701 	lsr.w	r7, r5, r1
 800a2d6:	ea48 0803 	orr.w	r8, r8, r3
 800a2da:	4638      	mov	r0, r7
 800a2dc:	fa26 f301 	lsr.w	r3, r6, r1
 800a2e0:	40a5      	lsls	r5, r4
 800a2e2:	ea4f 4918 	mov.w	r9, r8, lsr #16
 800a2e6:	40a2      	lsls	r2, r4
 800a2e8:	4649      	mov	r1, r9
 800a2ea:	9201      	str	r2, [sp, #4]
 800a2ec:	431d      	orrs	r5, r3
 800a2ee:	f7fe ff63 	bl	80091b8 <__aeabi_uidiv>
 800a2f2:	4649      	mov	r1, r9
 800a2f4:	4683      	mov	fp, r0
 800a2f6:	4638      	mov	r0, r7
 800a2f8:	f7ff f88c 	bl	8009414 <__aeabi_uidivmod>
 800a2fc:	fa1f f288 	uxth.w	r2, r8
 800a300:	0c2f      	lsrs	r7, r5, #16
 800a302:	fb02 f00b 	mul.w	r0, r2, fp
 800a306:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 800a30a:	42b8      	cmp	r0, r7
 800a30c:	d906      	bls.n	800a31c <__udivdi3+0x1d4>
 800a30e:	eb17 0708 	adds.w	r7, r7, r8
 800a312:	f10b 31ff 	add.w	r1, fp, #4294967295
 800a316:	f0c0 808d 	bcc.w	800a434 <__udivdi3+0x2ec>
 800a31a:	468b      	mov	fp, r1
 800a31c:	1a3f      	subs	r7, r7, r0
 800a31e:	4649      	mov	r1, r9
 800a320:	4638      	mov	r0, r7
 800a322:	9200      	str	r2, [sp, #0]
 800a324:	f7fe ff48 	bl	80091b8 <__aeabi_uidiv>
 800a328:	4649      	mov	r1, r9
 800a32a:	b2ad      	uxth	r5, r5
 800a32c:	4682      	mov	sl, r0
 800a32e:	4638      	mov	r0, r7
 800a330:	f7ff f870 	bl	8009414 <__aeabi_uidivmod>
 800a334:	9a00      	ldr	r2, [sp, #0]
 800a336:	fb02 f20a 	mul.w	r2, r2, sl
 800a33a:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
 800a33e:	428a      	cmp	r2, r1
 800a340:	d905      	bls.n	800a34e <__udivdi3+0x206>
 800a342:	eb11 0108 	adds.w	r1, r1, r8
 800a346:	f10a 30ff 	add.w	r0, sl, #4294967295
 800a34a:	d36c      	bcc.n	800a426 <__udivdi3+0x2de>
 800a34c:	4682      	mov	sl, r0
 800a34e:	9d01      	ldr	r5, [sp, #4]
 800a350:	ea4a 400b 	orr.w	r0, sl, fp, lsl #16
 800a354:	1a89      	subs	r1, r1, r2
 800a356:	fba0 2305 	umull	r2, r3, r0, r5
 800a35a:	4299      	cmp	r1, r3
 800a35c:	d30c      	bcc.n	800a378 <__udivdi3+0x230>
 800a35e:	fa06 f604 	lsl.w	r6, r6, r4
 800a362:	bf14      	ite	ne
 800a364:	2100      	movne	r1, #0
 800a366:	2101      	moveq	r1, #1
 800a368:	4296      	cmp	r6, r2
 800a36a:	bf2c      	ite	cs
 800a36c:	2600      	movcs	r6, #0
 800a36e:	f001 0601 	andcc.w	r6, r1, #1
 800a372:	2e00      	cmp	r6, #0
 800a374:	f43f af40 	beq.w	800a1f8 <__udivdi3+0xb0>
 800a378:	2600      	movs	r6, #0
 800a37a:	3801      	subs	r0, #1
 800a37c:	4631      	mov	r1, r6
 800a37e:	b003      	add	sp, #12
 800a380:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a384:	409c      	lsls	r4, r3
 800a386:	f1c3 0920 	rsb	r9, r3, #32
 800a38a:	fa25 fa09 	lsr.w	sl, r5, r9
 800a38e:	fa06 f703 	lsl.w	r7, r6, r3
 800a392:	ea4f 4814 	mov.w	r8, r4, lsr #16
 800a396:	4650      	mov	r0, sl
 800a398:	4641      	mov	r1, r8
 800a39a:	409d      	lsls	r5, r3
 800a39c:	f7fe ff0c 	bl	80091b8 <__aeabi_uidiv>
 800a3a0:	4641      	mov	r1, r8
 800a3a2:	fa26 f909 	lsr.w	r9, r6, r9
 800a3a6:	ea49 0905 	orr.w	r9, r9, r5
 800a3aa:	4683      	mov	fp, r0
 800a3ac:	4650      	mov	r0, sl
 800a3ae:	f7ff f831 	bl	8009414 <__aeabi_uidivmod>
 800a3b2:	fa1f fa84 	uxth.w	sl, r4
 800a3b6:	ea4f 4319 	mov.w	r3, r9, lsr #16
 800a3ba:	fb0a f00b 	mul.w	r0, sl, fp
 800a3be:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 800a3c2:	4288      	cmp	r0, r1
 800a3c4:	d909      	bls.n	800a3da <__udivdi3+0x292>
 800a3c6:	1909      	adds	r1, r1, r4
 800a3c8:	f10b 33ff 	add.w	r3, fp, #4294967295
 800a3cc:	d23a      	bcs.n	800a444 <__udivdi3+0x2fc>
 800a3ce:	4288      	cmp	r0, r1
 800a3d0:	bf84      	itt	hi
 800a3d2:	f1ab 0b02 	subhi.w	fp, fp, #2
 800a3d6:	1909      	addhi	r1, r1, r4
 800a3d8:	d934      	bls.n	800a444 <__udivdi3+0x2fc>
 800a3da:	1a0d      	subs	r5, r1, r0
 800a3dc:	4641      	mov	r1, r8
 800a3de:	4628      	mov	r0, r5
 800a3e0:	fa1f f989 	uxth.w	r9, r9
 800a3e4:	f7fe fee8 	bl	80091b8 <__aeabi_uidiv>
 800a3e8:	4641      	mov	r1, r8
 800a3ea:	4606      	mov	r6, r0
 800a3ec:	4628      	mov	r0, r5
 800a3ee:	f7ff f811 	bl	8009414 <__aeabi_uidivmod>
 800a3f2:	fb0a f506 	mul.w	r5, sl, r6
 800a3f6:	ea49 4101 	orr.w	r1, r9, r1, lsl #16
 800a3fa:	428d      	cmp	r5, r1
 800a3fc:	d909      	bls.n	800a412 <__udivdi3+0x2ca>
 800a3fe:	1909      	adds	r1, r1, r4
 800a400:	f106 33ff 	add.w	r3, r6, #4294967295
 800a404:	d204      	bcs.n	800a410 <__udivdi3+0x2c8>
 800a406:	428d      	cmp	r5, r1
 800a408:	bf84      	itt	hi
 800a40a:	3e02      	subhi	r6, #2
 800a40c:	1909      	addhi	r1, r1, r4
 800a40e:	d800      	bhi.n	800a412 <__udivdi3+0x2ca>
 800a410:	461e      	mov	r6, r3
 800a412:	1b4d      	subs	r5, r1, r5
 800a414:	ea46 460b 	orr.w	r6, r6, fp, lsl #16
 800a418:	e718      	b.n	800a24c <__udivdi3+0x104>
 800a41a:	461e      	mov	r6, r3
 800a41c:	e6e9      	b.n	800a1f2 <__udivdi3+0xaa>
 800a41e:	4691      	mov	r9, r2
 800a420:	e730      	b.n	800a284 <__udivdi3+0x13c>
 800a422:	461d      	mov	r5, r3
 800a424:	e74a      	b.n	800a2bc <__udivdi3+0x174>
 800a426:	428a      	cmp	r2, r1
 800a428:	bf84      	itt	hi
 800a42a:	f1aa 0a02 	subhi.w	sl, sl, #2
 800a42e:	4441      	addhi	r1, r8
 800a430:	d88d      	bhi.n	800a34e <__udivdi3+0x206>
 800a432:	e78b      	b.n	800a34c <__udivdi3+0x204>
 800a434:	42b8      	cmp	r0, r7
 800a436:	bf84      	itt	hi
 800a438:	f1ab 0b02 	subhi.w	fp, fp, #2
 800a43c:	4447      	addhi	r7, r8
 800a43e:	f63f af6d 	bhi.w	800a31c <__udivdi3+0x1d4>
 800a442:	e76a      	b.n	800a31a <__udivdi3+0x1d2>
 800a444:	469b      	mov	fp, r3
 800a446:	e7c8      	b.n	800a3da <__udivdi3+0x292>

Disassembly of section .ARM.exidx:

0800a448 <.ARM.exidx>:
 800a448:	7ffff9ac 	svcvc	0x00fff9ac
 800a44c:	00000001 	andeq	r0, r0, r1

Disassembly of section .rodata:

0800a450 <__RO_BASE__>:
 800a450:	0800a8d8 	stmdaeq	r0, {r3, r4, r6, r7, fp, sp, pc}
 800a454:	0800a8dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, fp, sp, pc}
 800a458:	0800a8e0 	stmdaeq	r0, {r5, r6, r7, fp, sp, pc}
 800a45c:	0800a8e4 	stmdaeq	r0, {r2, r5, r6, r7, fp, sp, pc}
 800a460:	0800a8e8 	stmdaeq	r0, {r3, r5, r6, r7, fp, sp, pc}
 800a464:	0800a8ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp, sp, pc}
 800a468:	0800a8f0 	stmdaeq	r0, {r4, r5, r6, r7, fp, sp, pc}
 800a46c:	0800a8f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, fp, sp, pc}

0800a470 <_global_impure_ptr>:
 800a470:	20000008 	andcs	r0, r0, r8

0800a474 <blanks.6752>:
 800a474:	20202020 	eorcs	r2, r0, r0, lsr #32
 800a478:	20202020 	eorcs	r2, r0, r0, lsr #32
 800a47c:	20202020 	eorcs	r2, r0, r0, lsr #32
 800a480:	20202020 	eorcs	r2, r0, r0, lsr #32

0800a484 <zeroes.6753>:
 800a484:	30303030 	eorscc	r3, r0, r0, lsr r0
 800a488:	30303030 	eorscc	r3, r0, r0, lsr r0
 800a48c:	30303030 	eorscc	r3, r0, r0, lsr r0
 800a490:	30303030 	eorscc	r3, r0, r0, lsr r0
 800a494:	00000000 	andeq	r0, r0, r0

0800a498 <p05.5301>:
 800a498:	00000005 	andeq	r0, r0, r5
 800a49c:	00000019 	andeq	r0, r0, r9, lsl r0
 800a4a0:	0000007d 	andeq	r0, r0, sp, ror r0
 800a4a4:	00000000 	andeq	r0, r0, r0

0800a4a8 <__mprec_tens>:
 800a4a8:	00000000 	andeq	r0, r0, r0
 800a4ac:	3ff00000 	svccc	0x00f00000	; IMB
 800a4b0:	00000000 	andeq	r0, r0, r0
 800a4b4:	40240000 	eormi	r0, r4, r0
 800a4b8:	00000000 	andeq	r0, r0, r0
 800a4bc:	40590000 	subsmi	r0, r9, r0
 800a4c0:	00000000 	andeq	r0, r0, r0
 800a4c4:	408f4000 	addmi	r4, pc, r0
 800a4c8:	00000000 	andeq	r0, r0, r0
 800a4cc:	40c38800 	sbcmi	r8, r3, r0, lsl #16
 800a4d0:	00000000 	andeq	r0, r0, r0
 800a4d4:	40f86a00 	rscsmi	r6, r8, r0, lsl #20
 800a4d8:	00000000 	andeq	r0, r0, r0
 800a4dc:	412e8480 	smlawbmi	lr, r0, r4, r8
 800a4e0:	00000000 	andeq	r0, r0, r0
 800a4e4:	416312d0 	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
 800a4e8:	00000000 	andeq	r0, r0, r0
 800a4ec:	4197d784 	orrsmi	sp, r7, r4, lsl #15
 800a4f0:	00000000 	andeq	r0, r0, r0
 800a4f4:	41cdcd65 	bicmi	ip, sp, r5, ror #26
 800a4f8:	20000000 	andcs	r0, r0, r0
 800a4fc:	4202a05f 	andmi	sl, r2, #95	; 0x5f
 800a500:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
 800a504:	42374876 	eorsmi	r4, r7, #7733248	; 0x760000
 800a508:	a2000000 	andge	r0, r0, #0
 800a50c:	426d1a94 	rsbmi	r1, sp, #148, 20	; 0x94000
 800a510:	e5400000 	strb	r0, [r0, #-0]
 800a514:	42a2309c 	adcmi	r3, r2, #156	; 0x9c
 800a518:	1e900000 	cdpne	0, 9, cr0, cr0, cr0, {0}
 800a51c:	42d6bcc4 	sbcsmi	fp, r6, #196, 24	; 0xc400
 800a520:	26340000 	ldrtcs	r0, [r4], -r0
 800a524:	430c6bf5 	movwmi	r6, #52213	; 0xcbf5
 800a528:	37e08000 	strbcc	r8, [r0, r0]!
 800a52c:	4341c379 	movtmi	ip, #4985	; 0x1379
 800a530:	85d8a000 	ldrbhi	sl, [r8]
 800a534:	43763457 	cmnmi	r6, #1459617792	; 0x57000000
 800a538:	674ec800 	strbvs	ip, [lr, -r0, lsl #16]
 800a53c:	43abc16d 			; <UNDEFINED> instruction: 0x43abc16d
 800a540:	60913d00 	addsvs	r3, r1, r0, lsl #26
 800a544:	43e158e4 	mvnmi	r5, #228, 16	; 0xe40000
 800a548:	78b58c40 	ldmvc	r5!, {r6, sl, fp, pc}
 800a54c:	4415af1d 	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
 800a550:	d6e2ef50 	usatle	lr, #2, r0, asr #30
 800a554:	444b1ae4 	strbmi	r1, [fp], #-2788	; 0xfffff51c
 800a558:	064dd592 			; <UNDEFINED> instruction: 0x064dd592
 800a55c:	4480f0cf 	strmi	pc, [r0], #207	; 0xcf
 800a560:	c7e14af6 			; <UNDEFINED> instruction: 0xc7e14af6
 800a564:	44b52d02 	ldrtmi	r2, [r5], #3330	; 0xd02
 800a568:	79d99db4 	ldmibvc	r9, {r2, r4, r5, r7, r8, sl, fp, ip, pc}^
 800a56c:	44ea7843 	strbtmi	r7, [sl], #2115	; 0x843

0800a570 <__mprec_tinytens>:
 800a570:	97d889bc 			; <UNDEFINED> instruction: 0x97d889bc
 800a574:	3c9cd2b2 	lfmcc	f5, 1, [ip], {178}	; 0xb2
 800a578:	d5a8a733 	strle	sl, [r8, #1843]!	; 0x733
 800a57c:	3949f623 	stmdbcc	r9, {r0, r1, r5, r9, sl, ip, sp, lr, pc}^
 800a580:	44f4a73d 	ldrbtmi	sl, [r4], #1853	; 0x73d
 800a584:	32a50ffd 	adccc	r0, r5, #1012	; 0x3f4
 800a588:	cf8c979d 	svcgt	0x008c979d
 800a58c:	255bba08 	ldrbcs	fp, [fp, #-2568]	; 0xfffff5f8
 800a590:	64ac6f43 	strtvs	r6, [ip], #3907	; 0xf43
 800a594:	0ac80628 	beq	720be3c <__RW_SIZE__+0x720b8b8>

0800a598 <__mprec_bigtens>:
 800a598:	37e08000 	strbcc	r8, [r0, r0]!
 800a59c:	4341c379 	movtmi	ip, #4985	; 0x1379
 800a5a0:	b5056e17 	strlt	r6, [r5, #-3607]	; 0xfffff1e9
 800a5a4:	4693b8b5 			; <UNDEFINED> instruction: 0x4693b8b5
 800a5a8:	e93ff9f5 	ldmdb	pc!, {r0, r2, r4, r5, r6, r7, r8, fp, ip, sp, lr, pc}	; <UNPREDICTABLE>
 800a5ac:	4d384f03 	ldcmi	15, cr4, [r8, #-12]!
 800a5b0:	f9301d32 			; <UNDEFINED> instruction: 0xf9301d32
 800a5b4:	5a827748 	bpl	60a82dc <__RW_SIZE__+0x60a7d58>
 800a5b8:	7f73bf3c 	svcvc	0x0073bf3c
 800a5bc:	75154fdd 	ldrvc	r4, [r5, #-4061]	; 0xfffff023

0800a5c0 <blanks.6696>:
 800a5c0:	20202020 	eorcs	r2, r0, r0, lsr #32
 800a5c4:	20202020 	eorcs	r2, r0, r0, lsr #32
 800a5c8:	20202020 	eorcs	r2, r0, r0, lsr #32
 800a5cc:	20202020 	eorcs	r2, r0, r0, lsr #32

0800a5d0 <zeroes.6697>:
 800a5d0:	30303030 	eorscc	r3, r0, r0, lsr r0
 800a5d4:	30303030 	eorscc	r3, r0, r0, lsr r0
 800a5d8:	30303030 	eorscc	r3, r0, r0, lsr r0
 800a5dc:	30303030 	eorscc	r3, r0, r0, lsr r0
 800a5e0:	6f746f4d 	svcvs	0x00746f4d
 800a5e4:	6f432072 	svcvs	0x00432072
 800a5e8:	6f72746e 	svcvs	0x0072746e
 800a5ec:	7953206c 	ldmdbvc	r3, {r2, r3, r5, r6, sp}^
 800a5f0:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
 800a5f4:	61655220 	cmnvs	r5, r0, lsr #4
 800a5f8:	000a7964 	andeq	r7, sl, r4, ror #18
 800a5fc:	65657053 	strbvs	r7, [r5, #-83]!	; 0xffffffad
 800a600:	654c2064 	strbvs	r2, [ip, #-100]	; 0xffffff9c
 800a604:	3a6c6576 	bcc	9b23be4 <__RO_LIMIT__+0x1b19284>
 800a608:	0a642520 	beq	9913a90 <__RO_LIMIT__+0x1909130>
 800a60c:	00000000 	andeq	r0, r0, r0
 800a610:	6e697355 	mcrvs	3, 3, r7, cr9, cr5, {2}
 800a614:	32492067 	subcc	r2, r9, #103	; 0x67
 800a618:	6f432043 	svcvs	0x00432043
 800a61c:	6e756d6d 	cdpvs	13, 7, cr6, cr5, cr13, {3}
 800a620:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 800a624:	0a6e6f69 	beq	9ba63d0 <__RO_LIMIT__+0x1b9ba70>
 800a628:	00000000 	andeq	r0, r0, r0
 800a62c:	6f746f4d 	svcvs	0x00746f4d
 800a630:	74532072 	ldrbvc	r2, [r3], #-114	; 0xffffff8e
 800a634:	6570706f 	ldrbvs	r7, [r0, #-111]!	; 0xffffff91
 800a638:	00000a64 	andeq	r0, r0, r4, ror #20
 800a63c:	6f746f4d 	svcvs	0x00746f4d
 800a640:	6f462072 	svcvs	0x00462072
 800a644:	72617772 	rsbvc	r7, r1, #29884416	; 0x1c80000
 800a648:	53203a64 	teqpl	r0, #100, 20	; 0x64000
 800a64c:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
 800a650:	0a642520 	beq	9913ad8 <__RO_LIMIT__+0x1909178>
 800a654:	00000000 	andeq	r0, r0, r0
 800a658:	6f746f4d 	svcvs	0x00746f4d
 800a65c:	65522072 	ldrbvs	r2, [r2, #-114]	; 0xffffff8e
 800a660:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 800a664:	53203a65 	teqpl	r0, #413696	; 0x65000
 800a668:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
 800a66c:	0a642520 	beq	9913af4 <__RO_LIMIT__+0x1909194>
 800a670:	00000000 	andeq	r0, r0, r0
 800a674:	61766e49 	cmnvs	r6, r9, asr #28
 800a678:	2064696c 	rsbcs	r6, r4, ip, ror #18
 800a67c:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
 800a680:	3a646e61 	bcc	992600c <__RO_LIMIT__+0x191b6ac>
 800a684:	0a632520 	beq	98d3b0c <__RO_LIMIT__+0x18c91ac>
 800a688:	00000000 	andeq	r0, r0, r0
 800a68c:	2044454c 	subcs	r4, r4, ip, asr #10
 800a690:	61746144 	cmnvs	r4, r4, asr #2
 800a694:	7830203a 	ldmdavc	r0!, {r1, r3, r4, r5, sp}
 800a698:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 800a69c:	0000000a 	andeq	r0, r0, sl
 800a6a0:	255b7325 	ldrbcs	r7, [fp, #-805]	; 0xfffffcdb
 800a6a4:	252c5d64 	strcs	r5, [ip, #-3428]!	; 0xfffff29c
 800a6a8:	78303d73 	ldmdavc	r0!, {r0, r1, r4, r5, r6, r8, sl, fp, ip, sp}
 800a6ac:	58382e25 	ldmdapl	r8!, {r0, r2, r5, r9, sl, fp, sp}
 800a6b0:	0000000a 	andeq	r0, r0, sl
 800a6b4:	61766e49 	cmnvs	r6, r9, asr #28
 800a6b8:	5f64696c 	svcpl	0x0064696c
 800a6bc:	65637845 	strbvs	r7, [r3, #-2117]!	; 0xfffff7bb
 800a6c0:	6f697470 	svcvs	0x00697470
 800a6c4:	25203a6e 	strcs	r3, [r0, #-2670]!	; 0xfffff592
 800a6c8:	000a2164 	andeq	r2, sl, r4, ror #2
 800a6cc:	61766e49 	cmnvs	r6, r9, asr #28
 800a6d0:	5f64696c 	svcpl	0x0064696c
 800a6d4:	3a525349 	bcc	949f400 <__RO_LIMIT__+0x1494aa0>
 800a6d8:	21642520 	cmncs	r4, r0, lsr #10
 800a6dc:	0000000a 	andeq	r0, r0, sl
 800a6e0:	21494d4e 	cmpcs	r9, lr, asr #26
 800a6e4:	0000000a 	andeq	r0, r0, sl
 800a6e8:	64726148 	ldrbtvs	r6, [r2], #-328	; 0xfffffeb8
 800a6ec:	75614620 	strbvc	r4, [r1, #-1568]!	; 0xfffff9e0
 800a6f0:	0a21746c 	beq	88678a8 <__RO_LIMIT__+0x85cf48>
 800a6f4:	00000000 	andeq	r0, r0, r0
 800a6f8:	4528524c 	strmi	r5, [r8, #-588]!	; 0xfffffdb4
 800a6fc:	525f4358 	subspl	r4, pc, #88, 6	; 0x60000001
 800a700:	52555445 	subspl	r5, r5, #1157627904	; 0x45000000
 800a704:	303d294e 	eorscc	r2, sp, lr, asr #18
 800a708:	382e2578 	stmdacc	lr!, {r3, r4, r5, r6, r8, sl, sp}
 800a70c:	00000a58 	andeq	r0, r0, r8, asr sl
 800a710:	3d50534d 	ldclcc	3, cr5, [r0, #-308]	; 0xfffffecc
 800a714:	2e257830 	mcrcs	8, 1, r7, cr5, cr0, {1}
 800a718:	000a5838 	andeq	r5, sl, r8, lsr r8
 800a71c:	3d505350 	ldclcc	3, cr5, [r0, #-320]	; 0xfffffec0
 800a720:	2e257830 	mcrcs	8, 1, r7, cr5, cr0, {1}
 800a724:	000a5838 	andeq	r5, sl, r8, lsr r8
 800a728:	65637845 	strbvs	r7, [r3, #-2117]!	; 0xfffff7bb
 800a72c:	6f697470 	svcvs	0x00697470
 800a730:	636f206e 	cmnvs	pc, #110	; 0x6e
 800a734:	73727563 	cmnvc	r2, #415236096	; 0x18c00000
 800a738:	6f726620 	svcvs	0x00726620
 800a73c:	6168206d 	cmnvs	r8, sp, rrx
 800a740:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 800a744:	6f6d2072 	svcvs	0x006d2072
 800a748:	000a6564 	andeq	r6, sl, r4, ror #10
 800a74c:	0050534d 	subseq	r5, r0, sp, asr #6
 800a750:	65637845 	strbvs	r7, [r3, #-2117]!	; 0xfffff7bb
 800a754:	6f697470 	svcvs	0x00697470
 800a758:	636f206e 	cmnvs	pc, #110	; 0x6e
 800a75c:	73727563 	cmnvc	r2, #415236096	; 0x18c00000
 800a760:	6f726620 	svcvs	0x00726620
 800a764:	6874206d 	ldmdavs	r4!, {r0, r2, r3, r5, r6, sp}^
 800a768:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 800a76c:	646f6d20 	strbtvs	r6, [pc], #-3360	; 800a774 <zeroes.6697+0x1a4>
 800a770:	69772065 	ldmdbvs	r7!, {r0, r2, r5, r6, sp}^
 800a774:	4d206874 	stcmi	8, cr6, [r0, #-464]!	; 0xfffffe30
 800a778:	000a5053 	andeq	r5, sl, r3, asr r0
 800a77c:	65637845 	strbvs	r7, [r3, #-2117]!	; 0xfffff7bb
 800a780:	6f697470 	svcvs	0x00697470
 800a784:	636f206e 	cmnvs	pc, #110	; 0x6e
 800a788:	73727563 	cmnvc	r2, #415236096	; 0x18c00000
 800a78c:	6f726620 	svcvs	0x00726620
 800a790:	6874206d 	ldmdavs	r4!, {r0, r2, r3, r5, r6, sp}^
 800a794:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 800a798:	646f6d20 	strbtvs	r6, [pc], #-3360	; 800a7a0 <zeroes.6697+0x1d0>
 800a79c:	69772065 	ldmdbvs	r7!, {r0, r2, r5, r6, sp}^
 800a7a0:	50206874 	eorpl	r6, r0, r4, ror r8
 800a7a4:	000a5053 	andeq	r5, sl, r3, asr r0
 800a7a8:	00505350 	subseq	r5, r0, r0, asr r3
 800a7ac:	61766e49 	cmnvs	r6, r9, asr #28
 800a7b0:	2064696c 	rsbcs	r6, r4, ip, ror #18
 800a7b4:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
 800a7b8:	6f697470 	svcvs	0x00697470
 800a7bc:	6572206e 	ldrbvs	r2, [r2, #-110]!	; 0xffffff92
 800a7c0:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 800a7c4:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 800a7c8:	3d206575 	cfstr32cc	mvfx6, [r0, #-468]!	; 0xfffffe2c
 800a7cc:	2325203e 	teqcs	r5, #62	; 0x3e
 800a7d0:	0a58382e 	beq	9618890 <__RO_LIMIT__+0x160df30>
 800a7d4:	00000000 	andeq	r0, r0, r0
 800a7d8:	53434853 	movtpl	r4, #14419	; 0x3853
 800a7dc:	3e3d2052 	mrccc	0, 1, r2, cr13, cr2, {2}
 800a7e0:	2e232520 	cfsh64cs	mvdx2, mvdx3, #16
 800a7e4:	000a5838 	andeq	r5, sl, r8, lsr r8
 800a7e8:	52534643 	subspl	r4, r3, #70254592	; 0x4300000
 800a7ec:	75614628 	strbvc	r4, [r1, #-1576]!	; 0xfffff9d8
 800a7f0:	5220746c 	eorpl	r7, r0, #108, 8	; 0x6c000000
 800a7f4:	6f736165 	svcvs	0x00736165
 800a7f8:	3d20296e 	stccc	9, cr2, [r0, #-440]!	; 0xfffffe48
 800a7fc:	2325203e 	teqcs	r5, #62	; 0x3e
 800a800:	0a58382e 	beq	96188c0 <__RO_LIMIT__+0x160df60>
 800a804:	00000000 	andeq	r0, r0, r0
 800a808:	41464d4d 	cmpmi	r6, sp, asr #26
 800a80c:	61562052 	cmpvs	r6, r2, asr r0
 800a810:	2064696c 	rsbcs	r6, r4, ip, ror #18
 800a814:	25203e3d 	strcs	r3, [r0, #-3645]!	; 0xfffff1c3
 800a818:	00000a64 	andeq	r0, r0, r4, ror #20
 800a81c:	41464d4d 	cmpmi	r6, sp, asr #26
 800a820:	3e3d2052 	mrccc	0, 1, r2, cr13, cr2, {2}
 800a824:	2e232520 	cfsh64cs	mvdx2, mvdx3, #16
 800a828:	000a5838 	andeq	r5, sl, r8, lsr r8
 800a82c:	52414642 	subpl	r4, r1, #69206016	; 0x4200000
 800a830:	6c615620 	stclvs	6, cr5, [r1], #-128	; 0xffffff80
 800a834:	3d206469 	cfstrscc	mvf6, [r0, #-420]!	; 0xfffffe5c
 800a838:	6425203e 	strtvs	r2, [r5], #-62	; 0xffffffc2
 800a83c:	0000000a 	andeq	r0, r0, sl
 800a840:	52414642 	subpl	r4, r1, #69206016	; 0x4200000
 800a844:	203e3d20 	eorscs	r3, lr, r0, lsr #26
 800a848:	382e2325 	stmdacc	lr!, {r0, r2, r5, r8, r9, sp}
 800a84c:	00000a58 	andeq	r0, r0, r8, asr sl
 800a850:	52534648 	subspl	r4, r3, #72, 12	; 0x4800000
 800a854:	72614828 	rsbvc	r4, r1, #40, 16	; 0x280000
 800a858:	61462064 	cmpvs	r6, r4, rrx
 800a85c:	20746c75 	rsbscs	r6, r4, r5, ror ip
 800a860:	73616552 	cmnvc	r1, #343932928	; 0x14800000
 800a864:	20296e6f 	eorcs	r6, r9, pc, ror #28
 800a868:	25203e3d 	strcs	r3, [r0, #-3645]!	; 0xfffff1c3
 800a86c:	58382e23 	ldmdapl	r8!, {r0, r1, r5, r9, sl, fp, sp}
 800a870:	0000000a 	andeq	r0, r0, sl
 800a874:	6f6d654d 	svcvs	0x006d654d
 800a878:	4d207972 	stcmi	9, cr7, [r0, #-456]!	; 0xfffffe38
 800a87c:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
 800a880:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 800a884:	61462074 	hvcvs	25092	; 0x6204
 800a888:	21746c75 	cmncs	r4, r5, ror ip
 800a88c:	0000000a 	andeq	r0, r0, sl
 800a890:	20737542 	rsbscs	r7, r3, r2, asr #10
 800a894:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
 800a898:	000a2174 	andeq	r2, sl, r4, ror r1
 800a89c:	67617355 			; <UNDEFINED> instruction: 0x67617355
 800a8a0:	61462065 	cmpvs	r6, r5, rrx
 800a8a4:	21746c75 	cmncs	r4, r5, ror ip
 800a8a8:	0000000a 	andeq	r0, r0, sl
 800a8ac:	20435653 	subcs	r5, r3, r3, asr r6
 800a8b0:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
 800a8b4:	0000000a 	andeq	r0, r0, sl
 800a8b8:	75626544 	strbvc	r6, [r2, #-1348]!	; 0xfffffabc
 800a8bc:	6e6f4d67 	cdpvs	13, 6, cr4, cr15, cr7, {3}
 800a8c0:	6c614320 	stclvs	3, cr4, [r1], #-128	; 0xffffff80
 800a8c4:	00000a6c 	andeq	r0, r0, ip, ror #20
 800a8c8:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
 800a8cc:	43205653 	teqmi	r0, #87031808	; 0x5300000
 800a8d0:	0a6c6c61 	beq	9b25a5c <__RO_LIMIT__+0x1b1b0fc>
 800a8d4:	00000000 	andeq	r0, r0, r0
 800a8d8:	00003052 	andeq	r3, r0, r2, asr r0
 800a8dc:	00003152 	andeq	r3, r0, r2, asr r1
 800a8e0:	00003252 	andeq	r3, r0, r2, asr r2
 800a8e4:	00003352 	andeq	r3, r0, r2, asr r3
 800a8e8:	00323152 	eorseq	r3, r2, r2, asr r1
 800a8ec:	0000524c 	andeq	r5, r0, ip, asr #4
 800a8f0:	00004152 	andeq	r4, r0, r2, asr r1
 800a8f4:	52535078 	subspl	r5, r3, #120	; 0x78
 800a8f8:	00000000 	andeq	r0, r0, r0
 800a8fc:	00000043 	andeq	r0, r0, r3, asr #32
 800a900:	00464e49 	subeq	r4, r6, r9, asr #28
 800a904:	00666e69 	rsbeq	r6, r6, r9, ror #28
 800a908:	004e414e 	subeq	r4, lr, lr, asr #2
 800a90c:	006e616e 	rsbeq	r6, lr, lr, ror #2
 800a910:	33323130 	teqcc	r2, #48, 2
 800a914:	37363534 			; <UNDEFINED> instruction: 0x37363534
 800a918:	42413938 	submi	r3, r1, #56, 18	; 0xe0000
 800a91c:	46454443 	strbmi	r4, [r5], -r3, asr #8
 800a920:	00000000 	andeq	r0, r0, r0
 800a924:	33323130 	teqcc	r2, #48, 2
 800a928:	37363534 			; <UNDEFINED> instruction: 0x37363534
 800a92c:	62613938 	rsbvs	r3, r1, #56, 18	; 0xe0000
 800a930:	66656463 	strbtvs	r6, [r5], -r3, ror #8
 800a934:	00000000 	andeq	r0, r0, r0
 800a938:	6c756e28 	ldclvs	14, cr6, [r5], #-160	; 0xffffff60
 800a93c:	0000296c 	andeq	r2, r0, ip, ror #18
 800a940:	00000030 	andeq	r0, r0, r0, lsr r0
 800a944:	69666e49 	stmdbvs	r6!, {r0, r3, r6, r9, sl, fp, sp, lr}^
 800a948:	7974696e 	ldmdbvc	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
 800a94c:	00000000 	andeq	r0, r0, r0
 800a950:	004e614e 	subeq	r6, lr, lr, asr #2
 800a954:	49534f50 	ldmdbmi	r3, {r4, r6, r8, r9, sl, fp, lr}^
 800a958:	00000058 	andeq	r0, r0, r8, asr r0
 800a95c:	0000002e 	andeq	r0, r0, lr, lsr #32

Disassembly of section .data:

20000000 <__RW_BASE__>:
20000000:	00000032 	andeq	r0, r0, r2, lsr r0

20000004 <_impure_ptr>:
20000004:	20000008 	andcs	r0, r0, r8

20000008 <impure_data>:
	...
20000028:	0800a8fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, fp, sp, pc}
	...

200000f8 <lc_ctype_charset>:
200000f8:	49435341 	stmdbmi	r3, {r0, r6, r8, r9, ip, lr}^
200000fc:	00000049 	andeq	r0, r0, r9, asr #32
	...

20000118 <__mb_cur_max>:
20000118:	00000001 	andeq	r0, r0, r1

2000011c <lc_message_charset>:
2000011c:	49435341 	stmdbmi	r3, {r0, r6, r8, r9, ip, lr}^
20000120:	00000049 	andeq	r0, r0, r9, asr #32
	...

2000013c <lconv>:
2000013c:	0800a95c 	stmdaeq	r0, {r2, r3, r4, r6, r8, fp, sp, pc}
20000140:	0800a6f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, sp, pc}
20000144:	0800a6f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, sp, pc}
20000148:	0800a6f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, sp, pc}
2000014c:	0800a6f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, sp, pc}
20000150:	0800a6f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, sp, pc}
20000154:	0800a6f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, sp, pc}
20000158:	0800a6f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, sp, pc}
2000015c:	0800a6f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, sp, pc}
20000160:	0800a6f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, sp, pc}
20000164:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20000168:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000016c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20000170:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

20000174 <__malloc_av_>:
	...
2000017c:	20000174 	andcs	r0, r0, r4, ror r1
20000180:	20000174 	andcs	r0, r0, r4, ror r1
20000184:	2000017c 	andcs	r0, r0, ip, ror r1
20000188:	2000017c 	andcs	r0, r0, ip, ror r1
2000018c:	20000184 	andcs	r0, r0, r4, lsl #3
20000190:	20000184 	andcs	r0, r0, r4, lsl #3
20000194:	2000018c 	andcs	r0, r0, ip, lsl #3
20000198:	2000018c 	andcs	r0, r0, ip, lsl #3
2000019c:	20000194 	mulcs	r0, r4, r1
200001a0:	20000194 	mulcs	r0, r4, r1
200001a4:	2000019c 	mulcs	r0, ip, r1
200001a8:	2000019c 	mulcs	r0, ip, r1
200001ac:	200001a4 	andcs	r0, r0, r4, lsr #3
200001b0:	200001a4 	andcs	r0, r0, r4, lsr #3
200001b4:	200001ac 	andcs	r0, r0, ip, lsr #3
200001b8:	200001ac 	andcs	r0, r0, ip, lsr #3
200001bc:	200001b4 			; <UNDEFINED> instruction: 0x200001b4
200001c0:	200001b4 			; <UNDEFINED> instruction: 0x200001b4
200001c4:	200001bc 			; <UNDEFINED> instruction: 0x200001bc
200001c8:	200001bc 			; <UNDEFINED> instruction: 0x200001bc
200001cc:	200001c4 	andcs	r0, r0, r4, asr #3
200001d0:	200001c4 	andcs	r0, r0, r4, asr #3
200001d4:	200001cc 	andcs	r0, r0, ip, asr #3
200001d8:	200001cc 	andcs	r0, r0, ip, asr #3
200001dc:	200001d4 	ldrdcs	r0, [r0], -r4
200001e0:	200001d4 	ldrdcs	r0, [r0], -r4
200001e4:	200001dc 	ldrdcs	r0, [r0], -ip
200001e8:	200001dc 	ldrdcs	r0, [r0], -ip
200001ec:	200001e4 	andcs	r0, r0, r4, ror #3
200001f0:	200001e4 	andcs	r0, r0, r4, ror #3
200001f4:	200001ec 	andcs	r0, r0, ip, ror #3
200001f8:	200001ec 	andcs	r0, r0, ip, ror #3
200001fc:	200001f4 	strdcs	r0, [r0], -r4
20000200:	200001f4 	strdcs	r0, [r0], -r4
20000204:	200001fc 	strdcs	r0, [r0], -ip
20000208:	200001fc 	strdcs	r0, [r0], -ip
2000020c:	20000204 	andcs	r0, r0, r4, lsl #4
20000210:	20000204 	andcs	r0, r0, r4, lsl #4
20000214:	2000020c 	andcs	r0, r0, ip, lsl #4
20000218:	2000020c 	andcs	r0, r0, ip, lsl #4
2000021c:	20000214 	andcs	r0, r0, r4, lsl r2
20000220:	20000214 	andcs	r0, r0, r4, lsl r2
20000224:	2000021c 	andcs	r0, r0, ip, lsl r2
20000228:	2000021c 	andcs	r0, r0, ip, lsl r2
2000022c:	20000224 	andcs	r0, r0, r4, lsr #4
20000230:	20000224 	andcs	r0, r0, r4, lsr #4
20000234:	2000022c 	andcs	r0, r0, ip, lsr #4
20000238:	2000022c 	andcs	r0, r0, ip, lsr #4
2000023c:	20000234 	andcs	r0, r0, r4, lsr r2
20000240:	20000234 	andcs	r0, r0, r4, lsr r2
20000244:	2000023c 	andcs	r0, r0, ip, lsr r2
20000248:	2000023c 	andcs	r0, r0, ip, lsr r2
2000024c:	20000244 	andcs	r0, r0, r4, asr #4
20000250:	20000244 	andcs	r0, r0, r4, asr #4
20000254:	2000024c 	andcs	r0, r0, ip, asr #4
20000258:	2000024c 	andcs	r0, r0, ip, asr #4
2000025c:	20000254 	andcs	r0, r0, r4, asr r2
20000260:	20000254 	andcs	r0, r0, r4, asr r2
20000264:	2000025c 	andcs	r0, r0, ip, asr r2
20000268:	2000025c 	andcs	r0, r0, ip, asr r2
2000026c:	20000264 	andcs	r0, r0, r4, ror #4
20000270:	20000264 	andcs	r0, r0, r4, ror #4
20000274:	2000026c 	andcs	r0, r0, ip, ror #4
20000278:	2000026c 	andcs	r0, r0, ip, ror #4
2000027c:	20000274 	andcs	r0, r0, r4, ror r2
20000280:	20000274 	andcs	r0, r0, r4, ror r2
20000284:	2000027c 	andcs	r0, r0, ip, ror r2
20000288:	2000027c 	andcs	r0, r0, ip, ror r2
2000028c:	20000284 	andcs	r0, r0, r4, lsl #5
20000290:	20000284 	andcs	r0, r0, r4, lsl #5
20000294:	2000028c 	andcs	r0, r0, ip, lsl #5
20000298:	2000028c 	andcs	r0, r0, ip, lsl #5
2000029c:	20000294 	mulcs	r0, r4, r2
200002a0:	20000294 	mulcs	r0, r4, r2
200002a4:	2000029c 	mulcs	r0, ip, r2
200002a8:	2000029c 	mulcs	r0, ip, r2
200002ac:	200002a4 	andcs	r0, r0, r4, lsr #5
200002b0:	200002a4 	andcs	r0, r0, r4, lsr #5
200002b4:	200002ac 	andcs	r0, r0, ip, lsr #5
200002b8:	200002ac 	andcs	r0, r0, ip, lsr #5
200002bc:	200002b4 			; <UNDEFINED> instruction: 0x200002b4
200002c0:	200002b4 			; <UNDEFINED> instruction: 0x200002b4
200002c4:	200002bc 			; <UNDEFINED> instruction: 0x200002bc
200002c8:	200002bc 			; <UNDEFINED> instruction: 0x200002bc
200002cc:	200002c4 	andcs	r0, r0, r4, asr #5
200002d0:	200002c4 	andcs	r0, r0, r4, asr #5
200002d4:	200002cc 	andcs	r0, r0, ip, asr #5
200002d8:	200002cc 	andcs	r0, r0, ip, asr #5
200002dc:	200002d4 	ldrdcs	r0, [r0], -r4
200002e0:	200002d4 	ldrdcs	r0, [r0], -r4
200002e4:	200002dc 	ldrdcs	r0, [r0], -ip
200002e8:	200002dc 	ldrdcs	r0, [r0], -ip
200002ec:	200002e4 	andcs	r0, r0, r4, ror #5
200002f0:	200002e4 	andcs	r0, r0, r4, ror #5
200002f4:	200002ec 	andcs	r0, r0, ip, ror #5
200002f8:	200002ec 	andcs	r0, r0, ip, ror #5
200002fc:	200002f4 	strdcs	r0, [r0], -r4
20000300:	200002f4 	strdcs	r0, [r0], -r4
20000304:	200002fc 	strdcs	r0, [r0], -ip
20000308:	200002fc 	strdcs	r0, [r0], -ip
2000030c:	20000304 	andcs	r0, r0, r4, lsl #6
20000310:	20000304 	andcs	r0, r0, r4, lsl #6
20000314:	2000030c 	andcs	r0, r0, ip, lsl #6
20000318:	2000030c 	andcs	r0, r0, ip, lsl #6
2000031c:	20000314 	andcs	r0, r0, r4, lsl r3
20000320:	20000314 	andcs	r0, r0, r4, lsl r3
20000324:	2000031c 	andcs	r0, r0, ip, lsl r3
20000328:	2000031c 	andcs	r0, r0, ip, lsl r3
2000032c:	20000324 	andcs	r0, r0, r4, lsr #6
20000330:	20000324 	andcs	r0, r0, r4, lsr #6
20000334:	2000032c 	andcs	r0, r0, ip, lsr #6
20000338:	2000032c 	andcs	r0, r0, ip, lsr #6
2000033c:	20000334 	andcs	r0, r0, r4, lsr r3
20000340:	20000334 	andcs	r0, r0, r4, lsr r3
20000344:	2000033c 	andcs	r0, r0, ip, lsr r3
20000348:	2000033c 	andcs	r0, r0, ip, lsr r3
2000034c:	20000344 	andcs	r0, r0, r4, asr #6
20000350:	20000344 	andcs	r0, r0, r4, asr #6
20000354:	2000034c 	andcs	r0, r0, ip, asr #6
20000358:	2000034c 	andcs	r0, r0, ip, asr #6
2000035c:	20000354 	andcs	r0, r0, r4, asr r3
20000360:	20000354 	andcs	r0, r0, r4, asr r3
20000364:	2000035c 	andcs	r0, r0, ip, asr r3
20000368:	2000035c 	andcs	r0, r0, ip, asr r3
2000036c:	20000364 	andcs	r0, r0, r4, ror #6
20000370:	20000364 	andcs	r0, r0, r4, ror #6
20000374:	2000036c 	andcs	r0, r0, ip, ror #6
20000378:	2000036c 	andcs	r0, r0, ip, ror #6
2000037c:	20000374 	andcs	r0, r0, r4, ror r3
20000380:	20000374 	andcs	r0, r0, r4, ror r3
20000384:	2000037c 	andcs	r0, r0, ip, ror r3
20000388:	2000037c 	andcs	r0, r0, ip, ror r3
2000038c:	20000384 	andcs	r0, r0, r4, lsl #7
20000390:	20000384 	andcs	r0, r0, r4, lsl #7
20000394:	2000038c 	andcs	r0, r0, ip, lsl #7
20000398:	2000038c 	andcs	r0, r0, ip, lsl #7
2000039c:	20000394 	mulcs	r0, r4, r3
200003a0:	20000394 	mulcs	r0, r4, r3
200003a4:	2000039c 	mulcs	r0, ip, r3
200003a8:	2000039c 	mulcs	r0, ip, r3
200003ac:	200003a4 	andcs	r0, r0, r4, lsr #7
200003b0:	200003a4 	andcs	r0, r0, r4, lsr #7
200003b4:	200003ac 	andcs	r0, r0, ip, lsr #7
200003b8:	200003ac 	andcs	r0, r0, ip, lsr #7
200003bc:	200003b4 			; <UNDEFINED> instruction: 0x200003b4
200003c0:	200003b4 			; <UNDEFINED> instruction: 0x200003b4
200003c4:	200003bc 			; <UNDEFINED> instruction: 0x200003bc
200003c8:	200003bc 			; <UNDEFINED> instruction: 0x200003bc
200003cc:	200003c4 	andcs	r0, r0, r4, asr #7
200003d0:	200003c4 	andcs	r0, r0, r4, asr #7
200003d4:	200003cc 	andcs	r0, r0, ip, asr #7
200003d8:	200003cc 	andcs	r0, r0, ip, asr #7
200003dc:	200003d4 	ldrdcs	r0, [r0], -r4
200003e0:	200003d4 	ldrdcs	r0, [r0], -r4
200003e4:	200003dc 	ldrdcs	r0, [r0], -ip
200003e8:	200003dc 	ldrdcs	r0, [r0], -ip
200003ec:	200003e4 	andcs	r0, r0, r4, ror #7
200003f0:	200003e4 	andcs	r0, r0, r4, ror #7
200003f4:	200003ec 	andcs	r0, r0, ip, ror #7
200003f8:	200003ec 	andcs	r0, r0, ip, ror #7
200003fc:	200003f4 	strdcs	r0, [r0], -r4
20000400:	200003f4 	strdcs	r0, [r0], -r4
20000404:	200003fc 	strdcs	r0, [r0], -ip
20000408:	200003fc 	strdcs	r0, [r0], -ip
2000040c:	20000404 	andcs	r0, r0, r4, lsl #8
20000410:	20000404 	andcs	r0, r0, r4, lsl #8
20000414:	2000040c 	andcs	r0, r0, ip, lsl #8
20000418:	2000040c 	andcs	r0, r0, ip, lsl #8
2000041c:	20000414 	andcs	r0, r0, r4, lsl r4
20000420:	20000414 	andcs	r0, r0, r4, lsl r4
20000424:	2000041c 	andcs	r0, r0, ip, lsl r4
20000428:	2000041c 	andcs	r0, r0, ip, lsl r4
2000042c:	20000424 	andcs	r0, r0, r4, lsr #8
20000430:	20000424 	andcs	r0, r0, r4, lsr #8
20000434:	2000042c 	andcs	r0, r0, ip, lsr #8
20000438:	2000042c 	andcs	r0, r0, ip, lsr #8
2000043c:	20000434 	andcs	r0, r0, r4, lsr r4
20000440:	20000434 	andcs	r0, r0, r4, lsr r4
20000444:	2000043c 	andcs	r0, r0, ip, lsr r4
20000448:	2000043c 	andcs	r0, r0, ip, lsr r4
2000044c:	20000444 	andcs	r0, r0, r4, asr #8
20000450:	20000444 	andcs	r0, r0, r4, asr #8
20000454:	2000044c 	andcs	r0, r0, ip, asr #8
20000458:	2000044c 	andcs	r0, r0, ip, asr #8
2000045c:	20000454 	andcs	r0, r0, r4, asr r4
20000460:	20000454 	andcs	r0, r0, r4, asr r4
20000464:	2000045c 	andcs	r0, r0, ip, asr r4
20000468:	2000045c 	andcs	r0, r0, ip, asr r4
2000046c:	20000464 	andcs	r0, r0, r4, ror #8
20000470:	20000464 	andcs	r0, r0, r4, ror #8
20000474:	2000046c 	andcs	r0, r0, ip, ror #8
20000478:	2000046c 	andcs	r0, r0, ip, ror #8
2000047c:	20000474 	andcs	r0, r0, r4, ror r4
20000480:	20000474 	andcs	r0, r0, r4, ror r4
20000484:	2000047c 	andcs	r0, r0, ip, ror r4
20000488:	2000047c 	andcs	r0, r0, ip, ror r4
2000048c:	20000484 	andcs	r0, r0, r4, lsl #9
20000490:	20000484 	andcs	r0, r0, r4, lsl #9
20000494:	2000048c 	andcs	r0, r0, ip, lsl #9
20000498:	2000048c 	andcs	r0, r0, ip, lsl #9
2000049c:	20000494 	mulcs	r0, r4, r4
200004a0:	20000494 	mulcs	r0, r4, r4
200004a4:	2000049c 	mulcs	r0, ip, r4
200004a8:	2000049c 	mulcs	r0, ip, r4
200004ac:	200004a4 	andcs	r0, r0, r4, lsr #9
200004b0:	200004a4 	andcs	r0, r0, r4, lsr #9
200004b4:	200004ac 	andcs	r0, r0, ip, lsr #9
200004b8:	200004ac 	andcs	r0, r0, ip, lsr #9
200004bc:	200004b4 			; <UNDEFINED> instruction: 0x200004b4
200004c0:	200004b4 			; <UNDEFINED> instruction: 0x200004b4
200004c4:	200004bc 			; <UNDEFINED> instruction: 0x200004bc
200004c8:	200004bc 			; <UNDEFINED> instruction: 0x200004bc
200004cc:	200004c4 	andcs	r0, r0, r4, asr #9
200004d0:	200004c4 	andcs	r0, r0, r4, asr #9
200004d4:	200004cc 	andcs	r0, r0, ip, asr #9
200004d8:	200004cc 	andcs	r0, r0, ip, asr #9
200004dc:	200004d4 	ldrdcs	r0, [r0], -r4
200004e0:	200004d4 	ldrdcs	r0, [r0], -r4
200004e4:	200004dc 	ldrdcs	r0, [r0], -ip
200004e8:	200004dc 	ldrdcs	r0, [r0], -ip
200004ec:	200004e4 	andcs	r0, r0, r4, ror #9
200004f0:	200004e4 	andcs	r0, r0, r4, ror #9
200004f4:	200004ec 	andcs	r0, r0, ip, ror #9
200004f8:	200004ec 	andcs	r0, r0, ip, ror #9
200004fc:	200004f4 	strdcs	r0, [r0], -r4
20000500:	200004f4 	strdcs	r0, [r0], -r4
20000504:	200004fc 	strdcs	r0, [r0], -ip
20000508:	200004fc 	strdcs	r0, [r0], -ip
2000050c:	20000504 	andcs	r0, r0, r4, lsl #10
20000510:	20000504 	andcs	r0, r0, r4, lsl #10
20000514:	2000050c 	andcs	r0, r0, ip, lsl #10
20000518:	2000050c 	andcs	r0, r0, ip, lsl #10
2000051c:	20000514 	andcs	r0, r0, r4, lsl r5
20000520:	20000514 	andcs	r0, r0, r4, lsl r5
20000524:	2000051c 	andcs	r0, r0, ip, lsl r5
20000528:	2000051c 	andcs	r0, r0, ip, lsl r5
2000052c:	20000524 	andcs	r0, r0, r4, lsr #10
20000530:	20000524 	andcs	r0, r0, r4, lsr #10
20000534:	2000052c 	andcs	r0, r0, ip, lsr #10
20000538:	2000052c 	andcs	r0, r0, ip, lsr #10
2000053c:	20000534 	andcs	r0, r0, r4, lsr r5
20000540:	20000534 	andcs	r0, r0, r4, lsr r5
20000544:	2000053c 	andcs	r0, r0, ip, lsr r5
20000548:	2000053c 	andcs	r0, r0, ip, lsr r5
2000054c:	20000544 	andcs	r0, r0, r4, asr #10
20000550:	20000544 	andcs	r0, r0, r4, asr #10
20000554:	2000054c 	andcs	r0, r0, ip, asr #10
20000558:	2000054c 	andcs	r0, r0, ip, asr #10
2000055c:	20000554 	andcs	r0, r0, r4, asr r5
20000560:	20000554 	andcs	r0, r0, r4, asr r5
20000564:	2000055c 	andcs	r0, r0, ip, asr r5
20000568:	2000055c 	andcs	r0, r0, ip, asr r5
2000056c:	20000564 	andcs	r0, r0, r4, ror #10
20000570:	20000564 	andcs	r0, r0, r4, ror #10
20000574:	2000056c 	andcs	r0, r0, ip, ror #10
20000578:	2000056c 	andcs	r0, r0, ip, ror #10

2000057c <__malloc_sbrk_base>:
2000057c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000580 <__malloc_trim_threshold>:
20000580:	00020000 	andeq	r0, r2, r0

Disassembly of section .bss:

20000584 <__ZI_BASE__>:
20000584:	00000000 	andeq	r0, r0, r0

20000588 <heap.4816>:
20000588:	00000000 	andeq	r0, r0, r0

2000058c <SysTick_Flag>:
2000058c:	00000000 	andeq	r0, r0, r0

20000590 <Key_Value>:
20000590:	00000000 	andeq	r0, r0, r0

20000594 <Uart1_Rx_Data>:
20000594:	00000000 	andeq	r0, r0, r0

20000598 <Uart1_Rx_In>:
20000598:	00000000 	andeq	r0, r0, r0

2000059c <_PathLocale>:
2000059c:	00000000 	andeq	r0, r0, r0

200005a0 <__mlocale_changed>:
200005a0:	00000000 	andeq	r0, r0, r0

200005a4 <__nlocale_changed>:
200005a4:	00000000 	andeq	r0, r0, r0

200005a8 <__malloc_top_pad>:
200005a8:	00000000 	andeq	r0, r0, r0

200005ac <__malloc_current_mallinfo>:
	...

200005d4 <__malloc_max_sbrked_mem>:
200005d4:	00000000 	andeq	r0, r0, r0

200005d8 <__malloc_max_total_mem>:
200005d8:	00000000 	andeq	r0, r0, r0

200005dc <__ZI_LIMIT__>:
200005dc:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	000001c7 	andeq	r0, r0, r7, asr #3
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	000000f9 	strdeq	r0, [r0], -r9
      10:	00003a01 	andeq	r3, r0, r1, lsl #20
      14:	00004200 	andeq	r4, r0, r0, lsl #4
      18:	0031ec00 	eorseq	lr, r1, r0, lsl #24
      1c:	00005808 	andeq	r5, r0, r8, lsl #16
      20:	00000000 	andeq	r0, r0, r0
      24:	06010200 	streq	r0, [r1], -r0, lsl #4
      28:	000000b3 	strheq	r0, [r0], -r3
      2c:	b1080102 	tstlt	r8, r2, lsl #2
      30:	02000000 	andeq	r0, r0, #0
      34:	01a30502 			; <UNDEFINED> instruction: 0x01a30502
      38:	02020000 	andeq	r0, r2, #0
      3c:	00008907 	andeq	r8, r0, r7, lsl #18
      40:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      44:	00000005 	andeq	r0, r0, r5
      48:	0001b903 	andeq	fp, r1, r3, lsl #18
      4c:	53500300 	cmppl	r0, #0, 6
      50:	02000000 	andeq	r0, r0, #0
      54:	00e70704 	rsceq	r0, r7, r4, lsl #14
      58:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      5c:	00000005 	andeq	r0, r0, r5
      60:	07080200 	streq	r0, [r8, -r0, lsl #4]
      64:	000000e2 	andeq	r0, r0, r2, ror #1
      68:	69050404 	stmdbvs	r5, {r2, sl}
      6c:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
      70:	00ec0704 	rsceq	r0, ip, r4, lsl #14
      74:	04020000 	streq	r0, [r2], #-0
      78:	00018f07 	andeq	r8, r1, r7, lsl #30
      7c:	00480500 	subeq	r0, r8, r0, lsl #10
      80:	24060000 	strcs	r0, [r6], #-0
      84:	fe038502 	cdp2	5, 0, cr8, cr3, cr2, {0}
      88:	07000000 	streq	r0, [r0, -r0]
      8c:	00524341 	subseq	r4, r2, r1, asr #6
      90:	7d038702 	stcvc	7, cr8, [r3, #-8]
      94:	00000000 	andeq	r0, r0, r0
      98:	0000ac08 	andeq	sl, r0, r8, lsl #24
      9c:	03880200 	orreq	r0, r8, #0, 4
      a0:	0000007d 	andeq	r0, r0, sp, ror r0
      a4:	00a90804 	adceq	r0, r9, r4, lsl #16
      a8:	89020000 	stmdbhi	r2, {}	; <UNPREDICTABLE>
      ac:	00007d03 	andeq	r7, r0, r3, lsl #26
      b0:	53070800 	movwpl	r0, #30720	; 0x7800
      b4:	8a020052 	bhi	80204 <__RW_SIZE__+0x7fc80>
      b8:	00007d03 	andeq	r7, r0, r3, lsl #26
      bc:	43070c00 	movwmi	r0, #31744	; 0x7c00
      c0:	8b020052 	blhi	80210 <__RW_SIZE__+0x7fc8c>
      c4:	00007d03 	andeq	r7, r0, r3, lsl #26
      c8:	41071000 	mrsmi	r1, (UNDEF: 7)
      cc:	8c020052 	stchi	0, cr0, [r2], {82}	; 0x52
      d0:	00007d03 	andeq	r7, r0, r3, lsl #26
      d4:	bf081400 	svclt	0x00081400
      d8:	02000000 	andeq	r0, r0, #0
      dc:	007d038d 	rsbseq	r0, sp, sp, lsl #7
      e0:	07180000 	ldreq	r0, [r8, -r0]
      e4:	0052424f 	subseq	r4, r2, pc, asr #4
      e8:	7d038e02 	stcvc	14, cr8, [r3, #-8]
      ec:	1c000000 	stcne	0, cr0, [r0], {-0}
      f0:	00002d08 	andeq	r2, r0, r8, lsl #26
      f4:	038f0200 	orreq	r0, pc, #0, 4
      f8:	0000007d 	andeq	r0, r0, sp, ror r0
      fc:	18090020 	stmdane	r9, {r5}
     100:	02000000 	andeq	r0, r0, #0
     104:	00820398 	umulleq	r0, r2, r8, r3
     108:	28060000 	stmdacs	r6, {}	; <UNPREDICTABLE>
     10c:	95043402 	strls	r3, [r4, #-1026]	; 0xfffffbfe
     110:	07000001 	streq	r0, [r0, -r1]
     114:	02005243 	andeq	r5, r0, #805306372	; 0x30000004
     118:	007d0436 	rsbseq	r0, sp, r6, lsr r4
     11c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     120:	00000013 	andeq	r0, r0, r3, lsl r0
     124:	7d043702 	stcvc	7, cr3, [r4, #-8]
     128:	04000000 	streq	r0, [r0], #-0
     12c:	52494307 	subpl	r4, r9, #469762048	; 0x1c000000
     130:	04380200 	ldrteq	r0, [r8], #-512	; 0xfffffe00
     134:	0000007d 	andeq	r0, r0, sp, ror r0
     138:	00d90808 	sbcseq	r0, r9, r8, lsl #16
     13c:	39020000 	stmdbcc	r2, {}	; <UNPREDICTABLE>
     140:	00007d04 	andeq	r7, r0, r4, lsl #26
     144:	c8080c00 	stmdagt	r8, {sl, fp}
     148:	02000000 	andeq	r0, r0, #0
     14c:	007d043a 	rsbseq	r0, sp, sl, lsr r4
     150:	08100000 	ldmdaeq	r0, {}	; <UNPREDICTABLE>
     154:	00000026 	andeq	r0, r0, r6, lsr #32
     158:	7d043b02 	vstrvc	d3, [r4, #-8]
     15c:	14000000 	strne	r0, [r0], #-0
     160:	00003208 	andeq	r3, r0, r8, lsl #4
     164:	043c0200 	ldrteq	r0, [ip], #-512	; 0xfffffe00
     168:	0000007d 	andeq	r0, r0, sp, ror r0
     16c:	00d10818 	sbcseq	r0, r1, r8, lsl r8
     170:	3d020000 	stccc	0, cr0, [r2, #-0]
     174:	00007d04 	andeq	r7, r0, r4, lsl #26
     178:	0e081c00 	cdpeq	12, 0, cr1, cr8, cr0, {0}
     17c:	02000000 	andeq	r0, r0, #0
     180:	007d043e 	rsbseq	r0, sp, lr, lsr r4
     184:	07200000 	streq	r0, [r0, -r0]!
     188:	00525343 	subseq	r5, r2, r3, asr #6
     18c:	7d043f02 	stcvc	15, cr3, [r4, #-8]
     190:	24000000 	strcs	r0, [r0], #-0
     194:	01ad0900 			; <UNDEFINED> instruction: 0x01ad0900
     198:	4a020000 	bmi	801a0 <__RW_SIZE__+0x7fc1c>
     19c:	00010a04 	andeq	r0, r1, r4, lsl #20
     1a0:	08010200 	stmdaeq	r1, {r9}
     1a4:	000000ba 	strheq	r0, [r0], -sl
     1a8:	0001980a 	andeq	r9, r1, sl, lsl #16
     1ac:	ec030100 	stfs	f0, [r3], {-0}
     1b0:	58080031 	stmdapl	r8, {r0, r4, r5}
     1b4:	01000000 	mrseq	r0, (UNDEF: 0)
     1b8:	009c0b9c 	umullseq	r0, ip, ip, fp
     1bc:	ce040000 	cdpgt	0, 0, cr0, cr4, cr0, {0}
     1c0:	0001c506 	andeq	ip, r1, r6, lsl #10
     1c4:	00680500 	rsbeq	r0, r8, r0, lsl #10
     1c8:	05000000 	streq	r0, [r0, #-0]
     1cc:	04000005 	streq	r0, [r0], #-5
     1d0:	00009f00 	andeq	r9, r0, r0, lsl #30
     1d4:	f9010400 			; <UNDEFINED> instruction: 0xf9010400
     1d8:	01000000 	mrseq	r0, (UNDEF: 0)
     1dc:	0000020e 	andeq	r0, r0, lr, lsl #4
     1e0:	00000042 	andeq	r0, r0, r2, asr #32
	...
     1ec:	000000a7 	andeq	r0, r0, r7, lsr #1
     1f0:	b3060102 	movwlt	r0, #24834	; 0x6102
     1f4:	03000000 	movweq	r0, #0
     1f8:	0000027d 	andeq	r0, r0, sp, ror r2
     1fc:	00372a02 	eorseq	r2, r7, r2, lsl #20
     200:	01020000 	mrseq	r0, (UNDEF: 2)
     204:	0000b108 	andeq	fp, r0, r8, lsl #2
     208:	02db0300 	sbcseq	r0, fp, #0, 6
     20c:	35020000 	strcc	r0, [r2, #-0]
     210:	00000049 	andeq	r0, r0, r9, asr #32
     214:	a3050202 	movwge	r0, #20994	; 0x5202
     218:	03000001 	movweq	r0, #1
     21c:	000002da 	ldrdeq	r0, [r0], -sl
     220:	005b3602 	subseq	r3, fp, r2, lsl #12
     224:	02020000 	andeq	r0, r2, #0
     228:	00008907 	andeq	r8, r0, r7, lsl #18
     22c:	01ba0300 			; <UNDEFINED> instruction: 0x01ba0300
     230:	4f020000 	svcmi	0x00020000
     234:	0000006d 	andeq	r0, r0, sp, rrx
     238:	05050402 	streq	r0, [r5, #-1026]	; 0xfffffbfe
     23c:	03000000 	movweq	r0, #0
     240:	000001b9 			; <UNDEFINED> instruction: 0x000001b9
     244:	007f5002 	rsbseq	r5, pc, r2
     248:	04020000 	streq	r0, [r2], #-0
     24c:	0000e707 	andeq	lr, r0, r7, lsl #14
     250:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
     254:	00000000 	andeq	r0, r0, r0
     258:	e2070802 	and	r0, r7, #131072	; 0x20000
     25c:	04000000 	streq	r0, [r0], #-0
     260:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     264:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
     268:	0000ec07 	andeq	lr, r0, r7, lsl #24
     26c:	022d0500 	eoreq	r0, sp, #0, 10
     270:	bf010000 	svclt	0x00010000
     274:	00007401 	andeq	r7, r0, r1, lsl #8
     278:	00324400 	eorseq	r4, r2, r0, lsl #8
     27c:	00000808 	andeq	r0, r0, r8, lsl #16
     280:	cd9c0100 	ldfgts	f0, [ip]
     284:	06000000 	streq	r0, [r0], -r0
     288:	00000285 	andeq	r0, r0, r5, lsl #5
     28c:	7401c101 	strvc	ip, [r1], #-257	; 0xfffffeff
	...
     298:	00023707 	andeq	r3, r2, r7, lsl #14
     29c:	01d20100 	bicseq	r0, r2, r0, lsl #2
     2a0:	0800324c 	stmdaeq	r0, {r2, r3, r6, r9, ip, sp}
     2a4:	00000006 	andeq	r0, r0, r6
     2a8:	00f29c01 	rscseq	r9, r2, r1, lsl #24
     2ac:	f5080000 			; <UNDEFINED> instruction: 0xf5080000
     2b0:	01000001 	tsteq	r0, r1
     2b4:	007401d2 	ldrsbteq	r0, [r4], #-18	; 0xffffffee
     2b8:	50010000 	andpl	r0, r1, r0
     2bc:	02190500 	andseq	r0, r9, #0, 10
     2c0:	e1010000 	mrs	r0, (UNDEF: 1)
     2c4:	00007401 	andeq	r7, r0, r1, lsl #8
     2c8:	00325400 	eorseq	r5, r2, r0, lsl #8
     2cc:	00000808 	andeq	r0, r0, r8, lsl #16
     2d0:	1d9c0100 	ldfnes	f0, [ip]
     2d4:	06000001 	streq	r0, [r0], -r1
     2d8:	00000285 	andeq	r0, r0, r5, lsl #5
     2dc:	7401e301 	strvc	lr, [r1], #-769	; 0xfffffcff
     2e0:	1f000000 	svcne	0x00000000
     2e4:	00000000 	andeq	r0, r0, r0
     2e8:	00022307 	andeq	r2, r2, r7, lsl #6
     2ec:	01f40100 	mvnseq	r0, r0, lsl #2
     2f0:	0800325c 	stmdaeq	r0, {r2, r3, r4, r6, r9, ip, sp}
     2f4:	00000006 	andeq	r0, r0, r6
     2f8:	01429c01 	cmpeq	r2, r1, lsl #24
     2fc:	94080000 	strls	r0, [r8], #-0
     300:	01000002 	tsteq	r0, r2
     304:	007401f4 	ldrshteq	r0, [r4], #-20	; 0xffffffec
     308:	50010000 	andpl	r0, r1, r0
     30c:	02cc0500 	sbceq	r0, ip, #0, 10
     310:	01010000 	mrseq	r0, (UNDEF: 1)
     314:	00007402 	andeq	r7, r0, r2, lsl #8
     318:	00326400 	eorseq	r6, r2, r0, lsl #8
     31c:	00000608 	andeq	r0, r0, r8, lsl #12
     320:	6d9c0100 	ldfvss	f0, [ip]
     324:	06000001 	streq	r0, [r0], -r1
     328:	00000285 	andeq	r0, r0, r5, lsl #5
     32c:	74020301 	strvc	r0, [r2], #-769	; 0xfffffcff
     330:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
     334:	00000000 	andeq	r0, r0, r0
     338:	00026f07 	andeq	r6, r2, r7, lsl #30
     33c:	02100100 	andseq	r0, r0, #0, 2
     340:	0800326c 	stmdaeq	r0, {r2, r3, r5, r6, r9, ip, sp}
     344:	00000006 	andeq	r0, r0, r6
     348:	01929c01 	orrseq	r9, r2, r1, lsl #24
     34c:	de080000 	cdple	0, 0, cr0, cr8, cr0, {0}
     350:	01000001 	tsteq	r0, r1
     354:	00740210 	rsbseq	r0, r4, r0, lsl r2
     358:	50010000 	andpl	r0, r1, r0
     35c:	02490500 	subeq	r0, r9, #0, 10
     360:	1c010000 	stcne	0, cr0, [r1], {-0}
     364:	00007402 	andeq	r7, r0, r2, lsl #8
     368:	00327400 	eorseq	r7, r2, r0, lsl #8
     36c:	00000608 	andeq	r0, r0, r8, lsl #12
     370:	bd9c0100 	ldflts	f0, [ip]
     374:	06000001 	streq	r0, [r0], -r1
     378:	00000285 	andeq	r0, r0, r5, lsl #5
     37c:	74021e01 	strvc	r1, [r2], #-3585	; 0xfffff1ff
     380:	5d000000 	stcpl	0, cr0, [r0, #-0]
     384:	00000000 	andeq	r0, r0, r0
     388:	0002a307 	andeq	sl, r2, r7, lsl #6
     38c:	022b0100 	eoreq	r0, fp, #0, 2
     390:	0800327c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, ip, sp}
     394:	00000006 	andeq	r0, r0, r6
     398:	01e29c01 	mvneq	r9, r1, lsl #24
     39c:	ed080000 	stc	0, cr0, [r8, #-0]
     3a0:	01000001 	tsteq	r0, r1
     3a4:	0074022b 	rsbseq	r0, r4, fp, lsr #4
     3a8:	50010000 	andpl	r0, r1, r0
     3ac:	02fe0500 	rscseq	r0, lr, #0, 10
     3b0:	37010000 	strcc	r0, [r1, -r0]
     3b4:	00007402 	andeq	r7, r0, r2, lsl #8
     3b8:	00328400 	eorseq	r8, r2, r0, lsl #8
     3bc:	00000608 	andeq	r0, r0, r8, lsl #12
     3c0:	0d9c0100 	ldfeqs	f0, [ip]
     3c4:	06000002 	streq	r0, [r0], -r2
     3c8:	00000285 	andeq	r0, r0, r5, lsl #5
     3cc:	74023901 	strvc	r3, [r2], #-2305	; 0xfffff6ff
     3d0:	7c000000 	stcvc	0, cr0, [r0], {-0}
     3d4:	00000000 	andeq	r0, r0, r0
     3d8:	00025707 	andeq	r5, r2, r7, lsl #14
     3dc:	02460100 	subeq	r0, r6, #0, 2
     3e0:	0800328c 	stmdaeq	r0, {r2, r3, r7, r9, ip, sp}
     3e4:	00000006 	andeq	r0, r0, r6
     3e8:	02329c01 	eorseq	r9, r2, #256	; 0x100
     3ec:	04080000 	streq	r0, [r8], #-0
     3f0:	01000002 	tsteq	r0, r2
     3f4:	00740246 	rsbseq	r0, r4, r6, asr #4
     3f8:	50010000 	andpl	r0, r1, r0
     3fc:	02b70500 	adcseq	r0, r7, #0, 10
     400:	52010000 	andpl	r0, r1, #0
     404:	00007402 	andeq	r7, r0, r2, lsl #8
     408:	00329400 	eorseq	r9, r2, r0, lsl #8
     40c:	00000608 	andeq	r0, r0, r8, lsl #12
     410:	5d9c0100 	ldfpls	f0, [ip]
     414:	06000002 	streq	r0, [r0], -r2
     418:	00000285 	andeq	r0, r0, r5, lsl #5
     41c:	74025401 	strvc	r5, [r2], #-1025	; 0xfffffbff
     420:	9b000000 	blls	428 <MSP_SIZE+0x28>
     424:	00000000 	andeq	r0, r0, r0
     428:	0001d007 	andeq	sp, r1, r7
     42c:	02610100 	rsbeq	r0, r1, #0, 2
     430:	0800329c 	stmdaeq	r0, {r2, r3, r4, r7, r9, ip, sp}
     434:	00000006 	andeq	r0, r0, r6
     438:	02829c01 	addeq	r9, r2, #256	; 0x100
     43c:	67080000 	strvs	r0, [r8, -r0]
     440:	01000002 	tsteq	r0, r2
     444:	00740261 	rsbseq	r0, r4, r1, ror #4
     448:	50010000 	andpl	r0, r1, r0
     44c:	02b10500 	adcseq	r0, r1, #0, 10
     450:	6f010000 	svcvs	0x00010000
     454:	00007402 	andeq	r7, r0, r2, lsl #8
     458:	0032a400 	eorseq	sl, r2, r0, lsl #8
     45c:	00000408 	andeq	r0, r0, r8, lsl #8
     460:	bd9c0100 	ldflts	f0, [ip]
     464:	09000002 	stmdbeq	r0, {r1}
     468:	000001de 	ldrdeq	r0, [r0], -lr
     46c:	74026f01 	strvc	r6, [r2], #-3841	; 0xfffff0ff
     470:	ba000000 	blt	478 <MSP_SIZE+0x78>
     474:	06000000 	streq	r0, [r0], -r0
     478:	00000285 	andeq	r0, r0, r5, lsl #5
     47c:	74027101 	strvc	r7, [r2], #-257	; 0xfffffeff
     480:	db000000 	blle	488 <MSP_SIZE+0x88>
     484:	00000000 	andeq	r0, r0, r0
     488:	00024105 	andeq	r4, r2, r5, lsl #2
     48c:	027f0100 	rsbseq	r0, pc, #0, 2
     490:	00000074 	andeq	r0, r0, r4, ror r0
     494:	080032a8 	stmdaeq	r0, {r3, r5, r7, r9, ip, sp}
     498:	00000004 	andeq	r0, r0, r4
     49c:	02f89c01 	rscseq	r9, r8, #256	; 0x100
     4a0:	de090000 	cdple	0, 0, cr0, cr9, cr0, {0}
     4a4:	01000001 	tsteq	r0, r1
     4a8:	0050027f 	subseq	r0, r0, pc, ror r2
     4ac:	00fa0000 	rscseq	r0, sl, r0
     4b0:	85060000 	strhi	r0, [r6, #-0]
     4b4:	01000002 	tsteq	r0, r2
     4b8:	00740281 	rsbseq	r0, r4, r1, lsl #5
     4bc:	011b0000 	tsteq	fp, r0
     4c0:	05000000 	streq	r0, [r0, #-0]
     4c4:	0000028c 	andeq	r0, r0, ip, lsl #5
     4c8:	62028f01 	andvs	r8, r2, #1, 30
     4cc:	ac000000 	stcge	0, cr0, [r0], {-0}
     4d0:	04080032 	streq	r0, [r8], #-50	; 0xffffffce
     4d4:	01000000 	mrseq	r0, (UNDEF: 0)
     4d8:	0003339c 	muleq	r3, ip, r3
     4dc:	01de0900 	bicseq	r0, lr, r0, lsl #18
     4e0:	8f010000 	svchi	0x00010000
     4e4:	00003e02 	andeq	r3, r0, r2, lsl #28
     4e8:	00013a00 	andeq	r3, r1, r0, lsl #20
     4ec:	02850600 	addeq	r0, r5, #0, 12
     4f0:	91010000 	mrsls	r0, (UNDEF: 1)
     4f4:	00007402 	andeq	r7, r0, r2, lsl #8
     4f8:	00015b00 	andeq	r5, r1, r0, lsl #22
     4fc:	c5050000 	strgt	r0, [r5, #-0]
     500:	01000002 	tsteq	r0, r2
     504:	0074029f 			; <UNDEFINED> instruction: 0x0074029f
     508:	32b00000 	adcscc	r0, r0, #0
     50c:	00060800 	andeq	r0, r6, r0, lsl #16
     510:	9c010000 	stcls	0, cr0, [r1], {-0}
     514:	0000036e 	andeq	r0, r0, lr, ror #6
     518:	0001de09 	andeq	sp, r1, r9, lsl #28
     51c:	029f0100 	addseq	r0, pc, #0, 2
     520:	00000074 	andeq	r0, r0, r4, ror r0
     524:	0000017a 	andeq	r0, r0, sl, ror r1
     528:	00028506 	andeq	r8, r2, r6, lsl #10
     52c:	02a10100 	adceq	r0, r1, #0, 2
     530:	00000074 	andeq	r0, r0, r4, ror r0
     534:	0000019b 	muleq	r0, fp, r1
     538:	02ec0500 	rsceq	r0, ip, #0, 10
     53c:	af010000 	svcge	0x00010000
     540:	00002c02 	andeq	r2, r0, r2, lsl #24
     544:	0032b800 	eorseq	fp, r2, r0, lsl #16
     548:	00000808 	andeq	r0, r0, r8, lsl #16
     54c:	a99c0100 	ldmibge	ip, {r8}
     550:	09000003 	stmdbeq	r0, {r0, r1}
     554:	000001cb 	andeq	r0, r0, fp, asr #3
     558:	a902af01 	stmdbge	r2, {r0, r8, r9, sl, fp, sp, pc}
     55c:	ba000003 	blt	570 <MSP_SIZE+0x170>
     560:	06000001 	streq	r0, [r0], -r1
     564:	00000285 	andeq	r0, r0, r5, lsl #5
     568:	2c02b101 	stfcsd	f3, [r2], {1}
     56c:	db000000 	blle	574 <MSP_SIZE+0x174>
     570:	00000001 	andeq	r0, r0, r1
     574:	002c040a 	eoreq	r0, ip, sl, lsl #8
     578:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
     57c:	01000003 	tsteq	r0, r3
     580:	005002bf 	ldrheq	r0, [r0], #-47	; 0xffffffd1
     584:	32c00000 	sbccc	r0, r0, #0
     588:	00080800 	andeq	r0, r8, r0, lsl #16
     58c:	9c010000 	stcls	0, cr0, [r1], {-0}
     590:	000003ea 	andeq	r0, r0, sl, ror #7
     594:	0001cb09 	andeq	ip, r1, r9, lsl #22
     598:	02bf0100 	adcseq	r0, pc, #0, 2
     59c:	000003ea 	andeq	r0, r0, sl, ror #7
     5a0:	000001fa 	strdeq	r0, [r0], -sl
     5a4:	00028506 	andeq	r8, r2, r6, lsl #10
     5a8:	02c10100 	sbceq	r0, r1, #0, 2
     5ac:	00000050 	andeq	r0, r0, r0, asr r0
     5b0:	0000021b 	andeq	r0, r0, fp, lsl r2
     5b4:	50040a00 	andpl	r0, r4, r0, lsl #20
     5b8:	05000000 	streq	r0, [r0, #-0]
     5bc:	000001e4 	andeq	r0, r0, r4, ror #3
     5c0:	7402cf01 	strvc	ip, [r2], #-3841	; 0xfffff0ff
     5c4:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
     5c8:	06080032 			; <UNDEFINED> instruction: 0x06080032
     5cc:	01000000 	mrseq	r0, (UNDEF: 0)
     5d0:	00042b9c 	muleq	r4, ip, fp
     5d4:	01cb0900 	biceq	r0, fp, r0, lsl #18
     5d8:	cf010000 	svcgt	0x00010000
     5dc:	00042b02 	andeq	r2, r4, r2, lsl #22
     5e0:	00023a00 	andeq	r3, r2, r0, lsl #20
     5e4:	02850600 	addeq	r0, r5, #0, 12
     5e8:	d1010000 	mrsle	r0, (UNDEF: 1)
     5ec:	00007402 	andeq	r7, r0, r2, lsl #8
     5f0:	00025b00 	andeq	r5, r2, r0, lsl #22
     5f4:	040a0000 	streq	r0, [sl], #-0
     5f8:	00000074 	andeq	r0, r0, r4, ror r0
     5fc:	0002f505 	andeq	pc, r2, r5, lsl #10
     600:	02e00100 	rsceq	r0, r0, #0, 2
     604:	00000074 	andeq	r0, r0, r4, ror r0
     608:	080032d0 	stmdaeq	r0, {r4, r6, r7, r9, ip, sp}
     60c:	00000008 	andeq	r0, r0, r8
     610:	047a9c01 	ldrbteq	r9, [sl], #-3073	; 0xfffff3ff
     614:	de090000 	cdple	0, 0, cr0, cr9, cr0, {0}
     618:	01000001 	tsteq	r0, r1
     61c:	002c02e0 	eoreq	r0, ip, r0, ror #5
     620:	027a0000 	rsbseq	r0, sl, #0
     624:	cb080000 	blgt	20062c <__RW_SIZE__+0x2000a8>
     628:	01000001 	tsteq	r0, r1
     62c:	03a902e0 			; <UNDEFINED> instruction: 0x03a902e0
     630:	51010000 	mrspl	r0, (UNDEF: 1)
     634:	00028506 	andeq	r8, r2, r6, lsl #10
     638:	02e20100 	rsceq	r0, r2, #0, 2
     63c:	00000074 	andeq	r0, r0, r4, ror r0
     640:	0000029b 	muleq	r0, fp, r2
     644:	01c20500 	biceq	r0, r2, r0, lsl #10
     648:	f1010000 	setend	le
     64c:	00007402 	andeq	r7, r0, r2, lsl #8
     650:	0032d800 	eorseq	sp, r2, r0, lsl #16
     654:	00000808 	andeq	r0, r0, r8, lsl #16
     658:	c39c0100 	orrsgt	r0, ip, #0, 2
     65c:	09000004 	stmdbeq	r0, {r2}
     660:	000001de 	ldrdeq	r0, [r0], -lr
     664:	5002f101 	andpl	pc, r2, r1, lsl #2
     668:	ba000000 	blt	670 <__RW_SIZE__+0xec>
     66c:	08000002 	stmdaeq	r0, {r1}
     670:	000001cb 	andeq	r0, r0, fp, asr #3
     674:	ea02f101 	b	bca80 <__RW_SIZE__+0xbc4fc>
     678:	01000003 	tsteq	r0, r3
     67c:	02850651 	addeq	r0, r5, #84934656	; 0x5100000
     680:	f3010000 	vhadd.u8	d0, d1, d0
     684:	00007402 	andeq	r7, r0, r2, lsl #8
     688:	0002db00 	andeq	sp, r2, r0, lsl #22
     68c:	e30b0000 	movw	r0, #45056	; 0xb000
     690:	01000002 	tsteq	r0, r2
     694:	00740302 	rsbseq	r0, r4, r2, lsl #6
     698:	32e00000 	rsccc	r0, r0, #0
     69c:	00060800 	andeq	r0, r6, r0, lsl #16
     6a0:	9c010000 	stcls	0, cr0, [r1], {-0}
     6a4:	0001de09 	andeq	sp, r1, r9, lsl #28
     6a8:	03020100 	movweq	r0, #8448	; 0x2100
     6ac:	00000074 	andeq	r0, r0, r4, ror r0
     6b0:	000002fa 	strdeq	r0, [r0], -sl
     6b4:	0001cb08 	andeq	ip, r1, r8, lsl #22
     6b8:	03020100 	movweq	r0, #8448	; 0x2100
     6bc:	0000042b 	andeq	r0, r0, fp, lsr #8
     6c0:	85065101 	strhi	r5, [r6, #-257]	; 0xfffffeff
     6c4:	01000002 	tsteq	r0, r2
     6c8:	00740304 	rsbseq	r0, r4, r4, lsl #6
     6cc:	031b0000 	tsteq	fp, #0
     6d0:	00000000 	andeq	r0, r0, r0
     6d4:	00000438 	andeq	r0, r0, r8, lsr r4
     6d8:	015c0004 	cmpeq	ip, r4
     6dc:	01040000 	mrseq	r0, (UNDEF: 4)
     6e0:	000000f9 	strdeq	r0, [r0], -r9
     6e4:	00040a01 	andeq	r0, r4, r1, lsl #20
     6e8:	00004200 	andeq	r4, r0, r0, lsl #4
     6ec:	0032e800 	eorseq	lr, r2, r0, lsl #16
     6f0:	00028a08 	andeq	r8, r2, r8, lsl #20
     6f4:	00018d00 	andeq	r8, r1, r0, lsl #26
     6f8:	07040200 	streq	r0, [r4, -r0, lsl #4]
     6fc:	000000ec 	andeq	r0, r0, ip, ror #1
     700:	b3060102 	movwlt	r0, #24834	; 0x6102
     704:	02000000 	andeq	r0, r0, #0
     708:	00b10801 	adcseq	r0, r1, r1, lsl #16
     70c:	02020000 	andeq	r0, r2, #0
     710:	0001a305 	andeq	sl, r1, r5, lsl #6
     714:	02da0300 	sbcseq	r0, sl, #0, 6
     718:	36020000 	strcc	r0, [r2], -r0
     71c:	0000004c 	andeq	r0, r0, ip, asr #32
     720:	89070202 	stmdbhi	r7, {r1, r9}
     724:	02000000 	andeq	r0, r0, #0
     728:	00050504 	andeq	r0, r5, r4, lsl #10
     72c:	b9030000 	stmdblt	r3, {}	; <UNPREDICTABLE>
     730:	02000001 	andeq	r0, r0, #1
     734:	00006550 	andeq	r6, r0, r0, asr r5
     738:	07040200 	streq	r0, [r4, -r0, lsl #4]
     73c:	000000e7 	andeq	r0, r0, r7, ror #1
     740:	00050802 	andeq	r0, r5, r2, lsl #16
     744:	02000000 	andeq	r0, r0, #0
     748:	00e20708 	rsceq	r0, r2, r8, lsl #14
     74c:	04040000 	streq	r0, [r4], #-0
     750:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     754:	07040200 	streq	r0, [r4, -r0, lsl #4]
     758:	0000018f 	andeq	r0, r0, pc, lsl #3
     75c:	00005a05 	andeq	r5, r0, r5, lsl #20
     760:	005a0600 	subseq	r0, sl, r0, lsl #12
     764:	009d0000 	addseq	r0, sp, r0
     768:	81070000 	mrshi	r0, (UNDEF: 7)
     76c:	03000000 	movweq	r0, #0
     770:	00410500 	subeq	r0, r1, r0, lsl #10
     774:	1c080000 	stcne	0, cr0, [r8], {-0}
     778:	0703e903 	streq	lr, [r3, -r3, lsl #18]
     77c:	09000001 	stmdbeq	r0, {r0}
     780:	004c5243 	subeq	r5, ip, r3, asr #4
     784:	8803eb03 	stmdahi	r3, {r0, r1, r8, r9, fp, sp, lr, pc}
     788:	00000000 	andeq	r0, r0, r0
     78c:	48524309 	ldmdami	r2, {r0, r3, r8, r9, lr}^
     790:	03ec0300 	mvneq	r0, #0, 6
     794:	00000088 	andeq	r0, r0, r8, lsl #1
     798:	44490904 	strbmi	r0, [r9], #-2308	; 0xfffff6fc
     79c:	ed030052 	stc	0, cr0, [r3, #-328]	; 0xfffffeb8
     7a0:	00008803 	andeq	r8, r0, r3, lsl #16
     7a4:	4f090800 	svcmi	0x00090800
     7a8:	03005244 	movweq	r5, #580	; 0x244
     7ac:	008803ee 	addeq	r0, r8, lr, ror #7
     7b0:	0a0c0000 	beq	3007b8 <__RW_SIZE__+0x300234>
     7b4:	0000036a 	andeq	r0, r0, sl, ror #6
     7b8:	8803ef03 	stmdahi	r3, {r0, r1, r8, r9, sl, fp, sp, lr, pc}
     7bc:	10000000 	andne	r0, r0, r0
     7c0:	52524209 	subspl	r4, r2, #-1879048192	; 0x90000000
     7c4:	03f00300 	mvnseq	r0, #0, 6
     7c8:	00000088 	andeq	r0, r0, r8, lsl #1
     7cc:	04050a14 	streq	r0, [r5], #-2580	; 0xfffff5ec
     7d0:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
     7d4:	00008803 	andeq	r8, r0, r3, lsl #16
     7d8:	0b001800 	bleq	67e0 <__RW_SIZE__+0x625c>
     7dc:	00000317 	andeq	r0, r0, r7, lsl r3
     7e0:	a203f203 	andge	pc, r3, #805306368	; 0x30000000
     7e4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     7e8:	03f80320 	mvnseq	r0, #32, 6	; 0x80000000
     7ec:	0000015e 	andeq	r0, r0, lr, asr r1
     7f0:	0003f70a 	andeq	pc, r3, sl, lsl #14
     7f4:	03fa0300 	mvnseq	r0, #0, 6
     7f8:	00000088 	andeq	r0, r0, r8, lsl #1
     7fc:	03f20a00 	mvnseq	r0, #0, 20
     800:	fb030000 	blx	c080a <__RW_SIZE__+0xc0286>
     804:	00008803 	andeq	r8, r0, r3, lsl #16
     808:	440a0400 	strmi	r0, [sl], #-1024	; 0xfffffc00
     80c:	03000003 	movweq	r0, #3
     810:	015e03fc 	ldrsheq	r0, [lr, #-60]	; 0xffffffc4
     814:	0a080000 	beq	20081c <__RW_SIZE__+0x200298>
     818:	00000399 	muleq	r0, r9, r3
     81c:	5a03fd03 	bpl	ffc30 <__RW_SIZE__+0xff6ac>
     820:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     824:	0003930a 	andeq	r9, r3, sl, lsl #6
     828:	03fe0300 	mvnseq	r0, #0, 6
     82c:	00000088 	andeq	r0, r0, r8, lsl #1
     830:	8d05001c 	stchi	0, cr0, [r5, #-112]	; 0xffffff90
     834:	0b000000 	bleq	83c <__RW_SIZE__+0x2b8>
     838:	000003e5 	andeq	r0, r0, r5, ror #7
     83c:	1303ff03 	movwne	pc, #16131	; 0x3f03	; <UNPREDICTABLE>
     840:	08000001 	stmdaeq	r0, {r0}
     844:	04040324 	streq	r0, [r4], #-804	; 0xfffffcdc
     848:	00000262 	andeq	r0, r0, r2, ror #4
     84c:	31524309 	cmpcc	r2, r9, lsl #6
     850:	04060300 	streq	r0, [r6], #-768	; 0xfffffd00
     854:	0000009d 	muleq	r0, sp, r0
     858:	03990a00 	orrseq	r0, r9, #0, 20
     85c:	07030000 	streq	r0, [r3, -r0]
     860:	00004104 	andeq	r4, r0, r4, lsl #2
     864:	43090200 	movwmi	r0, #37376	; 0x9200
     868:	03003252 	movweq	r3, #594	; 0x252
     86c:	009d0408 	addseq	r0, sp, r8, lsl #8
     870:	0a040000 	beq	100878 <__RW_SIZE__+0x1002f4>
     874:	0000033a 	andeq	r0, r0, sl, lsr r3
     878:	41040903 	tstmi	r4, r3, lsl #18
     87c:	06000000 	streq	r0, [r0], -r0
     880:	0003890a 	andeq	r8, r3, sl, lsl #18
     884:	040a0300 	streq	r0, [sl], #-768	; 0xfffffd00
     888:	0000009d 	muleq	r0, sp, r0
     88c:	03a90a08 			; <UNDEFINED> instruction: 0x03a90a08
     890:	0b030000 	bleq	c0898 <__RW_SIZE__+0xc0314>
     894:	00004104 	andeq	r4, r0, r4, lsl #2
     898:	8e0a0a00 	vmlahi.f32	s0, s20, s0
     89c:	03000003 	movweq	r0, #3
     8a0:	009d040c 	addseq	r0, sp, ip, lsl #8
     8a4:	0a0c0000 	beq	3008ac <__RW_SIZE__+0x300328>
     8a8:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
     8ac:	41040d03 	tstmi	r4, r3, lsl #26
     8b0:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     8b4:	00524409 	subseq	r4, r2, r9, lsl #8
     8b8:	9d040e03 	stcls	14, cr0, [r4, #-12]
     8bc:	10000000 	andne	r0, r0, r0
     8c0:	0003bd0a 	andeq	fp, r3, sl, lsl #26
     8c4:	040f0300 	streq	r0, [pc], #-768	; 8cc <__RW_SIZE__+0x348>
     8c8:	00000041 	andeq	r0, r0, r1, asr #32
     8cc:	52530912 	subspl	r0, r3, #294912	; 0x48000
     8d0:	10030031 	andne	r0, r3, r1, lsr r0
     8d4:	00009d04 	andeq	r9, r0, r4, lsl #26
     8d8:	c70a1400 	strgt	r1, [sl, -r0, lsl #8]
     8dc:	03000003 	movweq	r0, #3
     8e0:	00410411 	subeq	r0, r1, r1, lsl r4
     8e4:	09160000 	ldmdbeq	r6, {}	; <UNPREDICTABLE>
     8e8:	00325253 	eorseq	r5, r2, r3, asr r2
     8ec:	9d041203 	sfmls	f1, 4, [r4, #-12]
     8f0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     8f4:	0003d10a 	andeq	sp, r3, sl, lsl #2
     8f8:	04130300 	ldreq	r0, [r3], #-768	; 0xfffffd00
     8fc:	00000041 	andeq	r0, r0, r1, asr #32
     900:	4343091a 	movtmi	r0, #14618	; 0x391a
     904:	14030052 	strne	r0, [r3], #-82	; 0xffffffae
     908:	00009d04 	andeq	r9, r0, r4, lsl #26
     90c:	db0a1c00 	blle	287914 <__RW_SIZE__+0x287390>
     910:	03000003 	movweq	r0, #3
     914:	00410415 	subeq	r0, r1, r5, lsl r4
     918:	0a1e0000 	beq	780920 <__RW_SIZE__+0x78039c>
     91c:	000003a3 	andeq	r0, r0, r3, lsr #7
     920:	9d041603 	stcls	6, cr1, [r4, #-12]
     924:	20000000 	andcs	r0, r0, r0
     928:	00034b0a 	andeq	r4, r3, sl, lsl #22
     92c:	04170300 	ldreq	r0, [r7], #-768	; 0xfffffd00
     930:	00000041 	andeq	r0, r0, r1, asr #32
     934:	6f0b0022 	svcvs	0x000b0022
     938:	03000003 	movweq	r0, #3
     93c:	016f0418 	cmneq	pc, r8, lsl r4	; <UNPREDICTABLE>
     940:	28080000 	stmdacs	r8, {}	; <UNPREDICTABLE>
     944:	f9043403 			; <UNDEFINED> instruction: 0xf9043403
     948:	09000002 	stmdbeq	r0, {r1}
     94c:	03005243 	movweq	r5, #579	; 0x243
     950:	00880436 	addeq	r0, r8, r6, lsr r4
     954:	0a000000 	beq	95c <__RW_SIZE__+0x3d8>
     958:	00000013 	andeq	r0, r0, r3, lsl r0
     95c:	88043703 	stmdahi	r4, {r0, r1, r8, r9, sl, ip, sp}
     960:	04000000 	streq	r0, [r0], #-0
     964:	52494309 	subpl	r4, r9, #603979776	; 0x24000000
     968:	04380300 	ldrteq	r0, [r8], #-768	; 0xfffffd00
     96c:	00000088 	andeq	r0, r0, r8, lsl #1
     970:	00d90a08 	sbcseq	r0, r9, r8, lsl #20
     974:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
     978:	00008804 	andeq	r8, r0, r4, lsl #16
     97c:	c80a0c00 	stmdagt	sl, {sl, fp}
     980:	03000000 	movweq	r0, #0
     984:	0088043a 	addeq	r0, r8, sl, lsr r4
     988:	0a100000 	beq	400990 <__RW_SIZE__+0x40040c>
     98c:	00000026 	andeq	r0, r0, r6, lsr #32
     990:	88043b03 	stmdahi	r4, {r0, r1, r8, r9, fp, ip, sp}
     994:	14000000 	strne	r0, [r0], #-0
     998:	0000320a 	andeq	r3, r0, sl, lsl #4
     99c:	043c0300 	ldrteq	r0, [ip], #-768	; 0xfffffd00
     9a0:	00000088 	andeq	r0, r0, r8, lsl #1
     9a4:	00d10a18 	sbcseq	r0, r1, r8, lsl sl
     9a8:	3d030000 	stccc	0, cr0, [r3, #-0]
     9ac:	00008804 	andeq	r8, r0, r4, lsl #16
     9b0:	0e0a1c00 	cdpeq	12, 0, cr1, cr10, cr0, {0}
     9b4:	03000000 	movweq	r0, #0
     9b8:	0088043e 	addeq	r0, r8, lr, lsr r4
     9bc:	09200000 	stmdbeq	r0!, {}	; <UNPREDICTABLE>
     9c0:	00525343 	subseq	r5, r2, r3, asr #6
     9c4:	88043f03 	stmdahi	r4, {r0, r1, r8, r9, sl, fp, ip, sp}
     9c8:	24000000 	strcs	r0, [r0], #-0
     9cc:	01ad0b00 			; <UNDEFINED> instruction: 0x01ad0b00
     9d0:	4a030000 	bmi	c09d8 <__RW_SIZE__+0xc0454>
     9d4:	00026e04 	andeq	r6, r2, r4, lsl #28
     9d8:	08010200 	stmdaeq	r1, {r9}
     9dc:	000000ba 	strheq	r0, [r0], -sl
     9e0:	0003fc0c 	andeq	pc, r3, ip, lsl #24
     9e4:	e8090100 	stmda	r9, {r8}
     9e8:	f8080032 			; <UNDEFINED> instruction: 0xf8080032
     9ec:	01000000 	mrseq	r0, (UNDEF: 0)
     9f0:	0003599c 	muleq	r3, ip, r9
     9f4:	03550d00 	cmpeq	r5, #0, 26
     9f8:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
     9fc:	00000025 	andeq	r0, r0, r5, lsr #32
     a00:	0000033a 	andeq	r0, r0, sl, lsr r3
     a04:	0100720e 	tsteq	r0, lr, lsl #4
     a08:	0000250b 	andeq	r2, r0, fp, lsl #10
     a0c:	000c1200 	andeq	r1, ip, r0, lsl #4
     a10:	f7022551 			; <UNDEFINED> instruction: 0xf7022551
     a14:	5001f325 	andpl	pc, r1, r5, lsr #6
     a18:	25f72431 	ldrbcs	r2, [r7, #1073]!	; 0x431
     a1c:	9f00f71b 	svcls	0x0000f71b
     a20:	0100690e 	tsteq	r0, lr, lsl #18
     a24:	0003590c 	andeq	r5, r3, ip, lsl #18
     a28:	7c910200 	lfmvc	f0, 4, [r1], {0}
     a2c:	007a0500 	rsbseq	r0, sl, r0, lsl #10
     a30:	7b0f0000 	blvc	3c0a38 <__RW_SIZE__+0x3c04b4>
     a34:	01000003 	tsteq	r0, r3
     a38:	03810125 	orreq	r0, r1, #1073741833	; 0x40000009
     a3c:	cb100000 	blgt	400a44 <__RW_SIZE__+0x4004c0>
     a40:	01000001 	tsteq	r0, r1
     a44:	00002525 	andeq	r2, r0, r5, lsr #10
     a48:	08c61000 	stmiaeq	r6, {ip}^
     a4c:	25010000 	strcs	r0, [r1, #-0]
     a50:	00000025 	andeq	r0, r0, r5, lsr #32
     a54:	035e1100 	cmpeq	lr, #0, 2
     a58:	33e00000 	mvncc	r0, #0
     a5c:	008a0800 	addeq	r0, sl, r0, lsl #16
     a60:	9c010000 	stcls	0, cr0, [r1], {-0}
     a64:	000003a7 	andeq	r0, r0, r7, lsr #7
     a68:	00036a12 	andeq	r6, r3, r2, lsl sl
     a6c:	00035b00 	andeq	r5, r3, r0, lsl #22
     a70:	03751200 	cmneq	r5, #0, 4
     a74:	037c0000 	cmneq	ip, #0
     a78:	0c000000 	stceq	0, cr0, [r0], {-0}
     a7c:	0000035a 	andeq	r0, r0, sl, asr r3
     a80:	346c3a01 	strbtcc	r3, [ip], #-2561	; 0xfffff5ff
     a84:	00820800 	addeq	r0, r2, r0, lsl #16
     a88:	9c010000 	stcls	0, cr0, [r1], {-0}
     a8c:	000003eb 	andeq	r0, r0, fp, ror #7
     a90:	0003330d 	andeq	r3, r3, sp, lsl #6
     a94:	253a0100 	ldrcs	r0, [sl, #-256]!	; 0xffffff00
     a98:	9d000000 	stcls	0, cr0, [r0, #-0]
     a9c:	13000003 	movwne	r0, #3
     aa0:	0000035e 	andeq	r0, r0, lr, asr r3
     aa4:	0800346c 	stmdaeq	r0, {r2, r3, r5, r6, sl, ip, sp}
     aa8:	00000080 	andeq	r0, r0, r0, lsl #1
     aac:	75123c01 	ldrvc	r3, [r2, #-3073]	; 0xfffff3ff
     ab0:	be000003 	cdplt	0, 0, cr0, cr0, cr3, {0}
     ab4:	14000003 	strne	r0, [r0], #-3
     ab8:	0000036a 	andeq	r0, r0, sl, ror #6
     abc:	0c00000a 	stceq	0, cr0, [r0], {10}
     ac0:	00000324 	andeq	r0, r0, r4, lsr #6
     ac4:	34f03f01 	ldrbtcc	r3, [r0], #3841	; 0xf01
     ac8:	00820800 	addeq	r0, r2, r0, lsl #16
     acc:	9c010000 	stcls	0, cr0, [r1], {-0}
     ad0:	0000042f 	andeq	r0, r0, pc, lsr #8
     ad4:	0008c60d 	andeq	ip, r8, sp, lsl #12
     ad8:	253f0100 	ldrcs	r0, [pc, #-256]!	; 9e0 <__RW_SIZE__+0x45c>
     adc:	df000000 	svcle	0x00000000
     ae0:	13000003 	movwne	r0, #3
     ae4:	0000035e 	andeq	r0, r0, lr, asr r3
     ae8:	080034f0 	stmdaeq	r0, {r4, r5, r6, r7, sl, ip, sp}
     aec:	00000080 	andeq	r0, r0, r0, lsl #1
     af0:	75124101 	ldrvc	r4, [r2, #-257]	; 0xfffffeff
     af4:	00000003 	andeq	r0, r0, r3
     af8:	14000004 	strne	r0, [r0], #-4
     afc:	0000036a 	andeq	r0, r0, sl, ror #6
     b00:	1500000b 	strne	r0, [r0, #-11]
     b04:	0000009c 	muleq	r0, ip, r0
     b08:	5906ce04 	stmdbpl	r6, {r2, r9, sl, fp, lr, pc}
     b0c:	00000003 	andeq	r0, r0, r3
     b10:	000006ea 	andeq	r0, r0, sl, ror #13
     b14:	02800004 	addeq	r0, r0, #4
     b18:	01040000 	mrseq	r0, (UNDEF: 4)
     b1c:	000000f9 	strdeq	r0, [r0], -r9
     b20:	00043301 	andeq	r3, r4, r1, lsl #6
     b24:	00004200 	andeq	r4, r0, r0, lsl #4
     b28:	00357400 	eorseq	r7, r5, r0, lsl #8
     b2c:	00015808 	andeq	r5, r1, r8, lsl #16
     b30:	0002bd00 	andeq	fp, r2, r0, lsl #26
     b34:	04a40200 	strteq	r0, [r4], #512	; 0x200
     b38:	03010000 	movweq	r0, #4096	; 0x1000
     b3c:	000164a8 	andeq	r6, r1, r8, lsr #9
     b40:	06af0300 	strteq	r0, [pc], r0, lsl #6
     b44:	03720000 	cmneq	r2, #0
     b48:	000004d4 	ldrdeq	r0, [r0], -r4
     b4c:	06340374 			; <UNDEFINED> instruction: 0x06340374
     b50:	03750000 	cmneq	r5, #0
     b54:	0000073d 	andeq	r0, r0, sp, lsr r7
     b58:	075a0376 			; <UNDEFINED> instruction: 0x075a0376
     b5c:	037b0000 	cmneq	fp, #0
     b60:	0000072b 	andeq	r0, r0, fp, lsr #14
     b64:	04bf037c 	ldrteq	r0, [pc], #892	; b6c <__RW_SIZE__+0x5e8>
     b68:	037e0000 	cmneq	lr, #0
     b6c:	00000709 	andeq	r0, r0, r9, lsl #14
     b70:	062a037f 			; <UNDEFINED> instruction: 0x062a037f
     b74:	03000000 	movweq	r0, #0
     b78:	0000064d 	andeq	r0, r0, sp, asr #12
     b7c:	07b50301 	ldreq	r0, [r5, r1, lsl #6]!
     b80:	03020000 	movweq	r0, #8192	; 0x2000
     b84:	0000068d 	andeq	r0, r0, sp, lsl #13
     b88:	04840303 	streq	r0, [r4], #771	; 0x303
     b8c:	03040000 	movweq	r0, #16384	; 0x4000
     b90:	000004cb 	andeq	r0, r0, fp, asr #9
     b94:	048f0305 	streq	r0, [pc], #773	; b9c <__RW_SIZE__+0x618>
     b98:	03060000 	movweq	r0, #24576	; 0x6000
     b9c:	000006d5 	ldrdeq	r0, [r0], -r5
     ba0:	05ae0307 	streq	r0, [lr, #775]!	; 0x307
     ba4:	03080000 	movweq	r0, #32768	; 0x8000
     ba8:	0000078d 	andeq	r0, r0, sp, lsl #15
     bac:	06420309 	strbeq	r0, [r2], -r9, lsl #6
     bb0:	030a0000 	movweq	r0, #40960	; 0xa000
     bb4:	00000608 	andeq	r0, r0, r8, lsl #12
     bb8:	0471030b 	ldrbteq	r0, [r1], #-779	; 0xfffffcf5
     bbc:	030c0000 	movweq	r0, #49152	; 0xc000
     bc0:	0000065b 	andeq	r0, r0, fp, asr r6
     bc4:	051f030d 	ldreq	r0, [pc, #-781]	; 8bf <__RW_SIZE__+0x33b>
     bc8:	030e0000 	movweq	r0, #57344	; 0xe000
     bcc:	0000077a 	andeq	r0, r0, sl, ror r7
     bd0:	05d6030f 	ldrbeq	r0, [r6, #783]	; 0x30f
     bd4:	03100000 	tsteq	r0, #0
     bd8:	00000447 	andeq	r0, r0, r7, asr #8
     bdc:	079d0311 			; <UNDEFINED> instruction: 0x079d0311
     be0:	03120000 	tsteq	r2, #0
     be4:	00000574 	andeq	r0, r0, r4, ror r5
     be8:	04100313 	ldreq	r0, [r0], #-787	; 0xfffffced
     bec:	03140000 	tsteq	r4, #0
     bf0:	00000566 	andeq	r0, r0, r6, ror #10
     bf4:	04390315 	ldrteq	r0, [r9], #-789	; 0xfffffceb
     bf8:	03160000 	tsteq	r6, #0
     bfc:	0000074d 	andeq	r0, r0, sp, asr #14
     c00:	04fe0317 	ldrbteq	r0, [lr], #791	; 0x317
     c04:	03180000 	tsteq	r8, #0
     c08:	0000067b 	andeq	r0, r0, fp, ror r6
     c0c:	06ea0319 	usateq	r0, #10, r9, lsl #6
     c10:	031a0000 	tsteq	sl, #0
     c14:	000006c3 	andeq	r0, r0, r3, asr #13
     c18:	071c031b 			; <UNDEFINED> instruction: 0x071c031b
     c1c:	031c0000 	tsteq	ip, #0
     c20:	000005fe 	strdeq	r0, [r0], -lr
     c24:	0467031d 	strbteq	r0, [r7], #-797	; 0xfffffce3
     c28:	031e0000 	tsteq	lr, #0
     c2c:	0000066e 	andeq	r0, r0, lr, ror #12
     c30:	06fc031f 	usateq	r0, #28, pc, lsl #6	; <UNPREDICTABLE>
     c34:	03200000 	teqeq	r0, #0
     c38:	000005c9 	andeq	r0, r0, r9, asr #11
     c3c:	045a0321 	ldrbeq	r0, [sl], #-801	; 0xfffffcdf
     c40:	03220000 	teqeq	r2, #0
     c44:	00000515 	andeq	r0, r0, r5, lsl r5
     c48:	076b0323 	strbeq	r0, [fp, -r3, lsr #6]!
     c4c:	03240000 	teqeq	r4, #0
     c50:	000006a3 	andeq	r0, r0, r3, lsr #13
     c54:	05920325 	ldreq	r0, [r2, #805]	; 0x325
     c58:	03260000 	teqeq	r6, #0
     c5c:	000007a9 	andeq	r0, r0, r9, lsr #15
     c60:	049a0327 	ldreq	r0, [sl], #807	; 0x327
     c64:	03280000 	teqeq	r8, #0
     c68:	000007c1 	andeq	r0, r0, r1, asr #15
     c6c:	061b0329 	ldreq	r0, [fp], -r9, lsr #6
     c70:	002a0000 	eoreq	r0, sl, r0
     c74:	00058804 	andeq	r8, r5, r4, lsl #16
     c78:	01d90300 	bicseq	r0, r9, r0, lsl #6
     c7c:	00000025 	andeq	r0, r0, r5, lsr #32
     c80:	b3060105 	movwlt	r0, #24837	; 0x6105
     c84:	06000000 	streq	r0, [r0], -r0
     c88:	0000027d 	andeq	r0, r0, sp, ror r2
     c8c:	01822a04 	orreq	r2, r2, r4, lsl #20
     c90:	01050000 	mrseq	r0, (UNDEF: 5)
     c94:	0000b108 	andeq	fp, r0, r8, lsl #2
     c98:	05020500 	streq	r0, [r2, #-1280]	; 0xfffffb00
     c9c:	000001a3 	andeq	r0, r0, r3, lsr #3
     ca0:	89070205 	stmdbhi	r7, {r0, r2, r9}
     ca4:	05000000 	streq	r0, [r0, #-0]
     ca8:	00050504 	andeq	r0, r5, r4, lsl #10
     cac:	b9060000 	stmdblt	r6, {}	; <UNPREDICTABLE>
     cb0:	04000001 	streq	r0, [r0], #-1
     cb4:	0001a950 	andeq	sl, r1, r0, asr r9
     cb8:	07040500 	streq	r0, [r4, -r0, lsl #10]
     cbc:	000000e7 	andeq	r0, r0, r7, ror #1
     cc0:	00050805 	andeq	r0, r5, r5, lsl #16
     cc4:	05000000 	streq	r0, [r0, #-0]
     cc8:	00e20708 	rsceq	r0, r2, r8, lsl #14
     ccc:	04070000 	streq	r0, [r7], #-0
     cd0:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     cd4:	07040500 	streq	r0, [r4, -r0, lsl #10]
     cd8:	000000ec 	andeq	r0, r0, ip, ror #1
     cdc:	020e0408 	andeq	r0, lr, #8, 8	; 0x8000000
     ce0:	00027a84 	andeq	r7, r2, r4, lsl #21
     ce4:	04f90900 	ldrbteq	r0, [r9], #2304	; 0x900
     ce8:	86020000 	strhi	r0, [r2], -r0
     cec:	00000291 	muleq	r0, r1, r2
     cf0:	03990900 	orrseq	r0, r9, #0, 18
     cf4:	87020000 	strhi	r0, [r2, -r0]
     cf8:	00000296 	muleq	r0, r6, r2
     cfc:	07660920 	strbeq	r0, [r6, -r0, lsr #18]!
     d00:	88020000 	stmdahi	r2, {}	; <UNPREDICTABLE>
     d04:	000002a6 	andeq	r0, r0, r6, lsr #5
     d08:	050c0980 	streq	r0, [ip, #-2432]	; 0xfffff680
     d0c:	89020000 	stmdbhi	r2, {}	; <UNPREDICTABLE>
     d10:	00000296 	muleq	r0, r6, r2
     d14:	07980aa0 	ldreq	r0, [r8, r0, lsr #21]
     d18:	8a020000 	bhi	80d20 <__RW_SIZE__+0x8079c>
     d1c:	000002ab 	andeq	r0, r0, fp, lsr #5
     d20:	a90a0100 	stmdbge	sl, {r8}
     d24:	02000003 	andeq	r0, r0, #3
     d28:	0002968b 	andeq	r9, r2, fp, lsl #13
     d2c:	0a012000 	beq	48d34 <__RW_SIZE__+0x487b0>
     d30:	00000656 	andeq	r0, r0, r6, asr r6
     d34:	02b08c02 	adcseq	r8, r0, #512	; 0x200
     d38:	01800000 	orreq	r0, r0, r0
     d3c:	0003b30a 	andeq	fp, r3, sl, lsl #6
     d40:	968d0200 	strls	r0, [sp], r0, lsl #4
     d44:	a0000002 	andge	r0, r0, r2
     d48:	07750a01 	ldrbeq	r0, [r5, -r1, lsl #20]!
     d4c:	8e020000 	cdphi	0, 0, cr0, cr2, cr0, {0}
     d50:	000002b5 			; <UNDEFINED> instruction: 0x000002b5
     d54:	bd0a0200 	sfmlt	f0, 4, [sl, #-0]
     d58:	02000003 	andeq	r0, r0, #3
     d5c:	0002ba8f 	andeq	fp, r2, pc, lsl #21
     d60:	0b022000 	bleq	88d68 <__RW_SIZE__+0x887e4>
     d64:	02005049 	andeq	r5, r0, #73	; 0x49
     d68:	0002da90 	muleq	r2, r0, sl
     d6c:	0a030000 	beq	c0d74 <__RW_SIZE__+0xc07f0>
     d70:	000003c7 	andeq	r0, r0, r7, asr #7
     d74:	02df9102 	sbcseq	r9, pc, #-2147483648	; 0x80000000
     d78:	03f00000 	mvnseq	r0, #0
     d7c:	0006880a 	andeq	r8, r6, sl, lsl #16
     d80:	f0920200 			; <UNDEFINED> instruction: 0xf0920200
     d84:	00000002 	andeq	r0, r0, r2
     d88:	9e0c000e 	cdpls	0, 0, cr0, cr12, cr14, {0}
     d8c:	8a000001 	bhi	d98 <__RW_SIZE__+0x814>
     d90:	0d000002 	stceq	0, cr0, [r0, #-8]
     d94:	0000028a 	andeq	r0, r0, sl, lsl #5
     d98:	04050007 	streq	r0, [r5], #-7
     d9c:	00018f07 	andeq	r8, r1, r7, lsl #30
     da0:	027a0e00 	rsbseq	r0, sl, #0, 28
     da4:	9e0c0000 	cdpls	0, 0, cr0, cr12, cr0, {0}
     da8:	a6000001 	strge	r0, [r0], -r1
     dac:	0d000002 	stceq	0, cr0, [r0, #-8]
     db0:	0000028a 	andeq	r0, r0, sl, lsl #5
     db4:	7a0e0017 	bvc	380e18 <__RW_SIZE__+0x380894>
     db8:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
     dbc:	0000027a 	andeq	r0, r0, sl, ror r2
     dc0:	00027a0e 	andeq	r7, r2, lr, lsl #20
     dc4:	027a0e00 	rsbseq	r0, sl, #0, 28
     dc8:	9e0c0000 	cdpls	0, 0, cr0, cr12, cr0, {0}
     dcc:	ca000001 	bgt	dd8 <__RW_SIZE__+0x854>
     dd0:	0d000002 	stceq	0, cr0, [r0, #-8]
     dd4:	0000028a 	andeq	r0, r0, sl, lsl #5
     dd8:	770c0037 	smladxvc	ip, r7, r0, r0
     ddc:	da000001 	ble	de8 <__RW_SIZE__+0x864>
     de0:	0d000002 	stceq	0, cr0, [r0, #-8]
     de4:	0000028a 	andeq	r0, r0, sl, lsl #5
     de8:	ca0e00ef 	bgt	3811ac <__RW_SIZE__+0x380c28>
     dec:	0c000002 	stceq	0, cr0, [r0], {2}
     df0:	0000019e 	muleq	r0, lr, r1
     df4:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     df8:	00028a0f 	andeq	r8, r2, pc, lsl #20
     dfc:	00028300 	andeq	r8, r2, r0, lsl #6
     e00:	00019e0e 	andeq	r9, r1, lr, lsl #28
     e04:	06e00600 	strbteq	r0, [r0], r0, lsl #12
     e08:	93020000 	movwls	r0, #8192	; 0x2000
     e0c:	000001cc 	andeq	r0, r0, ip, asr #3
     e10:	00019e0c 	andeq	r9, r1, ip, lsl #28
     e14:	00031000 	andeq	r1, r3, r0
     e18:	028a0d00 	addeq	r0, sl, #0, 26
     e1c:	00030000 	andeq	r0, r3, r0
     e20:	77031810 	smladvc	r3, r0, r8, r1
     e24:	00036703 	andeq	r6, r3, r3, lsl #14
     e28:	4d491100 	stfmie	f1, [r9, #-0]
     e2c:	79030052 	stmdbvc	r3, {r1, r4, r6}
     e30:	0002f003 	andeq	pc, r2, r3
     e34:	45110000 	ldrmi	r0, [r1, #-0]
     e38:	0300524d 	movweq	r5, #589	; 0x24d
     e3c:	02f0037a 	rscseq	r0, r0, #-402653183	; 0xe8000001
     e40:	12040000 	andne	r0, r4, #0
     e44:	000006d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     e48:	f0037b03 			; <UNDEFINED> instruction: 0xf0037b03
     e4c:	08000002 	stmdaeq	r0, {r1}
     e50:	00072612 	andeq	r2, r7, r2, lsl r6
     e54:	037c0300 	cmneq	ip, #0, 6
     e58:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     e5c:	0716120c 	ldreq	r1, [r6, -ip, lsl #4]
     e60:	7d030000 	stcvc	0, cr0, [r3, #-0]
     e64:	0002f003 	andeq	pc, r2, r3
     e68:	50111000 	andspl	r1, r1, r0
     e6c:	7e030052 	mcrvc	0, 0, r0, cr3, cr2, {2}
     e70:	0002f003 	andeq	pc, r2, r3
     e74:	04001400 	streq	r1, [r0], #-1024	; 0xfffffc00
     e78:	00000696 	muleq	r0, r6, r6
     e7c:	10037f03 	andne	r7, r3, r3, lsl #30
     e80:	10000003 	andne	r0, r0, r3
     e84:	03e9031c 	mvneq	r0, #28, 6	; 0x70000000
     e88:	000003d8 	ldrdeq	r0, [r0], -r8
     e8c:	4c524311 	mrrcmi	3, 1, r4, r2, cr1
     e90:	03eb0300 	mvneq	r0, #0, 6
     e94:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     e98:	52431100 	subpl	r1, r3, #0, 2
     e9c:	ec030048 	stc	0, cr0, [r3], {72}	; 0x48
     ea0:	0002f003 	andeq	pc, r2, r3
     ea4:	49110400 	ldmdbmi	r1, {sl}
     ea8:	03005244 	movweq	r5, #580	; 0x244
     eac:	02f003ed 	rscseq	r0, r0, #-1275068413	; 0xb4000003
     eb0:	11080000 	mrsne	r0, (UNDEF: 8)
     eb4:	0052444f 	subseq	r4, r2, pc, asr #8
     eb8:	f003ee03 			; <UNDEFINED> instruction: 0xf003ee03
     ebc:	0c000002 	stceq	0, cr0, [r0], {2}
     ec0:	00036a12 	andeq	r6, r3, r2, lsl sl
     ec4:	03ef0300 	mvneq	r0, #0, 6
     ec8:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     ecc:	52421110 	subpl	r1, r2, #16, 2
     ed0:	f0030052 			; <UNDEFINED> instruction: 0xf0030052
     ed4:	0002f003 	andeq	pc, r2, r3
     ed8:	05121400 	ldreq	r1, [r2, #-1024]	; 0xfffffc00
     edc:	03000004 	movweq	r0, #4
     ee0:	02f003f1 	rscseq	r0, r0, #-1006632957	; 0xc4000003
     ee4:	00180000 	andseq	r0, r8, r0
     ee8:	00031704 	andeq	r1, r3, r4, lsl #14
     eec:	03f20300 	mvnseq	r0, #0, 6
     ef0:	00000373 	andeq	r0, r0, r3, ror r3
     ef4:	f8032010 			; <UNDEFINED> instruction: 0xf8032010
     ef8:	00042f03 	andeq	r2, r4, r3, lsl #30
     efc:	03f71200 	mvnseq	r1, #0, 4
     f00:	fa030000 	blx	c0f08 <__RW_SIZE__+0xc0984>
     f04:	0002f003 	andeq	pc, r2, r3
     f08:	f2120000 	vhadd.s16	d0, d2, d0
     f0c:	03000003 	movweq	r0, #3
     f10:	02f003fb 	rscseq	r0, r0, #-335544317	; 0xec000003
     f14:	12040000 	andne	r0, r4, #0
     f18:	00000344 	andeq	r0, r0, r4, asr #6
     f1c:	2f03fc03 	svccs	0x0003fc03
     f20:	08000004 	stmdaeq	r0, {r2}
     f24:	00039912 	andeq	r9, r3, r2, lsl r9
     f28:	03fd0300 	mvnseq	r0, #0, 6
     f2c:	0000019e 	muleq	r0, lr, r1
     f30:	03931218 	orrseq	r1, r3, #24, 4	; 0x80000001
     f34:	fe030000 	cdp2	0, 0, cr0, cr3, cr0, {0}
     f38:	0002f003 	andeq	pc, r2, r3
     f3c:	0e001c00 	cdpeq	12, 0, cr1, cr0, cr0, {0}
     f40:	00000300 	andeq	r0, r0, r0, lsl #6
     f44:	0003e504 	andeq	lr, r3, r4, lsl #10
     f48:	03ff0300 	mvnseq	r0, #0, 6
     f4c:	000003e4 	andeq	r0, r0, r4, ror #7
     f50:	34032810 	strcc	r2, [r3], #-2064	; 0xfffff7f0
     f54:	0004cb04 	andeq	ip, r4, r4, lsl #22
     f58:	52431100 	subpl	r1, r3, #0, 2
     f5c:	04360300 	ldrteq	r0, [r6], #-768	; 0xfffffd00
     f60:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     f64:	00131200 	andseq	r1, r3, r0, lsl #4
     f68:	37030000 	strcc	r0, [r3, -r0]
     f6c:	0002f004 	andeq	pc, r2, r4
     f70:	43110400 	tstmi	r1, #0, 8
     f74:	03005249 	movweq	r5, #585	; 0x249
     f78:	02f00438 	rscseq	r0, r0, #56, 8	; 0x38000000
     f7c:	12080000 	andne	r0, r8, #0
     f80:	000000d9 	ldrdeq	r0, [r0], -r9
     f84:	f0043903 			; <UNDEFINED> instruction: 0xf0043903
     f88:	0c000002 	stceq	0, cr0, [r0], {2}
     f8c:	0000c812 	andeq	ip, r0, r2, lsl r8
     f90:	043a0300 	ldrteq	r0, [sl], #-768	; 0xfffffd00
     f94:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     f98:	00261210 	eoreq	r1, r6, r0, lsl r2
     f9c:	3b030000 	blcc	c0fa4 <__RW_SIZE__+0xc0a20>
     fa0:	0002f004 	andeq	pc, r2, r4
     fa4:	32121400 	andscc	r1, r2, #0, 8
     fa8:	03000000 	movweq	r0, #0
     fac:	02f0043c 	rscseq	r0, r0, #60, 8	; 0x3c000000
     fb0:	12180000 	andsne	r0, r8, #0
     fb4:	000000d1 	ldrdeq	r0, [r0], -r1
     fb8:	f0043d03 			; <UNDEFINED> instruction: 0xf0043d03
     fbc:	1c000002 	stcne	0, cr0, [r0], {2}
     fc0:	00000e12 	andeq	r0, r0, r2, lsl lr
     fc4:	043e0300 	ldrteq	r0, [lr], #-768	; 0xfffffd00
     fc8:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     fcc:	53431120 	movtpl	r1, #12576	; 0x3120
     fd0:	3f030052 	svccc	0x00030052
     fd4:	0002f004 	andeq	pc, r2, r4
     fd8:	04002400 	streq	r2, [r0], #-1024	; 0xfffffc00
     fdc:	000001ad 	andeq	r0, r0, sp, lsr #3
     fe0:	40044a03 	andmi	r4, r4, r3, lsl #20
     fe4:	05000004 	streq	r0, [r0, #-4]
     fe8:	00ba0801 	adcseq	r0, sl, r1, lsl #16
     fec:	56130000 	ldrpl	r0, [r3], -r0
     ff0:	01000005 	tsteq	r0, r5
     ff4:	0001be0b 	andeq	fp, r1, fp, lsl #28
     ff8:	e9140100 	ldmdb	r4, {r8}
     ffc:	02000005 	andeq	r0, r0, #5
    1000:	04030613 	streq	r0, [r3], #-1555	; 0xfffff9ed
    1004:	15000005 	strne	r0, [r0, #-5]
    1008:	000004a4 	andeq	r0, r0, r4, lsr #9
    100c:	64061302 	strvs	r1, [r6], #-770	; 0xfffffcfe
    1010:	00000001 	andeq	r0, r0, r1
    1014:	00053214 	andeq	r3, r5, r4, lsl r2
    1018:	05de0200 	ldrbeq	r0, [lr, #512]	; 0x200
    101c:	00051e03 	andeq	r1, r5, r3, lsl #28
    1020:	04a41500 	strteq	r1, [r4], #1280	; 0x500
    1024:	de020000 	cdple	0, 0, cr0, cr2, cr0, {0}
    1028:	00016405 	andeq	r6, r1, r5, lsl #8
    102c:	b9140000 	ldmdblt	r4, {}	; <UNPREDICTABLE>
    1030:	02000005 	andeq	r0, r0, #5
    1034:	380305eb 	stmdacc	r3, {r0, r1, r3, r5, r6, r7, r8, sl}
    1038:	15000005 	strne	r0, [r0, #-5]
    103c:	000004a4 	andeq	r0, r0, r4, lsr #9
    1040:	6405eb02 	strvs	lr, [r5], #-2818	; 0xfffff4fe
    1044:	00000001 	andeq	r0, r0, r1
    1048:	00042516 	andeq	r2, r4, r6, lsl r5
    104c:	74030100 	strvc	r0, [r3], #-256	; 0xffffff00
    1050:	26080035 			; <UNDEFINED> instruction: 0x26080035
    1054:	01000000 	mrseq	r0, (UNDEF: 0)
    1058:	059e179c 	ldreq	r1, [lr, #1948]	; 0x79c
    105c:	10010000 	andne	r0, r1, r0
    1060:	000001be 			; <UNDEFINED> instruction: 0x000001be
    1064:	00056c01 	andeq	r6, r5, r1, lsl #24
    1068:	00691800 	rsbeq	r1, r9, r0, lsl #16
    106c:	01c51201 	biceq	r1, r5, r1, lsl #4
    1070:	6b180000 	blvs	601078 <__RW_SIZE__+0x600af4>
    1074:	c5120100 	ldrgt	r0, [r2, #-256]	; 0xffffff00
    1078:	00000001 	andeq	r0, r0, r1
    107c:	00054919 	andeq	r4, r5, r9, lsl r9
    1080:	00359c00 	eorseq	r9, r5, r0, lsl #24
    1084:	00002a08 	andeq	r2, r0, r8, lsl #20
    1088:	aa9c0100 	bge	fe701490 <MSP_BASE+0xde6fc490>
    108c:	1a000005 	bne	10a8 <__RW_SIZE__+0xb24>
    1090:	00000559 	andeq	r0, r0, r9, asr r5
    1094:	0005621b 	andeq	r6, r5, fp, lsl r2
    1098:	1c500100 	ldfnee	f0, [r0], {-0}
    109c:	000004de 	ldrdeq	r0, [r0], -lr
    10a0:	0800359c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, ip, sp}
    10a4:	00000016 	andeq	r0, r0, r6, lsl r0
    10a8:	de1c1601 	cfmsub32le	mvax0, mvfx1, mvfx12, mvfx1
    10ac:	b2000004 	andlt	r0, r0, #4
    10b0:	0a080035 	beq	20118c <__RW_SIZE__+0x200c08>
    10b4:	01000000 	mrseq	r0, (UNDEF: 0)
    10b8:	a91d001a 	ldmdbge	sp, {r1, r3, r4}
    10bc:	01000004 	tsteq	r0, r4
    10c0:	0035c826 	eorseq	ip, r5, r6, lsr #16
    10c4:	00002e08 	andeq	r2, r0, r8, lsl #28
    10c8:	049c0100 	ldreq	r0, [ip], #256	; 0x100
    10cc:	1e000006 	cdpne	0, 0, cr0, cr0, cr6, {0}
    10d0:	00000549 	andeq	r0, r0, r9, asr #10
    10d4:	080035c8 	stmdaeq	r0, {r3, r6, r7, r8, sl, ip, sp}
    10d8:	00000028 	andeq	r0, r0, r8, lsr #32
    10dc:	c81f2801 	ldmdagt	pc, {r0, fp, sp}	; <UNPREDICTABLE>
    10e0:	28080035 	stmdacs	r8, {r0, r2, r4, r5}
    10e4:	1a000000 	bne	10ec <__RW_SIZE__+0xb68>
    10e8:	00000559 	andeq	r0, r0, r9, asr r5
    10ec:	0005621b 	andeq	r6, r5, fp, lsl r2
    10f0:	1c510100 	ldfnee	f0, [r1], {-0}
    10f4:	000004de 	ldrdeq	r0, [r0], -lr
    10f8:	080035c8 	stmdaeq	r0, {r3, r6, r7, r8, sl, ip, sp}
    10fc:	00000016 	andeq	r0, r0, r6, lsl r0
    1100:	de1c1601 	cfmsub32le	mvax0, mvfx1, mvfx12, mvfx1
    1104:	de000004 	cdple	0, 0, cr0, cr0, cr4, {0}
    1108:	0a080035 	beq	2011e4 <__RW_SIZE__+0x200c60>
    110c:	01000000 	mrseq	r0, (UNDEF: 0)
    1110:	0000001a 	andeq	r0, r0, sl, lsl r0
    1114:	00054120 	andeq	r4, r5, r0, lsr #2
    1118:	be2b0100 	suflte	f0, f3, f0
    111c:	f8000001 			; <UNDEFINED> instruction: 0xf8000001
    1120:	2e080035 	mcrcs	0, 0, r0, cr8, cr5, {1}
    1124:	01000000 	mrseq	r0, (UNDEF: 0)
    1128:	00066b9c 	muleq	r6, ip, fp
    112c:	006b1800 	rsbeq	r1, fp, r0, lsl #16
    1130:	01be2d01 			; <UNDEFINED> instruction: 0x01be2d01
    1134:	491e0000 	ldmdbmi	lr, {}	; <UNPREDICTABLE>
    1138:	f8000005 			; <UNDEFINED> instruction: 0xf8000005
    113c:	28080035 	stmdacs	r8, {r0, r2, r4, r5}
    1140:	01000000 	mrseq	r0, (UNDEF: 0)
    1144:	35f81f2f 	ldrbcc	r1, [r8, #3887]!	; 0xf2f
    1148:	00280800 	eoreq	r0, r8, r0, lsl #16
    114c:	591a0000 	ldmdbpl	sl, {}	; <UNPREDICTABLE>
    1150:	1b000005 	blne	116c <__RW_SIZE__+0xbe8>
    1154:	00000562 	andeq	r0, r0, r2, ror #10
    1158:	de1c5001 	cdple	0, 1, cr5, cr12, cr1, {0}
    115c:	f8000004 			; <UNDEFINED> instruction: 0xf8000004
    1160:	16080035 			; <UNDEFINED> instruction: 0x16080035
    1164:	01000000 	mrseq	r0, (UNDEF: 0)
    1168:	04de1c16 	ldrbeq	r1, [lr], #3094	; 0xc16
    116c:	360e0000 	strcc	r0, [lr], -r0
    1170:	000a0800 	andeq	r0, sl, r0, lsl #16
    1174:	1a010000 	bne	4117c <__RW_SIZE__+0x40bf8>
    1178:	1d000000 	stcne	0, cr0, [r0, #-0]
    117c:	000004ea 	andeq	r0, r0, sl, ror #9
    1180:	36283301 	strtcc	r3, [r8], -r1, lsl #6
    1184:	00a40800 	adceq	r0, r4, r0, lsl #16
    1188:	9c010000 	stcls	0, cr0, [r1], {-0}
    118c:	000006dc 	ldrdeq	r0, [r0], -ip
    1190:	006e6521 	rsbeq	r6, lr, r1, lsr #10
    1194:	01be3301 			; <UNDEFINED> instruction: 0x01be3301
    1198:	04210000 	strteq	r0, [r1], #-0
    119c:	1e220000 	cdpne	0, 2, cr0, cr2, cr0, {0}
    11a0:	2c000005 	stccs	0, cr0, [r0], {5}
    11a4:	10080036 	andne	r0, r8, r6, lsr r0
    11a8:	01000000 	mrseq	r0, (UNDEF: 0)
    11ac:	0006ab45 	andeq	sl, r6, r5, asr #22
    11b0:	052b2300 	streq	r2, [fp, #-768]!	; 0xfffffd00
    11b4:	04420000 	strbeq	r0, [r2], #-0
    11b8:	22000000 	andcs	r0, r0, #0
    11bc:	000004ea 	andeq	r0, r0, sl, ror #9
    11c0:	080036a2 	stmdaeq	r0, {r1, r5, r7, r9, sl, ip, sp}
    11c4:	00000028 	andeq	r0, r0, r8, lsr #32
    11c8:	06c53e01 	strbeq	r3, [r5], r1, lsl #28
    11cc:	f7240000 			; <UNDEFINED> instruction: 0xf7240000
    11d0:	17000004 	strne	r0, [r0, -r4]
    11d4:	05041e00 	streq	r1, [r4, #-3584]	; 0xfffff200
    11d8:	36c40000 	strbcc	r0, [r4], r0
    11dc:	00020800 	andeq	r0, r2, r0, lsl #16
    11e0:	40010000 	andmi	r0, r1, r0
    11e4:	00051124 	andeq	r1, r5, r4, lsr #2
    11e8:	00001700 	andeq	r1, r0, r0, lsl #14
    11ec:	00009c25 	andeq	r9, r0, r5, lsr #24
    11f0:	06ce0200 	strbeq	r0, [lr], r0, lsl #4
    11f4:	000006e8 	andeq	r0, r0, r8, ror #13
    11f8:	0001be0e 	andeq	fp, r1, lr, lsl #28
    11fc:	01f70000 	mvnseq	r0, r0
    1200:	00040000 	andeq	r0, r4, r0
    1204:	0000048e 	andeq	r0, r0, lr, lsl #9
    1208:	00f90104 	rscseq	r0, r9, r4, lsl #2
    120c:	e7010000 	str	r0, [r1, -r0]
    1210:	42000007 	andmi	r0, r0, #7
    1214:	cc000000 	stcgt	0, cr0, [r0], {-0}
    1218:	72080036 	andvc	r0, r8, #54	; 0x36
    121c:	d5000000 	strle	r0, [r0, #-0]
    1220:	02000003 	andeq	r0, r0, #3
    1224:	00b30601 	adcseq	r0, r3, r1, lsl #12
    1228:	01020000 	mrseq	r0, (UNDEF: 2)
    122c:	0000b108 	andeq	fp, r0, r8, lsl #2
    1230:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    1234:	000001a3 	andeq	r0, r0, r3, lsr #3
    1238:	89070202 	stmdbhi	r7, {r1, r9}
    123c:	02000000 	andeq	r0, r0, #0
    1240:	00050504 	andeq	r0, r5, r4, lsl #10
    1244:	b9030000 	stmdblt	r3, {}	; <UNPREDICTABLE>
    1248:	03000001 	movweq	r0, #1
    124c:	00005350 	andeq	r5, r0, r0, asr r3
    1250:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1254:	000000e7 	andeq	r0, r0, r7, ror #1
    1258:	00050802 	andeq	r0, r5, r2, lsl #16
    125c:	02000000 	andeq	r0, r0, #0
    1260:	00e20708 	rsceq	r0, r2, r8, lsl #14
    1264:	04040000 	streq	r0, [r4], #-0
    1268:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    126c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1270:	000000ec 	andeq	r0, r0, ip, ror #1
    1274:	8f070402 	svchi	0x00070402
    1278:	05000001 	streq	r0, [r0, #-1]
    127c:	00000048 	andeq	r0, r0, r8, asr #32
    1280:	e9021c06 	stmdb	r2, {r1, r2, sl, fp, ip}
    1284:	0000e703 	andeq	lr, r0, r3, lsl #14
    1288:	52430700 	subpl	r0, r3, #0, 14
    128c:	eb02004c 	bl	813c4 <__RW_SIZE__+0x80e40>
    1290:	00007d03 	andeq	r7, r0, r3, lsl #26
    1294:	43070000 	movwmi	r0, #28672	; 0x7000
    1298:	02004852 	andeq	r4, r0, #5373952	; 0x520000
    129c:	007d03ec 	rsbseq	r0, sp, ip, ror #7
    12a0:	07040000 	streq	r0, [r4, -r0]
    12a4:	00524449 	subseq	r4, r2, r9, asr #8
    12a8:	7d03ed02 	stcvc	13, cr14, [r3, #-8]
    12ac:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    12b0:	52444f07 	subpl	r4, r4, #7, 30
    12b4:	03ee0200 	mvneq	r0, #0, 4
    12b8:	0000007d 	andeq	r0, r0, sp, ror r0
    12bc:	036a080c 	cmneq	sl, #12, 16	; 0xc0000
    12c0:	ef020000 	svc	0x00020000
    12c4:	00007d03 	andeq	r7, r0, r3, lsl #26
    12c8:	42071000 	andmi	r1, r7, #0
    12cc:	02005252 	andeq	r5, r0, #536870917	; 0x20000005
    12d0:	007d03f0 	ldrshteq	r0, [sp], #-48	; 0xffffffd0
    12d4:	08140000 	ldmdaeq	r4, {}	; <UNPREDICTABLE>
    12d8:	00000405 	andeq	r0, r0, r5, lsl #8
    12dc:	7d03f102 	stfvcd	f7, [r3, #-8]
    12e0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    12e4:	03170900 	tsteq	r7, #0, 18
    12e8:	f2020000 	vhadd.s8	d0, d2, d0
    12ec:	00008203 	andeq	r8, r0, r3, lsl #4
    12f0:	02280600 	eoreq	r0, r8, #0, 12
    12f4:	017e0434 	cmneq	lr, r4, lsr r4
    12f8:	43070000 	movwmi	r0, #28672	; 0x7000
    12fc:	36020052 			; <UNDEFINED> instruction: 0x36020052
    1300:	00007d04 	andeq	r7, r0, r4, lsl #26
    1304:	13080000 	movwne	r0, #32768	; 0x8000
    1308:	02000000 	andeq	r0, r0, #0
    130c:	007d0437 	rsbseq	r0, sp, r7, lsr r4
    1310:	07040000 	streq	r0, [r4, -r0]
    1314:	00524943 	subseq	r4, r2, r3, asr #18
    1318:	7d043802 	stcvc	8, cr3, [r4, #-8]
    131c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1320:	0000d908 	andeq	sp, r0, r8, lsl #18
    1324:	04390200 	ldrteq	r0, [r9], #-512	; 0xfffffe00
    1328:	0000007d 	andeq	r0, r0, sp, ror r0
    132c:	00c8080c 	sbceq	r0, r8, ip, lsl #16
    1330:	3a020000 	bcc	81338 <__RW_SIZE__+0x80db4>
    1334:	00007d04 	andeq	r7, r0, r4, lsl #26
    1338:	26081000 	strcs	r1, [r8], -r0
    133c:	02000000 	andeq	r0, r0, #0
    1340:	007d043b 	rsbseq	r0, sp, fp, lsr r4
    1344:	08140000 	ldmdaeq	r4, {}	; <UNPREDICTABLE>
    1348:	00000032 	andeq	r0, r0, r2, lsr r0
    134c:	7d043c02 	stcvc	12, cr3, [r4, #-8]
    1350:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    1354:	0000d108 	andeq	sp, r0, r8, lsl #2
    1358:	043d0200 	ldrteq	r0, [sp], #-512	; 0xfffffe00
    135c:	0000007d 	andeq	r0, r0, sp, ror r0
    1360:	000e081c 	andeq	r0, lr, ip, lsl r8
    1364:	3e020000 	cdpcc	0, 0, cr0, cr2, cr0, {0}
    1368:	00007d04 	andeq	r7, r0, r4, lsl #26
    136c:	43072000 	movwmi	r2, #28672	; 0x7000
    1370:	02005253 	andeq	r5, r0, #805306373	; 0x30000005
    1374:	007d043f 	rsbseq	r0, sp, pc, lsr r4
    1378:	00240000 	eoreq	r0, r4, r0
    137c:	0001ad09 	andeq	sl, r1, r9, lsl #26
    1380:	044a0200 	strbeq	r0, [sl], #-512	; 0xfffffe00
    1384:	000000f3 	strdeq	r0, [r0], -r3
    1388:	ba080102 	blt	201798 <__RW_SIZE__+0x201214>
    138c:	0a000000 	beq	1394 <__RW_SIZE__+0xe10>
    1390:	000007f8 	strdeq	r0, [r0], -r8
    1394:	36cc0301 	strbcc	r0, [ip], r1, lsl #6
    1398:	002e0800 	eoreq	r0, lr, r0, lsl #16
    139c:	9c010000 	stcls	0, cr0, [r1], {-0}
    13a0:	0007db0b 	andeq	sp, r7, fp, lsl #22
    13a4:	fc0a0100 	stc2	1, cr0, [sl], {-0}
    13a8:	1c080036 	stcne	0, cr0, [r8], {54}	; 0x36
    13ac:	01000000 	mrseq	r0, (UNDEF: 0)
    13b0:	0001c79c 	muleq	r1, ip, r7
    13b4:	756e0c00 	strbvc	r0, [lr, #-3072]!	; 0xfffff400
    13b8:	0a01006d 	beq	41574 <__RW_SIZE__+0x40ff0>
    13bc:	0000006f 	andeq	r0, r0, pc, rrx
    13c0:	00000456 	andeq	r0, r0, r6, asr r4
    13c4:	07ed0a00 	strbeq	r0, [sp, r0, lsl #20]!
    13c8:	0f010000 	svceq	0x00010000
    13cc:	08003718 	stmdaeq	r0, {r3, r4, r8, r9, sl, ip, sp}
    13d0:	00000012 	andeq	r0, r0, r2, lsl r0
    13d4:	cf0a9c01 	svcgt	0x000a9c01
    13d8:	01000007 	tsteq	r0, r7
    13dc:	00372c14 	eorseq	r2, r7, r4, lsl ip
    13e0:	00001208 	andeq	r1, r0, r8, lsl #4
    13e4:	0d9c0100 	ldfeqs	f0, [ip]
    13e8:	0000009c 	muleq	r0, ip, r0
    13ec:	f506ce04 			; <UNDEFINED> instruction: 0xf506ce04
    13f0:	05000001 	streq	r0, [r0, #-1]
    13f4:	00000068 	andeq	r0, r0, r8, rrx
    13f8:	0001b800 	andeq	fp, r1, r0, lsl #16
    13fc:	56000400 	strpl	r0, [r0], -r0, lsl #8
    1400:	04000005 	streq	r0, [r0], #-5
    1404:	0000f901 	andeq	pc, r0, r1, lsl #18
    1408:	08160100 	ldmdaeq	r6, {r8}
    140c:	00420000 	subeq	r0, r2, r0
    1410:	37400000 	strbcc	r0, [r0, -r0]
    1414:	00bc0800 	adcseq	r0, ip, r0, lsl #16
    1418:	04740000 	ldrbteq	r0, [r4], #-0
    141c:	01020000 	mrseq	r0, (UNDEF: 2)
    1420:	0000b306 	andeq	fp, r0, r6, lsl #6
    1424:	08010200 	stmdaeq	r1, {r9}
    1428:	000000b1 	strheq	r0, [r0], -r1
    142c:	a3050202 	movwge	r0, #20994	; 0x5202
    1430:	02000001 	andeq	r0, r0, #1
    1434:	00890702 	addeq	r0, r9, r2, lsl #14
    1438:	04020000 	streq	r0, [r2], #-0
    143c:	00000505 	andeq	r0, r0, r5, lsl #10
    1440:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1444:	000000e7 	andeq	r0, r0, r7, ror #1
    1448:	00050802 	andeq	r0, r5, r2, lsl #16
    144c:	02000000 	andeq	r0, r0, #0
    1450:	00e20708 	rsceq	r0, r2, r8, lsl #14
    1454:	04030000 	streq	r0, [r3], #-0
    1458:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    145c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1460:	000000ec 	andeq	r0, r0, ip, ror #1
    1464:	8f070402 	svchi	0x00070402
    1468:	04000001 	streq	r0, [r0], #-1
    146c:	00007804 	andeq	r7, r0, r4, lsl #16
    1470:	08010200 	stmdaeq	r1, {r9}
    1474:	000000ba 	strheq	r0, [r0], -sl
    1478:	00081d05 	andeq	r1, r8, r5, lsl #26
    147c:	40080100 	andmi	r0, r8, r0, lsl #2
    1480:	bc080037 	stclt	0, cr0, [r8], {55}	; 0x37
    1484:	01000000 	mrseq	r0, (UNDEF: 0)
    1488:	0001259c 	muleq	r1, ip, r5
    148c:	37680600 	strbcc	r0, [r8, -r0, lsl #12]!
    1490:	00940800 	addseq	r0, r4, r0, lsl #16
    1494:	01080000 	mrseq	r0, (UNDEF: 8)
    1498:	75070000 	strvc	r0, [r7, #-0]
    149c:	01000008 	tsteq	r0, r8
    14a0:	00005d0f 	andeq	r5, r0, pc, lsl #26
    14a4:	00048500 	andeq	r8, r4, r0, lsl #10
    14a8:	377e0800 	ldrbcc	r0, [lr, -r0, lsl #16]!
    14ac:	016e0800 	cmneq	lr, r0, lsl #16
    14b0:	92090000 	andls	r0, r9, #0
    14b4:	79080037 	stmdbvc	r8, {r0, r1, r2, r4, r5}
    14b8:	d0000001 	andle	r0, r0, r1
    14bc:	0a000000 	beq	14c4 <__RW_SIZE__+0xf40>
    14c0:	03055001 	movweq	r5, #20481	; 0x5001
    14c4:	0800a610 	stmdaeq	r0, {r4, r9, sl, sp, pc}
    14c8:	37b20800 	ldrcc	r0, [r2, r0, lsl #16]!
    14cc:	018b0800 	orreq	r0, fp, r0, lsl #16
    14d0:	b8080000 	stmdalt	r8, {}	; <UNPREDICTABLE>
    14d4:	a1080037 	tstge	r8, r7, lsr r0
    14d8:	08000001 	stmdaeq	r0, {r0}
    14dc:	080037bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, sl, ip, sp}
    14e0:	0000016e 	andeq	r0, r0, lr, ror #2
    14e4:	0037e008 	eorseq	lr, r7, r8
    14e8:	00018b08 	andeq	r8, r1, r8, lsl #22
    14ec:	37fa0b00 	ldrbcc	r0, [sl, r0, lsl #22]!
    14f0:	01790800 	cmneq	r9, r0, lsl #16
    14f4:	010a0000 	mrseq	r0, (UNDEF: 10)
    14f8:	fc030550 	stc2	5, cr0, [r3], {80}	; 0x50
    14fc:	000800a5 	andeq	r0, r8, r5, lsr #1
    1500:	37480800 	strbcc	r0, [r8, -r0, lsl #16]
    1504:	01b20800 			; <UNDEFINED> instruction: 0x01b20800
    1508:	540b0000 	strpl	r0, [fp], #-0
    150c:	79080037 	stmdbvc	r8, {r0, r1, r2, r4, r5}
    1510:	0a000001 	beq	151c <__RW_SIZE__+0xf98>
    1514:	03055001 	movweq	r5, #20481	; 0x5001
    1518:	0800a5e0 	stmdaeq	r0, {r5, r6, r7, r8, sl, sp, pc}
    151c:	9c0c0000 	stcls	0, cr0, [ip], {-0}
    1520:	02000000 	andeq	r0, r0, #0
    1524:	013106ce 	teqeq	r1, lr, asr #13
    1528:	5d0d0000 	stcpl	0, cr0, [sp, #-0]
    152c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    1530:	0000082e 	andeq	r0, r0, lr, lsr #16
    1534:	00780301 	rsbseq	r0, r8, r1, lsl #6
    1538:	03050000 	movweq	r0, #20480	; 0x5000
    153c:	20000584 	andcs	r0, r0, r4, lsl #11
    1540:	0008810e 	andeq	r8, r8, lr, lsl #2
    1544:	5d040100 	stfpls	f0, [r4, #-0]
    1548:	05000000 	streq	r0, [r0, #-0]
    154c:	00000003 	andeq	r0, r0, r3
    1550:	083f0f20 	ldmdaeq	pc!, {r5, r8, r9, sl, fp}	; <UNPREDICTABLE>
    1554:	05010000 	streq	r0, [r1, #-0]
    1558:	00000131 	andeq	r0, r0, r1, lsr r1
    155c:	0008670f 	andeq	r6, r8, pc, lsl #14
    1560:	31060100 	mrscc	r0, (UNDEF: 22)
    1564:	10000001 	andne	r0, r0, r1
    1568:	0000059e 	muleq	r0, lr, r5
    156c:	005d2503 	subseq	r2, sp, r3, lsl #10
    1570:	5a110000 	bpl	441578 <__RW_SIZE__+0x440ff4>
    1574:	03000008 	movweq	r0, #8
    1578:	00018b11 	andeq	r8, r1, r1, lsl fp
    157c:	00721200 	rsbseq	r1, r2, r0, lsl #4
    1580:	00130000 	andseq	r0, r3, r0
    1584:	00084b11 	andeq	r4, r8, r1, lsl fp
    1588:	a1440300 	mrsge	r0, SPSR_abt
    158c:	12000001 	andne	r0, r0, #1
    1590:	00000078 	andeq	r0, r0, r8, ror r0
    1594:	00005d12 	andeq	r5, r0, r2, lsl sp
    1598:	01110000 	tsteq	r1, r0
    159c:	03000008 	movweq	r0, #8
    15a0:	0001b248 	andeq	fp, r1, r8, asr #4
    15a4:	005d1200 	subseq	r1, sp, r0, lsl #4
    15a8:	14000000 	strne	r0, [r0], #-0
    15ac:	00000822 	andeq	r0, r0, r2, lsr #16
    15b0:	00134303 	andseq	r4, r3, r3, lsl #6
    15b4:	00080700 	andeq	r0, r8, r0, lsl #14
    15b8:	67000400 	strvs	r0, [r0, -r0, lsl #8]
    15bc:	04000006 	streq	r0, [r0], #-6
    15c0:	0000f901 	andeq	pc, r0, r1, lsl #18
    15c4:	09e00100 	stmibeq	r0!, {r8}^
    15c8:	00420000 	subeq	r0, r2, r0
    15cc:	37fc0000 	ldrbcc	r0, [ip, r0]!
    15d0:	01980800 	orrseq	r0, r8, r0, lsl #16
    15d4:	04f20000 	ldrbteq	r0, [r2], #0
    15d8:	01020000 	mrseq	r0, (UNDEF: 2)
    15dc:	0000b306 	andeq	fp, r0, r6, lsl #6
    15e0:	027d0300 	rsbseq	r0, sp, #0, 6
    15e4:	2a020000 	bcs	815ec <__RW_SIZE__+0x81068>
    15e8:	00000037 	andeq	r0, r0, r7, lsr r0
    15ec:	b1080102 	tstlt	r8, r2, lsl #2
    15f0:	02000000 	andeq	r0, r0, #0
    15f4:	01a30502 			; <UNDEFINED> instruction: 0x01a30502
    15f8:	da030000 	ble	c1600 <__RW_SIZE__+0xc107c>
    15fc:	02000002 	andeq	r0, r0, #2
    1600:	00005036 	andeq	r5, r0, r6, lsr r0
    1604:	07020200 	streq	r0, [r2, -r0, lsl #4]
    1608:	00000089 	andeq	r0, r0, r9, lsl #1
    160c:	05050402 	streq	r0, [r5, #-1026]	; 0xfffffbfe
    1610:	03000000 	movweq	r0, #0
    1614:	000001b9 			; <UNDEFINED> instruction: 0x000001b9
    1618:	00695002 	rsbeq	r5, r9, r2
    161c:	04020000 	streq	r0, [r2], #-0
    1620:	0000e707 	andeq	lr, r0, r7, lsl #14
    1624:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    1628:	00000000 	andeq	r0, r0, r0
    162c:	e2070802 	and	r0, r7, #131072	; 0x20000
    1630:	04000000 	streq	r0, [r0], #-0
    1634:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    1638:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    163c:	0000ec07 	andeq	lr, r0, r7, lsl #24
    1640:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1644:	0000018f 	andeq	r0, r0, pc, lsl #3
    1648:	00005e05 	andeq	r5, r0, r5, lsl #28
    164c:	03740600 	cmneq	r4, #0, 12
    1650:	0001859b 	muleq	r1, fp, r5
    1654:	08ae0700 	stmiaeq	lr!, {r8, r9, sl}
    1658:	9d030000 	stcls	0, cr0, [r3, #-0]
    165c:	00000185 	andeq	r0, r0, r5, lsl #3
    1660:	08d60700 	ldmeq	r6, {r8, r9, sl}^
    1664:	9e030000 	cdpls	0, 0, cr0, cr3, cr0, {0}
    1668:	00000093 	muleq	r0, r3, r0
    166c:	09a30704 	stmibeq	r3!, {r2, r8, r9, sl}
    1670:	9f030000 	svcls	0x00030000
    1674:	00000093 	muleq	r0, r3, r0
    1678:	093c0708 	ldmdbeq	ip!, {r3, r8, r9, sl}
    167c:	a0030000 	andge	r0, r3, r0
    1680:	00000093 	muleq	r0, r3, r0
    1684:	4353080c 	cmpmi	r3, #12, 16	; 0xc0000
    1688:	a1030052 	qaddge	r0, r2, r3
    168c:	00000093 	muleq	r0, r3, r0
    1690:	43430810 	movtmi	r0, #14352	; 0x3810
    1694:	a2030052 	andge	r0, r3, #82	; 0x52
    1698:	00000093 	muleq	r0, r3, r0
    169c:	48530814 	ldmdami	r3, {r2, r4, fp}^
    16a0:	a3030050 	movwge	r0, #12368	; 0x3050
    16a4:	0000019a 	muleq	r0, sl, r1
    16a8:	098c0718 	stmibeq	ip, {r3, r4, r8, r9, sl}
    16ac:	a4030000 	strge	r0, [r3], #-0
    16b0:	00000093 	muleq	r0, r3, r0
    16b4:	09050724 	stmdbeq	r5, {r2, r5, r8, r9, sl}
    16b8:	a5030000 	strge	r0, [r3, #-0]
    16bc:	00000093 	muleq	r0, r3, r0
    16c0:	09b20728 	ldmibeq	r2!, {r3, r5, r8, r9, sl}
    16c4:	a6030000 	strge	r0, [r3], -r0
    16c8:	00000093 	muleq	r0, r3, r0
    16cc:	09ad072c 	stmibeq	sp!, {r2, r3, r5, r8, r9, sl}
    16d0:	a7030000 	strge	r0, [r3, -r0]
    16d4:	00000093 	muleq	r0, r3, r0
    16d8:	09980730 	ldmibeq	r8, {r4, r5, r8, r9, sl}
    16dc:	a8030000 	stmdage	r3, {}	; <UNPREDICTABLE>
    16e0:	00000093 	muleq	r0, r3, r0
    16e4:	08e60734 	stmiaeq	r6!, {r2, r4, r5, r8, r9, sl}^
    16e8:	a9030000 	stmdbge	r3, {}	; <UNPREDICTABLE>
    16ec:	00000093 	muleq	r0, r3, r0
    16f0:	09e80738 	stmibeq	r8!, {r3, r4, r5, r8, r9, sl}^
    16f4:	aa030000 	bge	c16fc <__RW_SIZE__+0xc1178>
    16f8:	00000093 	muleq	r0, r3, r0
    16fc:	4650083c 			; <UNDEFINED> instruction: 0x4650083c
    1700:	ab030052 	blge	c1850 <__RW_SIZE__+0xc12cc>
    1704:	000001af 	andeq	r0, r0, pc, lsr #3
    1708:	46440840 	strbmi	r0, [r4], -r0, asr #16
    170c:	ac030052 	stcge	0, cr0, [r3], {82}	; 0x52
    1710:	00000185 	andeq	r0, r0, r5, lsl #3
    1714:	44410848 	strbmi	r0, [r1], #-2120	; 0xfffff7b8
    1718:	ad030052 	stcge	0, cr0, [r3, #-328]	; 0xfffffeb8
    171c:	00000185 	andeq	r0, r0, r5, lsl #3
    1720:	09b7074c 	ldmibeq	r7!, {r2, r3, r6, r8, r9, sl}
    1724:	ae030000 	cdpge	0, 0, cr0, cr3, cr0, {0}
    1728:	000001c9 	andeq	r0, r0, r9, asr #3
    172c:	09a80750 	stmibeq	r8!, {r4, r6, r8, r9, sl}
    1730:	af030000 	svcge	0x00030000
    1734:	000001e3 	andeq	r0, r0, r3, ror #3
    1738:	93090060 	movwls	r0, #36960	; 0x9060
    173c:	0a000000 	beq	1744 <__RW_SIZE__+0x11c0>
    1740:	0000002c 	andeq	r0, r0, ip, lsr #32
    1744:	0000019a 	muleq	r0, sl, r1
    1748:	00008c0b 	andeq	r8, r0, fp, lsl #24
    174c:	05000b00 	streq	r0, [r0, #-2816]	; 0xfffff500
    1750:	0000018a 	andeq	r0, r0, sl, lsl #3
    1754:	00005e0a 	andeq	r5, r0, sl, lsl #28
    1758:	0001af00 	andeq	sl, r1, r0, lsl #30
    175c:	008c0b00 	addeq	r0, ip, r0, lsl #22
    1760:	00010000 	andeq	r0, r1, r0
    1764:	0001b409 	andeq	fp, r1, r9, lsl #8
    1768:	019f0500 	orrseq	r0, pc, r0, lsl #10
    176c:	5e0a0000 	cdppl	0, 0, cr0, cr10, cr0, {0}
    1770:	c9000000 	stmdbgt	r0, {}	; <UNPREDICTABLE>
    1774:	0b000001 	bleq	1780 <__RW_SIZE__+0x11fc>
    1778:	0000008c 	andeq	r0, r0, ip, lsl #1
    177c:	ce090003 	cdpgt	0, 0, cr0, cr9, cr3, {0}
    1780:	05000001 	streq	r0, [r0, #-1]
    1784:	000001b9 			; <UNDEFINED> instruction: 0x000001b9
    1788:	00005e0a 	andeq	r5, r0, sl, lsl #28
    178c:	0001e300 	andeq	lr, r1, r0, lsl #6
    1790:	008c0b00 	addeq	r0, ip, r0, lsl #22
    1794:	00040000 	andeq	r0, r4, r0
    1798:	0001e809 	andeq	lr, r1, r9, lsl #16
    179c:	01d30500 	bicseq	r0, r3, r0, lsl #10
    17a0:	42030000 	andmi	r0, r3, #0
    17a4:	03000009 	movweq	r0, #9
    17a8:	000098b0 			; <UNDEFINED> instruction: 0x000098b0
    17ac:	00450500 	subeq	r0, r5, r0, lsl #10
    17b0:	1c0c0000 	stcne	0, cr0, [ip], {-0}
    17b4:	6203e904 	andvs	lr, r3, #4, 18	; 0x10000
    17b8:	0d000002 	stceq	0, cr0, [r0, #-8]
    17bc:	004c5243 	subeq	r5, ip, r3, asr #4
    17c0:	9303eb04 	movwls	lr, #15108	; 0x3b04
    17c4:	00000000 	andeq	r0, r0, r0
    17c8:	4852430d 	ldmdami	r2, {r0, r2, r3, r8, r9, lr}^
    17cc:	03ec0400 	mvneq	r0, #0, 8
    17d0:	00000093 	muleq	r0, r3, r0
    17d4:	44490d04 	strbmi	r0, [r9], #-3332	; 0xfffff2fc
    17d8:	ed040052 	stc	0, cr0, [r4, #-328]	; 0xfffffeb8
    17dc:	00009303 	andeq	r9, r0, r3, lsl #6
    17e0:	4f0d0800 	svcmi	0x000d0800
    17e4:	04005244 	streq	r5, [r0], #-580	; 0xfffffdbc
    17e8:	009303ee 	addseq	r0, r3, lr, ror #7
    17ec:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
    17f0:	0000036a 	andeq	r0, r0, sl, ror #6
    17f4:	9303ef04 	movwls	lr, #16132	; 0x3f04
    17f8:	10000000 	andne	r0, r0, r0
    17fc:	5252420d 	subspl	r4, r2, #-805306368	; 0xd0000000
    1800:	03f00400 	mvnseq	r0, #0, 8
    1804:	00000093 	muleq	r0, r3, r0
    1808:	04050e14 	streq	r0, [r5], #-3604	; 0xfffff1ec
    180c:	f1040000 	cps	#0
    1810:	00009303 	andeq	r9, r0, r3, lsl #6
    1814:	0f001800 	svceq	0x00001800
    1818:	00000317 	andeq	r0, r0, r7, lsl r3
    181c:	fd03f204 	stc2	2, cr15, [r3, #-16]
    1820:	0c000001 	stceq	0, cr0, [r0], {1}
    1824:	04340428 	ldrteq	r0, [r4], #-1064	; 0xfffffbd8
    1828:	000002f9 	strdeq	r0, [r0], -r9
    182c:	0052430d 	subseq	r4, r2, sp, lsl #6
    1830:	93043604 	movwls	r3, #17924	; 0x4604
    1834:	00000000 	andeq	r0, r0, r0
    1838:	0000130e 	andeq	r1, r0, lr, lsl #6
    183c:	04370400 	ldrteq	r0, [r7], #-1024	; 0xfffffc00
    1840:	00000093 	muleq	r0, r3, r0
    1844:	49430d04 	stmdbmi	r3, {r2, r8, sl, fp}^
    1848:	38040052 	stmdacc	r4, {r1, r4, r6}
    184c:	00009304 	andeq	r9, r0, r4, lsl #6
    1850:	d90e0800 	stmdble	lr, {fp}
    1854:	04000000 	streq	r0, [r0], #-0
    1858:	00930439 	addseq	r0, r3, r9, lsr r4
    185c:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
    1860:	000000c8 	andeq	r0, r0, r8, asr #1
    1864:	93043a04 	movwls	r3, #18948	; 0x4a04
    1868:	10000000 	andne	r0, r0, r0
    186c:	0000260e 	andeq	r2, r0, lr, lsl #12
    1870:	043b0400 	ldrteq	r0, [fp], #-1024	; 0xfffffc00
    1874:	00000093 	muleq	r0, r3, r0
    1878:	00320e14 	eorseq	r0, r2, r4, lsl lr
    187c:	3c040000 	stccc	0, cr0, [r4], {-0}
    1880:	00009304 	andeq	r9, r0, r4, lsl #6
    1884:	d10e1800 	tstle	lr, r0, lsl #16
    1888:	04000000 	streq	r0, [r0], #-0
    188c:	0093043d 	addseq	r0, r3, sp, lsr r4
    1890:	0e1c0000 	cdpeq	0, 1, cr0, cr12, cr0, {0}
    1894:	0000000e 	andeq	r0, r0, lr
    1898:	93043e04 	movwls	r3, #19972	; 0x4e04
    189c:	20000000 	andcs	r0, r0, r0
    18a0:	5253430d 	subspl	r4, r3, #872415232	; 0x34000000
    18a4:	043f0400 	ldrteq	r0, [pc], #-1024	; 18ac <__RW_SIZE__+0x1328>
    18a8:	00000093 	muleq	r0, r3, r0
    18ac:	ad0f0024 	stcge	0, cr0, [pc, #-144]	; 1824 <__RW_SIZE__+0x12a0>
    18b0:	04000001 	streq	r0, [r0], #-1
    18b4:	026e044a 	rsbeq	r0, lr, #1241513984	; 0x4a000000
    18b8:	500c0000 	andpl	r0, ip, r0
    18bc:	1604a204 	strne	sl, [r4], -r4, lsl #4
    18c0:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    18c4:	00315243 	eorseq	r5, r1, r3, asr #4
    18c8:	f804a404 			; <UNDEFINED> instruction: 0xf804a404
    18cc:	00000001 	andeq	r0, r0, r1
    18d0:	0003990e 	andeq	r9, r3, lr, lsl #18
    18d4:	04a50400 	strteq	r0, [r5], #1024	; 0x400
    18d8:	00000045 	andeq	r0, r0, r5, asr #32
    18dc:	52430d02 	subpl	r0, r3, #2, 26	; 0x80
    18e0:	a6040032 			; <UNDEFINED> instruction: 0xa6040032
    18e4:	0001f804 	andeq	pc, r1, r4, lsl #16
    18e8:	3a0e0400 	bcc	3828f0 <__RW_SIZE__+0x38236c>
    18ec:	04000003 	streq	r0, [r0], #-3
    18f0:	004504a7 	subeq	r0, r5, r7, lsr #9
    18f4:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
    18f8:	00000937 	andeq	r0, r0, r7, lsr r9
    18fc:	f804a804 			; <UNDEFINED> instruction: 0xf804a804
    1900:	08000001 	stmdaeq	r0, {r0}
    1904:	0003a90e 	andeq	sl, r3, lr, lsl #18
    1908:	04a90400 	strteq	r0, [r9], #1024	; 0x400
    190c:	00000045 	andeq	r0, r0, r5, asr #32
    1910:	099e0e0a 	ldmibeq	lr, {r1, r3, r9, sl, fp}
    1914:	aa040000 	bge	10191c <__RW_SIZE__+0x101398>
    1918:	0001f804 	andeq	pc, r1, r4, lsl #16
    191c:	b30e0c00 	movwlt	r0, #60416	; 0xec00
    1920:	04000003 	streq	r0, [r0], #-3
    1924:	004504ab 	subeq	r0, r5, fp, lsr #9
    1928:	0d0e0000 	stceq	0, cr0, [lr, #-0]
    192c:	04005253 	streq	r5, [r0], #-595	; 0xfffffdad
    1930:	01f804ac 	mvnseq	r0, ip, lsr #9
    1934:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
    1938:	000003bd 			; <UNDEFINED> instruction: 0x000003bd
    193c:	4504ad04 	strmi	sl, [r4, #-3332]	; 0xfffff2fc
    1940:	12000000 	andne	r0, r0, #0
    1944:	5247450d 	subpl	r4, r7, #54525952	; 0x3400000
    1948:	04ae0400 	strteq	r0, [lr], #1024	; 0x400
    194c:	000001f8 	strdeq	r0, [r0], -r8
    1950:	03c70e14 	biceq	r0, r7, #20, 28	; 0x140
    1954:	af040000 	svcge	0x00040000
    1958:	00004504 	andeq	r4, r0, r4, lsl #10
    195c:	970e1600 	strls	r1, [lr, -r0, lsl #12]
    1960:	04000008 	streq	r0, [r0], #-8
    1964:	01f804b0 	ldrheq	r0, [r8, #64]!	; 0x40
    1968:	0e180000 	cdpeq	0, 1, cr0, cr8, cr0, {0}
    196c:	000003d1 	ldrdeq	r0, [r0], -r1
    1970:	4504b104 	strmi	fp, [r4, #-260]	; 0xfffffefc
    1974:	1a000000 	bne	197c <__RW_SIZE__+0x13f8>
    1978:	00089d0e 	andeq	r9, r8, lr, lsl #26
    197c:	04b20400 	ldrteq	r0, [r2], #1024	; 0x400
    1980:	000001f8 	strdeq	r0, [r0], -r8
    1984:	03db0e1c 	bicseq	r0, fp, #28, 28	; 0x1c0
    1988:	b3040000 	movwlt	r0, #16384	; 0x4000
    198c:	00004504 	andeq	r4, r0, r4, lsl #10
    1990:	8d0e1e00 	stchi	14, cr1, [lr, #-0]
    1994:	04000008 	streq	r0, [r0], #-8
    1998:	01f804b4 	ldrheq	r0, [r8, #68]!	; 0x44
    199c:	0e200000 	cdpeq	0, 2, cr0, cr0, cr0, {0}
    19a0:	0000034b 	andeq	r0, r0, fp, asr #6
    19a4:	4504b504 	strmi	fp, [r4, #-1284]	; 0xfffffafc
    19a8:	22000000 	andcs	r0, r0, #0
    19ac:	544e430d 	strbpl	r4, [lr], #-781	; 0xfffffcf3
    19b0:	04b60400 	ldrteq	r0, [r6], #1024	; 0x400
    19b4:	000001f8 	strdeq	r0, [r0], -r8
    19b8:	09bc0e24 	ldmibeq	ip!, {r2, r5, r9, sl, fp}
    19bc:	b7040000 	strlt	r0, [r4, -r0]
    19c0:	00004504 	andeq	r4, r0, r4, lsl #10
    19c4:	500d2600 	andpl	r2, sp, r0, lsl #12
    19c8:	04004353 	streq	r4, [r0], #-851	; 0xfffffcad
    19cc:	01f804b8 	ldrheq	r0, [r8, #72]!	; 0x48
    19d0:	0e280000 	cdpeq	0, 2, cr0, cr8, cr0, {0}
    19d4:	000008fa 	strdeq	r0, [r0], -sl
    19d8:	4504b904 	strmi	fp, [r4, #-2308]	; 0xfffff6fc
    19dc:	2a000000 	bcs	19e4 <__RW_SIZE__+0x1460>
    19e0:	5252410d 	subspl	r4, r2, #1073741827	; 0x40000003
    19e4:	04ba0400 	ldrteq	r0, [sl], #1024	; 0x400
    19e8:	000001f8 	strdeq	r0, [r0], -r8
    19ec:	08cb0e2c 	stmiaeq	fp, {r2, r3, r5, r9, sl, fp}^
    19f0:	bb040000 	bllt	1019f8 <__RW_SIZE__+0x101474>
    19f4:	00004504 	andeq	r4, r0, r4, lsl #10
    19f8:	520d2e00 	andpl	r2, sp, #0, 28
    19fc:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    1a00:	01f804bc 	ldrheq	r0, [r8, #76]!	; 0x4c
    1a04:	0e300000 	cdpeq	0, 3, cr0, cr0, cr0, {0}
    1a08:	00000955 	andeq	r0, r0, r5, asr r9
    1a0c:	4504bd04 	strmi	fp, [r4, #-3332]	; 0xfffff2fc
    1a10:	32000000 	andcc	r0, r0, #0
    1a14:	0008eb0e 	andeq	lr, r8, lr, lsl #22
    1a18:	04be0400 	ldrteq	r0, [lr], #1024	; 0x400
    1a1c:	000001f8 	strdeq	r0, [r0], -r8
    1a20:	090a0e34 	stmdbeq	sl, {r2, r4, r5, r9, sl, fp}
    1a24:	bf040000 	svclt	0x00040000
    1a28:	00004504 	andeq	r4, r0, r4, lsl #10
    1a2c:	f00e3600 			; <UNDEFINED> instruction: 0xf00e3600
    1a30:	04000008 	streq	r0, [r0], #-8
    1a34:	01f804c0 	mvnseq	r0, r0, asr #9
    1a38:	0e380000 	cdpeq	0, 3, cr0, cr8, cr0, {0}
    1a3c:	00000960 	andeq	r0, r0, r0, ror #18
    1a40:	4504c104 	strmi	ip, [r4, #-260]	; 0xfffffefc
    1a44:	3a000000 	bcc	1a4c <__RW_SIZE__+0x14c8>
    1a48:	0008f50e 	andeq	pc, r8, lr, lsl #10
    1a4c:	04c20400 	strbeq	r0, [r2], #1024	; 0x400
    1a50:	000001f8 	strdeq	r0, [r0], -r8
    1a54:	096b0e3c 	stmdbeq	fp!, {r2, r3, r4, r5, r9, sl, fp}^
    1a58:	c3040000 	movwgt	r0, #16384	; 0x4000
    1a5c:	00004504 	andeq	r4, r0, r4, lsl #10
    1a60:	500e3e00 	andpl	r3, lr, r0, lsl #28
    1a64:	04000009 	streq	r0, [r0], #-9
    1a68:	01f804c4 	mvnseq	r0, r4, asr #9
    1a6c:	0e400000 	cdpeq	0, 4, cr0, cr0, cr0, {0}
    1a70:	00000976 	andeq	r0, r0, r6, ror r9
    1a74:	4504c504 	strmi	ip, [r4, #-1284]	; 0xfffffafc
    1a78:	42000000 	andmi	r0, r0, #0
    1a7c:	00094b0e 	andeq	r4, r9, lr, lsl #22
    1a80:	04c60400 	strbeq	r0, [r6], #1024	; 0x400
    1a84:	000001f8 	strdeq	r0, [r0], -r8
    1a88:	09200e44 	stmdbeq	r0!, {r2, r6, r9, sl, fp}
    1a8c:	c7040000 	strgt	r0, [r4, -r0]
    1a90:	00004504 	andeq	r4, r0, r4, lsl #10
    1a94:	440d4600 	strmi	r4, [sp], #-1536	; 0xfffffa00
    1a98:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    1a9c:	01f804c8 	mvnseq	r0, r8, asr #9
    1aa0:	0e480000 	cdpeq	0, 4, cr0, cr8, cr0, {0}
    1aa4:	00000981 	andeq	r0, r0, r1, lsl #19
    1aa8:	4504c904 	strmi	ip, [r4, #-2308]	; 0xfffff6fc
    1aac:	4a000000 	bmi	1ab4 <__RW_SIZE__+0x1530>
    1ab0:	0008920e 	andeq	r9, r8, lr, lsl #4
    1ab4:	04ca0400 	strbeq	r0, [sl], #1024	; 0x400
    1ab8:	000001f8 	strdeq	r0, [r0], -r8
    1abc:	08db0e4c 	ldmeq	fp, {r2, r3, r6, r9, sl, fp}^
    1ac0:	cb040000 	blgt	101ac8 <__RW_SIZE__+0x101544>
    1ac4:	00004504 	andeq	r4, r0, r4, lsl #10
    1ac8:	0f004e00 	svceq	0x00004e00
    1acc:	0000092b 	andeq	r0, r0, fp, lsr #18
    1ad0:	0504cc04 	streq	ip, [r4, #-3076]	; 0xfffff3fc
    1ad4:	10000003 	andne	r0, r0, r3
    1ad8:	00052804 	andeq	r2, r5, r4, lsl #16
    1adc:	08010200 	stmdaeq	r1, {r9}
    1ae0:	000000ba 	strheq	r0, [r0], -sl
    1ae4:	00091511 	andeq	r1, r9, r1, lsl r5
    1ae8:	013b0100 	teqeq	fp, r0, lsl #2
    1aec:	0008b412 	andeq	fp, r8, r2, lsl r4
    1af0:	01410100 	mrseq	r0, (UNDEF: 81)
    1af4:	0000054f 	andeq	r0, r0, pc, asr #10
    1af8:	00099213 	andeq	r9, r9, r3, lsl r2
    1afc:	7e410100 	dvfvcs	f0, f1, f0
    1b00:	00000000 	andeq	r0, r0, r0
    1b04:	0009ed12 	andeq	lr, r9, r2, lsl sp
    1b08:	01470100 	mrseq	r0, (UNDEF: 87)
    1b0c:	00000567 	andeq	r0, r0, r7, ror #10
    1b10:	00099213 	andeq	r9, r9, r3, lsl r2
    1b14:	7e470100 	dvfvcs	f0, f7, f0
    1b18:	00000000 	andeq	r0, r0, r0
    1b1c:	00082214 	andeq	r2, r8, r4, lsl r2
    1b20:	fc060100 	stc2	1, cr0, [r6], {-0}
    1b24:	b8080037 	stmdalt	r8, {r0, r1, r2, r4, r5}
    1b28:	01000000 	mrseq	r0, (UNDEF: 0)
    1b2c:	0005f09c 	muleq	r5, ip, r0
    1b30:	38061500 	stmdacc	r6, {r8, sl, ip}
    1b34:	07880800 	streq	r0, [r8, r0, lsl #16]
    1b38:	05920000 	ldreq	r0, [r2]
    1b3c:	01160000 	tsteq	r6, r0
    1b40:	e1080450 	tst	r8, r0, asr r4
    1b44:	15002439 	strne	r2, [r0, #-1081]	; 0xfffffbc7
    1b48:	0800380c 	stmdaeq	r0, {r2, r3, fp, ip, sp}
    1b4c:	00000799 	muleq	r0, r9, r7
    1b50:	000005a5 	andeq	r0, r0, r5, lsr #11
    1b54:	01500116 	cmpeq	r0, r6, lsl r1
    1b58:	10170031 	andsne	r0, r7, r1, lsr r0
    1b5c:	aa080038 	bge	201c44 <__RW_SIZE__+0x2016c0>
    1b60:	17000007 	strne	r0, [r0, -r7]
    1b64:	08003814 	stmdaeq	r0, {r2, r4, fp, ip, sp}
    1b68:	000007b1 			; <UNDEFINED> instruction: 0x000007b1
    1b6c:	00381a15 	eorseq	r1, r8, r5, lsl sl
    1b70:	0007b808 	andeq	fp, r7, r8, lsl #16
    1b74:	0005ca00 	andeq	ip, r5, r0, lsl #20
    1b78:	50011600 	andpl	r1, r1, r0, lsl #12
    1b7c:	15003101 	strne	r3, [r0, #-257]	; 0xfffffeff
    1b80:	080038aa 	stmdaeq	r0, {r1, r3, r5, r7, fp, ip, sp}
    1b84:	000007c9 	andeq	r0, r0, r9, asr #15
    1b88:	000005df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1b8c:	03500116 	cmpeq	r0, #-2147483643	; 0x80000005
    1b90:	0013880a 	andseq	r8, r3, sl, lsl #16
    1b94:	0038b418 	eorseq	fp, r8, r8, lsl r4
    1b98:	0007da08 	andeq	sp, r7, r8, lsl #20
    1b9c:	50011600 	andpl	r1, r1, r0, lsl #12
    1ba0:	00ff0802 	rscseq	r0, pc, r2, lsl #16
    1ba4:	084b1900 	stmdaeq	fp, {r8, fp, ip}^
    1ba8:	26010000 	strcs	r0, [r1], -r0
    1bac:	080038b4 	stmdaeq	r0, {r2, r4, r5, r7, fp, ip, sp}
    1bb0:	0000007a 	andeq	r0, r0, sl, ror r0
    1bb4:	06d39c01 	ldrbeq	r9, [r3], r1, lsl #24
    1bb8:	371a0000 	ldrcc	r0, [sl, -r0]
    1bbc:	01000008 	tsteq	r0, r8
    1bc0:	00052826 	andeq	r2, r5, r6, lsr #16
    1bc4:	0004a300 	andeq	sl, r4, r0, lsl #6
    1bc8:	09921a00 	ldmibeq	r2, {r9, fp, ip}
    1bcc:	26010000 	strcs	r0, [r1], -r0
    1bd0:	0000007e 	andeq	r0, r0, lr, ror r0
    1bd4:	0000050f 	andeq	r0, r0, pc, lsl #10
    1bd8:	0005371b 	andeq	r3, r5, fp, lsl r7
    1bdc:	0038d600 	eorseq	sp, r8, r0, lsl #12
    1be0:	00004808 	andeq	r4, r0, r8, lsl #16
    1be4:	402e0100 	eormi	r0, lr, r0, lsl #2
    1be8:	1c000006 	stcne	0, cr0, [r0], {6}
    1bec:	00000543 	andeq	r0, r0, r3, asr #10
    1bf0:	0000057b 	andeq	r0, r0, fp, ror r5
    1bf4:	052f1d00 	streq	r1, [pc, #-3328]!	; efc <__RW_SIZE__+0x978>
    1bf8:	38f40000 	ldmcc	r4!, {}^	; <UNPREDICTABLE>
    1bfc:	00600800 	rsbeq	r0, r0, r0, lsl #16
    1c00:	2a010000 	bcs	41c08 <__RW_SIZE__+0x41684>
    1c04:	00054f1b 	andeq	r4, r5, fp, lsl pc
    1c08:	00391000 	eorseq	r1, r9, r0
    1c0c:	00007808 	andeq	r7, r0, r8, lsl #16
    1c10:	6c320100 	ldfvss	f0, [r2], #-0
    1c14:	1c000006 	stcne	0, cr0, [r0], {6}
    1c18:	0000055b 	andeq	r0, r0, fp, asr r5
    1c1c:	0000059c 	muleq	r0, ip, r5
    1c20:	38d61e00 	ldmcc	r6, {r9, sl, fp, ip}^
    1c24:	07eb0800 	strbeq	r0, [fp, r0, lsl #16]!
    1c28:	06830000 	streq	r0, [r3], r0
    1c2c:	01160000 	tsteq	r6, r0
    1c30:	74030550 	strvc	r0, [r3], #-1360	; 0xfffffab0
    1c34:	000800a6 	andeq	r0, r8, r6, lsr #1
    1c38:	0038f41e 	eorseq	pc, r8, lr, lsl r4	; <UNPREDICTABLE>
    1c3c:	0007eb08 	andeq	lr, r7, r8, lsl #22
    1c40:	0006a100 	andeq	sl, r6, r0, lsl #2
    1c44:	51011600 	tstpl	r1, r0, lsl #12
    1c48:	5101f303 	tstpl	r1, r3, lsl #6
    1c4c:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
    1c50:	00a63c03 	adceq	r3, r6, r3, lsl #24
    1c54:	101e0008 	andsne	r0, lr, r8
    1c58:	eb080039 	bl	201d44 <__RW_SIZE__+0x2017c0>
    1c5c:	b8000007 	stmdalt	r0, {r0, r1, r2}
    1c60:	16000006 	strne	r0, [r0], -r6
    1c64:	03055001 	movweq	r5, #20481	; 0x5001
    1c68:	0800a62c 	stmdaeq	r0, {r2, r3, r5, r9, sl, sp, pc}
    1c6c:	392e1800 	stmdbcc	lr!, {fp, ip}
    1c70:	07eb0800 	strbeq	r0, [fp, r0, lsl #16]!
    1c74:	01160000 	tsteq	r6, r0
    1c78:	01f30351 	mvnseq	r0, r1, asr r3
    1c7c:	50011651 	andpl	r1, r1, r1, asr r6
    1c80:	a6580305 	ldrbge	r0, [r8], -r5, lsl #6
    1c84:	00000800 	andeq	r0, r0, r0, lsl #16
    1c88:	00052f1f 	andeq	r2, r5, pc, lsl pc
    1c8c:	00393000 	eorseq	r3, r9, r0
    1c90:	00000e08 	andeq	r0, r0, r8, lsl #28
    1c94:	209c0100 	addscs	r0, ip, r0, lsl #2
    1c98:	00000537 	andeq	r0, r0, r7, lsr r5
    1c9c:	08003940 	stmdaeq	r0, {r6, r8, fp, ip, sp}
    1ca0:	00000010 	andeq	r0, r0, r0, lsl r0
    1ca4:	06ff9c01 	ldrbteq	r9, [pc], r1, lsl #24
    1ca8:	431c0000 	tstmi	ip, #0
    1cac:	bd000005 	stclt	0, cr0, [r0, #-20]	; 0xffffffec
    1cb0:	00000005 	andeq	r0, r0, r5
    1cb4:	00054f20 	andeq	r4, r5, r0, lsr #30
    1cb8:	00395000 	eorseq	r5, r9, r0
    1cbc:	00001008 	andeq	r1, r0, r8
    1cc0:	1c9c0100 	ldfnes	f0, [ip], {0}
    1cc4:	1c000007 	stcne	0, cr0, [r0], {7}
    1cc8:	0000055b 	andeq	r0, r0, fp, asr r5
    1ccc:	000005de 	ldrdeq	r0, [r0], -lr
    1cd0:	08011900 	stmdaeq	r1, {r8, fp, ip}
    1cd4:	4d010000 	stcmi	0, cr0, [r1, #-0]
    1cd8:	08003960 	stmdaeq	r0, {r5, r6, r8, fp, ip, sp}
    1cdc:	00000034 	andeq	r0, r0, r4, lsr r0
    1ce0:	07779c01 	ldrbeq	r9, [r7, -r1, lsl #24]!
    1ce4:	921a0000 	andsls	r0, sl, #0
    1ce8:	01000009 	tsteq	r0, r9
    1cec:	00007e4d 	andeq	r7, r0, sp, asr #28
    1cf0:	0005ff00 	andeq	pc, r5, r0, lsl #30
    1cf4:	08c22100 	stmiaeq	r2, {r8, sp}^
    1cf8:	4f010000 	svcmi	0x00010000
    1cfc:	00000085 	andeq	r0, r0, r5, lsl #1
    1d00:	00000620 	andeq	r0, r0, r0, lsr #12
    1d04:	00398215 	eorseq	r8, r9, r5, lsl r2
    1d08:	0007fd08 	andeq	pc, r7, r8, lsl #26
    1d0c:	00076300 	andeq	r6, r7, r0, lsl #6
    1d10:	50011600 	andpl	r1, r1, r0, lsl #12
    1d14:	00007402 	andeq	r7, r0, r2, lsl #8
    1d18:	00399418 	eorseq	r9, r9, r8, lsl r4
    1d1c:	0007eb08 	andeq	lr, r7, r8, lsl #22
    1d20:	50011600 	andpl	r1, r1, r0, lsl #12
    1d24:	a68c0305 	strge	r0, [ip], r5, lsl #6
    1d28:	00000800 	andeq	r0, r0, r0, lsl #16
    1d2c:	00009c22 	andeq	r9, r0, r2, lsr #24
    1d30:	06ce0300 	strbeq	r0, [lr], r0, lsl #6
    1d34:	00000783 	andeq	r0, r0, r3, lsl #15
    1d38:	00007e05 	andeq	r7, r0, r5, lsl #28
    1d3c:	08a32300 	stmiaeq	r3!, {r8, r9, sp}
    1d40:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
    1d44:	00000799 	muleq	r0, r9, r7
    1d48:	00007e24 	andeq	r7, r0, r4, lsr #28
    1d4c:	c6230000 	strtgt	r0, [r3], -r0
    1d50:	05000009 	streq	r0, [r0, #-9]
    1d54:	0007aa14 	andeq	sl, r7, r4, lsl sl
    1d58:	007e2400 	rsbseq	r2, lr, r0, lsl #8
    1d5c:	25000000 	strcs	r0, [r0, #-0]
    1d60:	00000198 	muleq	r0, r8, r1
    1d64:	25252005 	strcs	r2, [r5, #-5]!
    1d68:	05000004 	streq	r0, [r0, #-4]
    1d6c:	04ea2324 	strbteq	r2, [sl], #804	; 0x324
    1d70:	28050000 	stmdacs	r5, {}	; <UNPREDICTABLE>
    1d74:	000007c9 	andeq	r0, r0, r9, asr #15
    1d78:	00007e24 	andeq	r7, r0, r4, lsr #28
    1d7c:	fc230000 	stc2	0, cr0, [r3], #-0
    1d80:	05000003 	streq	r0, [r0, #-3]
    1d84:	0007da4f 	andeq	sp, r7, pc, asr #20
    1d88:	00852400 	addeq	r2, r5, r0, lsl #8
    1d8c:	23000000 	movwcs	r0, #0
    1d90:	0000035a 	andeq	r0, r0, sl, asr r3
    1d94:	07eb5105 	strbeq	r5, [fp, r5, lsl #2]!
    1d98:	85240000 	strhi	r0, [r4, #-0]!
    1d9c:	00000000 	andeq	r0, r0, r0
    1da0:	00085a23 	andeq	r5, r8, r3, lsr #20
    1da4:	fd110500 	ldc2	5, cr0, [r1, #-0]
    1da8:	24000007 	strcs	r0, [r0], #-7
    1dac:	00000522 	andeq	r0, r0, r2, lsr #10
    1db0:	24270026 	strtcs	r0, [r7], #-38	; 0xffffffda
    1db4:	05000003 	streq	r0, [r0, #-3]
    1db8:	00852452 	addeq	r2, r5, r2, asr r4
    1dbc:	00000000 	andeq	r0, r0, r0
    1dc0:	000000fb 	strdeq	r0, [r0], -fp
    1dc4:	088a0004 	stmeq	sl, {r2}
    1dc8:	01040000 	mrseq	r0, (UNDEF: 4)
    1dcc:	000000f9 	strdeq	r0, [r0], -r9
    1dd0:	000a1201 	andeq	r1, sl, r1, lsl #4
    1dd4:	00004200 	andeq	r4, r0, r0, lsl #4
    1dd8:	00399400 	eorseq	r9, r9, r0, lsl #8
    1ddc:	00004408 	andeq	r4, r0, r8, lsl #8
    1de0:	00062700 	andeq	r2, r6, r0, lsl #14
    1de4:	06010200 	streq	r0, [r1], -r0, lsl #4
    1de8:	000000b3 	strheq	r0, [r0], -r3
    1dec:	b1080102 	tstlt	r8, r2, lsl #2
    1df0:	02000000 	andeq	r0, r0, #0
    1df4:	01a30502 			; <UNDEFINED> instruction: 0x01a30502
    1df8:	02020000 	andeq	r0, r2, #0
    1dfc:	00008907 	andeq	r8, r0, r7, lsl #18
    1e00:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    1e04:	00000005 	andeq	r0, r0, r5
    1e08:	e7070402 	str	r0, [r7, -r2, lsl #8]
    1e0c:	02000000 	andeq	r0, r0, #0
    1e10:	00000508 	andeq	r0, r0, r8, lsl #10
    1e14:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1e18:	0000e207 	andeq	lr, r0, r7, lsl #4
    1e1c:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    1e20:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1e24:	ec070402 	cfstrs	mvf0, [r7], {2}
    1e28:	02000000 	andeq	r0, r0, #0
    1e2c:	018f0704 	orreq	r0, pc, r4, lsl #14
    1e30:	04040000 	streq	r0, [r4], #-0
    1e34:	00000078 	andeq	r0, r0, r8, ror r0
    1e38:	ba080102 	blt	202248 <__RW_SIZE__+0x201cc4>
    1e3c:	05000000 	streq	r0, [r0, #-0]
    1e40:	00000a1c 	andeq	r0, r0, ip, lsl sl
    1e44:	00720301 	rsbseq	r0, r2, r1, lsl #6
    1e48:	39940000 	ldmibcc	r4, {}	; <UNPREDICTABLE>
    1e4c:	00440800 	subeq	r0, r4, r0, lsl #16
    1e50:	9c010000 	stcls	0, cr0, [r1], {-0}
    1e54:	000000e2 	andeq	r0, r0, r2, ror #1
    1e58:	636e6906 	cmnvs	lr, #98304	; 0x18000
    1e5c:	5d030100 	stfpls	f0, [r3, #-0]
    1e60:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    1e64:	07000006 	streq	r0, [r0, -r6]
    1e68:	00000a22 	andeq	r0, r0, r2, lsr #20
    1e6c:	002c0501 	eoreq	r0, ip, r1, lsl #10
    1e70:	fb080000 	blx	201e7a <__RW_SIZE__+0x2018f6>
    1e74:	01000009 	tsteq	r0, r9
    1e78:	00007206 	andeq	r7, r0, r6, lsl #4
    1e7c:	88030500 	stmdahi	r3, {r8, sl}
    1e80:	09200005 	stmdbeq	r0!, {r0, r2}
    1e84:	00000a00 	andeq	r0, r0, r0, lsl #20
    1e88:	00720801 	rsbseq	r0, r2, r1, lsl #16
    1e8c:	068d0000 	streq	r0, [sp], r0
    1e90:	09090000 	stmdbeq	r9, {}	; <UNPREDICTABLE>
    1e94:	0100000a 	tsteq	r0, sl
    1e98:	00007209 	andeq	r7, r0, r9, lsl #4
    1e9c:	0006a000 	andeq	sl, r6, r0
    1ea0:	9c0a0000 	stcls	0, cr0, [sl], {-0}
    1ea4:	02000000 	andeq	r0, r0, #0
    1ea8:	00ee06ce 	rsceq	r0, lr, lr, asr #13
    1eac:	5d0b0000 	stcpl	0, cr0, [fp, #-0]
    1eb0:	07000000 	streq	r0, [r0, -r0]
    1eb4:	00000a22 	andeq	r0, r0, r2, lsr #20
    1eb8:	002c0501 	eoreq	r0, ip, r1, lsl #10
    1ebc:	42000000 	andmi	r0, r0, #0
    1ec0:	04000010 	streq	r0, [r0], #-16
    1ec4:	00092f00 	andeq	r2, r9, r0, lsl #30
    1ec8:	f9010400 			; <UNDEFINED> instruction: 0xf9010400
    1ecc:	01000000 	mrseq	r0, (UNDEF: 0)
    1ed0:	00000c87 	andeq	r0, r0, r7, lsl #25
    1ed4:	00000042 	andeq	r0, r0, r2, asr #32
    1ed8:	080039d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, fp, ip, sp}
    1edc:	000003c2 	andeq	r0, r0, r2, asr #7
    1ee0:	0000067d 	andeq	r0, r0, sp, ror r6
    1ee4:	0004a402 	andeq	sl, r4, r2, lsl #8
    1ee8:	a8030100 	stmdage	r3, {r8}
    1eec:	00000164 	andeq	r0, r0, r4, ror #2
    1ef0:	0006af03 	andeq	sl, r6, r3, lsl #30
    1ef4:	d4037200 	strle	r7, [r3], #-512	; 0xfffffe00
    1ef8:	74000004 	strvc	r0, [r0], #-4
    1efc:	00063403 	andeq	r3, r6, r3, lsl #8
    1f00:	3d037500 	cfstr32cc	mvfx7, [r3, #-0]
    1f04:	76000007 	strvc	r0, [r0], -r7
    1f08:	00075a03 	andeq	r5, r7, r3, lsl #20
    1f0c:	2b037b00 	blcs	e0b14 <__RW_SIZE__+0xe0590>
    1f10:	7c000007 	stcvc	0, cr0, [r0], {7}
    1f14:	0004bf03 	andeq	fp, r4, r3, lsl #30
    1f18:	09037e00 	stmdbeq	r3, {r9, sl, fp, ip, sp, lr}
    1f1c:	7f000007 	svcvc	0x00000007
    1f20:	00062a03 	andeq	r2, r6, r3, lsl #20
    1f24:	4d030000 	stcmi	0, cr0, [r3, #-0]
    1f28:	01000006 	tsteq	r0, r6
    1f2c:	0007b503 	andeq	fp, r7, r3, lsl #10
    1f30:	8d030200 	sfmhi	f0, 4, [r3, #-0]
    1f34:	03000006 	movweq	r0, #6
    1f38:	00048403 	andeq	r8, r4, r3, lsl #8
    1f3c:	cb030400 	blgt	c2f44 <__RW_SIZE__+0xc29c0>
    1f40:	05000004 	streq	r0, [r0, #-4]
    1f44:	00048f03 	andeq	r8, r4, r3, lsl #30
    1f48:	d5030600 	strle	r0, [r3, #-1536]	; 0xfffffa00
    1f4c:	07000006 	streq	r0, [r0, -r6]
    1f50:	0005ae03 	andeq	sl, r5, r3, lsl #28
    1f54:	8d030800 	stchi	8, cr0, [r3, #-0]
    1f58:	09000007 	stmdbeq	r0, {r0, r1, r2}
    1f5c:	00064203 	andeq	r4, r6, r3, lsl #4
    1f60:	08030a00 	stmdaeq	r3, {r9, fp}
    1f64:	0b000006 	bleq	1f84 <__RW_SIZE__+0x1a00>
    1f68:	00047103 	andeq	r7, r4, r3, lsl #2
    1f6c:	5b030c00 	blpl	c4f74 <__RW_SIZE__+0xc49f0>
    1f70:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    1f74:	00051f03 	andeq	r1, r5, r3, lsl #30
    1f78:	7a030e00 	bvc	c5780 <__RW_SIZE__+0xc51fc>
    1f7c:	0f000007 	svceq	0x00000007
    1f80:	0005d603 	andeq	sp, r5, r3, lsl #12
    1f84:	47031000 	strmi	r1, [r3, -r0]
    1f88:	11000004 	tstne	r0, r4
    1f8c:	00079d03 	andeq	r9, r7, r3, lsl #26
    1f90:	74031200 	strvc	r1, [r3], #-512	; 0xfffffe00
    1f94:	13000005 	movwne	r0, #5
    1f98:	00041003 	andeq	r1, r4, r3
    1f9c:	66031400 	strvs	r1, [r3], -r0, lsl #8
    1fa0:	15000005 	strne	r0, [r0, #-5]
    1fa4:	00043903 	andeq	r3, r4, r3, lsl #18
    1fa8:	4d031600 	stcmi	6, cr1, [r3, #-0]
    1fac:	17000007 	strne	r0, [r0, -r7]
    1fb0:	0004fe03 	andeq	pc, r4, r3, lsl #28
    1fb4:	7b031800 	blvc	c7fbc <__RW_SIZE__+0xc7a38>
    1fb8:	19000006 	stmdbne	r0, {r1, r2}
    1fbc:	0006ea03 	andeq	lr, r6, r3, lsl #20
    1fc0:	c3031a00 	movwgt	r1, #14848	; 0x3a00
    1fc4:	1b000006 	blne	1fe4 <__RW_SIZE__+0x1a60>
    1fc8:	00071c03 	andeq	r1, r7, r3, lsl #24
    1fcc:	fe031c00 	cdp2	12, 0, cr1, cr3, cr0, {0}
    1fd0:	1d000005 	stcne	0, cr0, [r0, #-20]	; 0xffffffec
    1fd4:	00046703 	andeq	r6, r4, r3, lsl #14
    1fd8:	6e031e00 	cdpvs	14, 0, cr1, cr3, cr0, {0}
    1fdc:	1f000006 	svcne	0x00000006
    1fe0:	0006fc03 	andeq	pc, r6, r3, lsl #24
    1fe4:	c9032000 	stmdbgt	r3, {sp}
    1fe8:	21000005 	tstcs	r0, r5
    1fec:	00045a03 	andeq	r5, r4, r3, lsl #20
    1ff0:	15032200 	strne	r2, [r3, #-512]	; 0xfffffe00
    1ff4:	23000005 	movwcs	r0, #5
    1ff8:	00076b03 	andeq	r6, r7, r3, lsl #22
    1ffc:	a3032400 	movwge	r2, #13312	; 0x3400
    2000:	25000006 	strcs	r0, [r0, #-6]
    2004:	00059203 	andeq	r9, r5, r3, lsl #4
    2008:	a9032600 	stmdbge	r3, {r9, sl, sp}
    200c:	27000007 	strcs	r0, [r0, -r7]
    2010:	00049a03 	andeq	r9, r4, r3, lsl #20
    2014:	c1032800 	tstgt	r3, r0, lsl #16
    2018:	29000007 	stmdbcs	r0, {r0, r1, r2}
    201c:	00061b03 	andeq	r1, r6, r3, lsl #22
    2020:	04002a00 	streq	r2, [r0], #-2560	; 0xfffff600
    2024:	00000588 	andeq	r0, r0, r8, lsl #11
    2028:	2501d903 	strcs	sp, [r1, #-2307]	; 0xfffff6fd
    202c:	05000000 	streq	r0, [r0, #-0]
    2030:	00b30601 	adcseq	r0, r3, r1, lsl #12
    2034:	7d060000 	stcvc	0, cr0, [r6, #-0]
    2038:	04000002 	streq	r0, [r0], #-2
    203c:	0001822a 	andeq	r8, r1, sl, lsr #4
    2040:	08010500 	stmdaeq	r1, {r8, sl}
    2044:	000000b1 	strheq	r0, [r0], -r1
    2048:	a3050205 	movwge	r0, #20997	; 0x5205
    204c:	06000001 	streq	r0, [r0], -r1
    2050:	000002da 	ldrdeq	r0, [r0], -sl
    2054:	019b3604 	orrseq	r3, fp, r4, lsl #12
    2058:	02050000 	andeq	r0, r5, #0
    205c:	00008907 	andeq	r8, r0, r7, lsl #18
    2060:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
    2064:	00000005 	andeq	r0, r0, r5
    2068:	0001b906 	andeq	fp, r1, r6, lsl #18
    206c:	b4500400 	ldrblt	r0, [r0], #-1024	; 0xfffffc00
    2070:	05000001 	streq	r0, [r0, #-1]
    2074:	00e70704 	rsceq	r0, r7, r4, lsl #14
    2078:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    207c:	00000005 	andeq	r0, r0, r5
    2080:	07080500 	streq	r0, [r8, -r0, lsl #10]
    2084:	000000e2 	andeq	r0, r0, r2, ror #1
    2088:	69050407 	stmdbvs	r5, {r0, r1, r2, sl}
    208c:	0500746e 	streq	r7, [r0, #-1134]	; 0xfffffb92
    2090:	00ec0704 	rsceq	r0, ip, r4, lsl #14
    2094:	04080000 	streq	r0, [r8], #-0
    2098:	8584020e 	strhi	r0, [r4, #526]	; 0x20e
    209c:	09000002 	stmdbeq	r0, {r1}
    20a0:	000004f9 	strdeq	r0, [r0], -r9
    20a4:	029c8602 	addseq	r8, ip, #2097152	; 0x200000
    20a8:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    20ac:	00000399 	muleq	r0, r9, r3
    20b0:	02a18702 	adceq	r8, r1, #524288	; 0x80000
    20b4:	09200000 	stmdbeq	r0!, {}	; <UNPREDICTABLE>
    20b8:	00000766 	andeq	r0, r0, r6, ror #14
    20bc:	02b18802 	adcseq	r8, r1, #131072	; 0x20000
    20c0:	09800000 	stmibeq	r0, {}	; <UNPREDICTABLE>
    20c4:	0000050c 	andeq	r0, r0, ip, lsl #10
    20c8:	02a18902 	adceq	r8, r1, #32768	; 0x8000
    20cc:	0aa00000 	beq	fe8020d4 <MSP_BASE+0xde7fd0d4>
    20d0:	00000798 	muleq	r0, r8, r7
    20d4:	02b68a02 	adcseq	r8, r6, #8192	; 0x2000
    20d8:	01000000 	mrseq	r0, (UNDEF: 0)
    20dc:	0003a90a 	andeq	sl, r3, sl, lsl #18
    20e0:	a18b0200 	orrge	r0, fp, r0, lsl #4
    20e4:	20000002 	andcs	r0, r0, r2
    20e8:	06560a01 	ldrbeq	r0, [r6], -r1, lsl #20
    20ec:	8c020000 	stchi	0, cr0, [r2], {-0}
    20f0:	000002bb 			; <UNDEFINED> instruction: 0x000002bb
    20f4:	b30a0180 	movwlt	r0, #41344	; 0xa180
    20f8:	02000003 	andeq	r0, r0, #3
    20fc:	0002a18d 	andeq	sl, r2, sp, lsl #3
    2100:	0a01a000 	beq	6a108 <__RW_SIZE__+0x69b84>
    2104:	00000775 	andeq	r0, r0, r5, ror r7
    2108:	02c08e02 	sbceq	r8, r0, #2, 28
    210c:	02000000 	andeq	r0, r0, #0
    2110:	0003bd0a 	andeq	fp, r3, sl, lsl #26
    2114:	c58f0200 	strgt	r0, [pc, #512]	; 231c <__RW_SIZE__+0x1d98>
    2118:	20000002 	andcs	r0, r0, r2
    211c:	50490b02 	subpl	r0, r9, r2, lsl #22
    2120:	e5900200 	ldr	r0, [r0, #512]	; 0x200
    2124:	00000002 	andeq	r0, r0, r2
    2128:	03c70a03 	biceq	r0, r7, #12288	; 0x3000
    212c:	91020000 	mrsls	r0, (UNDEF: 2)
    2130:	000002ea 	andeq	r0, r0, sl, ror #5
    2134:	880a03f0 	stmdahi	sl, {r4, r5, r6, r7, r8, r9}
    2138:	02000006 	andeq	r0, r0, #6
    213c:	0002fb92 	muleq	r2, r2, fp
    2140:	000e0000 	andeq	r0, lr, r0
    2144:	0001a90c 	andeq	sl, r1, ip, lsl #18
    2148:	00029500 	andeq	r9, r2, r0, lsl #10
    214c:	02950d00 	addseq	r0, r5, #0, 26
    2150:	00070000 	andeq	r0, r7, r0
    2154:	8f070405 	svchi	0x00070405
    2158:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    215c:	00000285 	andeq	r0, r0, r5, lsl #5
    2160:	0001a90c 	andeq	sl, r1, ip, lsl #18
    2164:	0002b100 	andeq	fp, r2, r0, lsl #2
    2168:	02950d00 	addseq	r0, r5, #0, 26
    216c:	00170000 	andseq	r0, r7, r0
    2170:	0002850e 	andeq	r8, r2, lr, lsl #10
    2174:	02850e00 	addeq	r0, r5, #0, 28
    2178:	850e0000 	strhi	r0, [lr, #-0]
    217c:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    2180:	00000285 	andeq	r0, r0, r5, lsl #5
    2184:	0001a90c 	andeq	sl, r1, ip, lsl #18
    2188:	0002d500 	andeq	sp, r2, r0, lsl #10
    218c:	02950d00 	addseq	r0, r5, #0, 26
    2190:	00370000 	eorseq	r0, r7, r0
    2194:	0001770c 	andeq	r7, r1, ip, lsl #14
    2198:	0002e500 	andeq	lr, r2, r0, lsl #10
    219c:	02950d00 	addseq	r0, r5, #0, 26
    21a0:	00ef0000 	rsceq	r0, pc, r0
    21a4:	0002d50e 	andeq	sp, r2, lr, lsl #10
    21a8:	01a90c00 			; <UNDEFINED> instruction: 0x01a90c00
    21ac:	02fb0000 	rscseq	r0, fp, #0
    21b0:	950f0000 	strls	r0, [pc, #-0]	; 21b8 <__RW_SIZE__+0x1c34>
    21b4:	83000002 	movwhi	r0, #2
    21b8:	a90e0002 	stmdbge	lr, {r1}
    21bc:	06000001 	streq	r0, [r0], -r1
    21c0:	000006e0 	andeq	r0, r0, r0, ror #13
    21c4:	01d79302 	bicseq	r9, r7, r2, lsl #6
    21c8:	74100000 	ldrvc	r0, [r0], #-0
    21cc:	03f89b02 	mvnseq	r9, #2048	; 0x800
    21d0:	ae090000 	cdpge	0, 0, cr0, cr9, cr0, {0}
    21d4:	02000008 	andeq	r0, r0, #8
    21d8:	0003f89d 	muleq	r3, sp, r8
    21dc:	d6090000 	strle	r0, [r9], -r0
    21e0:	02000008 	andeq	r0, r0, #8
    21e4:	0002fb9e 	muleq	r2, lr, fp
    21e8:	a3090400 	movwge	r0, #37888	; 0x9400
    21ec:	02000009 	andeq	r0, r0, #9
    21f0:	0002fb9f 	muleq	r2, pc, fp	; <UNPREDICTABLE>
    21f4:	3c090800 	stccc	8, cr0, [r9], {-0}
    21f8:	02000009 	andeq	r0, r0, #9
    21fc:	0002fba0 	andeq	pc, r2, r0, lsr #23
    2200:	53110c00 	tstpl	r1, #0, 24
    2204:	02005243 	andeq	r5, r0, #805306372	; 0x30000004
    2208:	0002fba1 	andeq	pc, r2, r1, lsr #23
    220c:	43111000 	tstmi	r1, #0
    2210:	02005243 	andeq	r5, r0, #805306372	; 0x30000004
    2214:	0002fba2 	andeq	pc, r2, r2, lsr #23
    2218:	53111400 	tstpl	r1, #0, 8
    221c:	02005048 	andeq	r5, r0, #72	; 0x48
    2220:	00040da3 	andeq	r0, r4, r3, lsr #27
    2224:	8c091800 	stchi	8, cr1, [r9], {-0}
    2228:	02000009 	andeq	r0, r0, #9
    222c:	0002fba4 	andeq	pc, r2, r4, lsr #23
    2230:	05092400 	streq	r2, [r9, #-1024]	; 0xfffffc00
    2234:	02000009 	andeq	r0, r0, #9
    2238:	0002fba5 	andeq	pc, r2, r5, lsr #23
    223c:	b2092800 	andlt	r2, r9, #0, 16
    2240:	02000009 	andeq	r0, r0, #9
    2244:	0002fba6 	andeq	pc, r2, r6, lsr #23
    2248:	ad092c00 	stcge	12, cr2, [r9, #-0]
    224c:	02000009 	andeq	r0, r0, #9
    2250:	0002fba7 	andeq	pc, r2, r7, lsr #23
    2254:	98093000 	stmdals	r9, {ip, sp}
    2258:	02000009 	andeq	r0, r0, #9
    225c:	0002fba8 	andeq	pc, r2, r8, lsr #23
    2260:	e6093400 	str	r3, [r9], -r0, lsl #8
    2264:	02000008 	andeq	r0, r0, #8
    2268:	0002fba9 	andeq	pc, r2, r9, lsr #23
    226c:	e8093800 	stmda	r9, {fp, ip, sp}
    2270:	02000009 	andeq	r0, r0, #9
    2274:	0002fbaa 	andeq	pc, r2, sl, lsr #23
    2278:	50113c00 	andspl	r3, r1, r0, lsl #24
    227c:	02005246 	andeq	r5, r0, #1610612740	; 0x60000004
    2280:	000422ab 	andeq	r2, r4, fp, lsr #5
    2284:	44114000 	ldrmi	r4, [r1], #-0
    2288:	02005246 	andeq	r5, r0, #1610612740	; 0x60000004
    228c:	0003f8ac 	andeq	pc, r3, ip, lsr #17
    2290:	41114800 	tstmi	r1, r0, lsl #16
    2294:	02005244 	andeq	r5, r0, #68, 4	; 0x40000004
    2298:	0003f8ad 	andeq	pc, r3, sp, lsr #17
    229c:	b7094c00 	strlt	r4, [r9, -r0, lsl #24]
    22a0:	02000009 	andeq	r0, r0, #9
    22a4:	00043cae 	andeq	r3, r4, lr, lsr #25
    22a8:	a8095000 	stmdage	r9, {ip, lr}
    22ac:	02000009 	andeq	r0, r0, #9
    22b0:	000456af 	andeq	r5, r4, pc, lsr #13
    22b4:	12006000 	andne	r6, r0, #0
    22b8:	000002fb 	strdeq	r0, [r0], -fp
    22bc:	0001770c 	andeq	r7, r1, ip, lsl #14
    22c0:	00040d00 	andeq	r0, r4, r0, lsl #26
    22c4:	02950d00 	addseq	r0, r5, #0, 26
    22c8:	000b0000 	andeq	r0, fp, r0
    22cc:	0003fd0e 	andeq	pc, r3, lr, lsl #26
    22d0:	01a90c00 			; <UNDEFINED> instruction: 0x01a90c00
    22d4:	04220000 	strteq	r0, [r2], #-0
    22d8:	950d0000 	strls	r0, [sp, #-0]
    22dc:	01000002 	tsteq	r0, r2
    22e0:	04271200 	strteq	r1, [r7], #-512	; 0xfffffe00
    22e4:	120e0000 	andne	r0, lr, #0
    22e8:	0c000004 	stceq	0, cr0, [r0], {4}
    22ec:	000001a9 	andeq	r0, r0, r9, lsr #3
    22f0:	0000043c 	andeq	r0, r0, ip, lsr r4
    22f4:	0002950d 	andeq	r9, r2, sp, lsl #10
    22f8:	12000300 	andne	r0, r0, #0, 6
    22fc:	00000441 	andeq	r0, r0, r1, asr #8
    2300:	00042c0e 	andeq	r2, r4, lr, lsl #24
    2304:	01a90c00 			; <UNDEFINED> instruction: 0x01a90c00
    2308:	04560000 	ldrbeq	r0, [r6], #-0
    230c:	950d0000 	strls	r0, [sp, #-0]
    2310:	04000002 	streq	r0, [r0], #-2
    2314:	045b1200 	ldrbeq	r1, [fp], #-512	; 0xfffffe00
    2318:	460e0000 	strmi	r0, [lr], -r0
    231c:	06000004 	streq	r0, [r0], -r4
    2320:	00000942 	andeq	r0, r0, r2, asr #18
    2324:	030bb002 	movweq	fp, #45058	; 0xb002
    2328:	900e0000 	andls	r0, lr, r0
    232c:	13000001 	movwne	r0, #1
    2330:	03770318 	cmneq	r7, #24, 6	; 0x60000000
    2334:	000004c7 	andeq	r0, r0, r7, asr #9
    2338:	524d4914 	subpl	r4, sp, #20, 18	; 0x50000
    233c:	03790300 	cmneq	r9, #0, 6
    2340:	000002fb 	strdeq	r0, [r0], -fp
    2344:	4d451400 	cfstrdmi	mvd1, [r5, #-0]
    2348:	7a030052 	bvc	c2498 <__RW_SIZE__+0xc1f14>
    234c:	0002fb03 	andeq	pc, r2, r3, lsl #22
    2350:	d0150400 	andsle	r0, r5, r0, lsl #8
    2354:	03000006 	movweq	r0, #6
    2358:	02fb037b 	rscseq	r0, fp, #-335544319	; 0xec000001
    235c:	15080000 	strne	r0, [r8, #-0]
    2360:	00000726 	andeq	r0, r0, r6, lsr #14
    2364:	fb037c03 	blx	e137a <__RW_SIZE__+0xe0df6>
    2368:	0c000002 	stceq	0, cr0, [r0], {2}
    236c:	00071615 	andeq	r1, r7, r5, lsl r6
    2370:	037d0300 	cmneq	sp, #0, 6
    2374:	000002fb 	strdeq	r0, [r0], -fp
    2378:	52501410 	subspl	r1, r0, #16, 8	; 0x10000000
    237c:	037e0300 	cmneq	lr, #0, 6
    2380:	000002fb 	strdeq	r0, [r0], -fp
    2384:	96040014 			; <UNDEFINED> instruction: 0x96040014
    2388:	03000006 	movweq	r0, #6
    238c:	0470037f 	ldrbteq	r0, [r0], #-895	; 0xfffffc81
    2390:	1c130000 	ldcne	0, cr0, [r3], {-0}
    2394:	9104d203 	tstls	r4, r3, lsl #4
    2398:	14000005 	strne	r0, [r0], #-5
    239c:	03005253 	movweq	r5, #595	; 0x253
    23a0:	046b04d4 	strbteq	r0, [fp], #-1236	; 0xfffffb2c
    23a4:	15000000 	strne	r0, [r0, #-0]
    23a8:	00000399 	muleq	r0, r9, r3
    23ac:	9004d503 	andls	sp, r4, r3, lsl #10
    23b0:	02000001 	andeq	r0, r0, #1
    23b4:	00524414 	subseq	r4, r2, r4, lsl r4
    23b8:	6b04d603 	blvs	137bcc <__RW_SIZE__+0x137648>
    23bc:	04000004 	streq	r0, [r0], #-4
    23c0:	00033a15 	andeq	r3, r3, r5, lsl sl
    23c4:	04d70300 	ldrbeq	r0, [r7], #768	; 0x300
    23c8:	00000190 	muleq	r0, r0, r1
    23cc:	52421406 	subpl	r1, r2, #100663296	; 0x6000000
    23d0:	d8030052 	stmdale	r3, {r1, r4, r6}
    23d4:	00046b04 	andeq	r6, r4, r4, lsl #22
    23d8:	a9150800 	ldmdbge	r5, {fp}
    23dc:	03000003 	movweq	r0, #3
    23e0:	019004d9 			; <UNDEFINED> instruction: 0x019004d9
    23e4:	140a0000 	strne	r0, [sl], #-0
    23e8:	00315243 	eorseq	r5, r1, r3, asr #4
    23ec:	6b04da03 	blvs	138c00 <__RW_SIZE__+0x13867c>
    23f0:	0c000004 	stceq	0, cr0, [r0], {4}
    23f4:	0003b315 	andeq	fp, r3, r5, lsl r3
    23f8:	04db0300 	ldrbeq	r0, [fp], #768	; 0x300
    23fc:	00000190 	muleq	r0, r0, r1
    2400:	5243140e 	subpl	r1, r3, #234881024	; 0xe000000
    2404:	dc030032 	stcle	0, cr0, [r3], {50}	; 0x32
    2408:	00046b04 	andeq	r6, r4, r4, lsl #22
    240c:	bd151000 	ldclt	0, cr1, [r5, #-0]
    2410:	03000003 	movweq	r0, #3
    2414:	019004dd 			; <UNDEFINED> instruction: 0x019004dd
    2418:	14120000 	ldrne	r0, [r2], #-0
    241c:	00335243 	eorseq	r5, r3, r3, asr #4
    2420:	6b04de03 	blvs	139c34 <__RW_SIZE__+0x1396b0>
    2424:	14000004 	strne	r0, [r0], #-4
    2428:	0003c715 	andeq	ip, r3, r5, lsl r7
    242c:	04df0300 	ldrbeq	r0, [pc], #768	; 2434 <__RW_SIZE__+0x1eb0>
    2430:	00000190 	muleq	r0, r0, r1
    2434:	0aca1516 	beq	ff287894 <MSP_BASE+0xdf282894>
    2438:	e0030000 	and	r0, r3, r0
    243c:	00046b04 	andeq	r6, r4, r4, lsl #22
    2440:	d1151800 	tstle	r5, r0, lsl #16
    2444:	03000003 	movweq	r0, #3
    2448:	019004e1 	orrseq	r0, r0, r1, ror #9
    244c:	001a0000 	andseq	r0, sl, r0
    2450:	000bd804 	andeq	sp, fp, r4, lsl #16
    2454:	04e20300 	strbteq	r0, [r2], #768	; 0x300
    2458:	000004d3 	ldrdeq	r0, [r0], -r3
    245c:	05a30416 	streq	r0, [r3, #1046]!	; 0x416
    2460:	01050000 	mrseq	r0, (UNDEF: 5)
    2464:	0000ba08 	andeq	fp, r0, r8, lsl #20
    2468:	b0041600 	andlt	r1, r4, r0, lsl #12
    246c:	12000005 	andne	r0, r0, #5
    2470:	000005a3 	andeq	r0, r0, r3, lsr #11
    2474:	0005e917 	andeq	lr, r5, r7, lsl r9
    2478:	06130200 	ldreq	r0, [r3], -r0, lsl #4
    247c:	0005cf03 	andeq	ip, r5, r3, lsl #30
    2480:	04a41800 	strteq	r1, [r4], #2048	; 0x800
    2484:	13020000 	movwne	r0, #8192	; 0x2000
    2488:	00016406 	andeq	r6, r1, r6, lsl #8
    248c:	03190000 	tsteq	r9, #0
    2490:	0100000d 	tsteq	r0, sp
    2494:	0039d825 	eorseq	sp, r9, r5, lsr #16
    2498:	00003808 	andeq	r3, r0, r8, lsl #16
    249c:	2e9c0100 	fmlcse	f0, f4, f0
    24a0:	1a000006 	bne	24c0 <__RW_SIZE__+0x1f3c>
    24a4:	00000e47 	andeq	r0, r0, r7, asr #28
    24a8:	05aa2501 	streq	r2, [sl, #1281]!	; 0x501
    24ac:	06b30000 	ldrteq	r0, [r3], r0
    24b0:	731b0000 	tstvc	fp, #0
    24b4:	25010070 	strcs	r0, [r1, #-112]	; 0xffffff90
    24b8:	0000062e 	andeq	r0, r0, lr, lsr #12
    24bc:	000006df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    24c0:	0100691c 	tsteq	r0, ip, lsl r9
    24c4:	0001c927 	andeq	ip, r1, r7, lsr #18
    24c8:	00070b00 	andeq	r0, r7, r0, lsl #22
    24cc:	3a021d00 	bcc	898d4 <__RW_SIZE__+0x89350>
    24d0:	10370800 	eorsne	r0, r7, r0, lsl #16
    24d4:	011e0000 	tsteq	lr, r0
    24d8:	7f740252 	svcvc	0x00740252
    24dc:	0251011e 	subseq	r0, r1, #-2147483641	; 0x80000007
    24e0:	011e0076 	tsteq	lr, r6, ror r0
    24e4:	a0030550 	andge	r0, r3, r0, asr r5
    24e8:	000800a6 	andeq	r0, r8, r6, lsr #1
    24ec:	d0041600 	andle	r1, r4, r0, lsl #12
    24f0:	1f000001 	svcne	0x00000001
    24f4:	00000d95 	muleq	r0, r5, sp
    24f8:	3a101c01 	bcc	409504 <__RW_SIZE__+0x408f80>
    24fc:	00320800 	eorseq	r0, r2, r0, lsl #16
    2500:	9c010000 	stcls	0, cr0, [r1], {-0}
    2504:	00000674 	andeq	r0, r0, r4, ror r6
    2508:	003a2c20 	eorseq	r2, sl, r0, lsr #24
    250c:	00103708 	andseq	r3, r0, r8, lsl #14
    2510:	00066000 	andeq	r6, r6, r0
    2514:	50011e00 	andpl	r1, r1, r0, lsl #28
    2518:	a6b40305 	ldrtge	r0, [r4], r5, lsl #6
    251c:	1d000800 	stcne	8, cr0, [r0, #-0]
    2520:	08003a40 	stmdaeq	r0, {r6, r9, fp, ip, sp}
    2524:	00001037 	andeq	r1, r0, r7, lsr r0
    2528:	0550011e 	ldrbeq	r0, [r0, #-286]	; 0xfffffee2
    252c:	00a6cc03 	adceq	ip, r6, r3, lsl #24
    2530:	1f000008 	svcne	0x00000008
    2534:	00000a2f 	andeq	r0, r0, pc, lsr #20
    2538:	3a444801 	bcc	1114544 <__RW_SIZE__+0x1113fc0>
    253c:	00100800 	andseq	r0, r0, r0, lsl #16
    2540:	9c010000 	stcls	0, cr0, [r1], {-0}
    2544:	0000069d 	muleq	r0, sp, r6
    2548:	003a521d 	eorseq	r5, sl, sp, lsl r2
    254c:	00103708 	andseq	r3, r0, r8, lsl #14
    2550:	50011e00 	andpl	r1, r1, r0, lsl #28
    2554:	a6e00305 	strbtge	r0, [r0], r5, lsl #6
    2558:	00000800 	andeq	r0, r0, r0, lsl #16
    255c:	000a8721 	andeq	r8, sl, r1, lsr #14
    2560:	012f0100 	teqeq	pc, r0, lsl #2
    2564:	000006ca 	andeq	r0, r0, sl, asr #13
    2568:	70736d22 	rsbsvc	r6, r3, r2, lsr #26
    256c:	2e2f0100 	sufcse	f0, f7, f0
    2570:	22000006 	andcs	r0, r0, #6
    2574:	0100726c 	tsteq	r0, ip, ror #4
    2578:	0001d02f 	andeq	sp, r1, pc, lsr #32
    257c:	73702200 	cmnvc	r0, #0, 4
    2580:	2f010070 	svccs	0x00010070
    2584:	0000062e 	andeq	r0, r0, lr, lsr #12
    2588:	0bc61f00 	bleq	ff18a190 <MSP_BASE+0xdf185190>
    258c:	55010000 	strpl	r0, [r1, #-0]
    2590:	08003a54 	stmdaeq	r0, {r2, r4, r6, r9, fp, ip, sp}
    2594:	0000012a 	andeq	r0, r0, sl, lsr #2
    2598:	08b79c01 	ldmeq	r7!, {r0, sl, fp, ip, pc}
    259c:	6d1b0000 	ldcvs	0, cr0, [fp, #-0]
    25a0:	01007073 	tsteq	r0, r3, ror r0
    25a4:	00062e55 	andeq	r2, r6, r5, asr lr
    25a8:	00075800 	andeq	r5, r7, r0, lsl #16
    25ac:	726c1b00 	rsbvc	r1, ip, #0, 22
    25b0:	d0550100 	subsle	r0, r5, r0, lsl #2
    25b4:	8f000001 	svchi	0x00000001
    25b8:	1b000007 	blne	25dc <__RW_SIZE__+0x2058>
    25bc:	00707370 	rsbseq	r7, r0, r0, ror r3
    25c0:	062e5501 	strteq	r5, [lr], -r1, lsl #10
    25c4:	07ad0000 	streq	r0, [sp, r0]!
    25c8:	9d230000 	stcls	0, cr0, [r3, #-0]
    25cc:	68000006 	stmdavs	r0, {r1, r2}
    25d0:	9008003a 	andls	r0, r8, sl, lsr r0
    25d4:	01000000 	mrseq	r0, (UNDEF: 0)
    25d8:	00083059 	andeq	r3, r8, r9, asr r0
    25dc:	06be2400 	ldrteq	r2, [lr], r0, lsl #8
    25e0:	56010000 	strpl	r0, [r1], -r0
    25e4:	0006b424 	andeq	fp, r6, r4, lsr #8
    25e8:	25550100 	ldrbcs	r0, [r5, #-256]	; 0xffffff00
    25ec:	000006a9 	andeq	r0, r0, r9, lsr #13
    25f0:	000007cb 	andeq	r0, r0, fp, asr #15
    25f4:	003a7620 	eorseq	r7, sl, r0, lsr #12
    25f8:	00103708 	andseq	r3, r0, r8, lsl #14
    25fc:	00075200 	andeq	r5, r7, r0, lsl #4
    2600:	51011e00 	tstpl	r1, r0, lsl #28
    2604:	1e007502 	cfsh32ne	mvfx7, mvfx0, #2
    2608:	03055001 	movweq	r5, #20481	; 0x5001
    260c:	0800a6f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, sp, pc}
    2610:	3a842000 	bcc	fe10a618 <MSP_BASE+0xde105618>
    2614:	10370800 	eorsne	r0, r7, r0, lsl #16
    2618:	076f0000 	strbeq	r0, [pc, -r0]!
    261c:	011e0000 	tsteq	lr, r0
    2620:	00740251 	rsbseq	r0, r4, r1, asr r2
    2624:	0550011e 	ldrbeq	r0, [r0, #-286]	; 0xfffffee2
    2628:	00a71003 	adceq	r1, r7, r3
    262c:	92200008 	eorls	r0, r0, #8
    2630:	3708003a 	smladxcc	r8, sl, r0, r0
    2634:	8c000010 	stchi	0, cr0, [r0], {16}
    2638:	1e000007 	cdpne	0, 0, cr0, cr0, cr7, {0}
    263c:	76025101 	strvc	r5, [r2], -r1, lsl #2
    2640:	50011e00 	andpl	r1, r1, r0, lsl #28
    2644:	a71c0305 	ldrge	r0, [ip, -r5, lsl #6]
    2648:	20000800 	andcs	r0, r0, r0, lsl #16
    264c:	08003ad2 	stmdaeq	r0, {r1, r4, r6, r7, r9, fp, ip, sp}
    2650:	00001037 	andeq	r1, r0, r7, lsr r0
    2654:	000007ab 	andeq	r0, r0, fp, lsr #15
    2658:	0451011e 	ldrbeq	r0, [r1], #-286	; 0xfffffee2
    265c:	1a3f0075 	bne	fc2838 <__RW_SIZE__+0xfc22b4>
    2660:	0550011e 	ldrbeq	r0, [r0, #-286]	; 0xfffffee2
    2664:	00a7ac03 	adceq	sl, r7, r3, lsl #24
    2668:	e8200008 	stmda	r0!, {r3}
    266c:	3708003a 	smladxcc	r8, sl, r0, r0
    2670:	c2000010 	andgt	r0, r0, #16
    2674:	1e000007 	cdpne	0, 0, cr0, cr0, cr7, {0}
    2678:	03055001 	movweq	r5, #20481	; 0x5001
    267c:	0800a7d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl, sp, pc}
    2680:	3af62000 	bcc	ffd8a688 <MSP_BASE+0xdfd85688>
    2684:	10370800 	eorsne	r0, r7, r0, lsl #16
    2688:	07d90000 	ldrbeq	r0, [r9, r0]
    268c:	011e0000 	tsteq	lr, r0
    2690:	e8030550 	stmda	r3, {r4, r6, r8, sl}
    2694:	000800a7 	andeq	r0, r8, r7, lsr #1
    2698:	003b5226 	eorseq	r5, fp, r6, lsr #4
    269c:	00103708 	andseq	r3, r0, r8, lsl #14
    26a0:	3b602000 	blcc	180a6a8 <__RW_SIZE__+0x180a124>
    26a4:	05cf0800 	strbeq	r0, [pc, #2048]	; 2eac <__RW_SIZE__+0x2928>
    26a8:	07ff0000 	ldrbeq	r0, [pc, r0]!
    26ac:	011e0000 	tsteq	lr, r0
    26b0:	00740251 	rsbseq	r0, r4, r1, asr r2
    26b4:	0550011e 	ldrbeq	r0, [r0, #-286]	; 0xfffffee2
    26b8:	00a74c03 	adceq	r4, r7, r3, lsl #24
    26bc:	6e200008 	cdpvs	0, 2, cr0, cr0, cr8, {0}
    26c0:	3708003b 	smladxcc	r8, fp, r0, r0
    26c4:	16000010 			; <UNDEFINED> instruction: 0x16000010
    26c8:	1e000008 	cdpne	0, 0, cr0, cr0, cr8, {0}
    26cc:	03055001 	movweq	r5, #20481	; 0x5001
    26d0:	0800a77c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, sl, sp, pc}
    26d4:	3b7c1d00 	blcc	1f09adc <__RW_SIZE__+0x1f09558>
    26d8:	05cf0800 	strbeq	r0, [pc, #2048]	; 2ee0 <__RW_SIZE__+0x295c>
    26dc:	011e0000 	tsteq	lr, r0
    26e0:	00760251 	rsbseq	r0, r6, r1, asr r2
    26e4:	0550011e 	ldrbeq	r0, [r0, #-286]	; 0xfffffee2
    26e8:	00a7a803 	adceq	sl, r7, r3, lsl #16
    26ec:	20000008 	andcs	r0, r0, r8
    26f0:	08003a68 	stmdaeq	r0, {r3, r5, r6, r9, fp, ip, sp}
    26f4:	00001037 	andeq	r1, r0, r7, lsr r0
    26f8:	00000847 	andeq	r0, r0, r7, asr #16
    26fc:	0550011e 	ldrbeq	r0, [r0, #-286]	; 0xfffffee2
    2700:	00a6e803 	adceq	lr, r6, r3, lsl #16
    2704:	08200008 	stmdaeq	r0!, {r3}
    2708:	3708003b 	smladxcc	r8, fp, r0, r0
    270c:	5e000010 	mcrpl	0, 0, r0, cr0, cr0, {0}
    2710:	1e000008 	cdpne	0, 0, cr0, cr0, cr8, {0}
    2714:	03055001 	movweq	r5, #20481	; 0x5001
    2718:	0800a808 	stmdaeq	r0, {r3, fp, sp, pc}
    271c:	3b162000 	blcc	58a724 <__RW_SIZE__+0x58a1a0>
    2720:	10370800 	eorsne	r0, r7, r0, lsl #16
    2724:	08750000 	ldmdaeq	r5!, {}^	; <UNPREDICTABLE>
    2728:	011e0000 	tsteq	lr, r0
    272c:	1c030550 	cfstr32ne	mvfx0, [r3], {80}	; 0x50
    2730:	000800a8 	andeq	r0, r8, r8, lsr #1
    2734:	003b2820 	eorseq	r2, fp, r0, lsr #16
    2738:	00103708 	andseq	r3, r0, r8, lsl #14
    273c:	00088c00 	andeq	r8, r8, r0, lsl #24
    2740:	50011e00 	andpl	r1, r1, r0, lsl #28
    2744:	a82c0305 	stmdage	ip!, {r0, r2, r8, r9}
    2748:	20000800 	andcs	r0, r0, r0, lsl #16
    274c:	08003b36 	stmdaeq	r0, {r1, r2, r4, r5, r8, r9, fp, ip, sp}
    2750:	00001037 	andeq	r1, r0, r7, lsr r0
    2754:	000008a3 	andeq	r0, r0, r3, lsr #17
    2758:	0550011e 	ldrbeq	r0, [r0, #-286]	; 0xfffffee2
    275c:	00a84003 	adceq	r4, r8, r3
    2760:	441d0008 	ldrmi	r0, [sp], #-8
    2764:	3708003b 	smladxcc	r8, fp, r0, r0
    2768:	1e000010 	mcrne	0, 0, r0, cr0, cr0, {0}
    276c:	03055001 	movweq	r5, #20481	; 0x5001
    2770:	0800a850 	stmdaeq	r0, {r4, r6, fp, sp, pc}
    2774:	b41f0000 	ldrlt	r0, [pc], #-0	; 277c <__RW_SIZE__+0x21f8>
    2778:	0100000b 	tsteq	r0, fp
    277c:	003b806b 	eorseq	r8, fp, fp, rrx
    2780:	00001008 	andeq	r1, r0, r8
    2784:	0c9c0100 	ldfeqs	f0, [ip], {0}
    2788:	1b000009 	blne	27b4 <__RW_SIZE__+0x2230>
    278c:	0070736d 	rsbseq	r7, r0, sp, ror #6
    2790:	062e6b01 	strteq	r6, [lr], -r1, lsl #22
    2794:	07f70000 	ldrbeq	r0, [r7, r0]!
    2798:	6c1b0000 	ldcvs	0, cr0, [fp], {-0}
    279c:	6b010072 	blvs	4296c <__RW_SIZE__+0x423e8>
    27a0:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    27a4:	00000818 	andeq	r0, r0, r8, lsl r8
    27a8:	7073701b 	rsbsvc	r7, r3, fp, lsl r0
    27ac:	2e6b0100 	powcse	f0, f3, f0
    27b0:	39000006 	stmdbcc	r0, {r1, r2}
    27b4:	1d000008 	stcne	0, cr0, [r0, #-32]	; 0xffffffe0
    27b8:	08003b8e 	stmdaeq	r0, {r1, r2, r3, r7, r8, r9, fp, ip, sp}
    27bc:	00001037 	andeq	r1, r0, r7, lsr r0
    27c0:	0550011e 	ldrbeq	r0, [r0, #-286]	; 0xfffffee2
    27c4:	00a87403 	adceq	r7, r8, r3, lsl #8
    27c8:	1f000008 	svcne	0x00000008
    27cc:	00000be6 	andeq	r0, r0, r6, ror #23
    27d0:	3b907801 	blcc	fe4207dc <MSP_BASE+0xde41b7dc>
    27d4:	00100800 	andseq	r0, r0, r0, lsl #16
    27d8:	9c010000 	stcls	0, cr0, [r1], {-0}
    27dc:	00000961 	andeq	r0, r0, r1, ror #18
    27e0:	70736d1b 	rsbsvc	r6, r3, fp, lsl sp
    27e4:	2e780100 	rpwcse	f0, f0, f0
    27e8:	5a000006 	bpl	2808 <__RW_SIZE__+0x2284>
    27ec:	1b000008 	blne	2814 <__RW_SIZE__+0x2290>
    27f0:	0100726c 	tsteq	r0, ip, ror #4
    27f4:	0001d078 	andeq	sp, r1, r8, ror r0
    27f8:	00087b00 	andeq	r7, r8, r0, lsl #22
    27fc:	73701b00 	cmnvc	r0, #0, 22
    2800:	78010070 	stmdavc	r1, {r4, r5, r6}
    2804:	0000062e 	andeq	r0, r0, lr, lsr #12
    2808:	0000089c 	muleq	r0, ip, r8
    280c:	003b9e1d 	eorseq	r9, fp, sp, lsl lr
    2810:	00103708 	andseq	r3, r0, r8, lsl #14
    2814:	50011e00 	andpl	r1, r1, r0, lsl #28
    2818:	a8900305 	ldmge	r0, {r0, r2, r8, r9}
    281c:	00000800 	andeq	r0, r0, r0, lsl #16
    2820:	000b151f 	andeq	r1, fp, pc, lsl r5
    2824:	a0850100 	addge	r0, r5, r0, lsl #2
    2828:	1008003b 	andne	r0, r8, fp, lsr r0
    282c:	01000000 	mrseq	r0, (UNDEF: 0)
    2830:	0009b69c 	muleq	r9, ip, r6
    2834:	736d1b00 	cmnvc	sp, #0, 22
    2838:	85010070 	strhi	r0, [r1, #-112]	; 0xffffff90
    283c:	0000062e 	andeq	r0, r0, lr, lsr #12
    2840:	000008bd 			; <UNDEFINED> instruction: 0x000008bd
    2844:	00726c1b 	rsbseq	r6, r2, fp, lsl ip
    2848:	01d08501 	bicseq	r8, r0, r1, lsl #10
    284c:	08de0000 	ldmeq	lr, {}^	; <UNPREDICTABLE>
    2850:	701b0000 	andsvc	r0, fp, r0
    2854:	01007073 	tsteq	r0, r3, ror r0
    2858:	00062e85 	andeq	r2, r6, r5, lsl #29
    285c:	0008ff00 	andeq	pc, r8, r0, lsl #30
    2860:	3bae1d00 	blcc	feb89c68 <MSP_BASE+0xdeb84c68>
    2864:	10370800 	eorsne	r0, r7, r0, lsl #16
    2868:	011e0000 	tsteq	lr, r0
    286c:	9c030550 	cfstr32ls	mvfx0, [r3], {80}	; 0x50
    2870:	000800a8 	andeq	r0, r8, r8, lsr #1
    2874:	0cf71f00 	ldcleq	15, cr1, [r7]
    2878:	92010000 	andls	r0, r1, #0
    287c:	08003bb0 	stmdaeq	r0, {r4, r5, r7, r8, r9, fp, ip, sp}
    2880:	00000010 	andeq	r0, r0, r0, lsl r0
    2884:	09df9c01 	ldmibeq	pc, {r0, sl, fp, ip, pc}^	; <UNPREDICTABLE>
    2888:	be1d0000 	cdplt	0, 1, cr0, cr13, cr0, {0}
    288c:	3708003b 	smladxcc	r8, fp, r0, r0
    2890:	1e000010 	mcrne	0, 0, r0, cr0, cr0, {0}
    2894:	03055001 	movweq	r5, #20481	; 0x5001
    2898:	0800a8ac 	stmdaeq	r0, {r2, r3, r5, r7, fp, sp, pc}
    289c:	3b1f0000 	blcc	7c28a4 <__RW_SIZE__+0x7c2320>
    28a0:	0100000a 	tsteq	r0, sl
    28a4:	003bc09f 	mlaseq	fp, pc, r0, ip	; <UNPREDICTABLE>
    28a8:	00001008 	andeq	r1, r0, r8
    28ac:	089c0100 	ldmeq	ip, {r8}
    28b0:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    28b4:	08003bce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, r9, fp, ip, sp}
    28b8:	00001037 	andeq	r1, r0, r7, lsr r0
    28bc:	0550011e 	ldrbeq	r0, [r0, #-286]	; 0xfffffee2
    28c0:	00a8b803 	adceq	fp, r8, r3, lsl #16
    28c4:	1f000008 	svcne	0x00000008
    28c8:	00000c78 	andeq	r0, r0, r8, ror ip
    28cc:	3bd0ac01 	blcc	ff42d8d8 <MSP_BASE+0xdf4288d8>
    28d0:	00100800 	andseq	r0, r0, r0, lsl #16
    28d4:	9c010000 	stcls	0, cr0, [r1], {-0}
    28d8:	00000a31 	andeq	r0, r0, r1, lsr sl
    28dc:	003bde1d 	eorseq	sp, fp, sp, lsl lr
    28e0:	00103708 	andseq	r3, r0, r8, lsl #14
    28e4:	50011e00 	andpl	r1, r1, r0, lsl #28
    28e8:	a8c80305 	stmiage	r8, {r0, r2, r8, r9}^
    28ec:	00000800 	andeq	r0, r0, r0, lsl #16
    28f0:	000d1e27 	andeq	r1, sp, r7, lsr #28
    28f4:	e0bb0100 	adcs	r0, fp, r0, lsl #2
    28f8:	0e08003b 	mcreq	0, 0, r0, cr8, cr11, {1}
    28fc:	01000000 	mrseq	r0, (UNDEF: 0)
    2900:	0a651f9c 	beq	194a778 <__RW_SIZE__+0x194a1f4>
    2904:	c7010000 	strgt	r0, [r1, -r0]
    2908:	08003bf0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, fp, ip, sp}
    290c:	00000006 	andeq	r0, r0, r6
    2910:	0a619c01 	beq	186991c <__RW_SIZE__+0x1869398>
    2914:	f6260000 			; <UNDEFINED> instruction: 0xf6260000
    2918:	3408003b 	strcc	r0, [r8], #-59	; 0xffffffc5
    291c:	00000006 	andeq	r0, r0, r6
    2920:	000acf1f 	andeq	ip, sl, pc, lsl pc
    2924:	f8d30100 			; <UNDEFINED> instruction: 0xf8d30100
    2928:	0608003b 			; <UNDEFINED> instruction: 0x0608003b
    292c:	01000000 	mrseq	r0, (UNDEF: 0)
    2930:	000a809c 	muleq	sl, ip, r0
    2934:	3bfe2600 	blcc	fff8c13c <MSP_BASE+0xdff8713c>
    2938:	06340800 	ldrteq	r0, [r4], -r0, lsl #16
    293c:	1f000000 	svcne	0x00000000
    2940:	00000dcb 	andeq	r0, r0, fp, asr #27
    2944:	3c00df01 	stccc	15, cr13, [r0], {1}
    2948:	00060800 	andeq	r0, r6, r0, lsl #16
    294c:	9c010000 	stcls	0, cr0, [r1], {-0}
    2950:	00000a9f 	muleq	r0, pc, sl	; <UNPREDICTABLE>
    2954:	003c0626 	eorseq	r0, ip, r6, lsr #12
    2958:	00063408 	andeq	r3, r6, r8, lsl #8
    295c:	e81f0000 	ldmda	pc, {}	; <UNPREDICTABLE>
    2960:	0100000c 	tsteq	r0, ip
    2964:	003c08eb 	eorseq	r0, ip, fp, ror #17
    2968:	00000608 	andeq	r0, r0, r8, lsl #12
    296c:	be9c0100 	fmllte	f0, f4, f0
    2970:	2600000a 	strcs	r0, [r0], -sl
    2974:	08003c0e 	stmdaeq	r0, {r1, r2, r3, sl, fp, ip, sp}
    2978:	00000634 	andeq	r0, r0, r4, lsr r6
    297c:	0bf71f00 	bleq	ffdca584 <MSP_BASE+0xdfdc5584>
    2980:	f7010000 			; <UNDEFINED> instruction: 0xf7010000
    2984:	08003c10 	stmdaeq	r0, {r4, sl, fp, ip, sp}
    2988:	00000006 	andeq	r0, r0, r6
    298c:	0add9c01 	beq	ff769998 <MSP_BASE+0xdf764998>
    2990:	16260000 	strtne	r0, [r6], -r0
    2994:	3408003c 	strcc	r0, [r8], #-60	; 0xffffffc4
    2998:	00000006 	andeq	r0, r0, r6
    299c:	000cc028 	andeq	ip, ip, r8, lsr #32
    29a0:	01030100 	mrseq	r0, (UNDEF: 19)
    29a4:	08003c18 	stmdaeq	r0, {r3, r4, sl, fp, ip, sp}
    29a8:	00000006 	andeq	r0, r0, r6
    29ac:	0afd9c01 	beq	fff699b8 <MSP_BASE+0xdff649b8>
    29b0:	1e260000 	cdpne	0, 2, cr0, cr6, cr0, {0}
    29b4:	3408003c 	strcc	r0, [r8], #-60	; 0xffffffc4
    29b8:	00000006 	andeq	r0, r0, r6
    29bc:	000c0828 	andeq	r0, ip, r8, lsr #16
    29c0:	010f0100 	mrseq	r0, (UNDEF: 31)
    29c4:	08003c20 	stmdaeq	r0, {r5, sl, fp, ip, sp}
    29c8:	00000006 	andeq	r0, r0, r6
    29cc:	0b1d9c01 	bleq	7699d8 <__RW_SIZE__+0x769454>
    29d0:	26260000 	strtcs	r0, [r6], -r0
    29d4:	3408003c 	strcc	r0, [r8], #-60	; 0xffffffc4
    29d8:	00000006 	andeq	r0, r0, r6
    29dc:	000c6728 	andeq	r6, ip, r8, lsr #14
    29e0:	011b0100 	tsteq	fp, r0, lsl #2
    29e4:	08003c28 	stmdaeq	r0, {r3, r5, sl, fp, ip, sp}
    29e8:	00000006 	andeq	r0, r0, r6
    29ec:	0b3d9c01 	bleq	f699f8 <__RW_SIZE__+0xf69474>
    29f0:	2e260000 	cdpcs	0, 2, cr0, cr6, cr0, {0}
    29f4:	3408003c 	strcc	r0, [r8], #-60	; 0xffffffc4
    29f8:	00000006 	andeq	r0, r0, r6
    29fc:	000dba28 	andeq	fp, sp, r8, lsr #20
    2a00:	01270100 	teqeq	r7, r0, lsl #2
    2a04:	08003c30 	stmdaeq	r0, {r4, r5, sl, fp, ip, sp}
    2a08:	00000006 	andeq	r0, r0, r6
    2a0c:	0b5d9c01 	bleq	1769a18 <__RW_SIZE__+0x1769494>
    2a10:	36260000 	strtcc	r0, [r6], -r0
    2a14:	3408003c 	strcc	r0, [r8], #-60	; 0xffffffc4
    2a18:	00000006 	andeq	r0, r0, r6
    2a1c:	000af728 	andeq	pc, sl, r8, lsr #14
    2a20:	01330100 	teqeq	r3, r0, lsl #2
    2a24:	08003c38 	stmdaeq	r0, {r3, r4, r5, sl, fp, ip, sp}
    2a28:	00000006 	andeq	r0, r0, r6
    2a2c:	0b7d9c01 	bleq	1f69a38 <__RW_SIZE__+0x1f694b4>
    2a30:	3e260000 	cdpcc	0, 2, cr0, cr6, cr0, {0}
    2a34:	3408003c 	strcc	r0, [r8], #-60	; 0xffffffc4
    2a38:	00000006 	andeq	r0, r0, r6
    2a3c:	000caf28 	andeq	sl, ip, r8, lsr #30
    2a40:	013f0100 	teqeq	pc, r0, lsl #2
    2a44:	08003c40 	stmdaeq	r0, {r6, sl, fp, ip, sp}
    2a48:	00000006 	andeq	r0, r0, r6
    2a4c:	0b9d9c01 	bleq	fe769a58 <MSP_BASE+0xde764a58>
    2a50:	46260000 	strtmi	r0, [r6], -r0
    2a54:	3408003c 	strcc	r0, [r8], #-60	; 0xffffffc4
    2a58:	00000006 	andeq	r0, r0, r6
    2a5c:	000ade28 	andeq	sp, sl, r8, lsr #28
    2a60:	014b0100 	mrseq	r0, (UNDEF: 91)
    2a64:	08003c48 	stmdaeq	r0, {r3, r6, sl, fp, ip, sp}
    2a68:	00000006 	andeq	r0, r0, r6
    2a6c:	0bbd9c01 	bleq	fef69a78 <MSP_BASE+0xdef64a78>
    2a70:	4e260000 	cdpmi	0, 2, cr0, cr6, cr0, {0}
    2a74:	3408003c 	strcc	r0, [r8], #-60	; 0xffffffc4
    2a78:	00000006 	andeq	r0, r0, r6
    2a7c:	000c4e28 	andeq	r4, ip, r8, lsr #28
    2a80:	01570100 	cmpeq	r7, r0, lsl #2
    2a84:	08003c50 	stmdaeq	r0, {r4, r6, sl, fp, ip, sp}
    2a88:	00000006 	andeq	r0, r0, r6
    2a8c:	0bdd9c01 	bleq	ff769a98 <MSP_BASE+0xdf764a98>
    2a90:	56260000 	strtpl	r0, [r6], -r0
    2a94:	3408003c 	strcc	r0, [r8], #-60	; 0xffffffc4
    2a98:	00000006 	andeq	r0, r0, r6
    2a9c:	000da128 	andeq	sl, sp, r8, lsr #2
    2aa0:	01630100 	cmneq	r3, r0, lsl #2
    2aa4:	08003c58 	stmdaeq	r0, {r3, r4, r6, sl, fp, ip, sp}
    2aa8:	00000006 	andeq	r0, r0, r6
    2aac:	0bfd9c01 	bleq	fff69ab8 <MSP_BASE+0xdff64ab8>
    2ab0:	5e260000 	cdppl	0, 2, cr0, cr6, cr0, {0}
    2ab4:	3408003c 	strcc	r0, [r8], #-60	; 0xffffffc4
    2ab8:	00000006 	andeq	r0, r0, r6
    2abc:	000b5428 	andeq	r5, fp, r8, lsr #8
    2ac0:	016f0100 	cmneq	pc, r0, lsl #2
    2ac4:	08003c60 	stmdaeq	r0, {r5, r6, sl, fp, ip, sp}
    2ac8:	00000006 	andeq	r0, r0, r6
    2acc:	0c1d9c01 	ldceq	12, cr9, [sp], {1}
    2ad0:	66260000 	strtvs	r0, [r6], -r0
    2ad4:	3408003c 	strcc	r0, [r8], #-60	; 0xffffffc4
    2ad8:	00000006 	andeq	r0, r0, r6
    2adc:	000c9628 	andeq	r9, ip, r8, lsr #12
    2ae0:	017b0100 	cmneq	fp, r0, lsl #2
    2ae4:	08003c68 	stmdaeq	r0, {r3, r5, r6, sl, fp, ip, sp}
    2ae8:	00000006 	andeq	r0, r0, r6
    2aec:	0c3d9c01 	ldceq	12, cr9, [sp], #-4
    2af0:	6e260000 	cdpvs	0, 2, cr0, cr6, cr0, {0}
    2af4:	3408003c 	strcc	r0, [r8], #-60	; 0xffffffc4
    2af8:	00000006 	andeq	r0, r0, r6
    2afc:	000ccf28 	andeq	ip, ip, r8, lsr #30
    2b00:	01870100 	orreq	r0, r7, r0, lsl #2
    2b04:	08003c70 	stmdaeq	r0, {r4, r5, r6, sl, fp, ip, sp}
    2b08:	00000006 	andeq	r0, r0, r6
    2b0c:	0c5d9c01 	mrrceq	12, 0, r9, sp, cr1
    2b10:	76260000 	strtvc	r0, [r6], -r0
    2b14:	3408003c 	strcc	r0, [r8], #-60	; 0xffffffc4
    2b18:	00000006 	andeq	r0, r0, r6
    2b1c:	000a4c28 	andeq	r4, sl, r8, lsr #24
    2b20:	01930100 	orrseq	r0, r3, r0, lsl #2
    2b24:	08003c78 	stmdaeq	r0, {r3, r4, r5, r6, sl, fp, ip, sp}
    2b28:	00000006 	andeq	r0, r0, r6
    2b2c:	0c7d9c01 	ldcleq	12, cr9, [sp], #-4
    2b30:	7e260000 	cdpvc	0, 2, cr0, cr6, cr0, {0}
    2b34:	3408003c 	strcc	r0, [r8], #-60	; 0xffffffc4
    2b38:	00000006 	andeq	r0, r0, r6
    2b3c:	000c1928 	andeq	r1, ip, r8, lsr #18
    2b40:	019f0100 	orrseq	r0, pc, r0, lsl #2
    2b44:	08003c80 	stmdaeq	r0, {r7, sl, fp, ip, sp}
    2b48:	00000006 	andeq	r0, r0, r6
    2b4c:	0c9d9c01 	ldceq	12, cr9, [sp], {1}
    2b50:	86260000 	strthi	r0, [r6], -r0
    2b54:	3408003c 	strcc	r0, [r8], #-60	; 0xffffffc4
    2b58:	00000006 	andeq	r0, r0, r6
    2b5c:	000b2828 	andeq	r2, fp, r8, lsr #16
    2b60:	01ac0100 			; <UNDEFINED> instruction: 0x01ac0100
    2b64:	08003c88 	stmdaeq	r0, {r3, r7, sl, fp, ip, sp}
    2b68:	00000006 	andeq	r0, r0, r6
    2b6c:	0cbd9c01 	ldceq	12, cr9, [sp], #4
    2b70:	8e260000 	cdphi	0, 2, cr0, cr6, cr0, {0}
    2b74:	3408003c 	strcc	r0, [r8], #-60	; 0xffffffc4
    2b78:	00000006 	andeq	r0, r0, r6
    2b7c:	000d6828 	andeq	r6, sp, r8, lsr #16
    2b80:	01b90100 			; <UNDEFINED> instruction: 0x01b90100
    2b84:	08003c90 	stmdaeq	r0, {r4, r7, sl, fp, ip, sp}
    2b88:	00000006 	andeq	r0, r0, r6
    2b8c:	0cdd9c01 	ldcleq	12, cr9, [sp], {1}
    2b90:	96260000 	strtls	r0, [r6], -r0
    2b94:	3408003c 	strcc	r0, [r8], #-60	; 0xffffffc4
    2b98:	00000006 	andeq	r0, r0, r6
    2b9c:	000c2b28 	andeq	r2, ip, r8, lsr #22
    2ba0:	01c50100 	biceq	r0, r5, r0, lsl #2
    2ba4:	08003c98 	stmdaeq	r0, {r3, r4, r7, sl, fp, ip, sp}
    2ba8:	00000006 	andeq	r0, r0, r6
    2bac:	0cfd9c01 	ldcleq	12, cr9, [sp], #4
    2bb0:	9e260000 	cdpls	0, 2, cr0, cr6, cr0, {0}
    2bb4:	3408003c 	strcc	r0, [r8], #-60	; 0xffffffc4
    2bb8:	00000006 	andeq	r0, r0, r6
    2bbc:	000a9428 	andeq	r9, sl, r8, lsr #8
    2bc0:	01d10100 	bicseq	r0, r1, r0, lsl #2
    2bc4:	08003ca0 	stmdaeq	r0, {r5, r7, sl, fp, ip, sp}
    2bc8:	00000006 	andeq	r0, r0, r6
    2bcc:	0d1d9c01 	ldceq	12, cr9, [sp, #-4]
    2bd0:	a6260000 	strtge	r0, [r6], -r0
    2bd4:	3408003c 	strcc	r0, [r8], #-60	; 0xffffffc4
    2bd8:	00000006 	andeq	r0, r0, r6
    2bdc:	000e0428 	andeq	r0, lr, r8, lsr #8
    2be0:	01df0100 	bicseq	r0, pc, r0, lsl #2
    2be4:	08003ca8 	stmdaeq	r0, {r3, r5, r7, sl, fp, ip, sp}
    2be8:	00000032 	andeq	r0, r0, r2, lsr r0
    2bec:	0d4b9c01 	stcleq	12, cr9, [fp, #-4]
    2bf0:	b5290000 	strlt	r0, [r9, #-0]!
    2bf4:	b8000005 	stmdalt	r0, {r0, r2}
    2bf8:	a808003c 	stmdage	r8, {r2, r3, r4, r5}
    2bfc:	01000000 	mrseq	r0, (UNDEF: 0)
    2c00:	c22a01e4 	eorgt	r0, sl, #228, 2	; 0x39
    2c04:	17000005 	strne	r0, [r0, -r5]
    2c08:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
    2c0c:	0100000d 	tsteq	r0, sp
    2c10:	3cdc01ee 	ldfcce	f0, [ip], {238}	; 0xee
    2c14:	00060800 	andeq	r0, r6, r0, lsl #16
    2c18:	9c010000 	stcls	0, cr0, [r1], {-0}
    2c1c:	00000d6b 	andeq	r0, r0, fp, ror #26
    2c20:	003ce226 	eorseq	lr, ip, r6, lsr #4
    2c24:	00063408 	andeq	r3, r6, r8, lsl #8
    2c28:	41280000 	teqmi	r8, r0
    2c2c:	0100000b 	tsteq	r0, fp
    2c30:	3ce401fb 	stfcce	f0, [r4], #1004	; 0x3ec
    2c34:	00060800 	andeq	r0, r6, r0, lsl #16
    2c38:	9c010000 	stcls	0, cr0, [r1], {-0}
    2c3c:	00000d8b 	andeq	r0, r0, fp, lsl #27
    2c40:	003cea26 	eorseq	lr, ip, r6, lsr #20
    2c44:	00063408 	andeq	r3, r6, r8, lsl #8
    2c48:	87280000 	strhi	r0, [r8, -r0]!
    2c4c:	0100000b 	tsteq	r0, fp
    2c50:	3cec0208 	sfmcc	f0, 2, [ip], #32
    2c54:	00060800 	andeq	r0, r6, r0, lsl #16
    2c58:	9c010000 	stcls	0, cr0, [r1], {-0}
    2c5c:	00000dab 	andeq	r0, r0, fp, lsr #27
    2c60:	003cf226 	eorseq	pc, ip, r6, lsr #4
    2c64:	00063408 	andeq	r3, r6, r8, lsl #8
    2c68:	82280000 	eorhi	r0, r8, #0
    2c6c:	0100000d 	tsteq	r0, sp
    2c70:	3cf40214 	lfmcc	f0, 2, [r4], #80	; 0x50
    2c74:	00060800 	andeq	r0, r6, r0, lsl #16
    2c78:	9c010000 	stcls	0, cr0, [r1], {-0}
    2c7c:	00000dcb 	andeq	r0, r0, fp, asr #27
    2c80:	003cfa26 	eorseq	pc, ip, r6, lsr #20
    2c84:	00063408 	andeq	r3, r6, r8, lsl #8
    2c88:	60280000 	eorvs	r0, r8, r0
    2c8c:	0100000e 	tsteq	r0, lr
    2c90:	3cfc0220 	lfmcc	f0, 2, [ip], #128	; 0x80
    2c94:	00060800 	andeq	r0, r6, r0, lsl #16
    2c98:	9c010000 	stcls	0, cr0, [r1], {-0}
    2c9c:	00000deb 	andeq	r0, r0, fp, ror #27
    2ca0:	003d0226 	eorseq	r0, sp, r6, lsr #4
    2ca4:	00063408 	andeq	r3, r6, r8, lsl #8
    2ca8:	6d280000 	stcvs	0, cr0, [r8, #-0]
    2cac:	0100000b 	tsteq	r0, fp
    2cb0:	3d04022c 	sfmcc	f0, 4, [r4, #-176]	; 0xffffff50
    2cb4:	00060800 	andeq	r0, r6, r0, lsl #16
    2cb8:	9c010000 	stcls	0, cr0, [r1], {-0}
    2cbc:	00000e0b 	andeq	r0, r0, fp, lsl #28
    2cc0:	003d0a26 	eorseq	r0, sp, r6, lsr #20
    2cc4:	00063408 	andeq	r3, r6, r8, lsl #8
    2cc8:	0e280000 	cdpeq	0, 2, cr0, cr8, cr0, {0}
    2ccc:	0100000d 	tsteq	r0, sp
    2cd0:	3d0c0238 	sfmcc	f0, 4, [ip, #-224]	; 0xffffff20
    2cd4:	00060800 	andeq	r0, r6, r0, lsl #16
    2cd8:	9c010000 	stcls	0, cr0, [r1], {-0}
    2cdc:	00000e2b 	andeq	r0, r0, fp, lsr #28
    2ce0:	003d1226 	eorseq	r1, sp, r6, lsr #4
    2ce4:	00063408 	andeq	r3, r6, r8, lsl #8
    2ce8:	4d280000 	stcmi	0, cr0, [r8, #-0]
    2cec:	0100000e 	tsteq	r0, lr
    2cf0:	3d140244 	lfmcc	f0, 4, [r4, #-272]	; 0xfffffef0
    2cf4:	00060800 	andeq	r0, r6, r0, lsl #16
    2cf8:	9c010000 	stcls	0, cr0, [r1], {-0}
    2cfc:	00000e4b 	andeq	r0, r0, fp, asr #28
    2d00:	003d1a26 	eorseq	r1, sp, r6, lsr #20
    2d04:	00063408 	andeq	r3, r6, r8, lsl #8
    2d08:	55280000 	strpl	r0, [r8, #-0]!
    2d0c:	0100000d 	tsteq	r0, sp
    2d10:	3d1c0250 	lfmcc	f0, 4, [ip, #-320]	; 0xfffffec0
    2d14:	00060800 	andeq	r0, r6, r0, lsl #16
    2d18:	9c010000 	stcls	0, cr0, [r1], {-0}
    2d1c:	00000e6b 	andeq	r0, r0, fp, ror #28
    2d20:	003d2226 	eorseq	r2, sp, r6, lsr #4
    2d24:	00063408 	andeq	r3, r6, r8, lsl #8
    2d28:	42280000 	eormi	r0, r8, #0
    2d2c:	0100000d 	tsteq	r0, sp
    2d30:	3d24025c 	sfmcc	f0, 4, [r4, #-368]!	; 0xfffffe90
    2d34:	00060800 	andeq	r0, r6, r0, lsl #16
    2d38:	9c010000 	stcls	0, cr0, [r1], {-0}
    2d3c:	00000e8b 	andeq	r0, r0, fp, lsl #29
    2d40:	003d2a26 	eorseq	r2, sp, r6, lsr #20
    2d44:	00063408 	andeq	r3, r6, r8, lsl #8
    2d48:	a7280000 	strge	r0, [r8, -r0]!
    2d4c:	0100000a 	tsteq	r0, sl
    2d50:	3d2c0268 	sfmcc	f0, 4, [ip, #-416]!	; 0xfffffe60
    2d54:	00060800 	andeq	r0, r6, r0, lsl #16
    2d58:	9c010000 	stcls	0, cr0, [r1], {-0}
    2d5c:	00000eab 	andeq	r0, r0, fp, lsr #29
    2d60:	003d3226 	eorseq	r3, sp, r6, lsr #4
    2d64:	00063408 	andeq	r3, r6, r8, lsl #8
    2d68:	ba280000 	blt	a02d70 <__RW_SIZE__+0xa027ec>
    2d6c:	0100000a 	tsteq	r0, sl
    2d70:	3d340274 	lfmcc	f0, 4, [r4, #-464]!	; 0xfffffe30
    2d74:	00060800 	andeq	r0, r6, r0, lsl #16
    2d78:	9c010000 	stcls	0, cr0, [r1], {-0}
    2d7c:	00000ecb 	andeq	r0, r0, fp, asr #29
    2d80:	003d3a26 	eorseq	r3, sp, r6, lsr #20
    2d84:	00063408 	andeq	r3, r6, r8, lsl #8
    2d88:	3e280000 	cdpcc	0, 2, cr0, cr8, cr0, {0}
    2d8c:	0100000c 	tsteq	r0, ip
    2d90:	3d3c0280 	lfmcc	f0, 4, [ip, #-512]!	; 0xfffffe00
    2d94:	00060800 	andeq	r0, r6, r0, lsl #16
    2d98:	9c010000 	stcls	0, cr0, [r1], {-0}
    2d9c:	00000eeb 	andeq	r0, r0, fp, ror #29
    2da0:	003d4226 	eorseq	r4, sp, r6, lsr #4
    2da4:	00063408 	andeq	r3, r6, r8, lsl #8
    2da8:	75280000 	strvc	r0, [r8, #-0]!
    2dac:	0100000a 	tsteq	r0, sl
    2db0:	3d44028f 	sfmcc	f0, 2, [r4, #-572]	; 0xfffffdc4
    2db4:	00300800 	eorseq	r0, r0, r0, lsl #16
    2db8:	9c010000 	stcls	0, cr0, [r1], {-0}
    2dbc:	00000f19 	andeq	r0, r0, r9, lsl pc
    2dc0:	0005b529 	andeq	fp, r5, r9, lsr #10
    2dc4:	003d5000 	eorseq	r5, sp, r0
    2dc8:	0000c808 	andeq	ip, r0, r8, lsl #16
    2dcc:	02940100 	addseq	r0, r4, #0, 2
    2dd0:	0005c22a 	andeq	ip, r5, sl, lsr #4
    2dd4:	00002500 	andeq	r2, r0, r0, lsl #10
    2dd8:	000e2b28 	andeq	r2, lr, r8, lsr #22
    2ddc:	029f0100 	addseq	r0, pc, #0, 2
    2de0:	08003d74 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, fp, ip, sp}
    2de4:	00000006 	andeq	r0, r0, r6
    2de8:	0f399c01 	svceq	0x00399c01
    2dec:	7a260000 	bvc	982df4 <__RW_SIZE__+0x982870>
    2df0:	3408003d 	strcc	r0, [r8], #-61	; 0xffffffc3
    2df4:	00000006 	andeq	r0, r0, r6
    2df8:	000ddd28 	andeq	sp, sp, r8, lsr #26
    2dfc:	02ab0100 	adceq	r0, fp, #0, 2
    2e00:	08003d7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, fp, ip, sp}
    2e04:	00000006 	andeq	r0, r0, r6
    2e08:	0f599c01 	svceq	0x00599c01
    2e0c:	82260000 	eorhi	r0, r6, #0
    2e10:	3408003d 	strcc	r0, [r8], #-61	; 0xffffffc3
    2e14:	00000006 	andeq	r0, r0, r6
    2e18:	000def28 	andeq	lr, sp, r8, lsr #30
    2e1c:	02b70100 	adcseq	r0, r7, #0, 2
    2e20:	08003d84 	stmdaeq	r0, {r2, r7, r8, sl, fp, ip, sp}
    2e24:	00000006 	andeq	r0, r0, r6
    2e28:	0f799c01 	svceq	0x00799c01
    2e2c:	8a260000 	bhi	982e34 <__RW_SIZE__+0x9828b0>
    2e30:	3408003d 	strcc	r0, [r8], #-61	; 0xffffffc3
    2e34:	00000006 	andeq	r0, r0, r6
    2e38:	000e1728 	andeq	r1, lr, r8, lsr #14
    2e3c:	02c30100 	sbceq	r0, r3, #0, 2
    2e40:	08003d8c 	stmdaeq	r0, {r2, r3, r7, r8, sl, fp, ip, sp}
    2e44:	00000006 	andeq	r0, r0, r6
    2e48:	0f999c01 	svceq	0x00999c01
    2e4c:	92260000 	eorls	r0, r6, #0
    2e50:	3408003d 	strcc	r0, [r8], #-61	; 0xffffffc3
    2e54:	00000006 	andeq	r0, r0, r6
    2e58:	000b9f28 	andeq	r9, fp, r8, lsr #30
    2e5c:	02cf0100 	sbceq	r0, pc, #0, 2
    2e60:	08003d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp, ip, sp}
    2e64:	00000006 	andeq	r0, r0, r6
    2e68:	0fb99c01 	svceq	0x00b99c01
    2e6c:	9a260000 	bls	982e74 <__RW_SIZE__+0x9828f0>
    2e70:	3408003d 	strcc	r0, [r8], #-61	; 0xffffffc3
    2e74:	00000006 	andeq	r0, r0, r6
    2e78:	00059d0c 	andeq	r9, r5, ip, lsl #26
    2e7c:	000fc900 	andeq	ip, pc, r0, lsl #18
    2e80:	02950d00 	addseq	r0, r5, #0, 26
    2e84:	00070000 	andeq	r0, r7, r0
    2e88:	000b7d2b 	andeq	r7, fp, fp, lsr #26
    2e8c:	da230100 	ble	8c3294 <__RW_SIZE__+0x8c2d10>
    2e90:	0500000f 	streq	r0, [r0, #-15]
    2e94:	00a45003 	adceq	r5, r4, r3
    2e98:	0fb91208 	svceq	0x00b91208
    2e9c:	9c2c0000 	stcls	0, cr0, [ip], #-0
    2ea0:	02000000 	andeq	r0, r0, #0
    2ea4:	0feb06ce 	svceq	0x00eb06ce
    2ea8:	c90e0000 	stmdbgt	lr, {}	; <UNPREDICTABLE>
    2eac:	2d000001 	stccs	0, cr0, [r0, #-4]
    2eb0:	00000b08 	andeq	r0, r0, r8, lsl #22
    2eb4:	0febb901 	svceq	0x00ebb901
    2eb8:	03050000 	movweq	r0, #20480	; 0x5000
    2ebc:	2000058c 	andcs	r0, r0, ip, lsl #11
    2ec0:	000e3d2e 	andeq	r3, lr, lr, lsr #26
    2ec4:	01dd0100 	bicseq	r0, sp, r0, lsl #2
    2ec8:	00000feb 	andeq	r0, r0, fp, ror #31
    2ecc:	05900305 	ldreq	r0, [r0, #773]	; 0x305
    2ed0:	3f2e2000 	svccc	0x002e2000
    2ed4:	01000008 	tsteq	r0, r8
    2ed8:	0feb028c 	svceq	0x00eb028c
    2edc:	03050000 	movweq	r0, #20480	; 0x5000
    2ee0:	20000598 	mulcs	r0, r8, r5
    2ee4:	0008672e 	andeq	r6, r8, lr, lsr #14
    2ee8:	028d0100 	addeq	r0, sp, #0, 2
    2eec:	00000feb 	andeq	r0, r0, fp, ror #31
    2ef0:	05940305 	ldreq	r0, [r4, #773]	; 0x305
    2ef4:	5a2f2000 	bpl	bcaefc <__RW_SIZE__+0xbca978>
    2ef8:	05000008 	streq	r0, [r0, #-8]
    2efc:	059d3011 	ldreq	r3, [sp, #17]
    2f00:	00310000 	eorseq	r0, r1, r0
    2f04:	00018000 	andeq	r8, r1, r0
    2f08:	d4000400 	strle	r0, [r0], #-1024	; 0xfffffc00
    2f0c:	0400000b 	streq	r0, [r0], #-11
    2f10:	0000f901 	andeq	pc, r0, r1, lsl #18
    2f14:	0e820100 	rmfeqs	f0, f2, f0
    2f18:	00420000 	subeq	r0, r2, r0
    2f1c:	3da00000 	stccc	0, cr0, [r0]
    2f20:	00c80800 	sbceq	r0, r8, r0, lsl #16
    2f24:	08930000 	ldmeq	r3, {}	; <UNPREDICTABLE>
    2f28:	01020000 	mrseq	r0, (UNDEF: 2)
    2f2c:	0000b306 	andeq	fp, r0, r6, lsl #6
    2f30:	08010200 	stmdaeq	r1, {r9}
    2f34:	000000b1 	strheq	r0, [r0], -r1
    2f38:	a3050202 	movwge	r0, #20994	; 0x5202
    2f3c:	02000001 	andeq	r0, r0, #1
    2f40:	00890702 	addeq	r0, r9, r2, lsl #14
    2f44:	04020000 	streq	r0, [r2], #-0
    2f48:	00000505 	andeq	r0, r0, r5, lsl #10
    2f4c:	01b90300 			; <UNDEFINED> instruction: 0x01b90300
    2f50:	50030000 	andpl	r0, r3, r0
    2f54:	00000053 	andeq	r0, r0, r3, asr r0
    2f58:	e7070402 	str	r0, [r7, -r2, lsl #8]
    2f5c:	02000000 	andeq	r0, r0, #0
    2f60:	00000508 	andeq	r0, r0, r8, lsl #10
    2f64:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2f68:	0000e207 	andeq	lr, r0, r7, lsl #4
    2f6c:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    2f70:	00746e69 	rsbseq	r6, r4, r9, ror #28
    2f74:	ec070402 	cfstrs	mvf0, [r7], {2}
    2f78:	02000000 	andeq	r0, r0, #0
    2f7c:	018f0704 	orreq	r0, pc, r4, lsl #14
    2f80:	48050000 	stmdami	r5, {}	; <UNPREDICTABLE>
    2f84:	06000000 	streq	r0, [r0], -r0
    2f88:	0000007d 	andeq	r0, r0, sp, ror r0
    2f8c:	6d021007 	stcvs	0, cr1, [r2, #-28]	; 0xffffffe4
    2f90:	0000c501 	andeq	ip, r0, r1, lsl #10
    2f94:	0e7d0800 	cdpeq	8, 7, cr0, cr13, cr0, {0}
    2f98:	6f020000 	svcvs	0x00020000
    2f9c:	00007d01 	andeq	r7, r0, r1, lsl #26
    2fa0:	a8080000 	stmdage	r8, {}	; <UNPREDICTABLE>
    2fa4:	0200000e 	andeq	r0, r0, #14
    2fa8:	007d0170 	rsbseq	r0, sp, r0, ror r1
    2fac:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    2fb0:	004c4156 	subeq	r4, ip, r6, asr r1
    2fb4:	7d017102 	stfvcs	f7, [r1, #-8]
    2fb8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2fbc:	000e8c08 	andeq	r8, lr, r8, lsl #24
    2fc0:	01720200 	cmneq	r2, r0, lsl #4
    2fc4:	00000082 	andeq	r0, r0, r2, lsl #1
    2fc8:	b90a000c 	stmdblt	sl, {r2, r3}
    2fcc:	0200000e 	andeq	r0, r0, #14
    2fd0:	00870173 	addeq	r0, r7, r3, ror r1
    2fd4:	01020000 	mrseq	r0, (UNDEF: 2)
    2fd8:	0000ba08 	andeq	fp, r0, r8, lsl #20
    2fdc:	0ead0b00 	vfmaeq.f64	d0, d13, d0
    2fe0:	03010000 	movweq	r0, #4096	; 0x1000
    2fe4:	08003da0 	stmdaeq	r0, {r5, r7, r8, sl, fp, ip, sp}
    2fe8:	00000048 	andeq	r0, r0, r8, asr #32
    2fec:	00fd9c01 	rscseq	r9, sp, r1, lsl #24
    2ff0:	c60c0000 	strgt	r0, [ip], -r0
    2ff4:	0100000e 	tsteq	r0, lr
    2ff8:	00006f03 	andeq	r6, r0, r3, lsl #30
    2ffc:	00092000 	andeq	r2, r9, r0
    3000:	920d0000 	andls	r0, sp, #0
    3004:	0100000e 	tsteq	r0, lr
    3008:	0000680b 	andeq	r6, r0, fp, lsl #16
    300c:	003de800 	eorseq	lr, sp, r0, lsl #16
    3010:	00001008 	andeq	r1, r0, r8
    3014:	0d9c0100 	ldfeqs	f0, [ip]
    3018:	00000edb 	ldrdeq	r0, [r0], -fp
    301c:	006f1001 	rsbeq	r1, pc, r1
    3020:	3df80000 	ldclcc	0, cr0, [r8]
    3024:	000c0800 	andeq	r0, ip, r0, lsl #16
    3028:	9c010000 	stcls	0, cr0, [r1], {-0}
    302c:	000eec0d 	andeq	lr, lr, sp, lsl #24
    3030:	6f150100 	svcvs	0x00150100
    3034:	04000000 	streq	r0, [r0], #-0
    3038:	0c08003e 	stceq	0, cr0, [r8], {62}	; 0x3e
    303c:	01000000 	mrseq	r0, (UNDEF: 0)
    3040:	0e700e9c 	mrceq	14, 3, r0, cr0, cr12, {4}
    3044:	1a010000 	bne	4304c <__RW_SIZE__+0x42ac8>
    3048:	08003e10 	stmdaeq	r0, {r4, r9, sl, fp, ip, sp}
    304c:	0000000e 	andeq	r0, r0, lr
    3050:	cb0b9c01 	blgt	2ea05c <__RW_SIZE__+0x2e9ad8>
    3054:	0100000e 	tsteq	r0, lr
    3058:	003e201f 	eorseq	r2, lr, pc, lsl r0
    305c:	00004808 	andeq	r4, r0, r8, lsl #16
    3060:	729c0100 	addsvc	r0, ip, #0, 2
    3064:	0c000001 	stceq	0, cr0, [r0], {1}
    3068:	00000ec6 	andeq	r0, r0, r6, asr #29
    306c:	006f1f01 	rsbeq	r1, pc, r1, lsl #30
    3070:	09410000 	stmdbeq	r1, {}^	; <UNPREDICTABLE>
    3074:	0f000000 	svceq	0x00000000
    3078:	0000009c 	muleq	r0, ip, r0
    307c:	7e06ce02 	cdpvc	14, 0, cr12, cr6, cr2, {0}
    3080:	05000001 	streq	r0, [r0, #-1]
    3084:	00000068 	andeq	r0, r0, r8, rrx
    3088:	00050500 	andeq	r0, r5, r0, lsl #10
    308c:	bd000400 	cfstrslt	mvf0, [r0, #-0]
    3090:	0400000c 	streq	r0, [r0], #-12
    3094:	0000f901 	andeq	pc, r0, r1, lsl #18
    3098:	0f590100 	svceq	0x00590100
    309c:	00420000 	subeq	r0, r2, r0
    30a0:	3e680000 	cdpcc	0, 6, cr0, cr8, cr0, {0}
    30a4:	02d20800 	sbcseq	r0, r2, #0, 16
    30a8:	09320000 	ldmdbeq	r2!, {}	; <UNPREDICTABLE>
    30ac:	01020000 	mrseq	r0, (UNDEF: 2)
    30b0:	0000b306 	andeq	fp, r0, r6, lsl #6
    30b4:	08010200 	stmdaeq	r1, {r9}
    30b8:	000000b1 	strheq	r0, [r0], -r1
    30bc:	a3050202 	movwge	r0, #20994	; 0x5202
    30c0:	03000001 	movweq	r0, #1
    30c4:	000002da 	ldrdeq	r0, [r0], -sl
    30c8:	00453602 	subeq	r3, r5, r2, lsl #12
    30cc:	02020000 	andeq	r0, r2, #0
    30d0:	00008907 	andeq	r8, r0, r7, lsl #18
    30d4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    30d8:	00000005 	andeq	r0, r0, r5
    30dc:	0001b903 	andeq	fp, r1, r3, lsl #18
    30e0:	5e500200 	cdppl	2, 5, cr0, cr0, cr0, {0}
    30e4:	02000000 	andeq	r0, r0, #0
    30e8:	00e70704 	rsceq	r0, r7, r4, lsl #14
    30ec:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    30f0:	00000005 	andeq	r0, r0, r5
    30f4:	07080200 	streq	r0, [r8, -r0, lsl #4]
    30f8:	000000e2 	andeq	r0, r0, r2, ror #1
    30fc:	69050404 	stmdbvs	r5, {r2, sl}
    3100:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    3104:	00ec0704 	rsceq	r0, ip, r4, lsl #14
    3108:	04020000 	streq	r0, [r2], #-0
    310c:	00018f07 	andeq	r8, r1, r7, lsl #30
    3110:	00530500 	subseq	r0, r3, r0, lsl #10
    3114:	3a050000 	bcc	14311c <__RW_SIZE__+0x142b98>
    3118:	06000000 	streq	r0, [r0], -r0
    311c:	03e9031c 	mvneq	r0, #28, 6	; 0x70000000
    3120:	000000f7 	strdeq	r0, [r0], -r7
    3124:	4c524307 	mrrcmi	3, 0, r4, r2, cr7
    3128:	03eb0300 	mvneq	r0, #0, 6
    312c:	00000088 	andeq	r0, r0, r8, lsl #1
    3130:	52430700 	subpl	r0, r3, #0, 14
    3134:	ec030048 	stc	0, cr0, [r3], {72}	; 0x48
    3138:	00008803 	andeq	r8, r0, r3, lsl #16
    313c:	49070400 	stmdbmi	r7, {sl}
    3140:	03005244 	movweq	r5, #580	; 0x244
    3144:	008803ed 	addeq	r0, r8, sp, ror #7
    3148:	07080000 	streq	r0, [r8, -r0]
    314c:	0052444f 	subseq	r4, r2, pc, asr #8
    3150:	8803ee03 	stmdahi	r3, {r0, r1, r9, sl, fp, sp, lr, pc}
    3154:	0c000000 	stceq	0, cr0, [r0], {-0}
    3158:	00036a08 	andeq	r6, r3, r8, lsl #20
    315c:	03ef0300 	mvneq	r0, #0, 6
    3160:	00000088 	andeq	r0, r0, r8, lsl #1
    3164:	52420710 	subpl	r0, r2, #16, 14	; 0x400000
    3168:	f0030052 			; <UNDEFINED> instruction: 0xf0030052
    316c:	00008803 	andeq	r8, r0, r3, lsl #16
    3170:	05081400 	streq	r1, [r8, #-1024]	; 0xfffffc00
    3174:	03000004 	movweq	r0, #4
    3178:	008803f1 	strdeq	r0, [r8], r1
    317c:	00180000 	andseq	r0, r8, r0
    3180:	00031709 	andeq	r1, r3, r9, lsl #14
    3184:	03f20300 	mvnseq	r0, #0, 6
    3188:	00000092 	muleq	r0, r2, r0
    318c:	34032806 	strcc	r2, [r3], #-2054	; 0xfffff7fa
    3190:	00018e04 	andeq	r8, r1, r4, lsl #28
    3194:	52430700 	subpl	r0, r3, #0, 14
    3198:	04360300 	ldrteq	r0, [r6], #-768	; 0xfffffd00
    319c:	00000088 	andeq	r0, r0, r8, lsl #1
    31a0:	00130800 	andseq	r0, r3, r0, lsl #16
    31a4:	37030000 	strcc	r0, [r3, -r0]
    31a8:	00008804 	andeq	r8, r0, r4, lsl #16
    31ac:	43070400 	movwmi	r0, #29696	; 0x7400
    31b0:	03005249 	movweq	r5, #585	; 0x249
    31b4:	00880438 	addeq	r0, r8, r8, lsr r4
    31b8:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
    31bc:	000000d9 	ldrdeq	r0, [r0], -r9
    31c0:	88043903 	stmdahi	r4, {r0, r1, r8, fp, ip, sp}
    31c4:	0c000000 	stceq	0, cr0, [r0], {-0}
    31c8:	0000c808 	andeq	ip, r0, r8, lsl #16
    31cc:	043a0300 	ldrteq	r0, [sl], #-768	; 0xfffffd00
    31d0:	00000088 	andeq	r0, r0, r8, lsl #1
    31d4:	00260810 	eoreq	r0, r6, r0, lsl r8
    31d8:	3b030000 	blcc	c31e0 <__RW_SIZE__+0xc2c5c>
    31dc:	00008804 	andeq	r8, r0, r4, lsl #16
    31e0:	32081400 	andcc	r1, r8, #0, 8
    31e4:	03000000 	movweq	r0, #0
    31e8:	0088043c 	addeq	r0, r8, ip, lsr r4
    31ec:	08180000 	ldmdaeq	r8, {}	; <UNPREDICTABLE>
    31f0:	000000d1 	ldrdeq	r0, [r0], -r1
    31f4:	88043d03 	stmdahi	r4, {r0, r1, r8, sl, fp, ip, sp}
    31f8:	1c000000 	stcne	0, cr0, [r0], {-0}
    31fc:	00000e08 	andeq	r0, r0, r8, lsl #28
    3200:	043e0300 	ldrteq	r0, [lr], #-768	; 0xfffffd00
    3204:	00000088 	andeq	r0, r0, r8, lsl #1
    3208:	53430720 	movtpl	r0, #14112	; 0x3720
    320c:	3f030052 	svccc	0x00030052
    3210:	00008804 	andeq	r8, r0, r4, lsl #16
    3214:	09002400 	stmdbeq	r0, {sl, sp}
    3218:	000001ad 	andeq	r0, r0, sp, lsr #3
    321c:	03044a03 	movweq	r4, #18947	; 0x4a03
    3220:	06000001 	streq	r0, [r0], -r1
    3224:	04a20350 	strteq	r0, [r2], #848	; 0x350
    3228:	000003ab 	andeq	r0, r0, fp, lsr #7
    322c:	31524307 	cmpcc	r2, r7, lsl #6
    3230:	04a40300 	strteq	r0, [r4], #768	; 0x300
    3234:	0000008d 	andeq	r0, r0, sp, lsl #1
    3238:	03990800 	orrseq	r0, r9, #0, 16
    323c:	a5030000 	strge	r0, [r3, #-0]
    3240:	00003a04 	andeq	r3, r0, r4, lsl #20
    3244:	43070200 	movwmi	r0, #29184	; 0x7200
    3248:	03003252 	movweq	r3, #594	; 0x252
    324c:	008d04a6 	addeq	r0, sp, r6, lsr #9
    3250:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    3254:	0000033a 	andeq	r0, r0, sl, lsr r3
    3258:	3a04a703 	bcc	12ce6c <__RW_SIZE__+0x12c8e8>
    325c:	06000000 	streq	r0, [r0], -r0
    3260:	00093708 	andeq	r3, r9, r8, lsl #14
    3264:	04a80300 	strteq	r0, [r8], #768	; 0x300
    3268:	0000008d 	andeq	r0, r0, sp, lsl #1
    326c:	03a90808 			; <UNDEFINED> instruction: 0x03a90808
    3270:	a9030000 	stmdbge	r3, {}	; <UNPREDICTABLE>
    3274:	00003a04 	andeq	r3, r0, r4, lsl #20
    3278:	9e080a00 	vmlals.f32	s0, s16, s0
    327c:	03000009 	movweq	r0, #9
    3280:	008d04aa 	addeq	r0, sp, sl, lsr #9
    3284:	080c0000 	stmdaeq	ip, {}	; <UNPREDICTABLE>
    3288:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    328c:	3a04ab03 	bcc	12dea0 <__RW_SIZE__+0x12d91c>
    3290:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    3294:	00525307 	subseq	r5, r2, r7, lsl #6
    3298:	8d04ac03 	stchi	12, cr10, [r4, #-12]
    329c:	10000000 	andne	r0, r0, r0
    32a0:	0003bd08 	andeq	fp, r3, r8, lsl #26
    32a4:	04ad0300 	strteq	r0, [sp], #768	; 0x300
    32a8:	0000003a 	andeq	r0, r0, sl, lsr r0
    32ac:	47450712 	smlaldmi	r0, r5, r2, r7
    32b0:	ae030052 	mcrge	0, 0, r0, cr3, cr2, {2}
    32b4:	00008d04 	andeq	r8, r0, r4, lsl #26
    32b8:	c7081400 	strgt	r1, [r8, -r0, lsl #8]
    32bc:	03000003 	movweq	r0, #3
    32c0:	003a04af 	eorseq	r0, sl, pc, lsr #9
    32c4:	08160000 	ldmdaeq	r6, {}	; <UNPREDICTABLE>
    32c8:	00000897 	muleq	r0, r7, r8
    32cc:	8d04b003 	stchi	0, cr11, [r4, #-12]
    32d0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    32d4:	0003d108 	andeq	sp, r3, r8, lsl #2
    32d8:	04b10300 	ldrteq	r0, [r1], #768	; 0x300
    32dc:	0000003a 	andeq	r0, r0, sl, lsr r0
    32e0:	089d081a 	ldmeq	sp, {r1, r3, r4, fp}
    32e4:	b2030000 	andlt	r0, r3, #0
    32e8:	00008d04 	andeq	r8, r0, r4, lsl #26
    32ec:	db081c00 	blle	20a2f4 <__RW_SIZE__+0x209d70>
    32f0:	03000003 	movweq	r0, #3
    32f4:	003a04b3 	ldrhteq	r0, [sl], -r3
    32f8:	081e0000 	ldmdaeq	lr, {}	; <UNPREDICTABLE>
    32fc:	0000088d 	andeq	r0, r0, sp, lsl #17
    3300:	8d04b403 	cfstrshi	mvf11, [r4, #-12]
    3304:	20000000 	andcs	r0, r0, r0
    3308:	00034b08 	andeq	r4, r3, r8, lsl #22
    330c:	04b50300 	ldrteq	r0, [r5], #768	; 0x300
    3310:	0000003a 	andeq	r0, r0, sl, lsr r0
    3314:	4e430722 	cdpmi	7, 4, cr0, cr3, cr2, {1}
    3318:	b6030054 			; <UNDEFINED> instruction: 0xb6030054
    331c:	00008d04 	andeq	r8, r0, r4, lsl #26
    3320:	bc082400 	cfstrslt	mvf2, [r8], {-0}
    3324:	03000009 	movweq	r0, #9
    3328:	003a04b7 	ldrhteq	r0, [sl], -r7
    332c:	07260000 	streq	r0, [r6, -r0]!
    3330:	00435350 	subeq	r5, r3, r0, asr r3
    3334:	8d04b803 	stchi	8, cr11, [r4, #-12]
    3338:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    333c:	0008fa08 	andeq	pc, r8, r8, lsl #20
    3340:	04b90300 	ldrteq	r0, [r9], #768	; 0x300
    3344:	0000003a 	andeq	r0, r0, sl, lsr r0
    3348:	5241072a 	subpl	r0, r1, #11010048	; 0xa80000
    334c:	ba030052 	blt	c349c <__RW_SIZE__+0xc2f18>
    3350:	00008d04 	andeq	r8, r0, r4, lsl #26
    3354:	cb082c00 	blgt	20e35c <__RW_SIZE__+0x20ddd8>
    3358:	03000008 	movweq	r0, #8
    335c:	003a04bb 	ldrhteq	r0, [sl], -fp
    3360:	072e0000 	streq	r0, [lr, -r0]!
    3364:	00524352 	subseq	r4, r2, r2, asr r3
    3368:	8d04bc03 	stchi	12, cr11, [r4, #-12]
    336c:	30000000 	andcc	r0, r0, r0
    3370:	00095508 	andeq	r5, r9, r8, lsl #10
    3374:	04bd0300 	ldrteq	r0, [sp], #768	; 0x300
    3378:	0000003a 	andeq	r0, r0, sl, lsr r0
    337c:	08eb0832 	stmiaeq	fp!, {r1, r4, r5, fp}^
    3380:	be030000 	cdplt	0, 0, cr0, cr3, cr0, {0}
    3384:	00008d04 	andeq	r8, r0, r4, lsl #26
    3388:	0a083400 	beq	210390 <__RW_SIZE__+0x20fe0c>
    338c:	03000009 	movweq	r0, #9
    3390:	003a04bf 	ldrhteq	r0, [sl], -pc
    3394:	08360000 	ldmdaeq	r6!, {}	; <UNPREDICTABLE>
    3398:	000008f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    339c:	8d04c003 	stchi	0, cr12, [r4, #-12]
    33a0:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    33a4:	00096008 	andeq	r6, r9, r8
    33a8:	04c10300 	strbeq	r0, [r1], #768	; 0x300
    33ac:	0000003a 	andeq	r0, r0, sl, lsr r0
    33b0:	08f5083a 	ldmeq	r5!, {r1, r3, r4, r5, fp}^
    33b4:	c2030000 	andgt	r0, r3, #0
    33b8:	00008d04 	andeq	r8, r0, r4, lsl #26
    33bc:	6b083c00 	blvs	2123c4 <__RW_SIZE__+0x211e40>
    33c0:	03000009 	movweq	r0, #9
    33c4:	003a04c3 	eorseq	r0, sl, r3, asr #9
    33c8:	083e0000 	ldmdaeq	lr!, {}	; <UNPREDICTABLE>
    33cc:	00000950 	andeq	r0, r0, r0, asr r9
    33d0:	8d04c403 	cfstrshi	mvf12, [r4, #-12]
    33d4:	40000000 	andmi	r0, r0, r0
    33d8:	00097608 	andeq	r7, r9, r8, lsl #12
    33dc:	04c50300 	strbeq	r0, [r5], #768	; 0x300
    33e0:	0000003a 	andeq	r0, r0, sl, lsr r0
    33e4:	094b0842 	stmdbeq	fp, {r1, r6, fp}^
    33e8:	c6030000 	strgt	r0, [r3], -r0
    33ec:	00008d04 	andeq	r8, r0, r4, lsl #26
    33f0:	20084400 	andcs	r4, r8, r0, lsl #8
    33f4:	03000009 	movweq	r0, #9
    33f8:	003a04c7 	eorseq	r0, sl, r7, asr #9
    33fc:	07460000 	strbeq	r0, [r6, -r0]
    3400:	00524344 	subseq	r4, r2, r4, asr #6
    3404:	8d04c803 	stchi	8, cr12, [r4, #-12]
    3408:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    340c:	00098108 	andeq	r8, r9, r8, lsl #2
    3410:	04c90300 	strbeq	r0, [r9], #768	; 0x300
    3414:	0000003a 	andeq	r0, r0, sl, lsr r0
    3418:	0892084a 	ldmeq	r2, {r1, r3, r6, fp}
    341c:	ca030000 	bgt	c3424 <__RW_SIZE__+0xc2ea0>
    3420:	00008d04 	andeq	r8, r0, r4, lsl #26
    3424:	db084c00 	blle	21642c <__RW_SIZE__+0x215ea8>
    3428:	03000008 	movweq	r0, #8
    342c:	003a04cb 	eorseq	r0, sl, fp, asr #9
    3430:	004e0000 	subeq	r0, lr, r0
    3434:	00092b09 	andeq	r2, r9, r9, lsl #22
    3438:	04cc0300 	strbeq	r0, [ip], #768	; 0x300
    343c:	0000019a 	muleq	r0, sl, r1
    3440:	ba080102 	blt	203850 <__RW_SIZE__+0x2032cc>
    3444:	0a000000 	beq	344c <__RW_SIZE__+0x2ec8>
    3448:	00000f2b 	andeq	r0, r0, fp, lsr #30
    344c:	3e681101 	powcce	f1, f0, f1
    3450:	003e0800 	eorseq	r0, lr, r0, lsl #16
    3454:	9c010000 	stcls	0, cr0, [r1], {-0}
    3458:	000f400b 	andeq	r4, pc, fp
    345c:	7a1d0100 	bvc	743864 <__RW_SIZE__+0x7432e0>
    3460:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
    3464:	2608003e 			; <UNDEFINED> instruction: 0x2608003e
    3468:	01000000 	mrseq	r0, (UNDEF: 0)
    346c:	0004039c 	muleq	r4, ip, r3
    3470:	0f540c00 	svceq	0x00540c00
    3474:	1f010000 	svcne	0x00010000
    3478:	0000007a 	andeq	r0, r0, sl, ror r0
    347c:	0a00730e 	beq	200bc <__RW_SIZE__+0x1fb38>
    3480:	091affff 	ldmdbeq	sl, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
    3484:	ec231eec 	stc	14, cr1, [r3], #-944	; 0xfffffc50
    3488:	009f4fff 			; <UNDEFINED> instruction: 0x009f4fff
    348c:	000f960d 	andeq	r9, pc, sp, lsl #12
    3490:	d0410100 	suble	r0, r1, r0, lsl #2
    3494:	e408003e 	str	r0, [r8], #-62	; 0xffffffc2
    3498:	01000000 	mrseq	r0, (UNDEF: 0)
    349c:	0004409c 	muleq	r4, ip, r0
    34a0:	0f540e00 	svceq	0x00540e00
    34a4:	41010000 	mrsmi	r0, (UNDEF: 1)
    34a8:	00000073 	andeq	r0, r0, r3, ror r0
    34ac:	00000962 	andeq	r0, r0, r2, ror #18
    34b0:	0100690f 	tsteq	r0, pc, lsl #18
    34b4:	00007343 	andeq	r7, r0, r3, asr #6
    34b8:	00098300 	andeq	r8, r9, r0, lsl #6
    34bc:	00741000 	rsbseq	r1, r4, r0
    34c0:	007a4401 	rsbseq	r4, sl, r1, lsl #8
    34c4:	50010000 	andpl	r0, r1, r0
    34c8:	0f020d00 	svceq	0x00020d00
    34cc:	62010000 	andvs	r0, r1, #0
    34d0:	08003fb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl, fp, ip, sp}
    34d4:	00000062 	andeq	r0, r0, r2, rrx
    34d8:	04659c01 	strbteq	r9, [r5], #-3073	; 0xfffff3ff
    34dc:	540e0000 	strpl	r0, [lr], #-0
    34e0:	0100000f 	tsteq	r0, pc
    34e4:	00007362 	andeq	r7, r0, r2, ror #6
    34e8:	0009a200 	andeq	sl, r9, r0, lsl #4
    34ec:	18110000 	ldmdane	r1, {}	; <UNPREDICTABLE>
    34f0:	0100000f 	tsteq	r0, pc
    34f4:	00007370 	andeq	r7, r0, r0, ror r3
    34f8:	00401800 	subeq	r1, r0, r0, lsl #16
    34fc:	00002008 	andeq	r2, r0, r8
    3500:	0a9c0100 	beq	fe703908 <MSP_BASE+0xde6fe908>
    3504:	00000f0e 	andeq	r0, r0, lr, lsl #30
    3508:	40387d01 	eorsmi	r7, r8, r1, lsl #26
    350c:	00220800 	eoreq	r0, r2, r0, lsl #16
    3510:	9c010000 	stcls	0, cr0, [r1], {-0}
    3514:	000fa10d 	andeq	sl, pc, sp, lsl #2
    3518:	5c830100 	stfpls	f0, [r3], {0}
    351c:	18080040 	stmdane	r8, {r6}
    3520:	01000000 	mrseq	r0, (UNDEF: 0)
    3524:	0004b09c 	muleq	r4, ip, r0
    3528:	0f540e00 	svceq	0x00540e00
    352c:	83010000 	movwhi	r0, #4096	; 0x1000
    3530:	00000073 	andeq	r0, r0, r3, ror r0
    3534:	000009c3 	andeq	r0, r0, r3, asr #19
    3538:	0f880a00 	svceq	0x00880a00
    353c:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    3540:	08004074 	stmdaeq	r0, {r2, r4, r5, r6, lr}
    3544:	0000004c 	andeq	r0, r0, ip, asr #32
    3548:	61129c01 	tstvs	r2, r1, lsl #24
    354c:	0100000f 	tsteq	r0, pc
    3550:	0040c091 	umaaleq	ip, r0, r1, r0
    3554:	00005808 	andeq	r5, r0, r8, lsl #16
    3558:	e69c0100 	ldr	r0, [ip], r0, lsl #2
    355c:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    3560:	00000355 	andeq	r0, r0, r5, asr r3
    3564:	00459101 	subeq	r9, r5, r1, lsl #2
    3568:	09e40000 	stmibeq	r4!, {}^	; <UNPREDICTABLE>
    356c:	0a000000 	beq	3574 <__RW_SIZE__+0x2ff0>
    3570:	00000f7a 	andeq	r0, r0, sl, ror pc
    3574:	41189b01 	tstmi	r8, r1, lsl #22
    3578:	00220800 	eoreq	r0, r2, r0, lsl #16
    357c:	9c010000 	stcls	0, cr0, [r1], {-0}
    3580:	00009c13 	andeq	r9, r0, r3, lsl ip
    3584:	06ce0400 	strbeq	r0, [lr], r0, lsl #8
    3588:	00000503 	andeq	r0, r0, r3, lsl #10
    358c:	00007305 	andeq	r7, r0, r5, lsl #6
    3590:	07de0000 	ldrbeq	r0, [lr, r0]
    3594:	00040000 	andeq	r0, r4, r0
    3598:	00000e02 	andeq	r0, r0, r2, lsl #28
    359c:	00f90104 	rscseq	r0, r9, r4, lsl #2
    35a0:	cf010000 	svcgt	0x00010000
    35a4:	4200000f 	andmi	r0, r0, #15
    35a8:	40000000 	andmi	r0, r0, r0
    35ac:	0a080041 	beq	2036b8 <__RW_SIZE__+0x203134>
    35b0:	4a000002 	bmi	35c0 <__RW_SIZE__+0x303c>
    35b4:	0200000a 	andeq	r0, r0, #10
    35b8:	000004a4 	andeq	r0, r0, r4, lsr #9
    35bc:	64a80301 	strtvs	r0, [r8], #769	; 0x301
    35c0:	03000001 	movweq	r0, #1
    35c4:	000006af 	andeq	r0, r0, pc, lsr #13
    35c8:	04d40372 	ldrbeq	r0, [r4], #882	; 0x372
    35cc:	03740000 	cmneq	r4, #0
    35d0:	00000634 	andeq	r0, r0, r4, lsr r6
    35d4:	073d0375 			; <UNDEFINED> instruction: 0x073d0375
    35d8:	03760000 	cmneq	r6, #0
    35dc:	0000075a 	andeq	r0, r0, sl, asr r7
    35e0:	072b037b 			; <UNDEFINED> instruction: 0x072b037b
    35e4:	037c0000 	cmneq	ip, #0
    35e8:	000004bf 			; <UNDEFINED> instruction: 0x000004bf
    35ec:	0709037e 	smlsdxeq	r9, lr, r3, r0
    35f0:	037f0000 	cmneq	pc, #0
    35f4:	0000062a 	andeq	r0, r0, sl, lsr #12
    35f8:	064d0300 	strbeq	r0, [sp], -r0, lsl #6
    35fc:	03010000 	movweq	r0, #4096	; 0x1000
    3600:	000007b5 			; <UNDEFINED> instruction: 0x000007b5
    3604:	068d0302 	streq	r0, [sp], r2, lsl #6
    3608:	03030000 	movweq	r0, #12288	; 0x3000
    360c:	00000484 	andeq	r0, r0, r4, lsl #9
    3610:	04cb0304 	strbeq	r0, [fp], #772	; 0x304
    3614:	03050000 	movweq	r0, #20480	; 0x5000
    3618:	0000048f 	andeq	r0, r0, pc, lsl #9
    361c:	06d50306 	ldrbeq	r0, [r5], r6, lsl #6
    3620:	03070000 	movweq	r0, #28672	; 0x7000
    3624:	000005ae 	andeq	r0, r0, lr, lsr #11
    3628:	078d0308 	streq	r0, [sp, r8, lsl #6]
    362c:	03090000 	movweq	r0, #36864	; 0x9000
    3630:	00000642 	andeq	r0, r0, r2, asr #12
    3634:	0608030a 	streq	r0, [r8], -sl, lsl #6
    3638:	030b0000 	movweq	r0, #45056	; 0xb000
    363c:	00000471 	andeq	r0, r0, r1, ror r4
    3640:	065b030c 	ldrbeq	r0, [fp], -ip, lsl #6
    3644:	030d0000 	movweq	r0, #53248	; 0xd000
    3648:	0000051f 	andeq	r0, r0, pc, lsl r5
    364c:	077a030e 	ldrbeq	r0, [sl, -lr, lsl #6]!
    3650:	030f0000 	movweq	r0, #61440	; 0xf000
    3654:	000005d6 	ldrdeq	r0, [r0], -r6
    3658:	04470310 	strbeq	r0, [r7], #-784	; 0xfffffcf0
    365c:	03110000 	tsteq	r1, #0
    3660:	0000079d 	muleq	r0, sp, r7
    3664:	05740312 	ldrbeq	r0, [r4, #-786]!	; 0xfffffcee
    3668:	03130000 	tsteq	r3, #0
    366c:	00000410 	andeq	r0, r0, r0, lsl r4
    3670:	05660314 	strbeq	r0, [r6, #-788]!	; 0xfffffcec
    3674:	03150000 	tsteq	r5, #0
    3678:	00000439 	andeq	r0, r0, r9, lsr r4
    367c:	074d0316 	smlaldeq	r0, sp, r6, r3
    3680:	03170000 	tsteq	r7, #0
    3684:	000004fe 	strdeq	r0, [r0], -lr
    3688:	067b0318 			; <UNDEFINED> instruction: 0x067b0318
    368c:	03190000 	tsteq	r9, #0
    3690:	000006ea 	andeq	r0, r0, sl, ror #13
    3694:	06c3031a 			; <UNDEFINED> instruction: 0x06c3031a
    3698:	031b0000 	tsteq	fp, #0
    369c:	0000071c 	andeq	r0, r0, ip, lsl r7
    36a0:	05fe031c 	ldrbeq	r0, [lr, #796]!	; 0x31c
    36a4:	031d0000 	tsteq	sp, #0
    36a8:	00000467 	andeq	r0, r0, r7, ror #8
    36ac:	066e031e 			; <UNDEFINED> instruction: 0x066e031e
    36b0:	031f0000 	tsteq	pc, #0
    36b4:	000006fc 	strdeq	r0, [r0], -ip
    36b8:	05c90320 	strbeq	r0, [r9, #800]	; 0x320
    36bc:	03210000 	teqeq	r1, #0
    36c0:	0000045a 	andeq	r0, r0, sl, asr r4
    36c4:	05150322 	ldreq	r0, [r5, #-802]	; 0xfffffcde
    36c8:	03230000 	teqeq	r3, #0
    36cc:	0000076b 	andeq	r0, r0, fp, ror #14
    36d0:	06a30324 	strteq	r0, [r3], r4, lsr #6
    36d4:	03250000 	teqeq	r5, #0
    36d8:	00000592 	muleq	r0, r2, r5
    36dc:	07a90326 	streq	r0, [r9, r6, lsr #6]!
    36e0:	03270000 	teqeq	r7, #0
    36e4:	0000049a 	muleq	r0, sl, r4
    36e8:	07c10328 	strbeq	r0, [r1, r8, lsr #6]
    36ec:	03290000 	teqeq	r9, #0
    36f0:	0000061b 	andeq	r0, r0, fp, lsl r6
    36f4:	8804002a 	stmdahi	r4, {r1, r3, r5}
    36f8:	03000005 	movweq	r0, #5
    36fc:	002501d9 	ldrdeq	r0, [r5], -r9	; <UNPREDICTABLE>
    3700:	01050000 	mrseq	r0, (UNDEF: 5)
    3704:	0000b306 	andeq	fp, r0, r6, lsl #6
    3708:	027d0600 	rsbseq	r0, sp, #0, 12
    370c:	2a040000 	bcs	103714 <__RW_SIZE__+0x103190>
    3710:	00000182 	andeq	r0, r0, r2, lsl #3
    3714:	b1080105 	tstlt	r8, r5, lsl #2
    3718:	05000000 	streq	r0, [r0, #-0]
    371c:	01a30502 			; <UNDEFINED> instruction: 0x01a30502
    3720:	da060000 	ble	183728 <__RW_SIZE__+0x1831a4>
    3724:	04000002 	streq	r0, [r0], #-2
    3728:	00019b36 	andeq	r9, r1, r6, lsr fp
    372c:	07020500 	streq	r0, [r2, -r0, lsl #10]
    3730:	00000089 	andeq	r0, r0, r9, lsl #1
    3734:	05050405 	streq	r0, [r5, #-1029]	; 0xfffffbfb
    3738:	06000000 	streq	r0, [r0], -r0
    373c:	000001b9 			; <UNDEFINED> instruction: 0x000001b9
    3740:	01b45004 			; <UNDEFINED> instruction: 0x01b45004
    3744:	04050000 	streq	r0, [r5], #-0
    3748:	0000e707 	andeq	lr, r0, r7, lsl #14
    374c:	05080500 	streq	r0, [r8, #-1280]	; 0xfffffb00
    3750:	00000000 	andeq	r0, r0, r0
    3754:	e2070805 	and	r0, r7, #327680	; 0x50000
    3758:	07000000 	streq	r0, [r0, -r0]
    375c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    3760:	04050074 	streq	r0, [r5], #-116	; 0xffffff8c
    3764:	0000ec07 	andeq	lr, r0, r7, lsl #24
    3768:	0e040800 	cdpeq	8, 0, cr0, cr4, cr0, {0}
    376c:	02858402 	addeq	r8, r5, #33554432	; 0x2000000
    3770:	f9090000 			; <UNDEFINED> instruction: 0xf9090000
    3774:	02000004 	andeq	r0, r0, #4
    3778:	00029c86 	andeq	r9, r2, r6, lsl #25
    377c:	99090000 	stmdbls	r9, {}	; <UNPREDICTABLE>
    3780:	02000003 	andeq	r0, r0, #3
    3784:	0002a187 	andeq	sl, r2, r7, lsl #3
    3788:	66092000 	strvs	r2, [r9], -r0
    378c:	02000007 	andeq	r0, r0, #7
    3790:	0002b188 	andeq	fp, r2, r8, lsl #3
    3794:	0c098000 	stceq	0, cr8, [r9], {-0}
    3798:	02000005 	andeq	r0, r0, #5
    379c:	0002a189 	andeq	sl, r2, r9, lsl #3
    37a0:	980aa000 	stmdals	sl, {sp, pc}
    37a4:	02000007 	andeq	r0, r0, #7
    37a8:	0002b68a 	andeq	fp, r2, sl, lsl #13
    37ac:	0a010000 	beq	437b4 <__RW_SIZE__+0x43230>
    37b0:	000003a9 	andeq	r0, r0, r9, lsr #7
    37b4:	02a18b02 	adceq	r8, r1, #2048	; 0x800
    37b8:	01200000 	teqeq	r0, r0
    37bc:	0006560a 	andeq	r5, r6, sl, lsl #12
    37c0:	bb8c0200 	bllt	fe303fc8 <MSP_BASE+0xde2fefc8>
    37c4:	80000002 	andhi	r0, r0, r2
    37c8:	03b30a01 			; <UNDEFINED> instruction: 0x03b30a01
    37cc:	8d020000 	stchi	0, cr0, [r2, #-0]
    37d0:	000002a1 	andeq	r0, r0, r1, lsr #5
    37d4:	750a01a0 	strvc	r0, [sl, #-416]	; 0xfffffe60
    37d8:	02000007 	andeq	r0, r0, #7
    37dc:	0002c08e 	andeq	ip, r2, lr, lsl #1
    37e0:	0a020000 	beq	837e8 <__RW_SIZE__+0x83264>
    37e4:	000003bd 			; <UNDEFINED> instruction: 0x000003bd
    37e8:	02c58f02 	sbceq	r8, r5, #2, 30
    37ec:	02200000 	eoreq	r0, r0, #0
    37f0:	0050490b 	subseq	r4, r0, fp, lsl #18
    37f4:	02e59002 	rsceq	r9, r5, #2
    37f8:	03000000 	movweq	r0, #0
    37fc:	0003c70a 	andeq	ip, r3, sl, lsl #14
    3800:	ea910200 	b	fe444008 <MSP_BASE+0xde43f008>
    3804:	f0000002 			; <UNDEFINED> instruction: 0xf0000002
    3808:	06880a03 	streq	r0, [r8], r3, lsl #20
    380c:	92020000 	andls	r0, r2, #0
    3810:	000002fb 	strdeq	r0, [r0], -fp
    3814:	0c000e00 	stceq	14, cr0, [r0], {-0}
    3818:	000001a9 	andeq	r0, r0, r9, lsr #3
    381c:	00000295 	muleq	r0, r5, r2
    3820:	0002950d 	andeq	r9, r2, sp, lsl #10
    3824:	05000700 	streq	r0, [r0, #-1792]	; 0xfffff900
    3828:	018f0704 	orreq	r0, pc, r4, lsl #14
    382c:	850e0000 	strhi	r0, [lr, #-0]
    3830:	0c000002 	stceq	0, cr0, [r0], {2}
    3834:	000001a9 	andeq	r0, r0, r9, lsr #3
    3838:	000002b1 			; <UNDEFINED> instruction: 0x000002b1
    383c:	0002950d 	andeq	r9, r2, sp, lsl #10
    3840:	0e001700 	cdpeq	7, 0, cr1, cr0, cr0, {0}
    3844:	00000285 	andeq	r0, r0, r5, lsl #5
    3848:	0002850e 	andeq	r8, r2, lr, lsl #10
    384c:	02850e00 	addeq	r0, r5, #0, 28
    3850:	850e0000 	strhi	r0, [lr, #-0]
    3854:	0c000002 	stceq	0, cr0, [r0], {2}
    3858:	000001a9 	andeq	r0, r0, r9, lsr #3
    385c:	000002d5 	ldrdeq	r0, [r0], -r5
    3860:	0002950d 	andeq	r9, r2, sp, lsl #10
    3864:	0c003700 	stceq	7, cr3, [r0], {-0}
    3868:	00000177 	andeq	r0, r0, r7, ror r1
    386c:	000002e5 	andeq	r0, r0, r5, ror #5
    3870:	0002950d 	andeq	r9, r2, sp, lsl #10
    3874:	0e00ef00 	cdpeq	15, 0, cr14, cr0, cr0, {0}
    3878:	000002d5 	ldrdeq	r0, [r0], -r5
    387c:	0001a90c 	andeq	sl, r1, ip, lsl #18
    3880:	0002fb00 	andeq	pc, r2, r0, lsl #22
    3884:	02950f00 	addseq	r0, r5, #0, 30
    3888:	02830000 	addeq	r0, r3, #0
    388c:	01a90e00 			; <UNDEFINED> instruction: 0x01a90e00
    3890:	e0060000 	and	r0, r6, r0
    3894:	02000006 	andeq	r0, r0, #6
    3898:	0001d793 	muleq	r1, r3, r7
    389c:	01900e00 	orrseq	r0, r0, r0, lsl #28
    38a0:	1c100000 	ldcne	0, cr0, [r0], {-0}
    38a4:	7503e903 	strvc	lr, [r3, #-2307]	; 0xfffff6fd
    38a8:	11000003 	tstne	r0, r3
    38ac:	004c5243 	subeq	r5, ip, r3, asr #4
    38b0:	fb03eb03 	blx	fe4c6 <__RW_SIZE__+0xfdf42>
    38b4:	00000002 	andeq	r0, r0, r2
    38b8:	48524311 	ldmdami	r2, {r0, r4, r8, r9, lr}^
    38bc:	03ec0300 	mvneq	r0, #0, 6
    38c0:	000002fb 	strdeq	r0, [r0], -fp
    38c4:	44491104 	strbmi	r1, [r9], #-260	; 0xfffffefc
    38c8:	ed030052 	stc	0, cr0, [r3, #-328]	; 0xfffffeb8
    38cc:	0002fb03 	andeq	pc, r2, r3, lsl #22
    38d0:	4f110800 	svcmi	0x00110800
    38d4:	03005244 	movweq	r5, #580	; 0x244
    38d8:	02fb03ee 	rscseq	r0, fp, #-1207959549	; 0xb8000003
    38dc:	120c0000 	andne	r0, ip, #0
    38e0:	0000036a 	andeq	r0, r0, sl, ror #6
    38e4:	fb03ef03 	blx	ff4fa <__RW_SIZE__+0xfef76>
    38e8:	10000002 	andne	r0, r0, r2
    38ec:	52524211 	subspl	r4, r2, #268435457	; 0x10000001
    38f0:	03f00300 	mvnseq	r0, #0, 6
    38f4:	000002fb 	strdeq	r0, [r0], -fp
    38f8:	04051214 	streq	r1, [r5], #-532	; 0xfffffdec
    38fc:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    3900:	0002fb03 	andeq	pc, r2, r3, lsl #22
    3904:	04001800 	streq	r1, [r0], #-2048	; 0xfffff800
    3908:	00000317 	andeq	r0, r0, r7, lsl r3
    390c:	1003f203 	andne	pc, r3, r3, lsl #4
    3910:	10000003 	andne	r0, r0, r3
    3914:	04340328 	ldrteq	r0, [r4], #-808	; 0xfffffcd8
    3918:	0000040c 	andeq	r0, r0, ip, lsl #8
    391c:	00524311 	subseq	r4, r2, r1, lsl r3
    3920:	fb043603 	blx	111136 <__RW_SIZE__+0x110bb2>
    3924:	00000002 	andeq	r0, r0, r2
    3928:	00001312 	andeq	r1, r0, r2, lsl r3
    392c:	04370300 	ldrteq	r0, [r7], #-768	; 0xfffffd00
    3930:	000002fb 	strdeq	r0, [r0], -fp
    3934:	49431104 	stmdbmi	r3, {r2, r8, ip}^
    3938:	38030052 	stmdacc	r3, {r1, r4, r6}
    393c:	0002fb04 	andeq	pc, r2, r4, lsl #22
    3940:	d9120800 	ldmdble	r2, {fp}
    3944:	03000000 	movweq	r0, #0
    3948:	02fb0439 	rscseq	r0, fp, #956301312	; 0x39000000
    394c:	120c0000 	andne	r0, ip, #0
    3950:	000000c8 	andeq	r0, r0, r8, asr #1
    3954:	fb043a03 	blx	11216a <__RW_SIZE__+0x111be6>
    3958:	10000002 	andne	r0, r0, r2
    395c:	00002612 	andeq	r2, r0, r2, lsl r6
    3960:	043b0300 	ldrteq	r0, [fp], #-768	; 0xfffffd00
    3964:	000002fb 	strdeq	r0, [r0], -fp
    3968:	00321214 	eorseq	r1, r2, r4, lsl r2
    396c:	3c030000 	stccc	0, cr0, [r3], {-0}
    3970:	0002fb04 	andeq	pc, r2, r4, lsl #22
    3974:	d1121800 	tstle	r2, r0, lsl #16
    3978:	03000000 	movweq	r0, #0
    397c:	02fb043d 	rscseq	r0, fp, #1023410176	; 0x3d000000
    3980:	121c0000 	andsne	r0, ip, #0
    3984:	0000000e 	andeq	r0, r0, lr
    3988:	fb043e03 	blx	11319e <__RW_SIZE__+0x112c1a>
    398c:	20000002 	andcs	r0, r0, r2
    3990:	52534311 	subspl	r4, r3, #1140850688	; 0x44000000
    3994:	043f0300 	ldrteq	r0, [pc], #-768	; 399c <__RW_SIZE__+0x3418>
    3998:	000002fb 	strdeq	r0, [r0], -fp
    399c:	ad040024 	stcge	0, cr0, [r4, #-144]	; 0xffffff70
    39a0:	03000001 	movweq	r0, #1
    39a4:	0381044a 	orreq	r0, r1, #1241513984	; 0x4a000000
    39a8:	1c100000 	ldcne	0, cr0, [r0], {-0}
    39ac:	d604d203 	strle	sp, [r4], -r3, lsl #4
    39b0:	11000004 	tstne	r0, r4
    39b4:	03005253 	movweq	r5, #595	; 0x253
    39b8:	030b04d4 	movweq	r0, #46292	; 0xb4d4
    39bc:	12000000 	andne	r0, r0, #0
    39c0:	00000399 	muleq	r0, r9, r3
    39c4:	9004d503 	andls	sp, r4, r3, lsl #10
    39c8:	02000001 	andeq	r0, r0, #1
    39cc:	00524411 	subseq	r4, r2, r1, lsl r4
    39d0:	0b04d603 	bleq	1391e4 <__RW_SIZE__+0x138c60>
    39d4:	04000003 	streq	r0, [r0], #-3
    39d8:	00033a12 	andeq	r3, r3, r2, lsl sl
    39dc:	04d70300 	ldrbeq	r0, [r7], #768	; 0x300
    39e0:	00000190 	muleq	r0, r0, r1
    39e4:	52421106 	subpl	r1, r2, #-2147483647	; 0x80000001
    39e8:	d8030052 	stmdale	r3, {r1, r4, r6}
    39ec:	00030b04 	andeq	r0, r3, r4, lsl #22
    39f0:	a9120800 	ldmdbge	r2, {fp}
    39f4:	03000003 	movweq	r0, #3
    39f8:	019004d9 			; <UNDEFINED> instruction: 0x019004d9
    39fc:	110a0000 	mrsne	r0, (UNDEF: 10)
    3a00:	00315243 	eorseq	r5, r1, r3, asr #4
    3a04:	0b04da03 	bleq	13a218 <__RW_SIZE__+0x139c94>
    3a08:	0c000003 	stceq	0, cr0, [r0], {3}
    3a0c:	0003b312 	andeq	fp, r3, r2, lsl r3
    3a10:	04db0300 	ldrbeq	r0, [fp], #768	; 0x300
    3a14:	00000190 	muleq	r0, r0, r1
    3a18:	5243110e 	subpl	r1, r3, #-2147483645	; 0x80000003
    3a1c:	dc030032 	stcle	0, cr0, [r3], {50}	; 0x32
    3a20:	00030b04 	andeq	r0, r3, r4, lsl #22
    3a24:	bd121000 	ldclt	0, cr1, [r2, #-0]
    3a28:	03000003 	movweq	r0, #3
    3a2c:	019004dd 			; <UNDEFINED> instruction: 0x019004dd
    3a30:	11120000 	tstne	r2, r0
    3a34:	00335243 	eorseq	r5, r3, r3, asr #4
    3a38:	0b04de03 	bleq	13b24c <__RW_SIZE__+0x13acc8>
    3a3c:	14000003 	strne	r0, [r0], #-3
    3a40:	0003c712 	andeq	ip, r3, r2, lsl r7
    3a44:	04df0300 	ldrbeq	r0, [pc], #768	; 3a4c <__RW_SIZE__+0x34c8>
    3a48:	00000190 	muleq	r0, r0, r1
    3a4c:	0aca1216 	beq	ff2882ac <MSP_BASE+0xdf2832ac>
    3a50:	e0030000 	and	r0, r3, r0
    3a54:	00030b04 	andeq	r0, r3, r4, lsl #22
    3a58:	d1121800 	tstle	r2, r0, lsl #16
    3a5c:	03000003 	movweq	r0, #3
    3a60:	019004e1 	orrseq	r0, r0, r1, ror #9
    3a64:	001a0000 	andseq	r0, sl, r0
    3a68:	000bd804 	andeq	sp, fp, r4, lsl #16
    3a6c:	04e20300 	strbteq	r0, [r2], #768	; 0x300
    3a70:	00000418 	andeq	r0, r0, r8, lsl r4
    3a74:	04140413 	ldreq	r0, [r4], #-1043	; 0xfffffbed
    3a78:	000004ea 	andeq	r0, r0, sl, ror #9
    3a7c:	ba080105 	blt	203e98 <__RW_SIZE__+0x203914>
    3a80:	14000000 	strne	r0, [r0], #-0
    3a84:	0004f704 	andeq	pc, r4, r4, lsl #14
    3a88:	04ea1500 	strbteq	r1, [sl], #1280	; 0x500
    3a8c:	24060000 	strcs	r0, [r6], #-0
    3a90:	05000010 	streq	r0, [r0, #-16]
    3a94:	00050728 	andeq	r0, r5, r8, lsr #14
    3a98:	0fc51600 	svceq	0x00c51600
    3a9c:	07040000 	streq	r0, [r4, -r0]
    3aa0:	00051e00 	andeq	r1, r5, r0, lsl #28
    3aa4:	10331700 	eorsne	r1, r3, r0, lsl #14
    3aa8:	04e20000 	strbteq	r0, [r2], #0
    3aac:	00000000 	andeq	r0, r0, r0
    3ab0:	000fc706 	andeq	ip, pc, r6, lsl #14
    3ab4:	fc620500 	stc2l	5, cr0, [r2], #-0
    3ab8:	18000004 	stmdane	r0, {r2}
    3abc:	00001001 	andeq	r1, r0, r1
    3ac0:	40012b01 	andmi	r2, r1, r1, lsl #22
    3ac4:	19000005 	stmdbne	r0, {r0, r2}
    3ac8:	01007470 	tsteq	r0, r0, ror r4
    3acc:	0004e42b 	andeq	lr, r4, fp, lsr #8
    3ad0:	b31a0000 	tstlt	sl, #0
    3ad4:	0100000f 	tsteq	r0, pc
    3ad8:	0004ea3e 	andeq	lr, r4, lr, lsr sl
    3adc:	e91b0100 	ldmdb	fp, {r8}
    3ae0:	02000005 	andeq	r0, r0, #5
    3ae4:	66030613 			; <UNDEFINED> instruction: 0x66030613
    3ae8:	1c000005 	stcne	0, cr0, [r0], {5}
    3aec:	000004a4 	andeq	r0, r0, r4, lsr #9
    3af0:	64061302 	strvs	r1, [r6], #-770	; 0xfffffcfe
    3af4:	00000001 	andeq	r0, r0, r1
    3af8:	0005321b 	andeq	r3, r5, fp, lsl r2
    3afc:	05de0200 	ldrbeq	r0, [lr, #512]	; 0x200
    3b00:	00058003 	andeq	r8, r5, r3
    3b04:	04a41c00 	strteq	r1, [r4], #3072	; 0xc00
    3b08:	de020000 	cdple	0, 0, cr0, cr2, cr0, {0}
    3b0c:	00016405 	andeq	r6, r1, r5, lsl #8
    3b10:	b91b0000 	ldmdblt	fp, {}	; <UNPREDICTABLE>
    3b14:	02000005 	andeq	r0, r0, #5
    3b18:	9a0305eb 	bls	c52cc <__RW_SIZE__+0xc4d48>
    3b1c:	1c000005 	stcne	0, cr0, [r0], {5}
    3b20:	000004a4 	andeq	r0, r0, r4, lsr #9
    3b24:	6405eb02 	strvs	lr, [r5], #-2818	; 0xfffff4fe
    3b28:	00000001 	andeq	r0, r0, r1
    3b2c:	0008a31d 	andeq	sl, r8, sp, lsl r3
    3b30:	40080100 	andmi	r0, r8, r0, lsl #2
    3b34:	b8080041 	stmdalt	r8, {r0, r6}
    3b38:	01000000 	mrseq	r0, (UNDEF: 0)
    3b3c:	0005ec9c 	muleq	r5, ip, ip
    3b40:	0ffc1e00 	svceq	0x00fc1e00
    3b44:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    3b48:	000001c9 	andeq	r0, r0, r9, asr #3
    3b4c:	00000a05 	andeq	r0, r0, r5, lsl #20
    3b50:	7669641f 			; <UNDEFINED> instruction: 0x7669641f
    3b54:	ec0a0100 	stfs	f0, [sl], {-0}
    3b58:	26000005 	strcs	r0, [r0], -r5
    3b5c:	2000000a 	andcs	r0, r0, sl
    3b60:	00001018 	andeq	r1, r0, r8, lsl r0
    3b64:	01d00b01 	bicseq	r0, r0, r1, lsl #22
    3b68:	0a3e0000 	beq	f83b70 <__RW_SIZE__+0xf835ec>
    3b6c:	13200000 	teqne	r0, #0
    3b70:	01000010 	tsteq	r0, r0, lsl r0
    3b74:	0001d00c 	andeq	sp, r1, ip
    3b78:	000a7900 	andeq	r7, sl, r0, lsl #18
    3b7c:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    3b80:	000fd604 	andeq	sp, pc, r4, lsl #12
    3b84:	0fdd1800 	svceq	0x00dd1800
    3b88:	1f010000 	svcne	0x00010000
    3b8c:	00060b01 	andeq	r0, r6, r1, lsl #22
    3b90:	08c62100 	stmiaeq	r6, {r8, sp}^
    3b94:	1f010000 	svcne	0x00010000
    3b98:	000004ea 	andeq	r0, r0, sl, ror #9
    3b9c:	05f32200 	ldrbeq	r2, [r3, #512]!	; 0x200
    3ba0:	41f80000 	mvnsmi	r0, r0
    3ba4:	003a0800 	eorseq	r0, sl, r0, lsl #16
    3ba8:	9c010000 	stcls	0, cr0, [r1], {-0}
    3bac:	00000626 	andeq	r0, r0, r6, lsr #12
    3bb0:	0005ff23 	andeq	pc, r5, r3, lsr #30
    3bb4:	00500100 	subseq	r0, r0, r0, lsl #2
    3bb8:	00052922 	andeq	r2, r5, r2, lsr #18
    3bbc:	00423400 	subeq	r3, r2, r0, lsl #8
    3bc0:	00004208 	andeq	r4, r0, r8, lsl #4
    3bc4:	5c9c0100 	ldfpls	f0, [ip], {0}
    3bc8:	24000006 	strcs	r0, [r0], #-6
    3bcc:	00000535 	andeq	r0, r0, r5, lsr r5
    3bd0:	00000a9b 	muleq	r0, fp, sl
    3bd4:	0005f325 	andeq	pc, r5, r5, lsr #6
    3bd8:	00423a00 	subeq	r3, r2, r0, lsl #20
    3bdc:	0000e808 	andeq	lr, r0, r8, lsl #16
    3be0:	242f0100 	strtcs	r0, [pc], #-256	; 3be8 <__RW_SIZE__+0x3664>
    3be4:	000005ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    3be8:	00000ad3 	ldrdeq	r0, [r0], -r3
    3bec:	5a260000 	bpl	983bf4 <__RW_SIZE__+0x983670>
    3bf0:	01000008 	tsteq	r0, r8
    3bf4:	00427833 	subeq	r7, r2, r3, lsr r8
    3bf8:	00006008 	andeq	r6, r0, r8
    3bfc:	f29c0100 	vaddw.s16	q0, q6, d0
    3c00:	27000006 	strcs	r0, [r0, -r6]
    3c04:	00746d66 	rsbseq	r6, r4, r6, ror #26
    3c08:	04e43301 	strbteq	r3, [r4], #769	; 0x301
    3c0c:	91020000 	mrsls	r0, (UNDEF: 2)
    3c10:	61292870 	teqvs	r9, r0, ror r8
    3c14:	35010070 	strcc	r0, [r1, #-112]	; 0xffffff90
    3c18:	0000051e 	andeq	r0, r0, lr, lsl r5
    3c1c:	7ddc9103 	ldfvcp	f1, [ip, #12]
    3c20:	00101d2a 	andseq	r1, r0, sl, lsr #26
    3c24:	f2360100 	vrhadd.s<illegal width 64>	d0, d6, d0
    3c28:	03000006 	movweq	r0, #6
    3c2c:	2b7de091 	blcs	1f7be78 <__RW_SIZE__+0x1f7b8f4>
    3c30:	00000529 	andeq	r0, r0, r9, lsr #10
    3c34:	0800428e 	stmdaeq	r0, {r1, r2, r3, r7, r9, lr}
    3c38:	00000100 	andeq	r0, r0, r0, lsl #2
    3c3c:	06d33a01 	ldrbeq	r3, [r3], r1, lsl #20
    3c40:	35240000 	strcc	r0, [r4, #-0]!
    3c44:	f1000005 	cps	#5
    3c48:	2500000a 	strcs	r0, [r0, #-10]
    3c4c:	000005f3 	strdeq	r0, [r0], -r3
    3c50:	08004294 	stmdaeq	r0, {r2, r4, r7, r9, lr}
    3c54:	00000118 	andeq	r0, r0, r8, lsl r1
    3c58:	ff242f01 			; <UNDEFINED> instruction: 0xff242f01
    3c5c:	37000005 	strcc	r0, [r0, -r5]
    3c60:	0000000b 	andeq	r0, r0, fp
    3c64:	428e2c00 	addmi	r2, lr, #0, 24
    3c68:	07c60800 	strbeq	r0, [r6, r0, lsl #16]
    3c6c:	012d0000 	teqeq	sp, r0
    3c70:	54910252 	ldrpl	r0, [r1], #594	; 0x252
    3c74:	0351012d 	cmpeq	r1, #1073741835	; 0x4000000b
    3c78:	2d065091 	stccs	0, cr5, [r6, #-580]	; 0xfffffdbc
    3c7c:	91035001 	tstls	r3, r1
    3c80:	00007dc0 	andeq	r7, r0, r0, asr #27
    3c84:	0004ea0c 	andeq	lr, r4, ip, lsl #20
    3c88:	00070200 	andeq	r0, r7, r0, lsl #4
    3c8c:	02950d00 	addseq	r0, r5, #0, 26
    3c90:	00ff0000 	rscseq	r0, pc, r0
    3c94:	0005402e 	andeq	r4, r5, lr, lsr #32
    3c98:	0042d800 	subeq	sp, r2, r0, lsl #16
    3c9c:	00001608 	andeq	r1, r0, r8, lsl #12
    3ca0:	2f9c0100 	svccs	0x009c0100
    3ca4:	00000fed 	andeq	r0, r0, sp, ror #31
    3ca8:	04ea4b01 	strbteq	r4, [sl], #2817	; 0xb01
    3cac:	42f00000 	rscsmi	r0, r0, #0
    3cb0:	00180800 	andseq	r0, r8, r0, lsl #16
    3cb4:	9c010000 	stcls	0, cr0, [r1], {-0}
    3cb8:	00000744 	andeq	r0, r0, r4, asr #14
    3cbc:	00787230 	rsbseq	r7, r8, r0, lsr r2
    3cc0:	04ea4d01 	strbteq	r4, [sl], #3329	; 0xd01
    3cc4:	40310000 	eorsmi	r0, r1, r0
    3cc8:	f0000005 			; <UNDEFINED> instruction: 0xf0000005
    3ccc:	12080042 	andne	r0, r8, #66	; 0x42
    3cd0:	01000000 	mrseq	r0, (UNDEF: 0)
    3cd4:	c626004f 	strtgt	r0, [r6], -pc, asr #32
    3cd8:	01000009 	tsteq	r0, r9
    3cdc:	00430854 	subeq	r0, r3, r4, asr r8
    3ce0:	00004208 	andeq	r4, r0, r8, lsl #4
    3ce4:	b59c0100 	ldrlt	r0, [ip, #256]	; 0x100
    3ce8:	32000007 	andcc	r0, r0, #7
    3cec:	01006e65 	tsteq	r0, r5, ror #28
    3cf0:	0001c954 	andeq	ip, r1, r4, asr r9
    3cf4:	000b5500 	andeq	r5, fp, r0, lsl #10
    3cf8:	05802b00 	streq	r2, [r0, #2816]	; 0xb00
    3cfc:	43140000 	tstmi	r4, #0
    3d00:	01300800 	teqeq	r0, r0, lsl #16
    3d04:	60010000 	andvs	r0, r1, r0
    3d08:	00000784 	andeq	r0, r0, r4, lsl #15
    3d0c:	00058d24 	andeq	r8, r5, r4, lsr #26
    3d10:	000b8f00 	andeq	r8, fp, r0, lsl #30
    3d14:	4c2b0000 	stcmi	0, cr0, [fp], #-0
    3d18:	30000005 	andcc	r0, r0, r5
    3d1c:	50080043 	andpl	r0, r8, r3, asr #32
    3d20:	01000001 	tsteq	r0, r1
    3d24:	00079e59 	andeq	r9, r7, r9, asr lr
    3d28:	05593300 	ldrbeq	r3, [r9, #-768]	; 0xfffffd00
    3d2c:	00250000 	eoreq	r0, r5, r0
    3d30:	00056634 	andeq	r6, r5, r4, lsr r6
    3d34:	00434600 	subeq	r4, r3, r0, lsl #12
    3d38:	00000408 	andeq	r0, r0, r8, lsl #8
    3d3c:	335a0100 	cmpcc	sl, #0, 2
    3d40:	00000573 	andeq	r0, r0, r3, ror r5
    3d44:	35000025 	strcc	r0, [r0, #-37]	; 0xffffffdb
    3d48:	0000009c 	muleq	r0, ip, r0
    3d4c:	c106ce02 	tstgt	r6, r2, lsl #28
    3d50:	0e000007 	cdpeq	0, 0, cr0, cr0, cr7, {0}
    3d54:	000001c9 	andeq	r0, r0, r9, asr #3
    3d58:	00103836 	andseq	r3, r0, r6, lsr r8
    3d5c:	c9dc0600 	ldmibgt	ip, {r9, sl}^
    3d60:	37000001 	strcc	r0, [r0, -r1]
    3d64:	000004e4 	andeq	r0, r0, r4, ror #9
    3d68:	0004f137 	andeq	pc, r4, r7, lsr r1	; <UNPREDICTABLE>
    3d6c:	04fc3700 	ldrbteq	r3, [ip], #1792	; 0x700
    3d70:	00000000 	andeq	r0, r0, r0
    3d74:	00000073 	andeq	r0, r0, r3, ror r0
    3d78:	10fe0002 	rscsne	r0, lr, r2
    3d7c:	01040000 	mrseq	r0, (UNDEF: 4)
    3d80:	00000bfb 	strdeq	r0, [r0], -fp
    3d84:	08003000 	stmdaeq	r0, {ip, sp}
    3d88:	080031ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, ip, sp}
    3d8c:	30747263 	rsbscc	r7, r4, r3, ror #4
    3d90:	4400732e 	strmi	r7, [r0], #-814	; 0xfffffcd2
    3d94:	61645c3a 	cmnvs	r4, sl, lsr ip
    3d98:	6e756865 	cdpvs	8, 7, cr6, cr5, cr5, {3}
    3d9c:	6972465c 	ldmdbvs	r2!, {r2, r3, r4, r6, r9, sl, lr}^
    3da0:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
    3da4:	6f725065 	svcvs	0x00725065
    3da8:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    3dac:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
    3db0:	bfdfc65c 	svclt	0x00dfc65c
    3db4:	5feebefe 	svcpl	0x00eebefe
    3db8:	c0bdc7bd 	ldrhtgt	ip, [sp], sp
    3dbc:	e1b7dac0 			; <UNDEFINED> instruction: 0xe1b7dac0
    3dc0:	42414c28 	submi	r4, r1, #40, 24	; 0x2800
    3dc4:	53565c29 	cmppl	r6, #10496	; 0x2900
    3dc8:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
    3dcc:	6e694d5c 	mcrvs	13, 3, r4, cr9, cr12, {2}
    3dd0:	72505f69 	subsvc	r5, r0, #420	; 0x1a4
    3dd4:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    3dd8:	4e470074 	mcrmi	0, 2, r0, cr7, cr4, {3}
    3ddc:	53412055 	movtpl	r2, #4181	; 0x1055
    3de0:	322e3220 	eorcc	r3, lr, #32, 4
    3de4:	32352e33 	eorscc	r2, r5, #816	; 0x330
    3de8:	Address 0x00003de8 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
       8:	110e1b0e 	tstne	lr, lr, lsl #22
       c:	10061201 	andne	r1, r6, r1, lsl #4
      10:	02000017 	andeq	r0, r0, #23
      14:	0b0b0024 	bleq	2c00ac <__RW_SIZE__+0x2bfb28>
      18:	0e030b3e 	vmoveq.16	d3[0], r0
      1c:	16030000 	strne	r0, [r3], -r0
      20:	3a0e0300 	bcc	380c28 <__RW_SIZE__+0x3806a4>
      24:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      28:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
      2c:	0b0b0024 	bleq	2c00c4 <__RW_SIZE__+0x2bfb40>
      30:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
      34:	35050000 	strcc	r0, [r5, #-0]
      38:	00134900 	andseq	r4, r3, r0, lsl #18
      3c:	01130600 	tsteq	r3, r0, lsl #12
      40:	0b3a0b0b 	bleq	e82c74 <__RW_SIZE__+0xe826f0>
      44:	1301053b 	movwne	r0, #5435	; 0x153b
      48:	0d070000 	stceq	0, cr0, [r7, #-0]
      4c:	3a080300 	bcc	200c54 <__RW_SIZE__+0x2006d0>
      50:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
      54:	000b3813 	andeq	r3, fp, r3, lsl r8
      58:	000d0800 	andeq	r0, sp, r0, lsl #16
      5c:	0b3a0e03 	bleq	e83870 <__RW_SIZE__+0xe832ec>
      60:	1349053b 	movtne	r0, #38203	; 0x953b
      64:	00000b38 	andeq	r0, r0, r8, lsr fp
      68:	03001609 	movweq	r1, #1545	; 0x609
      6c:	3b0b3a0e 	blcc	2ce8ac <__RW_SIZE__+0x2ce328>
      70:	00134905 	andseq	r4, r3, r5, lsl #18
      74:	002e0a00 	eoreq	r0, lr, r0, lsl #20
      78:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
      7c:	0b3b0b3a 	bleq	ec2d6c <__RW_SIZE__+0xec27e8>
      80:	01111927 	tsteq	r1, r7, lsr #18
      84:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
      88:	00194297 	mulseq	r9, r7, r2
      8c:	00340b00 	eorseq	r0, r4, r0, lsl #22
      90:	0b3a0e03 	bleq	e838a4 <__RW_SIZE__+0xe83320>
      94:	1349053b 	movtne	r0, #38203	; 0x953b
      98:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
      9c:	01000000 	mrseq	r0, (UNDEF: 0)
      a0:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
      a4:	0e030b13 	vmoveq.32	d3[0], r0
      a8:	17550e1b 	smmlane	r5, fp, lr, r0
      ac:	17100111 			; <UNDEFINED> instruction: 0x17100111
      b0:	24020000 	strcs	r0, [r2], #-0
      b4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
      b8:	000e030b 	andeq	r0, lr, fp, lsl #6
      bc:	00160300 	andseq	r0, r6, r0, lsl #6
      c0:	0b3a0e03 	bleq	e838d4 <__RW_SIZE__+0xe83350>
      c4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
      c8:	24040000 	strcs	r0, [r4], #-0
      cc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
      d0:	0008030b 	andeq	r0, r8, fp, lsl #6
      d4:	012e0500 	teqeq	lr, r0, lsl #10
      d8:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
      dc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      e0:	13491927 	movtne	r1, #39207	; 0x9927
      e4:	06120111 			; <UNDEFINED> instruction: 0x06120111
      e8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
      ec:	00130119 	andseq	r0, r3, r9, lsl r1
      f0:	00340600 	eorseq	r0, r4, r0, lsl #12
      f4:	0b3a0e03 	bleq	e83908 <__RW_SIZE__+0xe83384>
      f8:	1349053b 	movtne	r0, #38203	; 0x953b
      fc:	00001702 	andeq	r1, r0, r2, lsl #14
     100:	3f012e07 	svccc	0x00012e07
     104:	3a0e0319 	bcc	380d70 <__RW_SIZE__+0x3807ec>
     108:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     10c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     110:	97184006 	ldrls	r4, [r8, -r6]
     114:	13011942 	movwne	r1, #6466	; 0x1942
     118:	05080000 	streq	r0, [r8, #-0]
     11c:	3a0e0300 	bcc	380d24 <__RW_SIZE__+0x3807a0>
     120:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     124:	00180213 	andseq	r0, r8, r3, lsl r2
     128:	00050900 	andeq	r0, r5, r0, lsl #18
     12c:	0b3a0e03 	bleq	e83940 <__RW_SIZE__+0xe833bc>
     130:	1349053b 	movtne	r0, #38203	; 0x953b
     134:	00001702 	andeq	r1, r0, r2, lsl #14
     138:	0b000f0a 	bleq	3d68 <__RW_SIZE__+0x37e4>
     13c:	0013490b 	andseq	r4, r3, fp, lsl #18
     140:	012e0b00 	teqeq	lr, r0, lsl #22
     144:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     148:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     14c:	13491927 	movtne	r1, #39207	; 0x9927
     150:	06120111 			; <UNDEFINED> instruction: 0x06120111
     154:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     158:	00000019 	andeq	r0, r0, r9, lsl r0
     15c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     160:	030b130e 	movweq	r1, #45838	; 0xb30e
     164:	110e1b0e 	tstne	lr, lr, lsl #22
     168:	10061201 	andne	r1, r6, r1, lsl #4
     16c:	02000017 	andeq	r0, r0, #23
     170:	0b0b0024 	bleq	2c0208 <__RW_SIZE__+0x2bfc84>
     174:	0e030b3e 	vmoveq.16	d3[0], r0
     178:	16030000 	strne	r0, [r3], -r0
     17c:	3a0e0300 	bcc	380d84 <__RW_SIZE__+0x380800>
     180:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     184:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     188:	0b0b0024 	bleq	2c0220 <__RW_SIZE__+0x2bfc9c>
     18c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     190:	35050000 	strcc	r0, [r5, #-0]
     194:	00134900 	andseq	r4, r3, r0, lsl #18
     198:	01010600 	tsteq	r1, r0, lsl #12
     19c:	13011349 	movwne	r1, #4937	; 0x1349
     1a0:	21070000 	mrscs	r0, (UNDEF: 7)
     1a4:	2f134900 	svccs	0x00134900
     1a8:	0800000b 	stmdaeq	r0, {r0, r1, r3}
     1ac:	0b0b0113 	bleq	2c0600 <__RW_SIZE__+0x2c007c>
     1b0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     1b4:	00001301 	andeq	r1, r0, r1, lsl #6
     1b8:	03000d09 	movweq	r0, #3337	; 0xd09
     1bc:	3b0b3a08 	blcc	2ce9e4 <__RW_SIZE__+0x2ce460>
     1c0:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
     1c4:	0a00000b 	beq	1f8 <__ZI_SIZE__+0x19c>
     1c8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     1cc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     1d0:	0b381349 	bleq	e04efc <__RW_SIZE__+0xe04978>
     1d4:	160b0000 	strne	r0, [fp], -r0
     1d8:	3a0e0300 	bcc	380de0 <__RW_SIZE__+0x38085c>
     1dc:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     1e0:	0c000013 	stceq	0, cr0, [r0], {19}
     1e4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     1e8:	0b3a0e03 	bleq	e839fc <__RW_SIZE__+0xe83478>
     1ec:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     1f0:	06120111 			; <UNDEFINED> instruction: 0x06120111
     1f4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     1f8:	00130119 	andseq	r0, r3, r9, lsl r1
     1fc:	00050d00 	andeq	r0, r5, r0, lsl #26
     200:	0b3a0e03 	bleq	e83a14 <__RW_SIZE__+0xe83490>
     204:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     208:	00001702 	andeq	r1, r0, r2, lsl #14
     20c:	0300340e 	movweq	r3, #1038	; 0x40e
     210:	3b0b3a08 	blcc	2cea38 <__RW_SIZE__+0x2ce4b4>
     214:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     218:	0f000018 	svceq	0x00000018
     21c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     220:	0b3a0e03 	bleq	e83a34 <__RW_SIZE__+0xe834b0>
     224:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     228:	13010b20 	movwne	r0, #6944	; 0x1b20
     22c:	05100000 	ldreq	r0, [r0, #-0]
     230:	3a0e0300 	bcc	380e38 <__RW_SIZE__+0x3808b4>
     234:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     238:	11000013 	tstne	r0, r3, lsl r0
     23c:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
     240:	06120111 			; <UNDEFINED> instruction: 0x06120111
     244:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     248:	00130119 	andseq	r0, r3, r9, lsl r1
     24c:	00051200 	andeq	r1, r5, r0, lsl #4
     250:	17021331 	smladxne	r2, r1, r3, r1
     254:	1d130000 	ldcne	0, cr0, [r3, #-0]
     258:	11133101 	tstne	r3, r1, lsl #2
     25c:	58061201 	stmdapl	r6, {r0, r9, ip}
     260:	000b590b 	andeq	r5, fp, fp, lsl #18
     264:	00051400 	andeq	r1, r5, r0, lsl #8
     268:	0b1c1331 	bleq	704f34 <__RW_SIZE__+0x7049b0>
     26c:	34150000 	ldrcc	r0, [r5], #-0
     270:	3a0e0300 	bcc	380e78 <__RW_SIZE__+0x3808f4>
     274:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     278:	3c193f13 	ldccc	15, cr3, [r9], {19}
     27c:	00000019 	andeq	r0, r0, r9, lsl r0
     280:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     284:	030b130e 	movweq	r1, #45838	; 0xb30e
     288:	110e1b0e 	tstne	lr, lr, lsl #22
     28c:	10061201 	andne	r1, r6, r1, lsl #4
     290:	02000017 	andeq	r0, r0, #23
     294:	0e030104 	adfeqs	f0, f3, f4
     298:	0b3a0b0b 	bleq	e82ecc <__RW_SIZE__+0xe82948>
     29c:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     2a0:	28030000 	stmdacs	r3, {}	; <UNPREDICTABLE>
     2a4:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     2a8:	0400000d 	streq	r0, [r0], #-13
     2ac:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     2b0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     2b4:	00001349 	andeq	r1, r0, r9, asr #6
     2b8:	0b002405 	bleq	92d4 <__RW_SIZE__+0x8d50>
     2bc:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     2c0:	0600000e 	streq	r0, [r0], -lr
     2c4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     2c8:	0b3b0b3a 	bleq	ec2fb8 <__RW_SIZE__+0xec2a34>
     2cc:	00001349 	andeq	r1, r0, r9, asr #6
     2d0:	0b002407 	bleq	92f4 <__RW_SIZE__+0x8d70>
     2d4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     2d8:	08000008 	stmdaeq	r0, {r3}
     2dc:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
     2e0:	0b3b0b3a 	bleq	ec2fd0 <__RW_SIZE__+0xec2a4c>
     2e4:	00001301 	andeq	r1, r0, r1, lsl #6
     2e8:	03000d09 	movweq	r0, #3337	; 0xd09
     2ec:	3b0b3a0e 	blcc	2ceb2c <__RW_SIZE__+0x2ce5a8>
     2f0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     2f4:	0a00000b 	beq	328 <__ZI_SIZE__+0x2cc>
     2f8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     2fc:	0b3b0b3a 	bleq	ec2fec <__RW_SIZE__+0xec2a68>
     300:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
     304:	0d0b0000 	stceq	0, cr0, [fp, #-0]
     308:	3a080300 	bcc	200f10 <__RW_SIZE__+0x20098c>
     30c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     310:	00053813 	andeq	r3, r5, r3, lsl r8
     314:	01010c00 	tsteq	r1, r0, lsl #24
     318:	13011349 	movwne	r1, #4937	; 0x1349
     31c:	210d0000 	mrscs	r0, (UNDEF: 13)
     320:	2f134900 	svccs	0x00134900
     324:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
     328:	13490035 	movtne	r0, #36917	; 0x9035
     32c:	210f0000 	mrscs	r0, CPSR
     330:	2f134900 	svccs	0x00134900
     334:	10000005 	andne	r0, r0, r5
     338:	0b0b0113 	bleq	2c078c <__RW_SIZE__+0x2c0208>
     33c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     340:	00001301 	andeq	r1, r0, r1, lsl #6
     344:	03000d11 	movweq	r0, #3345	; 0xd11
     348:	3b0b3a08 	blcc	2ceb70 <__RW_SIZE__+0x2ce5ec>
     34c:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
     350:	1200000b 	andne	r0, r0, #11
     354:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     358:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     35c:	0b381349 	bleq	e05088 <__RW_SIZE__+0xe04b04>
     360:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
     364:	3a0e0300 	bcc	380f6c <__RW_SIZE__+0x3809e8>
     368:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     36c:	20134919 	andscs	r4, r3, r9, lsl r9
     370:	1400000b 	strne	r0, [r0], #-11
     374:	0e03012e 	adfeqsp	f0, f3, #0.5
     378:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     37c:	0b201927 	bleq	806820 <__RW_SIZE__+0x80629c>
     380:	00001301 	andeq	r1, r0, r1, lsl #6
     384:	03000515 	movweq	r0, #1301	; 0x515
     388:	3b0b3a0e 	blcc	2cebc8 <__RW_SIZE__+0x2ce644>
     38c:	00134905 	andseq	r4, r3, r5, lsl #18
     390:	002e1600 	eoreq	r1, lr, r0, lsl #12
     394:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     398:	0b3b0b3a 	bleq	ec3088 <__RW_SIZE__+0xec2b04>
     39c:	01111927 	tsteq	r1, r7, lsr #18
     3a0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     3a4:	00194297 	mulseq	r9, r7, r2
     3a8:	012e1700 	teqeq	lr, r0, lsl #14
     3ac:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     3b0:	0b3b0b3a 	bleq	ec30a0 <__RW_SIZE__+0xec2b1c>
     3b4:	13491927 	movtne	r1, #39207	; 0x9927
     3b8:	13010b20 	movwne	r0, #6944	; 0x1b20
     3bc:	34180000 	ldrcc	r0, [r8], #-0
     3c0:	3a080300 	bcc	200fc8 <__RW_SIZE__+0x200a44>
     3c4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     3c8:	19000013 	stmdbne	r0, {r0, r1, r4}
     3cc:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
     3d0:	06120111 			; <UNDEFINED> instruction: 0x06120111
     3d4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     3d8:	00130119 	andseq	r0, r3, r9, lsl r1
     3dc:	00341a00 	eorseq	r1, r4, r0, lsl #20
     3e0:	00001331 	andeq	r1, r0, r1, lsr r3
     3e4:	3100341b 	tstcc	r0, fp, lsl r4
     3e8:	00180213 	andseq	r0, r8, r3, lsl r2
     3ec:	001d1c00 	andseq	r1, sp, r0, lsl #24
     3f0:	01111331 	tsteq	r1, r1, lsr r3
     3f4:	0b580612 	bleq	1601c44 <__RW_SIZE__+0x16016c0>
     3f8:	00000b59 	andeq	r0, r0, r9, asr fp
     3fc:	3f012e1d 	svccc	0x00012e1d
     400:	3a0e0319 	bcc	38106c <__RW_SIZE__+0x380ae8>
     404:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     408:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     40c:	97184006 	ldrls	r4, [r8, -r6]
     410:	13011942 	movwne	r1, #6466	; 0x1942
     414:	1d1e0000 	ldcne	0, cr0, [lr, #-0]
     418:	11133101 	tstne	r3, r1, lsl #2
     41c:	58061201 	stmdapl	r6, {r0, r9, ip}
     420:	000b590b 	andeq	r5, fp, fp, lsl #18
     424:	010b1f00 	tsteq	fp, r0, lsl #30
     428:	06120111 			; <UNDEFINED> instruction: 0x06120111
     42c:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
     430:	03193f01 	tsteq	r9, #1, 30
     434:	3b0b3a0e 	blcc	2cec74 <__RW_SIZE__+0x2ce6f0>
     438:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     43c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     440:	97184006 	ldrls	r4, [r8, -r6]
     444:	13011942 	movwne	r1, #6466	; 0x1942
     448:	05210000 	streq	r0, [r1, #-0]!
     44c:	3a080300 	bcc	201054 <__RW_SIZE__+0x200ad0>
     450:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     454:	00170213 	andseq	r0, r7, r3, lsl r2
     458:	011d2200 	tsteq	sp, r0, lsl #4
     45c:	01521331 	cmpeq	r2, r1, lsr r3
     460:	0b581755 	bleq	16061bc <__RW_SIZE__+0x1605c38>
     464:	13010b59 	movwne	r0, #7001	; 0x1b59
     468:	05230000 	streq	r0, [r3, #-0]!
     46c:	02133100 	andseq	r3, r3, #0, 2
     470:	24000017 	strcs	r0, [r0], #-23	; 0xffffffe9
     474:	13310005 	teqne	r1, #5
     478:	00000b1c 	andeq	r0, r0, ip, lsl fp
     47c:	03003425 	movweq	r3, #1061	; 0x425
     480:	3b0b3a0e 	blcc	2cecc0 <__RW_SIZE__+0x2ce73c>
     484:	3f134905 	svccc	0x00134905
     488:	00193c19 	andseq	r3, r9, r9, lsl ip
     48c:	11010000 	mrsne	r0, (UNDEF: 1)
     490:	130e2501 	movwne	r2, #58625	; 0xe501
     494:	1b0e030b 	blne	3810c8 <__RW_SIZE__+0x380b44>
     498:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     49c:	00171006 	andseq	r1, r7, r6
     4a0:	00240200 	eoreq	r0, r4, r0, lsl #4
     4a4:	0b3e0b0b 	bleq	f830d8 <__RW_SIZE__+0xf82b54>
     4a8:	00000e03 	andeq	r0, r0, r3, lsl #28
     4ac:	03001603 	movweq	r1, #1539	; 0x603
     4b0:	3b0b3a0e 	blcc	2cecf0 <__RW_SIZE__+0x2ce76c>
     4b4:	0013490b 	andseq	r4, r3, fp, lsl #18
     4b8:	00240400 	eoreq	r0, r4, r0, lsl #8
     4bc:	0b3e0b0b 	bleq	f830f0 <__RW_SIZE__+0xf82b6c>
     4c0:	00000803 	andeq	r0, r0, r3, lsl #16
     4c4:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
     4c8:	06000013 			; <UNDEFINED> instruction: 0x06000013
     4cc:	0b0b0113 	bleq	2c0920 <__RW_SIZE__+0x2c039c>
     4d0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     4d4:	00001301 	andeq	r1, r0, r1, lsl #6
     4d8:	03000d07 	movweq	r0, #3335	; 0xd07
     4dc:	3b0b3a08 	blcc	2ced04 <__RW_SIZE__+0x2ce780>
     4e0:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
     4e4:	0800000b 	stmdaeq	r0, {r0, r1, r3}
     4e8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     4ec:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     4f0:	0b381349 	bleq	e0521c <__RW_SIZE__+0xe04c98>
     4f4:	16090000 	strne	r0, [r9], -r0
     4f8:	3a0e0300 	bcc	381100 <__RW_SIZE__+0x380b7c>
     4fc:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     500:	0a000013 	beq	554 <MSP_SIZE+0x154>
     504:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     508:	0b3a0e03 	bleq	e83d1c <__RW_SIZE__+0xe83798>
     50c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     510:	06120111 			; <UNDEFINED> instruction: 0x06120111
     514:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     518:	0b000019 	bleq	584 <__RW_SIZE__>
     51c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     520:	0b3a0e03 	bleq	e83d34 <__RW_SIZE__+0xe837b0>
     524:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     528:	06120111 			; <UNDEFINED> instruction: 0x06120111
     52c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     530:	00130119 	andseq	r0, r3, r9, lsl r1
     534:	00050c00 	andeq	r0, r5, r0, lsl #24
     538:	0b3a0803 	bleq	e8254c <__RW_SIZE__+0xe81fc8>
     53c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     540:	00001702 	andeq	r1, r0, r2, lsl #14
     544:	0300340d 	movweq	r3, #1037	; 0x40d
     548:	3b0b3a0e 	blcc	2ced88 <__RW_SIZE__+0x2ce804>
     54c:	3f134905 	svccc	0x00134905
     550:	00193c19 	andseq	r3, r9, r9, lsl ip
     554:	11010000 	mrsne	r0, (UNDEF: 1)
     558:	130e2501 	movwne	r2, #58625	; 0xe501
     55c:	1b0e030b 	blne	381190 <__RW_SIZE__+0x380c0c>
     560:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     564:	00171006 	andseq	r1, r7, r6
     568:	00240200 	eoreq	r0, r4, r0, lsl #4
     56c:	0b3e0b0b 	bleq	f831a0 <__RW_SIZE__+0xf82c1c>
     570:	00000e03 	andeq	r0, r0, r3, lsl #28
     574:	0b002403 	bleq	9588 <__RW_SIZE__+0x9004>
     578:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     57c:	04000008 	streq	r0, [r0], #-8
     580:	0b0b000f 	bleq	2c05c4 <__RW_SIZE__+0x2c0040>
     584:	00001349 	andeq	r1, r0, r9, asr #6
     588:	3f012e05 	svccc	0x00012e05
     58c:	3a0e0319 	bcc	3811f8 <__RW_SIZE__+0x380c74>
     590:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     594:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     598:	97184006 	ldrls	r4, [r8, -r6]
     59c:	13011942 	movwne	r1, #6466	; 0x1942
     5a0:	0b060000 	bleq	1805a8 <__RW_SIZE__+0x180024>
     5a4:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     5a8:	00130106 	andseq	r0, r3, r6, lsl #2
     5ac:	00340700 	eorseq	r0, r4, r0, lsl #14
     5b0:	0b3a0e03 	bleq	e83dc4 <__RW_SIZE__+0xe83840>
     5b4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     5b8:	00001702 	andeq	r1, r0, r2, lsl #14
     5bc:	01828908 	orreq	r8, r2, r8, lsl #18
     5c0:	31011100 	mrscc	r1, (UNDEF: 17)
     5c4:	09000013 	stmdbeq	r0, {r0, r1, r4}
     5c8:	01018289 	smlabbeq	r1, r9, r2, r8
     5cc:	13310111 	teqne	r1, #1073741828	; 0x40000004
     5d0:	00001301 	andeq	r1, r0, r1, lsl #6
     5d4:	01828a0a 	orreq	r8, r2, sl, lsl #20
     5d8:	91180200 	tstls	r8, r0, lsl #4
     5dc:	00001842 	andeq	r1, r0, r2, asr #16
     5e0:	0182890b 	orreq	r8, r2, fp, lsl #18
     5e4:	31011101 	tstcc	r1, r1, lsl #2
     5e8:	0c000013 	stceq	0, cr0, [r0], {19}
     5ec:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     5f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     5f4:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     5f8:	0000193c 	andeq	r1, r0, ip, lsr r9
     5fc:	4900350d 	stmdbmi	r0, {r0, r2, r3, r8, sl, ip, sp}
     600:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
     604:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     608:	0b3b0b3a 	bleq	ec32f8 <__RW_SIZE__+0xec2d74>
     60c:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     610:	00001802 	andeq	r1, r0, r2, lsl #16
     614:	0300340f 	movweq	r3, #1039	; 0x40f
     618:	3b0b3a0e 	blcc	2cee58 <__RW_SIZE__+0x2ce8d4>
     61c:	3f13490b 	svccc	0x0013490b
     620:	00193c19 	andseq	r3, r9, r9, lsl ip
     624:	002e1000 	eoreq	r1, lr, r0
     628:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     62c:	0b3b0b3a 	bleq	ec331c <__RW_SIZE__+0xec2d98>
     630:	13491927 	movtne	r1, #39207	; 0x9927
     634:	0000193c 	andeq	r1, r0, ip, lsr r9
     638:	3f012e11 	svccc	0x00012e11
     63c:	3a0e0319 	bcc	3812a8 <__RW_SIZE__+0x380d24>
     640:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     644:	01193c19 	tsteq	r9, r9, lsl ip
     648:	12000013 	andne	r0, r0, #19
     64c:	13490005 	movtne	r0, #36869	; 0x9005
     650:	18130000 	ldmdane	r3, {}	; <UNPREDICTABLE>
     654:	14000000 	strne	r0, [r0], #-0
     658:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     65c:	0b3a0e03 	bleq	e83e70 <__RW_SIZE__+0xe838ec>
     660:	193c0b3b 	ldmdbne	ip!, {r0, r1, r3, r4, r5, r8, r9, fp}
     664:	01000000 	mrseq	r0, (UNDEF: 0)
     668:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     66c:	0e030b13 	vmoveq.32	d3[0], r0
     670:	01110e1b 	tsteq	r1, fp, lsl lr
     674:	17100612 			; <UNDEFINED> instruction: 0x17100612
     678:	24020000 	strcs	r0, [r2], #-0
     67c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     680:	000e030b 	andeq	r0, lr, fp, lsl #6
     684:	00160300 	andseq	r0, r6, r0, lsl #6
     688:	0b3a0e03 	bleq	e83e9c <__RW_SIZE__+0xe83918>
     68c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     690:	24040000 	strcs	r0, [r4], #-0
     694:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     698:	0008030b 	andeq	r0, r8, fp, lsl #6
     69c:	00350500 	eorseq	r0, r5, r0, lsl #10
     6a0:	00001349 	andeq	r1, r0, r9, asr #6
     6a4:	0b011306 	bleq	452c4 <__RW_SIZE__+0x44d40>
     6a8:	3b0b3a0b 	blcc	2ceedc <__RW_SIZE__+0x2ce958>
     6ac:	0013010b 	andseq	r0, r3, fp, lsl #2
     6b0:	000d0700 	andeq	r0, sp, r0, lsl #14
     6b4:	0b3a0e03 	bleq	e83ec8 <__RW_SIZE__+0xe83944>
     6b8:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     6bc:	00000b38 	andeq	r0, r0, r8, lsr fp
     6c0:	03000d08 	movweq	r0, #3336	; 0xd08
     6c4:	3b0b3a08 	blcc	2ceeec <__RW_SIZE__+0x2ce968>
     6c8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     6cc:	0900000b 	stmdbeq	r0, {r0, r1, r3}
     6d0:	13490026 	movtne	r0, #36902	; 0x9026
     6d4:	010a0000 	mrseq	r0, (UNDEF: 10)
     6d8:	01134901 	tsteq	r3, r1, lsl #18
     6dc:	0b000013 	bleq	730 <__RW_SIZE__+0x1ac>
     6e0:	13490021 	movtne	r0, #36897	; 0x9021
     6e4:	00000b2f 	andeq	r0, r0, pc, lsr #22
     6e8:	0b01130c 	bleq	45320 <__RW_SIZE__+0x44d9c>
     6ec:	3b0b3a0b 	blcc	2cef20 <__RW_SIZE__+0x2ce99c>
     6f0:	00130105 	andseq	r0, r3, r5, lsl #2
     6f4:	000d0d00 	andeq	r0, sp, r0, lsl #26
     6f8:	0b3a0803 	bleq	e8270c <__RW_SIZE__+0xe82188>
     6fc:	1349053b 	movtne	r0, #38203	; 0x953b
     700:	00000b38 	andeq	r0, r0, r8, lsr fp
     704:	03000d0e 	movweq	r0, #3342	; 0xd0e
     708:	3b0b3a0e 	blcc	2cef48 <__RW_SIZE__+0x2ce9c4>
     70c:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
     710:	0f00000b 	svceq	0x0000000b
     714:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     718:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     71c:	00001349 	andeq	r1, r0, r9, asr #6
     720:	0b000f10 	bleq	4368 <__RW_SIZE__+0x3de4>
     724:	0013490b 	andseq	r4, r3, fp, lsl #18
     728:	002e1100 	eoreq	r1, lr, r0, lsl #2
     72c:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     730:	0b3b0b3a 	bleq	ec3420 <__RW_SIZE__+0xec2e9c>
     734:	0b201927 	bleq	806bd8 <__RW_SIZE__+0x806654>
     738:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
     73c:	03193f01 	tsteq	r9, #1, 30
     740:	3b0b3a0e 	blcc	2cef80 <__RW_SIZE__+0x2ce9fc>
     744:	2019270b 	andscs	r2, r9, fp, lsl #14
     748:	0013010b 	andseq	r0, r3, fp, lsl #2
     74c:	00051300 	andeq	r1, r5, r0, lsl #6
     750:	0b3a0e03 	bleq	e83f64 <__RW_SIZE__+0xe839e0>
     754:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     758:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
     75c:	03193f01 	tsteq	r9, #1, 30
     760:	3b0b3a0e 	blcc	2cefa0 <__RW_SIZE__+0x2cea1c>
     764:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     768:	97184006 	ldrls	r4, [r8, -r6]
     76c:	13011942 	movwne	r1, #6466	; 0x1942
     770:	89150000 	ldmdbhi	r5, {}	; <UNPREDICTABLE>
     774:	11010182 	smlabbne	r1, r2, r1, r0
     778:	01133101 	tsteq	r3, r1, lsl #2
     77c:	16000013 			; <UNDEFINED> instruction: 0x16000013
     780:	0001828a 	andeq	r8, r1, sl, lsl #5
     784:	42911802 	addsmi	r1, r1, #131072	; 0x20000
     788:	17000018 	smladne	r0, r8, r0, r0
     78c:	00018289 	andeq	r8, r1, r9, lsl #5
     790:	13310111 	teqne	r1, #1073741828	; 0x40000004
     794:	89180000 	ldmdbhi	r8, {}	; <UNPREDICTABLE>
     798:	11010182 	smlabbne	r1, r2, r1, r0
     79c:	19429501 	stmdbne	r2, {r0, r8, sl, ip, pc}^
     7a0:	00001331 	andeq	r1, r0, r1, lsr r3
     7a4:	3f012e19 	svccc	0x00012e19
     7a8:	3a0e0319 	bcc	381414 <__RW_SIZE__+0x380e90>
     7ac:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     7b0:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     7b4:	97184006 	ldrls	r4, [r8, -r6]
     7b8:	13011942 	movwne	r1, #6466	; 0x1942
     7bc:	051a0000 	ldreq	r0, [sl, #-0]
     7c0:	3a0e0300 	bcc	3813c8 <__RW_SIZE__+0x380e44>
     7c4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     7c8:	00170213 	andseq	r0, r7, r3, lsl r2
     7cc:	011d1b00 	tsteq	sp, r0, lsl #22
     7d0:	01521331 	cmpeq	r2, r1, lsr r3
     7d4:	0b581755 	bleq	1606530 <__RW_SIZE__+0x1605fac>
     7d8:	13010b59 	movwne	r0, #7001	; 0x1b59
     7dc:	051c0000 	ldreq	r0, [ip, #-0]
     7e0:	02133100 	andseq	r3, r3, #0, 2
     7e4:	1d000017 	stcne	0, cr0, [r0, #-92]	; 0xffffffa4
     7e8:	1331001d 	teqne	r1, #29
     7ec:	17550152 			; <UNDEFINED> instruction: 0x17550152
     7f0:	0b590b58 	bleq	1643558 <__RW_SIZE__+0x1642fd4>
     7f4:	891e0000 	ldmdbhi	lr, {}	; <UNPREDICTABLE>
     7f8:	11010182 	smlabbne	r1, r2, r1, r0
     7fc:	19429501 	stmdbne	r2, {r0, r8, sl, ip, pc}^
     800:	13011331 	movwne	r1, #4913	; 0x1331
     804:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
     808:	11133100 	tstne	r3, r0, lsl #2
     80c:	40061201 	andmi	r1, r6, r1, lsl #4
     810:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     814:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
     818:	11133101 	tstne	r3, r1, lsl #2
     81c:	40061201 	andmi	r1, r6, r1, lsl #4
     820:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     824:	00001301 	andeq	r1, r0, r1, lsl #6
     828:	03003421 	movweq	r3, #1057	; 0x421
     82c:	3b0b3a0e 	blcc	2cf06c <__RW_SIZE__+0x2ceae8>
     830:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     834:	22000017 	andcs	r0, r0, #23
     838:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     83c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     840:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     844:	0000193c 	andeq	r1, r0, ip, lsr r9
     848:	3f012e23 	svccc	0x00012e23
     84c:	3a0e0319 	bcc	3814b8 <__RW_SIZE__+0x380f34>
     850:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     854:	01193c19 	tsteq	r9, r9, lsl ip
     858:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
     85c:	13490005 	movtne	r0, #36869	; 0x9005
     860:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
     864:	03193f00 	tsteq	r9, #0, 30
     868:	3b0b3a0e 	blcc	2cf0a8 <__RW_SIZE__+0x2ceb24>
     86c:	3c19270b 	ldccc	7, cr2, [r9], {11}
     870:	26000019 			; <UNDEFINED> instruction: 0x26000019
     874:	00000018 	andeq	r0, r0, r8, lsl r0
     878:	3f012e27 	svccc	0x00012e27
     87c:	3a0e0319 	bcc	3814e8 <__RW_SIZE__+0x380f64>
     880:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     884:	00193c19 	andseq	r3, r9, r9, lsl ip
     888:	11010000 	mrsne	r0, (UNDEF: 1)
     88c:	130e2501 	movwne	r2, #58625	; 0xe501
     890:	1b0e030b 	blne	3814c4 <__RW_SIZE__+0x380f40>
     894:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     898:	00171006 	andseq	r1, r7, r6
     89c:	00240200 	eoreq	r0, r4, r0, lsl #4
     8a0:	0b3e0b0b 	bleq	f834d4 <__RW_SIZE__+0xf82f50>
     8a4:	00000e03 	andeq	r0, r0, r3, lsl #28
     8a8:	0b002403 	bleq	98bc <__RW_SIZE__+0x9338>
     8ac:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     8b0:	04000008 	streq	r0, [r0], #-8
     8b4:	0b0b000f 	bleq	2c08f8 <__RW_SIZE__+0x2c0374>
     8b8:	00001349 	andeq	r1, r0, r9, asr #6
     8bc:	3f012e05 	svccc	0x00012e05
     8c0:	3a0e0319 	bcc	38152c <__RW_SIZE__+0x380fa8>
     8c4:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     8c8:	11134919 	tstne	r3, r9, lsl r9
     8cc:	40061201 	andmi	r1, r6, r1, lsl #4
     8d0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     8d4:	00001301 	andeq	r1, r0, r1, lsl #6
     8d8:	03000506 	movweq	r0, #1286	; 0x506
     8dc:	3b0b3a08 	blcc	2cf104 <__RW_SIZE__+0x2ceb80>
     8e0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     8e4:	07000017 	smladeq	r0, r7, r0, r0
     8e8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     8ec:	0b3b0b3a 	bleq	ec35dc <__RW_SIZE__+0xec3058>
     8f0:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     8f4:	0000193c 	andeq	r1, r0, ip, lsr r9
     8f8:	03003408 	movweq	r3, #1032	; 0x408
     8fc:	3b0b3a0e 	blcc	2cf13c <__RW_SIZE__+0x2cebb8>
     900:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     904:	09000018 	stmdbeq	r0, {r3, r4}
     908:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     90c:	0b3b0b3a 	bleq	ec35fc <__RW_SIZE__+0xec3078>
     910:	17021349 	strne	r1, [r2, -r9, asr #6]
     914:	340a0000 	strcc	r0, [sl], #-0
     918:	3a0e0300 	bcc	381520 <__RW_SIZE__+0x380f9c>
     91c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     920:	3c193f13 	ldccc	15, cr3, [r9], {19}
     924:	0b000019 	bleq	990 <__RW_SIZE__+0x40c>
     928:	13490035 	movtne	r0, #36917	; 0x9035
     92c:	01000000 	mrseq	r0, (UNDEF: 0)
     930:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     934:	0e030b13 	vmoveq.32	d3[0], r0
     938:	01110e1b 	tsteq	r1, fp, lsl lr
     93c:	17100612 			; <UNDEFINED> instruction: 0x17100612
     940:	04020000 	streq	r0, [r2], #-0
     944:	0b0e0301 	bleq	381550 <__RW_SIZE__+0x380fcc>
     948:	3b0b3a0b 	blcc	2cf17c <__RW_SIZE__+0x2cebf8>
     94c:	0013010b 	andseq	r0, r3, fp, lsl #2
     950:	00280300 	eoreq	r0, r8, r0, lsl #6
     954:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
     958:	16040000 	strne	r0, [r4], -r0
     95c:	3a0e0300 	bcc	381564 <__RW_SIZE__+0x380fe0>
     960:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     964:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     968:	0b0b0024 	bleq	2c0a00 <__RW_SIZE__+0x2c047c>
     96c:	0e030b3e 	vmoveq.16	d3[0], r0
     970:	16060000 	strne	r0, [r6], -r0
     974:	3a0e0300 	bcc	38157c <__RW_SIZE__+0x380ff8>
     978:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     97c:	07000013 	smladeq	r0, r3, r0, r0
     980:	0b0b0024 	bleq	2c0a18 <__RW_SIZE__+0x2c0494>
     984:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     988:	13080000 	movwne	r0, #32768	; 0x8000
     98c:	3a050b01 	bcc	143598 <__RW_SIZE__+0x143014>
     990:	010b3b0b 	tsteq	fp, fp, lsl #22
     994:	09000013 	stmdbeq	r0, {r0, r1, r4}
     998:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     99c:	0b3b0b3a 	bleq	ec368c <__RW_SIZE__+0xec3108>
     9a0:	0b381349 	bleq	e056cc <__RW_SIZE__+0xe05148>
     9a4:	0d0a0000 	stceq	0, cr0, [sl, #-0]
     9a8:	3a0e0300 	bcc	3815b0 <__RW_SIZE__+0x38102c>
     9ac:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     9b0:	00053813 	andeq	r3, r5, r3, lsl r8
     9b4:	000d0b00 	andeq	r0, sp, r0, lsl #22
     9b8:	0b3a0803 	bleq	e829cc <__RW_SIZE__+0xe82448>
     9bc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     9c0:	00000538 	andeq	r0, r0, r8, lsr r5
     9c4:	4901010c 	stmdbmi	r1, {r2, r3, r8}
     9c8:	00130113 	andseq	r0, r3, r3, lsl r1
     9cc:	00210d00 	eoreq	r0, r1, r0, lsl #26
     9d0:	0b2f1349 	bleq	bc56fc <__RW_SIZE__+0xbc5178>
     9d4:	350e0000 	strcc	r0, [lr, #-0]
     9d8:	00134900 	andseq	r4, r3, r0, lsl #18
     9dc:	00210f00 	eoreq	r0, r1, r0, lsl #30
     9e0:	052f1349 	streq	r1, [pc, #-841]!	; 69f <__RW_SIZE__+0x11b>
     9e4:	13100000 	tstne	r0, #0
     9e8:	3a0b0b01 	bcc	2c35f4 <__RW_SIZE__+0x2c3070>
     9ec:	010b3b0b 	tsteq	fp, fp, lsl #22
     9f0:	11000013 	tstne	r0, r3, lsl r0
     9f4:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     9f8:	0b3b0b3a 	bleq	ec36e8 <__RW_SIZE__+0xec3164>
     9fc:	0b381349 	bleq	e05728 <__RW_SIZE__+0xe051a4>
     a00:	26120000 	ldrcs	r0, [r2], -r0
     a04:	00134900 	andseq	r4, r3, r0, lsl #18
     a08:	01131300 	tsteq	r3, r0, lsl #6
     a0c:	0b3a0b0b 	bleq	e83640 <__RW_SIZE__+0xe830bc>
     a10:	1301053b 	movwne	r0, #5435	; 0x153b
     a14:	0d140000 	ldceq	0, cr0, [r4, #-0]
     a18:	3a080300 	bcc	201620 <__RW_SIZE__+0x20109c>
     a1c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     a20:	000b3813 	andeq	r3, fp, r3, lsl r8
     a24:	000d1500 	andeq	r1, sp, r0, lsl #10
     a28:	0b3a0e03 	bleq	e8423c <__RW_SIZE__+0xe83cb8>
     a2c:	1349053b 	movtne	r0, #38203	; 0x953b
     a30:	00000b38 	andeq	r0, r0, r8, lsr fp
     a34:	0b000f16 	bleq	4694 <__RW_SIZE__+0x4110>
     a38:	0013490b 	andseq	r4, r3, fp, lsl #18
     a3c:	012e1700 	teqeq	lr, r0, lsl #14
     a40:	0b3a0e03 	bleq	e84254 <__RW_SIZE__+0xe83cd0>
     a44:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     a48:	13010b20 	movwne	r0, #6944	; 0x1b20
     a4c:	05180000 	ldreq	r0, [r8, #-0]
     a50:	3a0e0300 	bcc	381658 <__RW_SIZE__+0x3810d4>
     a54:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     a58:	19000013 	stmdbne	r0, {r0, r1, r4}
     a5c:	0e03012e 	adfeqsp	f0, f3, #0.5
     a60:	0b3b0b3a 	bleq	ec3750 <__RW_SIZE__+0xec31cc>
     a64:	01111927 	tsteq	r1, r7, lsr #18
     a68:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     a6c:	01194297 			; <UNDEFINED> instruction: 0x01194297
     a70:	1a000013 	bne	ac4 <__RW_SIZE__+0x540>
     a74:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     a78:	0b3b0b3a 	bleq	ec3768 <__RW_SIZE__+0xec31e4>
     a7c:	17021349 	strne	r1, [r2, -r9, asr #6]
     a80:	051b0000 	ldreq	r0, [fp, #-0]
     a84:	3a080300 	bcc	20168c <__RW_SIZE__+0x201108>
     a88:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a8c:	00170213 	andseq	r0, r7, r3, lsl r2
     a90:	00341c00 	eorseq	r1, r4, r0, lsl #24
     a94:	0b3a0803 	bleq	e82aa8 <__RW_SIZE__+0xe82524>
     a98:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     a9c:	00001702 	andeq	r1, r0, r2, lsl #14
     aa0:	0182891d 	orreq	r8, r2, sp, lsl r9
     aa4:	31011101 	tstcc	r1, r1, lsl #2
     aa8:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     aac:	0001828a 	andeq	r8, r1, sl, lsl #5
     ab0:	42911802 	addsmi	r1, r1, #131072	; 0x20000
     ab4:	1f000018 	svcne	0x00000018
     ab8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     abc:	0b3a0e03 	bleq	e842d0 <__RW_SIZE__+0xe83d4c>
     ac0:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     ac4:	06120111 			; <UNDEFINED> instruction: 0x06120111
     ac8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     acc:	00130119 	andseq	r0, r3, r9, lsl r1
     ad0:	82892000 	addhi	r2, r9, #0
     ad4:	01110101 	tsteq	r1, r1, lsl #2
     ad8:	13011331 	movwne	r1, #4913	; 0x1331
     adc:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
     ae0:	3a0e0301 	bcc	3816ec <__RW_SIZE__+0x381168>
     ae4:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     ae8:	010b2019 	tsteq	fp, r9, lsl r0
     aec:	22000013 	andcs	r0, r0, #19
     af0:	08030005 	stmdaeq	r3, {r0, r2}
     af4:	0b3b0b3a 	bleq	ec37e4 <__RW_SIZE__+0xec3260>
     af8:	00001349 	andeq	r1, r0, r9, asr #6
     afc:	31011d23 	tstcc	r1, r3, lsr #26
     b00:	55015213 	strpl	r5, [r1, #-531]	; 0xfffffded
     b04:	590b5817 	stmdbpl	fp, {r0, r1, r2, r4, fp, ip, lr}
     b08:	0013010b 	andseq	r0, r3, fp, lsl #2
     b0c:	00052400 	andeq	r2, r5, r0, lsl #8
     b10:	18021331 	stmdane	r2, {r0, r4, r5, r8, r9, ip}
     b14:	05250000 	streq	r0, [r5, #-0]!
     b18:	02133100 	andseq	r3, r3, #0, 2
     b1c:	26000017 			; <UNDEFINED> instruction: 0x26000017
     b20:	00018289 	andeq	r8, r1, r9, lsl #5
     b24:	13310111 	teqne	r1, #1073741828	; 0x40000004
     b28:	2e270000 	cdpcs	0, 2, cr0, cr7, cr0, {0}
     b2c:	03193f00 	tsteq	r9, #0, 30
     b30:	3b0b3a0e 	blcc	2cf370 <__RW_SIZE__+0x2cedec>
     b34:	1119270b 	tstne	r9, fp, lsl #14
     b38:	40061201 	andmi	r1, r6, r1, lsl #4
     b3c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     b40:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
     b44:	03193f01 	tsteq	r9, #1, 30
     b48:	3b0b3a0e 	blcc	2cf388 <__RW_SIZE__+0x2cee04>
     b4c:	11192705 	tstne	r9, r5, lsl #14
     b50:	40061201 	andmi	r1, r6, r1, lsl #4
     b54:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     b58:	00001301 	andeq	r1, r0, r1, lsl #6
     b5c:	31011d29 	tstcc	r1, r9, lsr #26
     b60:	55015213 	strpl	r5, [r1, #-531]	; 0xfffffded
     b64:	590b5817 	stmdbpl	fp, {r0, r1, r2, r4, fp, ip, lr}
     b68:	2a000005 	bcs	b84 <__RW_SIZE__+0x600>
     b6c:	13310005 	teqne	r1, #5
     b70:	00000b1c 	andeq	r0, r0, ip, lsl fp
     b74:	0300342b 	movweq	r3, #1067	; 0x42b
     b78:	3b0b3a0e 	blcc	2cf3b8 <__RW_SIZE__+0x2cee34>
     b7c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     b80:	2c000018 	stccs	0, cr0, [r0], {24}
     b84:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     b88:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     b8c:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     b90:	0000193c 	andeq	r1, r0, ip, lsr r9
     b94:	0300342d 	movweq	r3, #1069	; 0x42d
     b98:	3b0b3a0e 	blcc	2cf3d8 <__RW_SIZE__+0x2cee54>
     b9c:	3f13490b 	svccc	0x0013490b
     ba0:	00180219 	andseq	r0, r8, r9, lsl r2
     ba4:	00342e00 	eorseq	r2, r4, r0, lsl #28
     ba8:	0b3a0e03 	bleq	e843bc <__RW_SIZE__+0xe83e38>
     bac:	1349053b 	movtne	r0, #38203	; 0x953b
     bb0:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     bb4:	2e2f0000 	cdpcs	0, 2, cr0, cr15, cr0, {0}
     bb8:	03193f01 	tsteq	r9, #1, 30
     bbc:	3b0b3a0e 	blcc	2cf3fc <__RW_SIZE__+0x2cee78>
     bc0:	3c19270b 	ldccc	7, cr2, [r9], {11}
     bc4:	30000019 	andcc	r0, r0, r9, lsl r0
     bc8:	13490005 	movtne	r0, #36869	; 0x9005
     bcc:	18310000 	ldmdane	r1!, {}	; <UNPREDICTABLE>
     bd0:	00000000 	andeq	r0, r0, r0
     bd4:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     bd8:	030b130e 	movweq	r1, #45838	; 0xb30e
     bdc:	110e1b0e 	tstne	lr, lr, lsl #22
     be0:	10061201 	andne	r1, r6, r1, lsl #4
     be4:	02000017 	andeq	r0, r0, #23
     be8:	0b0b0024 	bleq	2c0c80 <__RW_SIZE__+0x2c06fc>
     bec:	0e030b3e 	vmoveq.16	d3[0], r0
     bf0:	16030000 	strne	r0, [r3], -r0
     bf4:	3a0e0300 	bcc	3817fc <__RW_SIZE__+0x381278>
     bf8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     bfc:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     c00:	0b0b0024 	bleq	2c0c98 <__RW_SIZE__+0x2c0714>
     c04:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     c08:	35050000 	strcc	r0, [r5, #-0]
     c0c:	00134900 	andseq	r4, r3, r0, lsl #18
     c10:	00260600 	eoreq	r0, r6, r0, lsl #12
     c14:	00001349 	andeq	r1, r0, r9, asr #6
     c18:	0b011307 	bleq	4583c <__RW_SIZE__+0x452b8>
     c1c:	3b0b3a0b 	blcc	2cf450 <__RW_SIZE__+0x2ceecc>
     c20:	00130105 	andseq	r0, r3, r5, lsl #2
     c24:	000d0800 	andeq	r0, sp, r0, lsl #16
     c28:	0b3a0e03 	bleq	e8443c <__RW_SIZE__+0xe83eb8>
     c2c:	1349053b 	movtne	r0, #38203	; 0x953b
     c30:	00000b38 	andeq	r0, r0, r8, lsr fp
     c34:	03000d09 	movweq	r0, #3337	; 0xd09
     c38:	3b0b3a08 	blcc	2cf460 <__RW_SIZE__+0x2ceedc>
     c3c:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
     c40:	0a00000b 	beq	c74 <__RW_SIZE__+0x6f0>
     c44:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     c48:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     c4c:	00001349 	andeq	r1, r0, r9, asr #6
     c50:	3f012e0b 	svccc	0x00012e0b
     c54:	3a0e0319 	bcc	3818c0 <__RW_SIZE__+0x38133c>
     c58:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     c5c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     c60:	96184006 	ldrls	r4, [r8], -r6
     c64:	13011942 	movwne	r1, #6466	; 0x1942
     c68:	050c0000 	streq	r0, [ip, #-0]
     c6c:	3a0e0300 	bcc	381874 <__RW_SIZE__+0x3812f0>
     c70:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c74:	00170213 	andseq	r0, r7, r3, lsl r2
     c78:	002e0d00 	eoreq	r0, lr, r0, lsl #26
     c7c:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     c80:	0b3b0b3a 	bleq	ec3970 <__RW_SIZE__+0xec33ec>
     c84:	13491927 	movtne	r1, #39207	; 0x9927
     c88:	06120111 			; <UNDEFINED> instruction: 0x06120111
     c8c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     c90:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
     c94:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     c98:	0b3a0e03 	bleq	e844ac <__RW_SIZE__+0xe83f28>
     c9c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     ca0:	06120111 			; <UNDEFINED> instruction: 0x06120111
     ca4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     ca8:	0f000019 	svceq	0x00000019
     cac:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     cb0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     cb4:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     cb8:	0000193c 	andeq	r1, r0, ip, lsr r9
     cbc:	01110100 	tsteq	r1, r0, lsl #2
     cc0:	0b130e25 	bleq	4c455c <__RW_SIZE__+0x4c3fd8>
     cc4:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     cc8:	06120111 			; <UNDEFINED> instruction: 0x06120111
     ccc:	00001710 	andeq	r1, r0, r0, lsl r7
     cd0:	0b002402 	bleq	9ce0 <__RW_SIZE__+0x975c>
     cd4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     cd8:	0300000e 	movweq	r0, #14
     cdc:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     ce0:	0b3b0b3a 	bleq	ec39d0 <__RW_SIZE__+0xec344c>
     ce4:	00001349 	andeq	r1, r0, r9, asr #6
     ce8:	0b002404 	bleq	9d00 <__RW_SIZE__+0x977c>
     cec:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     cf0:	05000008 	streq	r0, [r0, #-8]
     cf4:	13490035 	movtne	r0, #36917	; 0x9035
     cf8:	13060000 	movwne	r0, #24576	; 0x6000
     cfc:	3a0b0b01 	bcc	2c3908 <__RW_SIZE__+0x2c3384>
     d00:	01053b0b 	tsteq	r5, fp, lsl #22
     d04:	07000013 	smladeq	r0, r3, r0, r0
     d08:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     d0c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     d10:	0b381349 	bleq	e05a3c <__RW_SIZE__+0xe054b8>
     d14:	0d080000 	stceq	0, cr0, [r8, #-0]
     d18:	3a0e0300 	bcc	381920 <__RW_SIZE__+0x38139c>
     d1c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     d20:	000b3813 	andeq	r3, fp, r3, lsl r8
     d24:	00160900 	andseq	r0, r6, r0, lsl #18
     d28:	0b3a0e03 	bleq	e8453c <__RW_SIZE__+0xe83fb8>
     d2c:	1349053b 	movtne	r0, #38203	; 0x953b
     d30:	2e0a0000 	cdpcs	0, 0, cr0, cr10, cr0, {0}
     d34:	03193f00 	tsteq	r9, #0, 30
     d38:	3b0b3a0e 	blcc	2cf578 <__RW_SIZE__+0x2ceff4>
     d3c:	1119270b 	tstne	r9, fp, lsl #14
     d40:	40061201 	andmi	r1, r6, r1, lsl #4
     d44:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     d48:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
     d4c:	03193f01 	tsteq	r9, #1, 30
     d50:	3b0b3a0e 	blcc	2cf590 <__RW_SIZE__+0x2cf00c>
     d54:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     d58:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     d5c:	97184006 	ldrls	r4, [r8, -r6]
     d60:	13011942 	movwne	r1, #6466	; 0x1942
     d64:	340c0000 	strcc	r0, [ip], #-0
     d68:	3a0e0300 	bcc	381970 <__RW_SIZE__+0x3813ec>
     d6c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d70:	00180213 	andseq	r0, r8, r3, lsl r2
     d74:	012e0d00 	teqeq	lr, r0, lsl #26
     d78:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     d7c:	0b3b0b3a 	bleq	ec3a6c <__RW_SIZE__+0xec34e8>
     d80:	01111927 	tsteq	r1, r7, lsr #18
     d84:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     d88:	01194297 			; <UNDEFINED> instruction: 0x01194297
     d8c:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
     d90:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     d94:	0b3b0b3a 	bleq	ec3a84 <__RW_SIZE__+0xec3500>
     d98:	17021349 	strne	r1, [r2, -r9, asr #6]
     d9c:	340f0000 	strcc	r0, [pc], #-0	; da4 <__RW_SIZE__+0x820>
     da0:	3a080300 	bcc	2019a8 <__RW_SIZE__+0x201424>
     da4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     da8:	00170213 	andseq	r0, r7, r3, lsl r2
     dac:	00341000 	eorseq	r1, r4, r0
     db0:	0b3a0803 	bleq	e82dc4 <__RW_SIZE__+0xe82840>
     db4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     db8:	00001802 	andeq	r1, r0, r2, lsl #16
     dbc:	3f002e11 	svccc	0x00002e11
     dc0:	3a0e0319 	bcc	381a2c <__RW_SIZE__+0x3814a8>
     dc4:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     dc8:	11134919 	tstne	r3, r9, lsl r9
     dcc:	40061201 	andmi	r1, r6, r1, lsl #4
     dd0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     dd4:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
     dd8:	03193f01 	tsteq	r9, #1, 30
     ddc:	3b0b3a0e 	blcc	2cf61c <__RW_SIZE__+0x2cf098>
     de0:	1119270b 	tstne	r9, fp, lsl #14
     de4:	40061201 	andmi	r1, r6, r1, lsl #4
     de8:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     dec:	00001301 	andeq	r1, r0, r1, lsl #6
     df0:	03003413 	movweq	r3, #1043	; 0x413
     df4:	3b0b3a0e 	blcc	2cf634 <__RW_SIZE__+0x2cf0b0>
     df8:	3f134905 	svccc	0x00134905
     dfc:	00193c19 	andseq	r3, r9, r9, lsl ip
     e00:	11010000 	mrsne	r0, (UNDEF: 1)
     e04:	130e2501 	movwne	r2, #58625	; 0xe501
     e08:	1b0e030b 	blne	381a3c <__RW_SIZE__+0x3814b8>
     e0c:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     e10:	00171006 	andseq	r1, r7, r6
     e14:	01040200 	mrseq	r0, R12_usr
     e18:	0b0b0e03 	bleq	2c462c <__RW_SIZE__+0x2c40a8>
     e1c:	0b3b0b3a 	bleq	ec3b0c <__RW_SIZE__+0xec3588>
     e20:	00001301 	andeq	r1, r0, r1, lsl #6
     e24:	03002803 	movweq	r2, #2051	; 0x803
     e28:	000d1c0e 	andeq	r1, sp, lr, lsl #24
     e2c:	00160400 	andseq	r0, r6, r0, lsl #8
     e30:	0b3a0e03 	bleq	e84644 <__RW_SIZE__+0xe840c0>
     e34:	1349053b 	movtne	r0, #38203	; 0x953b
     e38:	24050000 	strcs	r0, [r5], #-0
     e3c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     e40:	000e030b 	andeq	r0, lr, fp, lsl #6
     e44:	00160600 	andseq	r0, r6, r0, lsl #12
     e48:	0b3a0e03 	bleq	e8465c <__RW_SIZE__+0xe840d8>
     e4c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     e50:	24070000 	strcs	r0, [r7], #-0
     e54:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     e58:	0008030b 	andeq	r0, r8, fp, lsl #6
     e5c:	01130800 	tsteq	r3, r0, lsl #16
     e60:	0b3a050b 	bleq	e82294 <__RW_SIZE__+0xe81d10>
     e64:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     e68:	0d090000 	stceq	0, cr0, [r9, #-0]
     e6c:	3a0e0300 	bcc	381a74 <__RW_SIZE__+0x3814f0>
     e70:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e74:	000b3813 	andeq	r3, fp, r3, lsl r8
     e78:	000d0a00 	andeq	r0, sp, r0, lsl #20
     e7c:	0b3a0e03 	bleq	e84690 <__RW_SIZE__+0xe8410c>
     e80:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     e84:	00000538 	andeq	r0, r0, r8, lsr r5
     e88:	03000d0b 	movweq	r0, #3339	; 0xd0b
     e8c:	3b0b3a08 	blcc	2cf6b4 <__RW_SIZE__+0x2cf130>
     e90:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     e94:	0c000005 	stceq	0, cr0, [r0], {5}
     e98:	13490101 	movtne	r0, #37121	; 0x9101
     e9c:	00001301 	andeq	r1, r0, r1, lsl #6
     ea0:	4900210d 	stmdbmi	r0, {r0, r2, r3, r8, sp}
     ea4:	000b2f13 	andeq	r2, fp, r3, lsl pc
     ea8:	00350e00 	eorseq	r0, r5, r0, lsl #28
     eac:	00001349 	andeq	r1, r0, r9, asr #6
     eb0:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
     eb4:	00052f13 	andeq	r2, r5, r3, lsl pc
     eb8:	01131000 	tsteq	r3, r0
     ebc:	0b3a0b0b 	bleq	e83af0 <__RW_SIZE__+0xe8356c>
     ec0:	1301053b 	movwne	r0, #5435	; 0x153b
     ec4:	0d110000 	ldceq	0, cr0, [r1, #-0]
     ec8:	3a080300 	bcc	201ad0 <__RW_SIZE__+0x20154c>
     ecc:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     ed0:	000b3813 	andeq	r3, fp, r3, lsl r8
     ed4:	000d1200 	andeq	r1, sp, r0, lsl #4
     ed8:	0b3a0e03 	bleq	e846ec <__RW_SIZE__+0xe84168>
     edc:	1349053b 	movtne	r0, #38203	; 0x953b
     ee0:	00000b38 	andeq	r0, r0, r8, lsr fp
     ee4:	0b000f13 	bleq	4b38 <__RW_SIZE__+0x45b4>
     ee8:	1400000b 	strne	r0, [r0], #-11
     eec:	0b0b000f 	bleq	2c0f30 <__RW_SIZE__+0x2c09ac>
     ef0:	00001349 	andeq	r1, r0, r9, asr #6
     ef4:	49002615 	stmdbmi	r0, {r0, r2, r4, r9, sl, sp}
     ef8:	16000013 			; <UNDEFINED> instruction: 0x16000013
     efc:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     f00:	0b3a0b0b 	bleq	e83b34 <__RW_SIZE__+0xe835b0>
     f04:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     f08:	0d170000 	ldceq	0, cr0, [r7, #-0]
     f0c:	490e0300 	stmdbmi	lr, {r8, r9}
     f10:	340b3813 	strcc	r3, [fp], #-2067	; 0xfffff7ed
     f14:	18000019 	stmdane	r0, {r0, r3, r4}
     f18:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     f1c:	0b3a0e03 	bleq	e84730 <__RW_SIZE__+0xe841ac>
     f20:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     f24:	13010b20 	movwne	r0, #6944	; 0x1b20
     f28:	05190000 	ldreq	r0, [r9, #-0]
     f2c:	3a080300 	bcc	201b34 <__RW_SIZE__+0x2015b0>
     f30:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     f34:	1a000013 	bne	f88 <__RW_SIZE__+0xa04>
     f38:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     f3c:	0b3a0e03 	bleq	e84750 <__RW_SIZE__+0xe841cc>
     f40:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     f44:	0b201349 	bleq	805c70 <__RW_SIZE__+0x8056ec>
     f48:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
     f4c:	3a0e0301 	bcc	381b58 <__RW_SIZE__+0x3815d4>
     f50:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     f54:	010b2019 	tsteq	fp, r9, lsl r0
     f58:	1c000013 	stcne	0, cr0, [r0], {19}
     f5c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     f60:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     f64:	00001349 	andeq	r1, r0, r9, asr #6
     f68:	3f012e1d 	svccc	0x00012e1d
     f6c:	3a0e0319 	bcc	381bd8 <__RW_SIZE__+0x381654>
     f70:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     f74:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     f78:	96184006 	ldrls	r4, [r8], -r6
     f7c:	13011942 	movwne	r1, #6466	; 0x1942
     f80:	051e0000 	ldreq	r0, [lr, #-0]
     f84:	3a0e0300 	bcc	381b8c <__RW_SIZE__+0x381608>
     f88:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     f8c:	00170213 	andseq	r0, r7, r3, lsl r2
     f90:	00341f00 	eorseq	r1, r4, r0, lsl #30
     f94:	0b3a0803 	bleq	e82fa8 <__RW_SIZE__+0xe82a24>
     f98:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     f9c:	00001702 	andeq	r1, r0, r2, lsl #14
     fa0:	03003420 	movweq	r3, #1056	; 0x420
     fa4:	3b0b3a0e 	blcc	2cf7e4 <__RW_SIZE__+0x2cf260>
     fa8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     fac:	21000017 	tstcs	r0, r7, lsl r0
     fb0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     fb4:	0b3b0b3a 	bleq	ec3ca4 <__RW_SIZE__+0xec3720>
     fb8:	00001349 	andeq	r1, r0, r9, asr #6
     fbc:	31012e22 	tstcc	r1, r2, lsr #28
     fc0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     fc4:	97184006 	ldrls	r4, [r8, -r6]
     fc8:	13011942 	movwne	r1, #6466	; 0x1942
     fcc:	05230000 	streq	r0, [r3, #-0]!
     fd0:	02133100 	andseq	r3, r3, #0, 2
     fd4:	24000018 	strcs	r0, [r0], #-24	; 0xffffffe8
     fd8:	13310005 	teqne	r1, #5
     fdc:	00001702 	andeq	r1, r0, r2, lsl #14
     fe0:	31011d25 	tstcc	r1, r5, lsr #26
     fe4:	55015213 	strpl	r5, [r1, #-531]	; 0xfffffded
     fe8:	590b5817 	stmdbpl	fp, {r0, r1, r2, r4, fp, ip, lr}
     fec:	2600000b 	strcs	r0, [r0], -fp
     ff0:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     ff4:	0b3a0e03 	bleq	e84808 <__RW_SIZE__+0xe84284>
     ff8:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     ffc:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1000:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1004:	00130119 	andseq	r0, r3, r9, lsl r1
    1008:	00052700 	andeq	r2, r5, r0, lsl #14
    100c:	0b3a0803 	bleq	e83020 <__RW_SIZE__+0xe82a9c>
    1010:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1014:	00001802 	andeq	r1, r0, r2, lsl #16
    1018:	00001828 	andeq	r1, r0, r8, lsr #16
    101c:	00342900 	eorseq	r2, r4, r0, lsl #18
    1020:	0b3a0803 	bleq	e83034 <__RW_SIZE__+0xe82ab0>
    1024:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1028:	00001802 	andeq	r1, r0, r2, lsl #16
    102c:	0300342a 	movweq	r3, #1066	; 0x42a
    1030:	3b0b3a0e 	blcc	2cf870 <__RW_SIZE__+0x2cf2ec>
    1034:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1038:	2b000018 	blcs	10a0 <__RW_SIZE__+0xb1c>
    103c:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1040:	17550152 			; <UNDEFINED> instruction: 0x17550152
    1044:	0b590b58 	bleq	1643dac <__RW_SIZE__+0x1643828>
    1048:	00001301 	andeq	r1, r0, r1, lsl #6
    104c:	0182892c 	orreq	r8, r2, ip, lsr #18
    1050:	31011101 	tstcc	r1, r1, lsl #2
    1054:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
    1058:	0001828a 	andeq	r8, r1, sl, lsl #5
    105c:	42911802 	addsmi	r1, r1, #131072	; 0x20000
    1060:	2e000018 	mcrcs	0, 0, r0, cr0, cr8, {0}
    1064:	1331002e 	teqne	r1, #46	; 0x2e
    1068:	06120111 			; <UNDEFINED> instruction: 0x06120111
    106c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1070:	2f000019 	svccs	0x00000019
    1074:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1078:	0b3a0e03 	bleq	e8488c <__RW_SIZE__+0xe84308>
    107c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    1080:	01111349 	tsteq	r1, r9, asr #6
    1084:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1088:	01194297 			; <UNDEFINED> instruction: 0x01194297
    108c:	30000013 	andcc	r0, r0, r3, lsl r0
    1090:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1094:	0b3b0b3a 	bleq	ec3d84 <__RW_SIZE__+0xec3800>
    1098:	00001349 	andeq	r1, r0, r9, asr #6
    109c:	31001d31 	tstcc	r0, r1, lsr sp
    10a0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    10a4:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
    10a8:	3200000b 	andcc	r0, r0, #11
    10ac:	08030005 	stmdaeq	r3, {r0, r2}
    10b0:	0b3b0b3a 	bleq	ec3da0 <__RW_SIZE__+0xec381c>
    10b4:	17021349 	strne	r1, [r2, -r9, asr #6]
    10b8:	05330000 	ldreq	r0, [r3, #-0]!
    10bc:	1c133100 	ldfnes	f3, [r3], {-0}
    10c0:	3400000b 	strcc	r0, [r0], #-11
    10c4:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    10c8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    10cc:	0b590b58 	bleq	1643e34 <__RW_SIZE__+0x16438b0>
    10d0:	34350000 	ldrtcc	r0, [r5], #-0
    10d4:	3a0e0300 	bcc	381cdc <__RW_SIZE__+0x381758>
    10d8:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    10dc:	3c193f13 	ldccc	15, cr3, [r9], {19}
    10e0:	36000019 			; <UNDEFINED> instruction: 0x36000019
    10e4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    10e8:	0b3a0e03 	bleq	e848fc <__RW_SIZE__+0xe84378>
    10ec:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    10f0:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    10f4:	05370000 	ldreq	r0, [r7, #-0]!
    10f8:	00134900 	andseq	r4, r3, r0, lsl #18
    10fc:	11010000 	mrsne	r0, (UNDEF: 1)
    1100:	11061000 	mrsne	r1, (UNDEF: 6)
    1104:	03011201 	movweq	r1, #4609	; 0x1201
    1108:	25081b08 	strcs	r1, [r8, #-2824]	; 0xfffff4f8
    110c:	00051308 	andeq	r1, r5, r8, lsl #6
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	080031ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, ip, sp}
  14:	00000058 	andeq	r0, r0, r8, asr r0
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	01cb0002 	biceq	r0, fp, r2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	08003244 	stmdaeq	r0, {r2, r6, r9, ip, sp}
  34:	000000a2 	andeq	r0, r0, r2, lsr #1
	...
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	06d40002 	ldrbeq	r0, [r4], r2
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	080032e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, ip, sp}
  54:	0000028a 	andeq	r0, r0, sl, lsl #5
	...
  60:	0000001c 	andeq	r0, r0, ip, lsl r0
  64:	0b100002 	bleq	400074 <__RW_SIZE__+0x3ffaf0>
  68:	00040000 	andeq	r0, r4, r0
  6c:	00000000 	andeq	r0, r0, r0
  70:	08003574 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, ip, sp}
  74:	00000158 	andeq	r0, r0, r8, asr r1
	...
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	11fe0002 	mvnsne	r0, r2
  88:	00040000 	andeq	r0, r4, r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	080036cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl, ip, sp}
  94:	00000072 	andeq	r0, r0, r2, ror r0
	...
  a0:	0000001c 	andeq	r0, r0, ip, lsl r0
  a4:	13f90002 	mvnsne	r0, #2
  a8:	00040000 	andeq	r0, r4, r0
  ac:	00000000 	andeq	r0, r0, r0
  b0:	08003740 	stmdaeq	r0, {r6, r8, r9, sl, ip, sp}
  b4:	000000bc 	strheq	r0, [r0], -ip
	...
  c0:	0000001c 	andeq	r0, r0, ip, lsl r0
  c4:	15b50002 	ldrne	r0, [r5, #2]!
  c8:	00040000 	andeq	r0, r4, r0
  cc:	00000000 	andeq	r0, r0, r0
  d0:	080037fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp}
  d4:	00000198 	muleq	r0, r8, r1
	...
  e0:	0000001c 	andeq	r0, r0, ip, lsl r0
  e4:	1dc00002 	stclne	0, cr0, [r0, #8]
  e8:	00040000 	andeq	r0, r4, r0
  ec:	00000000 	andeq	r0, r0, r0
  f0:	08003994 	stmdaeq	r0, {r2, r4, r7, r8, fp, ip, sp}
  f4:	00000044 	andeq	r0, r0, r4, asr #32
	...
 100:	0000001c 	andeq	r0, r0, ip, lsl r0
 104:	1ebf0002 	cdpne	0, 11, cr0, cr15, cr2, {0}
 108:	00040000 	andeq	r0, r4, r0
 10c:	00000000 	andeq	r0, r0, r0
 110:	080039d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, fp, ip, sp}
 114:	000003c2 	andeq	r0, r0, r2, asr #7
	...
 120:	0000001c 	andeq	r0, r0, ip, lsl r0
 124:	2f050002 	svccs	0x00050002
 128:	00040000 	andeq	r0, r4, r0
 12c:	00000000 	andeq	r0, r0, r0
 130:	08003da0 	stmdaeq	r0, {r5, r7, r8, sl, fp, ip, sp}
 134:	000000c8 	andeq	r0, r0, r8, asr #1
	...
 140:	0000001c 	andeq	r0, r0, ip, lsl r0
 144:	30890002 	addcc	r0, r9, r2
 148:	00040000 	andeq	r0, r4, r0
 14c:	00000000 	andeq	r0, r0, r0
 150:	08003e68 	stmdaeq	r0, {r3, r5, r6, r9, sl, fp, ip, sp}
 154:	000002d2 	ldrdeq	r0, [r0], -r2
	...
 160:	0000001c 	andeq	r0, r0, ip, lsl r0
 164:	35920002 	ldrcc	r0, [r2, #2]
 168:	00040000 	andeq	r0, r4, r0
 16c:	00000000 	andeq	r0, r0, r0
 170:	08004140 	stmdaeq	r0, {r6, r8, lr}
 174:	0000020a 	andeq	r0, r0, sl, lsl #4
	...
 180:	0000001c 	andeq	r0, r0, ip, lsl r0
 184:	3d740002 	ldclcc	0, cr0, [r4, #-8]!
 188:	00040000 	andeq	r0, r4, r0
 18c:	00000000 	andeq	r0, r0, r0
 190:	08003000 	stmdaeq	r0, {ip, sp}
 194:	000001ec 	andeq	r0, r0, ip, ror #3
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000a3 	andeq	r0, r0, r3, lsr #1
   4:	007f0002 	rsbseq	r0, pc, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	6f435c3a 	svcvs	0x00435c3a
  20:	6f536564 	svcvs	0x00536564
  24:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
  28:	535c7972 	cmppl	ip, #1867776	; 0x1c8000
  2c:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
  30:	20797265 	rsbscs	r7, r9, r5, ror #4
  34:	202b2b47 	eorcs	r2, fp, r7, asr #22
  38:	6574694c 	ldrbvs	r6, [r4, #-2380]!	; 0xfffff6b4
  3c:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
  40:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
  44:	61652d65 	cmnvs	r5, r5, ror #26
  48:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
  4c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
  50:	00006564 	andeq	r6, r0, r4, ror #10
  54:	636f6c63 	cmnvs	pc, #25344	; 0x6300
  58:	00632e6b 	rsbeq	r2, r3, fp, ror #28
  5c:	73000000 	movwvc	r0, #0
  60:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
  64:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
  68:	0000682e 	andeq	r6, r0, lr, lsr #16
  6c:	74730000 	ldrbtvc	r0, [r3], #-0
  70:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
  74:	0100682e 	tsteq	r0, lr, lsr #16
  78:	6f630000 	svcvs	0x00630000
  7c:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
  80:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
  84:	00000000 	andeq	r0, r0, r0
  88:	02050000 	andeq	r0, r5, #0
  8c:	080031ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, ip, sp}
  90:	21671315 	cmncs	r7, r5, lsl r3
  94:	212d2f2d 	teqcs	sp, sp, lsr #30
  98:	001f2121 	andseq	r2, pc, r1, lsr #2
  9c:	3d010402 	cfstrscc	mvf0, [r1, #-8]
  a0:	07029f75 	smlsdxeq	r2, r5, pc, r9	; <UNPREDICTABLE>
  a4:	e2010100 	and	r0, r1, #0, 2
  a8:	02000000 	andeq	r0, r0, #0
  ac:	00006500 	andeq	r6, r0, r0, lsl #10
  b0:	fb010200 	blx	408ba <__RW_SIZE__+0x40336>
  b4:	01000d0e 	tsteq	r0, lr, lsl #26
  b8:	00010101 	andeq	r0, r1, r1, lsl #2
  bc:	00010000 	andeq	r0, r1, r0
  c0:	3a430100 	bcc	10c04c8 <__RW_SIZE__+0x10bff44>
  c4:	646f435c 	strbtvs	r4, [pc], #-860	; cc <__ZI_SIZE__+0x70>
  c8:	756f5365 	strbvc	r5, [pc, #-869]!	; fffffd6b <MSP_BASE+0xdfffad6b>
  cc:	72656372 	rsbvc	r6, r5, #-939524095	; 0xc8000001
  d0:	6f535c79 	svcvs	0x00535c79
  d4:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
  d8:	47207972 			; <UNDEFINED> instruction: 0x47207972
  dc:	4c202b2b 	stcmi	11, cr2, [r0], #-172	; 0xffffff54
  e0:	2f657469 	svccs	0x00657469
  e4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
  e8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
  ec:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
  f0:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
  f4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
  f8:	63000065 	movwvs	r0, #101	; 0x65
  fc:	5f65726f 	svcpl	0x0065726f
 100:	2e336d63 	cdpcs	13, 3, cr6, cr3, cr3, {3}
 104:	00000063 	andeq	r0, r0, r3, rrx
 108:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
 10c:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
 110:	00010068 	andeq	r0, r1, r8, rrx
 114:	05000000 	streq	r0, [r0, #-0]
 118:	00324402 	eorseq	r4, r2, r2, lsl #8
 11c:	03bf0308 			; <UNDEFINED> instruction: 0x03bf0308
 120:	034e1501 	movteq	r1, #58625	; 0xe501
 124:	4c13010c 	ldfmis	f0, [r3], {12}
 128:	15010c03 	strne	r0, [r1, #-3075]	; 0xfffff3fd
 12c:	010c034e 	tsteq	ip, lr, asr #6
 130:	0a034c13 	beq	d3184 <__RW_SIZE__+0xd2c00>
 134:	03301501 	teqeq	r0, #4194304	; 0x400000
 138:	03132e0a 	tsteq	r3, #10, 28	; 0xa0
 13c:	30154a0b 	andscc	r4, r5, fp, lsl #20
 140:	132e0a03 	teqne	lr, #12288	; 0x3000
 144:	154a0b03 	strbne	r0, [sl, #-2819]	; 0xfffff4fd
 148:	2e0a0330 	mcrcs	3, 0, r0, cr10, cr0, {1}
 14c:	4a0b0313 	bmi	2c0da0 <__RW_SIZE__+0x2c081c>
 150:	0a033015 	beq	cc1ac <__RW_SIZE__+0xcbc28>
 154:	0d03132e 	stceq	3, cr1, [r3, #-184]	; 0xffffff48
 158:	0322154a 	teqeq	r2, #310378496	; 0x12800000
 15c:	2215200b 	andscs	r2, r5, #11
 160:	15200b03 	strne	r0, [r0, #-2819]!	; 0xfffff4fd
 164:	200b0322 	andcs	r0, fp, r2, lsr #6
 168:	0b033015 	bleq	cc1c4 <__RW_SIZE__+0xcbc40>
 16c:	0330152e 	teqeq	r0, #192937984	; 0xb800000
 170:	30152e0b 	andscc	r2, r5, fp, lsl #28
 174:	152e0b03 	strne	r0, [lr, #-2819]!	; 0xfffff4fd
 178:	2e0c0330 	mcrcs	3, 0, r0, cr12, cr0, {1}
 17c:	0c033e15 	stceq	14, cr3, [r3], {21}
 180:	033e1520 	teqeq	lr, #32, 10	; 0x8000000
 184:	3015200c 	andscc	r2, r5, ip
 188:	01000102 	tsteq	r0, r2, lsl #2
 18c:	00012c01 	andeq	r2, r1, r1, lsl #24
 190:	7d000200 	sfmvc	f0, 4, [r0, #-0]
 194:	02000000 	andeq	r0, r0, #0
 198:	0d0efb01 	vstreq	d15, [lr, #-4]
 19c:	01010100 	mrseq	r0, (UNDEF: 17)
 1a0:	00000001 	andeq	r0, r0, r1
 1a4:	01000001 	tsteq	r0, r1
 1a8:	435c3a43 	cmpmi	ip, #274432	; 0x43000
 1ac:	5365646f 	cmnpl	r5, #1862270976	; 0x6f000000
 1b0:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
 1b4:	5c797265 	lfmpl	f7, 2, [r9], #-404	; 0xfffffe6c
 1b8:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
 1bc:	79726563 	ldmdbvc	r2!, {r0, r1, r5, r6, r8, sl, sp, lr}^
 1c0:	2b2b4720 	blcs	ad1e48 <__RW_SIZE__+0xad18c4>
 1c4:	74694c20 	strbtvc	r4, [r9], #-3104	; 0xfffff3e0
 1c8:	72612f65 	rsbvc	r2, r1, #404	; 0x194
 1cc:	6f6e2d6d 	svcvs	0x006e2d6d
 1d0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
 1d4:	2f696261 	svccs	0x00696261
 1d8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 1dc:	00656475 	rsbeq	r6, r5, r5, ror r4
 1e0:	63326900 	teqvs	r2, #0, 18
 1e4:	0000632e 	andeq	r6, r0, lr, lsr #6
 1e8:	74730000 	ldrbtvc	r0, [r3], #-0
 1ec:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
 1f0:	0100682e 	tsteq	r0, lr, lsr #16
 1f4:	74730000 	ldrbtvc	r0, [r3], #-0
 1f8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
 1fc:	2e783031 	mrccs	0, 3, r3, cr8, cr1, {1}
 200:	00000068 	andeq	r0, r0, r8, rrx
 204:	726f6300 	rsbvc	r6, pc, #0, 6
 208:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
 20c:	00682e33 	rsbeq	r2, r8, r3, lsr lr
 210:	00000000 	andeq	r0, r0, r0
 214:	e8020500 	stmda	r2, {r8, sl}
 218:	03080032 	movweq	r0, #32818	; 0x8032
 21c:	54160109 	ldrpl	r0, [r6], #-265	; 0xfffffef7
 220:	1f213e24 	svcne	0x00213e24
 224:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
 228:	06580602 	ldrbeq	r0, [r8], -r2, lsl #12
 22c:	3d1f5975 	ldccc	9, cr5, [pc, #-468]	; 60 <__ZI_SIZE__+0x4>
 230:	02040200 	andeq	r0, r4, #0, 4
 234:	75065806 	strvc	r5, [r6, #-2054]	; 0xfffff7fa
 238:	213e1d5b 	teqcs	lr, fp, asr sp
 23c:	2d213d2d 	stccs	13, cr3, [r1, #-180]!	; 0xffffff4c
 240:	3e2c3e3d 	mcrcc	14, 1, r3, cr12, cr13, {1}
 244:	22752b3f 	rsbscs	r2, r5, #64512	; 0xfc00
 248:	23393156 	teqcs	r9, #-2147483627	; 0x80000015
 24c:	211f211d 	tstcs	pc, sp, lsl r1	; <UNPREDICTABLE>
 250:	59672222 	stmdbpl	r7!, {r1, r5, r9, sp}^
 254:	00213159 	eoreq	r3, r1, r9, asr r1
 258:	06010402 	streq	r0, [r1], -r2, lsl #8
 25c:	2176064a 	cmncs	r6, sl, asr #12
 260:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
 264:	2f764b01 	svccs	0x00764b01
 268:	01040200 	mrseq	r0, R12_usr
 26c:	77062006 	strvc	r2, [r6, -r6]
 270:	001f232c 	andseq	r2, pc, ip, lsr #6
 274:	21010402 	tstcs	r1, r2, lsl #8
 278:	02002f76 	andeq	r2, r0, #472	; 0x1d8
 27c:	20060104 	andcs	r0, r6, r4, lsl #2
 280:	1f217606 	svcne	0x00217606
 284:	01040200 	mrseq	r0, R12_usr
 288:	034d3d4b 	movteq	r3, #56651	; 0xdd4b
 28c:	21ae016c 			; <UNDEFINED> instruction: 0x21ae016c
 290:	2f764b1f 	svccs	0x00764b1f
 294:	1f231e85 	svcne	0x00231e85
 298:	842f7621 	strthi	r7, [pc], #-1569	; 2a0 <__ZI_SIZE__+0x244>
 29c:	424b1f21 	submi	r1, fp, #33, 30	; 0x84
 2a0:	01670331 	cmneq	r7, r1, lsr r3
 2a4:	4b1f21ae 	blmi	7c8964 <__RW_SIZE__+0x7c83e0>
 2a8:	1e852f76 	mcrne	15, 4, r2, cr5, cr6, {3}
 2ac:	76211f23 	strtvc	r1, [r1], -r3, lsr #30
 2b0:	1f21842f 	svcne	0x0021842f
 2b4:	3c0b034b 	stccc	3, cr0, [fp], {75}	; 0x4b
 2b8:	01000102 	tsteq	r0, r2, lsl #2
 2bc:	00011401 	andeq	r1, r1, r1, lsl #8
 2c0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
 2c4:	02000000 	andeq	r0, r0, #0
 2c8:	0d0efb01 	vstreq	d15, [lr, #-4]
 2cc:	01010100 	mrseq	r0, (UNDEF: 17)
 2d0:	00000001 	andeq	r0, r0, r1
 2d4:	01000001 	tsteq	r0, r1
 2d8:	435c3a43 	cmpmi	ip, #274432	; 0x43000
 2dc:	5365646f 	cmnpl	r5, #1862270976	; 0x6f000000
 2e0:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
 2e4:	5c797265 	lfmpl	f7, 2, [r9], #-404	; 0xfffffe6c
 2e8:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
 2ec:	79726563 	ldmdbvc	r2!, {r0, r1, r5, r6, r8, sl, sp, lr}^
 2f0:	2b2b4720 	blcs	ad1f78 <__RW_SIZE__+0xad19f4>
 2f4:	74694c20 	strbtvc	r4, [r9], #-3104	; 0xfffff3e0
 2f8:	72612f65 	rsbvc	r2, r1, #404	; 0x194
 2fc:	6f6e2d6d 	svcvs	0x006e2d6d
 300:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
 304:	2f696261 	svccs	0x00696261
 308:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 30c:	00656475 	rsbeq	r6, r5, r5, ror r4
 310:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
 314:	0000632e 	andeq	r6, r0, lr, lsr #6
 318:	6f630000 	svcvs	0x00630000
 31c:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
 320:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
 324:	00000000 	andeq	r0, r0, r0
 328:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 32c:	30316632 	eorscc	r6, r1, r2, lsr r6
 330:	00682e78 	rsbeq	r2, r8, r8, ror lr
 334:	73000000 	movwvc	r0, #0
 338:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
 33c:	00682e74 	rsbeq	r2, r8, r4, ror lr
 340:	00000001 	andeq	r0, r0, r1
 344:	74020500 	strvc	r0, [r2], #-1280	; 0xfffffb00
 348:	15080035 	strne	r0, [r8, #-53]	; 0xffffffcb
 34c:	3d2d5913 	stccc	9, cr5, [sp, #-76]!	; 0xffffffb4
 350:	0e9e0b03 	vfnmseq.f64	d0, d14, d3
 354:	2cf20d03 	ldclcs	13, cr0, [r2], #12
 358:	312e0c03 	teqcc	lr, r3, lsl #24
 35c:	03016603 	movweq	r6, #5635	; 0x1603
 360:	032cf20d 	msreq	CPSR_fs, #-805306368	; 0xd0000000
 364:	312f2e10 	teqcc	pc, r0, lsl lr	; <UNPREDICTABLE>
 368:	03016103 	movweq	r6, #4355	; 0x1103
 36c:	032cf20d 	msreq	CPSR_fs, #-805306368	; 0xd0000000
 370:	31302e17 	teqcc	r0, r7, lsl lr
 374:	03020421 	movweq	r0, #9249	; 0x2421
 378:	04200bb8 	strteq	r0, [r0], #-3000	; 0xfffff448
 37c:	74d90301 	ldrbvc	r0, [r9], #769	; 0x301
 380:	03020466 	movweq	r0, #9318	; 0x2466
 384:	042e0ba7 	strteq	r0, [lr], #-2983	; 0xfffff459
 388:	74d90301 	ldrbvc	r0, [r9], #769	; 0x301
 38c:	034c672e 	movteq	r6, #50990	; 0xc72e
 390:	2b5b3c6e 	blcs	16cf550 <__RW_SIZE__+0x16cefcc>
 394:	3e2c223d 	mcrcc	2, 1, r2, cr12, cr13, {1}
 398:	3d591f21 	ldclcc	15, cr1, [r9, #-132]	; 0xffffff7c
 39c:	0204592d 	andeq	r5, r4, #737280	; 0xb4000
 3a0:	3c0bd903 	stccc	9, cr13, [fp], {3}
 3a4:	a7030104 	strge	r0, [r3, -r4, lsl #2]
 3a8:	042f2e74 	strteq	r2, [pc], #-3700	; 3b0 <__ZI_SIZE__+0x354>
 3ac:	0bd80302 	bleq	ff600fbc <MSP_BASE+0xdf5fbfbc>
 3b0:	03010420 	movweq	r0, #5152	; 0x1420
 3b4:	214a74a7 	smlaltbcs	r7, sl, r7, r4
 3b8:	d8030204 	stmdale	r3, {r2, r9}
 3bc:	0104200b 	tsteq	r4, fp
 3c0:	2e74aa03 	vaddcs.f32	s21, s8, s6
 3c4:	a1030204 	tstge	r3, r4, lsl #4
 3c8:	01044a0b 	tsteq	r4, fp, lsl #20
 3cc:	2074e903 	rsbscs	lr, r4, r3, lsl #18
 3d0:	01000302 	tsteq	r0, r2, lsl #6
 3d4:	00009b01 	andeq	r9, r0, r1, lsl #22
 3d8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
 3dc:	02000000 	andeq	r0, r0, #0
 3e0:	0d0efb01 	vstreq	d15, [lr, #-4]
 3e4:	01010100 	mrseq	r0, (UNDEF: 17)
 3e8:	00000001 	andeq	r0, r0, r1
 3ec:	01000001 	tsteq	r0, r1
 3f0:	435c3a43 	cmpmi	ip, #274432	; 0x43000
 3f4:	5365646f 	cmnpl	r5, #1862270976	; 0x6f000000
 3f8:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
 3fc:	5c797265 	lfmpl	f7, 2, [r9], #-404	; 0xfffffe6c
 400:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
 404:	79726563 	ldmdbvc	r2!, {r0, r1, r5, r6, r8, sl, sp, lr}^
 408:	2b2b4720 	blcs	ad2090 <__RW_SIZE__+0xad1b0c>
 40c:	74694c20 	strbtvc	r4, [r9], #-3104	; 0xfffff3e0
 410:	72612f65 	rsbvc	r2, r1, #404	; 0x194
 414:	6f6e2d6d 	svcvs	0x006e2d6d
 418:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
 41c:	2f696261 	svccs	0x00696261
 420:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 424:	00656475 	rsbeq	r6, r5, r5, ror r4
 428:	64656c00 	strbtvs	r6, [r5], #-3072	; 0xfffff400
 42c:	0000632e 	andeq	r6, r0, lr, lsr #6
 430:	74730000 	ldrbtvc	r0, [r3], #-0
 434:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
 438:	2e783031 	mrccs	0, 3, r3, cr8, cr1, {1}
 43c:	00000068 	andeq	r0, r0, r8, rrx
 440:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
 444:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
 448:	00010068 	andeq	r0, r1, r8, rrx
 44c:	726f6300 	rsbvc	r6, pc, #0, 6
 450:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
 454:	00682e33 	rsbeq	r2, r8, r3, lsr lr
 458:	00000000 	andeq	r0, r0, r0
 45c:	cc020500 	cfstr32gt	mvfx0, [r2], {-0}
 460:	15080036 	strne	r0, [r8, #-54]	; 0xffffffca
 464:	3d2d5913 	stccc	9, cr5, [sp, #-76]!	; 0xffffffb4
 468:	da136a83 	ble	4dae7c <__RW_SIZE__+0x4da8f8>
 46c:	0213a213 	andseq	sl, r3, #805306369	; 0x30000001
 470:	01010009 	tsteq	r1, r9
 474:	0000007a 	andeq	r0, r0, sl, ror r0
 478:	003e0002 	eorseq	r0, lr, r2
 47c:	01020000 	mrseq	r0, (UNDEF: 2)
 480:	000d0efb 	strdeq	r0, [sp], -fp
 484:	01010101 	tsteq	r1, r1, lsl #2
 488:	01000000 	mrseq	r0, (UNDEF: 0)
 48c:	00010000 	andeq	r0, r1, r0
 490:	6e69616d 	powvsez	f6, f1, #5.0
 494:	0000632e 	andeq	r6, r0, lr, lsr #6
 498:	6f630000 	svcvs	0x00630000
 49c:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
 4a0:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
 4a4:	00000000 	andeq	r0, r0, r0
 4a8:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 4ac:	645f6563 	ldrbvs	r6, [pc], #-1379	; 4b4 <MSP_SIZE+0xb4>
 4b0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 4b4:	00682e72 	rsbeq	r2, r8, r2, ror lr
 4b8:	00000000 	andeq	r0, r0, r0
 4bc:	40020500 	andmi	r0, r2, r0, lsl #10
 4c0:	1a080037 	bne	2005a4 <__RW_SIZE__+0x200020>
 4c4:	1a032f2f 	bne	cc188 <__RW_SIZE__+0xcbc04>
 4c8:	670377f2 			; <UNDEFINED> instruction: 0x670377f2
 4cc:	1103302e 	tstne	r3, lr, lsr #32
 4d0:	3e67302e 	cdpcc	0, 6, cr3, cr7, cr14, {1}
 4d4:	47232d21 	strmi	r2, [r3, -r1, lsr #26]!
 4d8:	033d2723 	teqeq	sp, #9175040	; 0x8c0000
 4dc:	30303c5d 	eorscc	r3, r0, sp, asr ip
 4e0:	222d213e 	eorcs	r2, sp, #-2147483633	; 0x8000000f
 4e4:	03272248 	teqeq	r7, #72, 4	; 0x80000004
 4e8:	574b4a0e 	strbpl	r4, [fp, -lr, lsl #20]
 4ec:	00030221 	andeq	r0, r3, r1, lsr #4
 4f0:	01310101 	teqeq	r1, r1, lsl #2
 4f4:	00020000 	andeq	r0, r2, r0
 4f8:	00000098 	muleq	r0, r8, r0
 4fc:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 500:	0101000d 	tsteq	r1, sp
 504:	00000101 	andeq	r0, r0, r1, lsl #2
 508:	00000100 	andeq	r0, r0, r0, lsl #2
 50c:	5c3a4301 	ldcpl	3, cr4, [sl], #-4
 510:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 514:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
 518:	79726563 	ldmdbvc	r2!, {r0, r1, r5, r6, r8, sl, sp, lr}^
 51c:	756f535c 	strbvc	r5, [pc, #-860]!	; 1c8 <__ZI_SIZE__+0x16c>
 520:	72656372 	rsbvc	r6, r5, #-939524095	; 0xc8000001
 524:	2b472079 	blcs	11c8710 <__RW_SIZE__+0x11c818c>
 528:	694c202b 	stmdbvs	ip, {r0, r1, r3, r5, sp}^
 52c:	612f6574 	teqvs	pc, r4, ror r5	; <UNPREDICTABLE>
 530:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
 534:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
 538:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 53c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 540:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 544:	6f6d0000 	svcvs	0x006d0000
 548:	2e726f74 	mrccs	15, 3, r6, cr2, cr4, {3}
 54c:	00000063 	andeq	r0, r0, r3, rrx
 550:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
 554:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
 558:	00010068 	andeq	r0, r1, r8, rrx
 55c:	632f2e00 	teqvs	pc, #0, 28
 560:	5f65726f 	svcpl	0x0065726f
 564:	2e336d63 	cdpcs	13, 3, cr6, cr3, cr3, {3}
 568:	00000068 	andeq	r0, r0, r8, rrx
 56c:	732f2e00 	teqvc	pc, #0, 28
 570:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
 574:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
 578:	0000682e 	andeq	r6, r0, lr, lsr #16
 57c:	2f2e0000 	svccs	0x002e0000
 580:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 584:	645f6563 	ldrbvs	r6, [pc], #-1379	; 58c <__RW_SIZE__+0x8>
 588:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 58c:	00682e72 	rsbeq	r2, r8, r2, ror lr
 590:	00000000 	andeq	r0, r0, r0
 594:	fc020500 	stc2	5, cr0, [r2], {-0}
 598:	18080037 	stmdane	r8, {r0, r1, r2, r4, r5}
 59c:	2f3d4b21 	svccs	0x003d4b21
 5a0:	1f4b3d2f 	svcne	0x004b3d2f
 5a4:	2c232b4d 	stccs	11, cr2, [r3], #-308	; 0xfffffecc
 5a8:	312b2322 	teqcc	fp, r2, lsr #6
 5ac:	21231c2f 	teqcs	r3, pc, lsr #24
 5b0:	282f2121 	stmdacs	pc!, {r0, r5, r8, sp}	; <UNPREDICTABLE>
 5b4:	752e7803 	strvc	r7, [lr, #-2051]!	; 0xfffff7fd
 5b8:	2e790327 	cdpcs	3, 7, cr0, cr9, cr7, {1}
 5bc:	20090367 	andcs	r0, r9, r7, ror #6
 5c0:	4b2e7703 	blmi	b9e1d4 <__RW_SIZE__+0xb9dc50>
 5c4:	30694c5b 	rsbcc	r4, r9, fp, asr ip
 5c8:	1f13402d 	svcne	0x0013402d
 5cc:	0e032120 	adfeqsp	f2, f3, f0
 5d0:	032b5b58 	teqeq	fp, #88, 22	; 0x16000
 5d4:	1f2f2e0d 	svcne	0x002f2e0d
 5d8:	032e6c03 	teqeq	lr, #768	; 0x300
 5dc:	6b032e15 	blvs	cbe38 <__RW_SIZE__+0xcb8b4>
 5e0:	2e0a032e 	cdpcs	3, 0, cr0, cr10, cr14, {1}
 5e4:	032e7603 	teqeq	lr, #3145728	; 0x300000
 5e8:	6e032e0e 	cdpvs	14, 0, cr2, cr3, cr14, {0}
 5ec:	2e13034a 	cdpcs	3, 1, cr0, cr3, cr10, {2}
 5f0:	032e6d03 	teqeq	lr, #3, 26	; 0xc0
 5f4:	72032e0e 	andvc	r2, r3, #14, 28	; 0xe0
 5f8:	2e1e032e 	cdpcs	3, 1, cr0, cr14, cr14, {1}
 5fc:	6a031f3d 	bvs	c82f8 <__RW_SIZE__+0xc7d74>
 600:	2e170320 	cdpcs	3, 1, cr0, cr7, cr0, {1}
 604:	342e6903 	strtcc	r6, [lr], #-2307	; 0xfffff6fd
 608:	032e7a03 	teqeq	lr, #12288	; 0x3000
 60c:	4b133c09 	blmi	4cf638 <__RW_SIZE__+0x4cf0b4>
 610:	1f3d134e 	svcne	0x003d134e
 614:	2f134021 	svccs	0x00134021
 618:	13402f1f 	movtne	r2, #3871	; 0xf1f
 61c:	3d672173 	stfcce	f2, [r7, #-460]!	; 0xfffffe34
 620:	02022d59 	andeq	r2, r2, #5696	; 0x1640
 624:	52010100 	andpl	r0, r1, #0, 2
 628:	02000000 	andeq	r0, r0, #0
 62c:	00002e00 	andeq	r2, r0, r0, lsl #28
 630:	fb010200 	blx	40e3a <__RW_SIZE__+0x408b6>
 634:	01000d0e 	tsteq	r0, lr, lsl #26
 638:	00010101 	andeq	r0, r1, r1, lsl #2
 63c:	00010000 	andeq	r0, r1, r0
 640:	72000100 	andvc	r0, r0, #0, 2
 644:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 648:	632e656d 	teqvs	lr, #457179136	; 0x1b400000
 64c:	00000000 	andeq	r0, r0, r0
 650:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
 654:	336d635f 	cmncc	sp, #2080374785	; 0x7c000001
 658:	0000682e 	andeq	r6, r0, lr, lsr #16
 65c:	00000000 	andeq	r0, r0, r0
 660:	39940205 	ldmibcc	r4, {r0, r2, r9}
 664:	27150800 	ldrcs	r0, [r5, -r0, lsl #16]
 668:	27587903 	ldrbcs	r7, [r8, -r3, lsl #18]
 66c:	2c3e4c5b 	ldccs	12, cr4, [lr], #-364	; 0xfffffe94
 670:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
 674:	3c770301 	ldclcc	3, cr0, [r7], #-4
 678:	01000902 	tsteq	r0, r2, lsl #18
 67c:	00021201 	andeq	r1, r2, r1, lsl #4
 680:	99000200 	stmdbls	r0, {r9}
 684:	02000000 	andeq	r0, r0, #0
 688:	0d0efb01 	vstreq	d15, [lr, #-4]
 68c:	01010100 	mrseq	r0, (UNDEF: 17)
 690:	00000001 	andeq	r0, r0, r1
 694:	01000001 	tsteq	r0, r1
 698:	435c3a43 	cmpmi	ip, #274432	; 0x43000
 69c:	5365646f 	cmnpl	r5, #1862270976	; 0x6f000000
 6a0:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
 6a4:	5c797265 	lfmpl	f7, 2, [r9], #-404	; 0xfffffe6c
 6a8:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
 6ac:	79726563 	ldmdbvc	r2!, {r0, r1, r5, r6, r8, sl, sp, lr}^
 6b0:	2b2b4720 	blcs	ad2338 <__RW_SIZE__+0xad1db4>
 6b4:	74694c20 	strbtvc	r4, [r9], #-3104	; 0xfffff3e0
 6b8:	72612f65 	rsbvc	r2, r1, #404	; 0x194
 6bc:	6f6e2d6d 	svcvs	0x006e2d6d
 6c0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
 6c4:	2f696261 	svccs	0x00696261
 6c8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 6cc:	00656475 	rsbeq	r6, r5, r5, ror r4
 6d0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
 6d4:	31663233 	cmncc	r6, r3, lsr r2
 6d8:	695f7830 	ldmdbvs	pc, {r4, r5, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 6dc:	00632e74 	rsbeq	r2, r3, r4, ror lr
 6e0:	63000000 	movwvs	r0, #0
 6e4:	5f65726f 	svcpl	0x0065726f
 6e8:	2e336d63 	cdpcs	13, 3, cr6, cr3, cr3, {3}
 6ec:	00000068 	andeq	r0, r0, r8, rrx
 6f0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
 6f4:	31663233 	cmncc	r6, r3, lsr r2
 6f8:	682e7830 	stmdavs	lr!, {r4, r5, fp, ip, sp, lr}
 6fc:	00000000 	andeq	r0, r0, r0
 700:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
 704:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
 708:	00000100 	andeq	r0, r0, r0, lsl #2
 70c:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 710:	645f6563 	ldrbvs	r6, [pc], #-1379	; 718 <__RW_SIZE__+0x194>
 714:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 718:	00682e72 	rsbeq	r2, r8, r2, ror lr
 71c:	00000000 	andeq	r0, r0, r0
 720:	d8020500 	stmdale	r2, {r8, sl}
 724:	03080039 	movweq	r0, #32825	; 0x8039
 728:	2b230125 	blcs	8c0bc4 <__RW_SIZE__+0x8c0640>
 72c:	02003120 	andeq	r3, r0, #32, 2
 730:	00220204 	eoreq	r0, r2, r4, lsl #4
 734:	aa020402 	bge	81744 <__RW_SIZE__+0x811c0>
 738:	02040200 	andeq	r0, r4, #0, 4
 73c:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
 740:	03402c02 	movteq	r2, #3074	; 0xc02
 744:	c9214a70 	stmdbgt	r1!, {r4, r5, r6, r9, fp, lr}
 748:	13ba2a03 			; <UNDEFINED> instruction: 0x13ba2a03
 74c:	0c03212d 	stfeqs	f2, [r3], {45}	; 0x2d
 750:	212d2158 	teqcs	sp, r8, asr r1
 754:	5a032f2d 	bpl	cc410 <__RW_SIZE__+0xcbe8c>
 758:	7675752e 	ldrbtvc	r7, [r5], -lr, lsr #10
 75c:	25562208 	ldrbcs	r2, [r6, #-520]	; 0xfffffdf8
 760:	1d03ad85 	stcne	13, cr10, [r3, #-532]	; 0xfffffdec
 764:	91759174 	cmnls	r5, r4, ror r1
 768:	82590375 	subshi	r0, r9, #-738197503	; 0xd4000001
 76c:	e43303d7 	ldrt	r0, [r3], #-983	; 0xfffffc29
 770:	03212d13 	teqeq	r1, #1216	; 0x4c0
 774:	2d13580c 	ldccs	8, cr5, [r3, #-48]	; 0xffffffd0
 778:	580c0321 	stmdapl	ip, {r0, r5, r8, r9}
 77c:	03212d13 	teqeq	r1, #1216	; 0x4c0
 780:	2d13580c 	ldccs	8, cr5, [r3, #-48]	; 0xffffffd0
 784:	580c0321 	stmdapl	ip, {r0, r5, r8, r9}
 788:	03212d13 	teqeq	r1, #1216	; 0x4c0
 78c:	2d13580c 	ldccs	8, cr5, [r3, #-48]	; 0xffffffd0
 790:	580e0321 	stmdapl	lr, {r0, r5, r8, r9}
 794:	820b0313 	andhi	r0, fp, #1275068416	; 0x4c000000
 798:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 79c:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 7a0:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 7a4:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 7a8:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 7ac:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 7b0:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 7b4:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 7b8:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 7bc:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 7c0:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 7c4:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 7c8:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 7cc:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 7d0:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 7d4:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 7d8:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 7dc:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 7e0:	3c0c0321 	stccc	3, cr0, [ip], {33}	; 0x21
 7e4:	3c0c0321 	stccc	3, cr0, [ip], {33}	; 0x21
 7e8:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 7ec:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 7f0:	3c0d0321 	stccc	3, cr0, [sp], {33}	; 0x21
 7f4:	03020421 	movweq	r0, #9249	; 0x2421
 7f8:	047408b4 	ldrbteq	r0, [r4], #-2228	; 0xfffff74c
 7fc:	77cc0301 	strbvc	r0, [ip, r1, lsl #6]
 800:	041e302e 	ldreq	r3, [lr], #-46	; 0xffffffd2
 804:	08b40302 	ldmeq	r4!, {r1, r8, r9}
 808:	0301042e 	movweq	r0, #5166	; 0x142e
 80c:	224a77cc 	subcs	r7, sl, #204, 14	; 0x3300000
 810:	b2030204 	andlt	r0, r3, #4, 4	; 0x40000000
 814:	01042008 	tsteq	r4, r8
 818:	2e77d003 	cdpcs	0, 7, cr13, cr7, cr3, {0}
 81c:	213c0a03 	teqcs	ip, r3, lsl #20
 820:	213c0c03 	teqcs	ip, r3, lsl #24
 824:	213c0c03 	teqcs	ip, r3, lsl #24
 828:	213c0b03 	teqcs	ip, r3, lsl #22
 82c:	213c0b03 	teqcs	ip, r3, lsl #22
 830:	213c0b03 	teqcs	ip, r3, lsl #22
 834:	213c0b03 	teqcs	ip, r3, lsl #22
 838:	213c0b03 	teqcs	ip, r3, lsl #22
 83c:	213c0b03 	teqcs	ip, r3, lsl #22
 840:	213c0b03 	teqcs	ip, r3, lsl #22
 844:	213c0b03 	teqcs	ip, r3, lsl #22
 848:	213c0b03 	teqcs	ip, r3, lsl #22
 84c:	213c0b03 	teqcs	ip, r3, lsl #22
 850:	223c0e03 	eorscs	r0, ip, #3, 28	; 0x30
 854:	83030204 	movwhi	r0, #12804	; 0x3204
 858:	01045807 	tsteq	r4, r7, lsl #16
 85c:	2e78fd03 	cdpcs	13, 7, cr15, cr8, cr3, {0}
 860:	83030204 	movwhi	r0, #12804	; 0x3204
 864:	01045807 	tsteq	r4, r7, lsl #16
 868:	3c798003 	ldclcc	0, cr8, [r9], #-12
 86c:	0302041d 	movweq	r0, #9245	; 0x241d
 870:	04200783 	strteq	r0, [r0], #-1923	; 0xfffff87d
 874:	79800301 	stmibvc	r0, {r0, r8, r9}
 878:	0a03212e 	beq	c8d38 <__RW_SIZE__+0xc87b4>
 87c:	0b03213c 	bleq	c8d74 <__RW_SIZE__+0xc87f0>
 880:	0b03213c 	bleq	c8d78 <__RW_SIZE__+0xc87f4>
 884:	0b03213c 	bleq	c8d7c <__RW_SIZE__+0xc87f8>
 888:	0b03213c 	bleq	c8d80 <__RW_SIZE__+0xc87fc>
 88c:	0202213c 	andeq	r2, r2, #60, 2
 890:	9b010100 	blls	40c98 <__RW_SIZE__+0x40714>
 894:	02000000 	andeq	r0, r0, #0
 898:	00007200 	andeq	r7, r0, r0, lsl #4
 89c:	fb010200 	blx	410a6 <__RW_SIZE__+0x40b22>
 8a0:	01000d0e 	tsteq	r0, lr, lsl #26
 8a4:	00010101 	andeq	r0, r1, r1, lsl #2
 8a8:	00010000 	andeq	r0, r1, r0
 8ac:	3a430100 	bcc	10c0cb4 <__RW_SIZE__+0x10c0730>
 8b0:	646f435c 	strbtvs	r4, [pc], #-860	; 8b8 <__RW_SIZE__+0x334>
 8b4:	756f5365 	strbvc	r5, [pc, #-869]!	; 557 <MSP_SIZE+0x157>
 8b8:	72656372 	rsbvc	r6, r5, #-939524095	; 0xc8000001
 8bc:	6f535c79 	svcvs	0x00535c79
 8c0:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
 8c4:	47207972 			; <UNDEFINED> instruction: 0x47207972
 8c8:	4c202b2b 	stcmi	11, cr2, [r0], #-172	; 0xffffff54
 8cc:	2f657469 	svccs	0x00657469
 8d0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
 8d4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
 8d8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
 8dc:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
 8e0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 8e4:	73000065 	movwvc	r0, #101	; 0x65
 8e8:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
 8ec:	632e6b63 	teqvs	lr, #101376	; 0x18c00
 8f0:	00000000 	andeq	r0, r0, r0
 8f4:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
 8f8:	336d635f 	cmncc	sp, #2080374785	; 0x7c000001
 8fc:	0000682e 	andeq	r6, r0, lr, lsr #16
 900:	74730000 	ldrbtvc	r0, [r3], #-0
 904:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
 908:	0100682e 	tsteq	r0, lr, lsr #16
 90c:	00000000 	andeq	r0, r0, r0
 910:	3da00205 	sfmcc	f0, 4, [r0, #20]!
 914:	21150800 	tstcs	r5, r0, lsl #16
 918:	be21f367 	cdplt	3, 2, cr15, cr1, cr7, {3}
 91c:	133f5913 	teqne	pc, #311296	; 0x4c000
 920:	59132359 	ldmdbpl	r3, {r0, r3, r4, r6, r8, r9, sp}
 924:	21861323 	orrcs	r1, r6, r3, lsr #6
 928:	211fe567 	tstcs	pc, r7, ror #10
 92c:	000b0221 	andeq	r0, fp, r1, lsr #4
 930:	01140101 	tsteq	r4, r1, lsl #2
 934:	00020000 	andeq	r0, r2, r0
 938:	0000007f 	andeq	r0, r0, pc, ror r0
 93c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 940:	0101000d 	tsteq	r1, sp
 944:	00000101 	andeq	r0, r0, r1, lsl #2
 948:	00000100 	andeq	r0, r0, r0, lsl #2
 94c:	5c3a4301 	ldcpl	3, cr4, [sl], #-4
 950:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 954:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
 958:	79726563 	ldmdbvc	r2!, {r0, r1, r5, r6, r8, sl, sp, lr}^
 95c:	756f535c 	strbvc	r5, [pc, #-860]!	; 608 <__RW_SIZE__+0x84>
 960:	72656372 	rsbvc	r6, r5, #-939524095	; 0xc8000001
 964:	2b472079 	blcs	11c8b50 <__RW_SIZE__+0x11c85cc>
 968:	694c202b 	stmdbvs	ip, {r0, r1, r3, r5, sp}^
 96c:	612f6574 	teqvs	pc, r4, ror r5	; <UNPREDICTABLE>
 970:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
 974:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
 978:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 97c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 980:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 984:	69740000 	ldmdbvs	r4!, {}^	; <UNPREDICTABLE>
 988:	2e72656d 	cdpcs	5, 7, cr6, cr2, cr13, {3}
 98c:	00000063 	andeq	r0, r0, r3, rrx
 990:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
 994:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
 998:	00010068 	andeq	r0, r1, r8, rrx
 99c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
 9a0:	31663233 	cmncc	r6, r3, lsr r2
 9a4:	682e7830 	stmdavs	lr!, {r4, r5, fp, ip, sp, lr}
 9a8:	00000000 	andeq	r0, r0, r0
 9ac:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
 9b0:	336d635f 	cmncc	sp, #2080374785	; 0x7c000001
 9b4:	0000682e 	andeq	r6, r0, lr, lsr #16
 9b8:	00000000 	andeq	r0, r0, r0
 9bc:	3e680205 	cdpcc	2, 6, cr0, cr8, cr5, {0}
 9c0:	11030800 	tstne	r3, r0, lsl #16
 9c4:	2c5a2101 	ldfcse	f2, [sl], {1}
 9c8:	2a2f2130 	bcs	bc8e90 <__RW_SIZE__+0xbc890c>
 9cc:	22212122 	eorcs	r2, r1, #-2147483640	; 0x80000008
 9d0:	153f5959 	ldrne	r5, [pc, #-2393]!	; 7f <__ZI_SIZE__+0x23>
 9d4:	68592d3d 	ldmdavs	r9, {r0, r2, r3, r4, r5, r8, sl, fp, sp}^
 9d8:	244a1e03 	strbcs	r1, [sl], #-3587	; 0xfffff1fd
 9dc:	2a212f5a 	bcs	84c74c <__RW_SIZE__+0x84c1c8>
 9e0:	21222c30 	teqcs	r2, r0, lsr ip
 9e4:	207a0321 	rsbscs	r0, sl, r1, lsr #6
 9e8:	20790327 	rsbscs	r0, r9, r7, lsr #6
 9ec:	312b2335 	teqcc	fp, r5, lsr r3
 9f0:	222c232b 	eorcs	r2, ip, #-1409286144	; 0xac000000
 9f4:	593e4c1e 	ldmdbpl	lr!, {r1, r2, r3, r4, sl, fp, lr}
 9f8:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
 9fc:	44375901 	ldrtmi	r5, [r7], #-2305	; 0xfffff6ff
 a00:	4b1d23d7 	blmi	749964 <__RW_SIZE__+0x7493e0>
 a04:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
 a08:	675a5901 	ldrbvs	r5, [sl, -r1, lsl #18]
 a0c:	2a253367 	bcs	94d7b0 <__RW_SIZE__+0x94d22c>
 a10:	2c242a4e 	stccs	10, cr2, [r4], #-312	; 0xfffffec8
 a14:	2b1f3256 	blcs	7cd374 <__RW_SIZE__+0x7ccdf0>
 a18:	22212122 	eorcs	r2, r1, #-2147483640	; 0x80000008
 a1c:	59596759 	ldmdbpl	r9, {r0, r3, r4, r6, r8, r9, sl, sp, lr}^
 a20:	2184133f 	orrcs	r1, r4, pc, lsr r3
 a24:	13235f1f 	teqne	r3, #31, 30	; 0x7c
 a28:	be13869f 	mrclt	6, 0, r8, cr3, cr15, {4}
 a2c:	3d2c5a13 	vstmdbcc	ip!, {s10-s28}
 a30:	213d2d21 	teqcs	sp, r1, lsr #26
 a34:	2d3d592d 	ldccs	9, cr5, [sp, #-180]!	; 0xffffff4c
 a38:	67213275 			; <UNDEFINED> instruction: 0x67213275
 a3c:	1d232f08 	stcne	15, cr2, [r3, #-32]!	; 0xffffffe0
 a40:	1386593e 	orrne	r5, r6, #1015808	; 0xf8000
 a44:	0007029f 	muleq	r7, pc, r2	; <UNPREDICTABLE>
 a48:	01ad0101 			; <UNDEFINED> instruction: 0x01ad0101
 a4c:	00020000 	andeq	r0, r2, r0
 a50:	000000e9 	andeq	r0, r0, r9, ror #1
 a54:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 a58:	0101000d 	tsteq	r1, sp
 a5c:	00000101 	andeq	r0, r0, r1, lsl #2
 a60:	00000100 	andeq	r0, r0, r0, lsl #2
 a64:	5c3a4301 	ldcpl	3, cr4, [sl], #-4
 a68:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 a6c:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
 a70:	79726563 	ldmdbvc	r2!, {r0, r1, r5, r6, r8, sl, sp, lr}^
 a74:	756f535c 	strbvc	r5, [pc, #-860]!	; 720 <__RW_SIZE__+0x19c>
 a78:	72656372 	rsbvc	r6, r5, #-939524095	; 0xc8000001
 a7c:	2b472079 	blcs	11c8c68 <__RW_SIZE__+0x11c86e4>
 a80:	694c202b 	stmdbvs	ip, {r0, r1, r3, r5, sp}^
 a84:	612f6574 	teqvs	pc, r4, ror r5	; <UNPREDICTABLE>
 a88:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
 a8c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
 a90:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 a94:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 a98:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 a9c:	5c3a4300 	ldcpl	3, cr4, [sl], #-0
 aa0:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 aa4:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
 aa8:	79726563 	ldmdbvc	r2!, {r0, r1, r5, r6, r8, sl, sp, lr}^
 aac:	756f535c 	strbvc	r5, [pc, #-860]!	; 758 <__RW_SIZE__+0x1d4>
 ab0:	72656372 	rsbvc	r6, r5, #-939524095	; 0xc8000001
 ab4:	2b472079 	blcs	11c8ca0 <__RW_SIZE__+0x11c871c>
 ab8:	694c202b 	stmdbvs	ip, {r0, r1, r3, r5, sp}^
 abc:	6c2f6574 	cfstr32vs	mvfx6, [pc], #-464	; 8f4 <__RW_SIZE__+0x370>
 ac0:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
 ac4:	612f6363 	teqvs	pc, r3, ror #6
 ac8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
 acc:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
 ad0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 ad4:	382e342f 	stmdacc	lr!, {r0, r1, r2, r3, r5, sl, ip, sp}
 ad8:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
 adc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 ae0:	00006564 	andeq	r6, r0, r4, ror #10
 ae4:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
 ae8:	0000632e 	andeq	r6, r0, lr, lsr #6
 aec:	6f630000 	svcvs	0x00630000
 af0:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
 af4:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
 af8:	00000000 	andeq	r0, r0, r0
 afc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 b00:	30316632 	eorscc	r6, r1, r2, lsr r6
 b04:	00682e78 	rsbeq	r2, r8, r8, ror lr
 b08:	73000000 	movwvc	r0, #0
 b0c:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
 b10:	00682e74 	rsbeq	r2, r8, r4, ror lr
 b14:	73000001 	movwvc	r0, #1
 b18:	72616474 	rsbvc	r6, r1, #116, 8	; 0x74000000
 b1c:	00682e67 	rsbeq	r2, r8, r7, ror #28
 b20:	73000002 	movwvc	r0, #2
 b24:	6f696474 	svcvs	0x00696474
 b28:	0100682e 	tsteq	r0, lr, lsr #16
 b2c:	623c0000 	eorsvs	r0, ip, #0
 b30:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
 b34:	3e6e692d 	cdpcc	9, 6, cr6, cr14, cr13, {1}
 b38:	00000000 	andeq	r0, r0, r0
 b3c:	02050000 	andeq	r0, r5, #0
 b40:	08004140 	stmdaeq	r0, {r6, r8, lr}
 b44:	2c5a251a 	cfldr64cs	mvdx2, [sl], {26}
 b48:	3d2d213d 	stfccs	f2, [sp, #-244]!	; 0xffffff0c
 b4c:	13084c67 	movwne	r4, #35943	; 0x8c67
 b50:	2f59083d 	svccs	0x0059083d
 b54:	211e6830 	tstcs	lr, r0, lsr r8
 b58:	2121212d 	teqcs	r1, sp, lsr #2
 b5c:	0200136a 	andeq	r1, r0, #-1476395007	; 0xa8000001
 b60:	ad340104 	ldfges	f0, [r4, #-16]!
 b64:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
 b68:	064a0601 	strbeq	r0, [sl], -r1, lsl #12
 b6c:	03215275 	teqeq	r1, #1342177287	; 0x50000007
 b70:	1d4b2e76 	stclne	14, cr2, [fp, #-472]	; 0xfffffe28
 b74:	4e257534 	mcrmi	5, 1, r7, cr5, cr4, {1}
 b78:	752e7203 	strvc	r7, [lr, #-515]!	; 0xfffffdfd
 b7c:	3c3c1003 	ldccc	0, cr1, [ip], #-12
 b80:	03212d41 	teqeq	r1, #4160	; 0x1040
 b84:	76032e74 			; <UNDEFINED> instruction: 0x76032e74
 b88:	341d593c 	ldrcc	r5, [sp], #-2364	; 0xfffff6c4
 b8c:	0f032575 	svceq	0x00032575
 b90:	5867034a 	stmdapl	r7!, {r1, r3, r6, r8, r9}^
 b94:	2e1b0375 	mrccs	3, 0, r0, cr11, cr5, {3}
 b98:	31358413 	teqcc	r5, r3, lsl r4
 b9c:	00017403 	andeq	r7, r1, r3, lsl #8
 ba0:	06010402 	streq	r0, [r1], -r2, lsl #8
 ba4:	033e064a 	teqeq	lr, #77594624	; 0x4a00000
 ba8:	23312e0d 	teqcs	r1, #13, 28	; 0xd0
 bac:	09034815 	stmdbeq	r3, {r0, r2, r4, fp, lr}
 bb0:	03020420 	movweq	r0, #9248	; 0x2420
 bb4:	04200b8e 	strteq	r0, [r0], #-2958	; 0xfffff472
 bb8:	74f20301 	ldrbtvc	r0, [r2], #769	; 0x301
 bbc:	0302042e 	movweq	r0, #9262	; 0x242e
 bc0:	044a0b8e 	strbeq	r0, [sl], #-2958	; 0xfffff472
 bc4:	74f20301 	ldrbtvc	r0, [r2], #769	; 0x301
 bc8:	0302043c 	movweq	r0, #9276	; 0x243c
 bcc:	04200b8e 	strteq	r0, [r0], #-2958	; 0xfffff472
 bd0:	74eb0301 	strbtvc	r0, [fp], #769	; 0x301
 bd4:	0302043c 	movweq	r0, #9276	; 0x243c
 bd8:	04200bbd 	strteq	r0, [r0], #-3005	; 0xfffff443
 bdc:	74c30301 	strbvc	r0, [r3], #769	; 0x301
 be0:	0302042e 	movweq	r0, #9262	; 0x242e
 be4:	04200bbd 	strteq	r0, [r0], #-3005	; 0xfffff443
 be8:	74c30301 	strbvc	r0, [r3], #769	; 0x301
 bec:	0302043c 	movweq	r0, #9276	; 0x243c
 bf0:	033c0bbd 	teqeq	ip, #193536	; 0x2f400
 bf4:	02022e4b 	andeq	r2, r2, #1200	; 0x4b0
 bf8:	7c010100 	stfvcs	f0, [r1], {-0}
 bfc:	02000000 	andeq	r0, r0, #0
 c00:	00001d00 	andeq	r1, r0, r0, lsl #26
 c04:	fb010200 	blx	4140e <__RW_SIZE__+0x40e8a>
 c08:	01000d0e 	tsteq	r0, lr, lsl #26
 c0c:	00010101 	andeq	r0, r1, r1, lsl #2
 c10:	00010000 	andeq	r0, r1, r0
 c14:	63000100 	movwvs	r0, #256	; 0x100
 c18:	2e307472 	mrccs	4, 1, r7, cr0, cr2, {3}
 c1c:	00000073 	andeq	r0, r0, r3, ror r0
 c20:	05000000 	streq	r0, [r0, #-0]
 c24:	0030ec02 	eorseq	lr, r0, r2, lsl #24
 c28:	00fb0308 	rscseq	r0, fp, r8, lsl #6
 c2c:	22212101 	eorcs	r2, r1, #1073741824	; 0x40000000
 c30:	21212321 	teqcs	r1, r1, lsr #6
 c34:	21232f2f 	teqcs	r3, pc, lsr #30
 c38:	2f212130 	svccs	0x00212130
 c3c:	21200a03 	teqcs	r0, r3, lsl #20
 c40:	3030212f 	eorscc	r2, r0, pc, lsr #2
 c44:	222f2f27 	eorcs	r2, pc, #39, 30	; 0x9c
 c48:	21222f2f 	teqcs	r2, pc, lsr #30
 c4c:	2f302f21 	svccs	0x00302f21
 c50:	2122212f 	teqcs	r2, pc, lsr #2
 c54:	21302f21 	teqcs	r0, r1, lsr #30
 c58:	1b032f2f 	blne	cc91c <__RW_SIZE__+0xcc398>
 c5c:	21012802 	tstcs	r1, r2, lsl #16
 c60:	2f21212f 	svccs	0x0021212f
 c64:	7f98032f 	svcvc	0x0098032f
 c68:	032f2f20 	teqeq	pc, #32, 30	; 0x80
 c6c:	10032e0d 	andne	r2, r3, sp, lsl #28
 c70:	1203302e 	andne	r3, r3, #46	; 0x2e
 c74:	0202302e 	andeq	r3, r2, #46	; 0x2e
 c78:	Address 0x00000c78 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
       4:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
       8:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
       c:	44420074 	strbmi	r0, [r2], #-116	; 0xffffff8c
      10:	43005243 	movwmi	r5, #579	; 0x243
      14:	00524746 	subseq	r4, r2, r6, asr #14
      18:	53414c46 	movtpl	r4, #7238	; 0x1c46
      1c:	79545f48 	ldmdbvc	r4, {r3, r6, r8, r9, sl, fp, ip, lr}^
      20:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
      24:	48410066 	stmdami	r1, {r1, r2, r5, r6}^
      28:	524e4542 	subpl	r4, lr, #276824064	; 0x10800000
      2c:	50525700 	subspl	r5, r2, r0, lsl #14
      30:	50410052 	subpl	r0, r1, r2, asr r0
      34:	4e453242 	cdpmi	2, 4, cr3, cr5, cr2, {2}
      38:	6c630052 	stclvs	0, cr0, [r3], #-328	; 0xfffffeb8
      3c:	2e6b636f 	cdpcs	3, 6, cr6, cr11, cr15, {3}
      40:	3a440063 	bcc	11001d4 <__RW_SIZE__+0x10ffc50>
      44:	6561645c 	strbvs	r6, [r1, #-1116]!	; 0xfffffba4
      48:	5c6e7568 	cfstr64pl	mvdx7, [lr], #-416	; 0xfffffe60
      4c:	6d697246 	sfmvs	f7, 2, [r9, #-280]!	; 0xfffffee8
      50:	65726177 	ldrbvs	r6, [r2, #-375]!	; 0xfffffe89
      54:	676f7250 			; <UNDEFINED> instruction: 0x676f7250
      58:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
      5c:	5c676e69 	stclpl	14, cr6, [r7], #-420	; 0xfffffe5c
      60:	febfdfc6 	cdp2	15, 11, cr13, cr15, cr6, {6}
      64:	bd5feebe 	ldcllt	14, cr14, [pc, #-760]	; fffffd74 <MSP_BASE+0xdfffad74>
      68:	c0c0bdc7 	sbcgt	fp, r0, r7, asr #27
      6c:	28e1b7da 	stmiacs	r1!, {r1, r3, r4, r6, r7, r8, r9, sl, ip, sp, pc}^
      70:	2942414c 	stmdbcs	r2, {r2, r3, r6, r8, lr}^
      74:	6353565c 	cmpvs	r3, #92, 12	; 0x5c00000
      78:	5c65646f 	cfstrdpl	mvd6, [r5], #-444	; 0xfffffe44
      7c:	696e694d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, fp, sp, lr}^
      80:	6f72505f 	svcvs	0x0072505f
      84:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
      88:	6f687300 	svcvs	0x00687300
      8c:	75207472 	strvc	r7, [r0, #-1138]!	; 0xfffffb8e
      90:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
      94:	2064656e 	rsbcs	r6, r4, lr, ror #10
      98:	00746e69 	rsbseq	r6, r4, r9, ror #28
      9c:	5f4d5449 	svcpl	0x004d5449
      a0:	75427852 	strbvc	r7, [r2, #-2130]	; 0xfffff7ae
      a4:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
      a8:	54504f00 	ldrbpl	r4, [r0], #-3840	; 0xfffff100
      ac:	5259454b 	subspl	r4, r9, #314572800	; 0x12c00000
      b0:	736e7500 	cmnvc	lr, #0, 10
      b4:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
      b8:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
      bc:	52007261 	andpl	r7, r0, #268435462	; 0x10000006
      c0:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
      c4:	00444556 	subeq	r4, r4, r6, asr r5
      c8:	31425041 	cmpcc	r2, r1, asr #32
      cc:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
      d0:	42504100 	subsmi	r4, r0, #0, 2
      d4:	524e4531 	subpl	r4, lr, #205520896	; 0xc400000
      d8:	42504100 	subsmi	r4, r0, #0, 2
      dc:	54535232 	ldrbpl	r5, [r3], #-562	; 0xfffffdce
      e0:	6f6c0052 	svcvs	0x006c0052
      e4:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
      e8:	20676e6f 	rsbcs	r6, r7, pc, ror #28
      ec:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
      f0:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
      f4:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
      f8:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
      fc:	34204320 	strtcc	r4, [r0], #-800	; 0xfffffce0
     100:	312e382e 	teqcc	lr, lr, lsr #16
     104:	636d2d20 	cmnvs	sp, #32, 26	; 0x800
     108:	633d7570 	teqvs	sp, #112, 10	; 0x1c000000
     10c:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
     110:	336d2d78 	cmncc	sp, #120, 26	; 0x1e00
     114:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
     118:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
     11c:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
     120:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
     124:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
     128:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
     12c:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
     130:	73637061 	cmnvc	r3, #97	; 0x61
     134:	6e6d2d20 	cdpvs	13, 6, cr2, cr13, cr0, {1}
     138:	68742d6f 	ldmdavs	r4!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp}^
     13c:	2d626d75 	stclcs	13, cr6, [r2, #-468]!	; 0xfffffe2c
     140:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     144:	726f7772 	rsbvc	r7, pc, #29884416	; 0x1c80000
     148:	672d206b 	strvs	r2, [sp, -fp, rrx]!
     14c:	334f2d20 	movtcc	r2, #64800	; 0xfd20
     150:	6e662d20 	cdpvs	13, 6, cr2, cr6, cr0, {1}
     154:	75622d6f 	strbvc	r2, [r2, #-3439]!	; 0xfffff291
     158:	69746c69 	ldmdbvs	r4!, {r0, r3, r5, r6, sl, fp, sp, lr}^
     15c:	662d206e 	strtvs	r2, [sp], -lr, rrx
     160:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     164:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     168:	6168632d 	cmnvs	r8, sp, lsr #6
     16c:	662d2072 			; <UNDEFINED> instruction: 0x662d2072
     170:	732d6f6e 	teqvc	sp, #440	; 0x1b8
     174:	63697274 	cmnvs	r9, #116, 4	; 0x40000007
     178:	6c612d74 	stclvs	13, cr2, [r1], #-464	; 0xfffffe30
     17c:	69736169 	ldmdbvs	r3!, {r0, r3, r5, r6, r8, sp, lr}^
     180:	2d20676e 	stccs	7, cr6, [r0, #-440]!	; 0xfffffe48
     184:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; fffffff4 <MSP_BASE+0xdfffaff4>
     188:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
     18c:	73006e6f 	movwvc	r6, #3695	; 0xe6f
     190:	74657a69 	strbtvc	r7, [r5], #-2665	; 0xfffff597
     194:	00657079 	rsbeq	r7, r5, r9, ror r0
     198:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     19c:	6e495f6b 	cdpvs	15, 4, cr5, cr9, cr11, {3}
     1a0:	73007469 	movwvc	r7, #1129	; 0x469
     1a4:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
     1a8:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     1ac:	43435200 	movtmi	r5, #12800	; 0x3200
     1b0:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     1b4:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     1b8:	6e697500 	cdpvs	5, 6, cr7, cr9, cr0, {0}
     1bc:	5f323374 	svcpl	0x00323374
     1c0:	5f5f0074 	svcpl	0x005f0074
     1c4:	45525453 	ldrbmi	r5, [r2, #-1107]	; 0xfffffbad
     1c8:	61004858 	tstvs	r0, r8, asr r8
     1cc:	00726464 	rsbseq	r6, r2, r4, ror #8
     1d0:	65735f5f 	ldrbvs	r5, [r3, #-3935]!	; 0xfffff0a1
     1d4:	4f435f74 	svcmi	0x00435f74
     1d8:	4f52544e 	svcmi	0x0052544e
     1dc:	6176004c 	cmnvs	r6, ip, asr #32
     1e0:	0065756c 	rsbeq	r7, r5, ip, ror #10
     1e4:	444c5f5f 	strbmi	r5, [ip], #-3935	; 0xfffff0a1
     1e8:	57584552 			; <UNDEFINED> instruction: 0x57584552
     1ec:	69727000 	ldmdbvs	r2!, {ip, sp, lr}^
     1f0:	6b73614d 	blvs	1cd872c <__RW_SIZE__+0x1cd81a8>
     1f4:	706f7400 	rsbvc	r7, pc, r0, lsl #8
     1f8:	7250664f 	subsvc	r6, r0, #82837504	; 0x4f00000
     1fc:	7453636f 	ldrbvc	r6, [r3], #-879	; 0xfffffc91
     200:	006b6361 	rsbeq	r6, fp, r1, ror #6
     204:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     208:	73614d74 	cmnvc	r1, #116, 26	; 0x1d00
     20c:	6f63006b 	svcvs	0x0063006b
     210:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
     214:	632e336d 	teqvs	lr, #-1275068415	; 0xb4000001
     218:	675f5f00 	ldrbvs	r5, [pc, -r0, lsl #30]
     21c:	4d5f7465 	cfldrdmi	mvd7, [pc, #-404]	; 90 <__ZI_SIZE__+0x34>
     220:	5f005053 	svcpl	0x00005053
     224:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
     228:	50534d5f 	subspl	r4, r3, pc, asr sp
     22c:	675f5f00 	ldrbvs	r5, [pc, -r0, lsl #30]
     230:	505f7465 	subspl	r7, pc, r5, ror #8
     234:	5f005053 	svcpl	0x00005053
     238:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
     23c:	5053505f 	subspl	r5, r3, pc, asr r0
     240:	525f5f00 	subspl	r5, pc, #0, 30
     244:	36315645 	ldrtcc	r5, [r1], -r5, asr #12
     248:	675f5f00 	ldrbvs	r5, [pc, -r0, lsl #30]
     24c:	505f7465 	subspl	r7, pc, r5, ror #8
     250:	414d4952 	cmpmi	sp, r2, asr r9
     254:	5f004b53 	svcpl	0x00004b53
     258:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
     25c:	5541465f 	strbpl	r4, [r1, #-1631]	; 0xfffff9a1
     260:	414d544c 	cmpmi	sp, ip, asr #8
     264:	63004b53 	movwvs	r4, #2899	; 0xb53
     268:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
     26c:	5f006c6f 	svcpl	0x00006c6f
     270:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
     274:	5341425f 	movtpl	r4, #4703	; 0x125f
     278:	49525045 	ldmdbmi	r2, {r0, r2, r6, ip, lr}^
     27c:	6e697500 	cdpvs	5, 6, cr7, cr9, cr0, {0}
     280:	745f3874 	ldrbvc	r3, [pc], #-2164	; 288 <__ZI_SIZE__+0x22c>
     284:	73657200 	cmnvc	r5, #0, 4
     288:	00746c75 	rsbseq	r6, r4, r5, ror ip
     28c:	45525f5f 	ldrbmi	r5, [r2, #-3935]	; 0xfffff0a1
     290:	00485356 	subeq	r5, r8, r6, asr r3
     294:	4f706f74 	svcmi	0x00706f74
     298:	69614d66 	stmdbvs	r1!, {r1, r2, r5, r6, r8, sl, fp, lr}^
     29c:	6174536e 	cmnvs	r4, lr, ror #6
     2a0:	5f006b63 	svcpl	0x00006b63
     2a4:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
     2a8:	4952505f 	ldmdbmi	r2, {r0, r1, r2, r3, r4, r6, ip, lr}^
     2ac:	4b53414d 	blmi	14d07e8 <__RW_SIZE__+0x14d0264>
     2b0:	525f5f00 	subspl	r5, pc, #0, 30
     2b4:	5f005645 	svcpl	0x00005645
     2b8:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
     2bc:	4e4f435f 	mcrmi	3, 2, r4, cr15, cr15, {2}
     2c0:	4c4f5254 	sfmmi	f5, 2, [pc], {84}	; 0x54
     2c4:	525f5f00 	subspl	r5, pc, #0, 30
     2c8:	00544942 	subseq	r4, r4, r2, asr #18
     2cc:	65675f5f 	strbvs	r5, [r7, #-3935]!	; 0xfffff0a1
     2d0:	41425f74 	hvcmi	9716	; 0x25f4
     2d4:	52504553 	subspl	r4, r0, #348127232	; 0x14c00000
     2d8:	69750049 	ldmdbvs	r5!, {r0, r3, r6}^
     2dc:	3631746e 	ldrtcc	r7, [r1], -lr, ror #8
     2e0:	5f00745f 	svcpl	0x0000745f
     2e4:	5254535f 	subspl	r5, r4, #2080374785	; 0x7c000001
     2e8:	00575845 	subseq	r5, r7, r5, asr #16
     2ec:	444c5f5f 	strbmi	r5, [ip], #-3935	; 0xfffff0a1
     2f0:	42584552 	subsmi	r4, r8, #343932928	; 0x14800000
     2f4:	535f5f00 	cmppl	pc, #0, 30
     2f8:	58455254 	stmdapl	r5, {r2, r4, r6, r9, ip, lr}^
     2fc:	5f5f0042 	svcpl	0x005f0042
     300:	5f746567 	svcpl	0x00746567
     304:	4c554146 	ldfmie	f4, [r5], {70}	; 0x46
     308:	53414d54 	movtpl	r4, #7508	; 0x1d54
     30c:	5f5f004b 	svcpl	0x005f004b
     310:	4552444c 	ldrbmi	r4, [r2, #-1100]	; 0xfffffbb4
     314:	47004858 	smlsdmi	r0, r8, r8, r4
     318:	5f4f4950 	svcpl	0x004f4950
     31c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     320:	00666544 	rsbeq	r6, r6, r4, asr #10
     324:	5f433249 	svcpl	0x00433249
     328:	74697257 	strbtvc	r7, [r9], #-599	; 0xfffffda9
     32c:	50475f65 	subpl	r5, r7, r5, ror #30
     330:	63004f49 	movwvs	r4, #3913	; 0xf49
     334:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     338:	45520067 	ldrbmi	r0, [r2, #-103]	; 0xffffff99
     33c:	56524553 			; <UNDEFINED> instruction: 0x56524553
     340:	00314445 	eorseq	r4, r1, r5, asr #8
     344:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     348:	52005243 	andpl	r5, r0, #805306372	; 0x30000004
     34c:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     350:	38444556 	stmdacc	r4, {r1, r2, r4, r6, r8, sl, lr}^
     354:	65726600 	ldrbvs	r6, [r2, #-1536]!	; 0xfffffa00
     358:	32490071 	subcc	r0, r9, #113	; 0x71
     35c:	6f435f43 	svcvs	0x00435f43
     360:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     364:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
     368:	5342004f 	movtpl	r0, #8271	; 0x204f
     36c:	49005252 	stmdbmi	r0, {r1, r4, r6, r9, ip, lr}
     370:	545f4332 	ldrbpl	r4, [pc], #-818	; 378 <__ZI_SIZE__+0x31c>
     374:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     378:	49006665 	stmdbmi	r0, {r0, r2, r5, r6, r9, sl, sp, lr}
     37c:	575f4332 	smmlarpl	pc, r2, r3, r4	; <UNPREDICTABLE>
     380:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     384:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
     388:	52414f00 	subpl	r4, r1, #0, 30
     38c:	414f0031 	cmpmi	pc, r1, lsr r0	; <UNPREDICTABLE>
     390:	4d003252 	sfmmi	f3, 4, [r0, #-328]	; 0xfffffeb8
     394:	32525041 	subscc	r5, r2, #65	; 0x41
     398:	53455200 	movtpl	r5, #20992	; 0x5200
     39c:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     3a0:	54003044 	strpl	r3, [r0], #-68	; 0xffffffbc
     3a4:	45534952 	ldrbmi	r4, [r3, #-2386]	; 0xfffff6ae
     3a8:	53455200 	movtpl	r5, #20992	; 0x5200
     3ac:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     3b0:	52003244 	andpl	r3, r0, #68, 4	; 0x40000004
     3b4:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     3b8:	33444556 	movtcc	r4, #17750	; 0x4556
     3bc:	53455200 	movtpl	r5, #20992	; 0x5200
     3c0:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     3c4:	52003444 	andpl	r3, r0, #68, 8	; 0x44000000
     3c8:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     3cc:	35444556 	strbcc	r4, [r4, #-1366]	; 0xfffffaaa
     3d0:	53455200 	movtpl	r5, #20992	; 0x5200
     3d4:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     3d8:	52003644 	andpl	r3, r0, #68, 12	; 0x4400000
     3dc:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     3e0:	37444556 	smlsldcc	r4, r4, r6, r5	; <UNPREDICTABLE>
     3e4:	49464100 	stmdbmi	r6, {r8, lr}^
     3e8:	79545f4f 	ldmdbvc	r4, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     3ec:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     3f0:	414d0066 	cmpmi	sp, r6, rrx
     3f4:	45005250 	strmi	r5, [r0, #-592]	; 0xfffffdb0
     3f8:	00524356 	subseq	r4, r2, r6, asr r3
     3fc:	5f433249 	svcpl	0x00433249
     400:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     404:	4b434c00 	blmi	10d340c <__RW_SIZE__+0x10d2e88>
     408:	32690052 	rsbcc	r0, r9, #82	; 0x52
     40c:	00632e63 	rsbeq	r2, r3, r3, ror #28
     410:	5f425355 	svcpl	0x00425355
     414:	435f504c 	cmpmi	pc, #76	; 0x4c
     418:	5f314e41 	svcpl	0x00314e41
     41c:	5f305852 	svcpl	0x00305852
     420:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     424:	79654b00 	stmdbvc	r5!, {r8, r9, fp, lr}^
     428:	6c6f505f 	stclvs	0, cr5, [pc], #-380	; 2b4 <__ZI_SIZE__+0x258>
     42c:	6e495f6c 	cdpvs	15, 4, cr5, cr9, cr12, {3}
     430:	6b007469 	blvs	1d5dc <__RW_SIZE__+0x1d058>
     434:	632e7965 	teqvs	lr, #1654784	; 0x194000
     438:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
     43c:	43535f31 	cmpmi	r3, #49, 30	; 0xc4
     440:	52495f45 	subpl	r5, r9, #276	; 0x114
     444:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     448:	5f31414d 	svcpl	0x0031414d
     44c:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     450:	376c656e 	strbcc	r6, [ip, -lr, ror #10]!
     454:	5152495f 	cmppl	r2, pc, asr r9
     458:	3249006e 	subcc	r0, r9, #110	; 0x6e
     45c:	455f3243 	ldrbmi	r3, [pc, #-579]	; 221 <__ZI_SIZE__+0x1c5>
     460:	52495f52 	subpl	r5, r9, #328	; 0x148
     464:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     468:	5f344d49 	svcpl	0x00344d49
     46c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     470:	414d4400 	cmpmi	sp, r0, lsl #8
     474:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     478:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     47c:	495f326c 	ldmdbmi	pc, {r2, r3, r5, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     480:	006e5152 	rsbeq	r5, lr, r2, asr r1
     484:	53414c46 	movtpl	r4, #7238	; 0x1c46
     488:	52495f48 	subpl	r5, r9, #72, 30	; 0x120
     48c:	45006e51 	strmi	r6, [r0, #-3665]	; 0xfffff1af
     490:	30495458 	subcc	r5, r9, r8, asr r4
     494:	5152495f 	cmppl	r2, pc, asr r9
     498:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
     49c:	35314954 	ldrcc	r4, [r1, #-2388]!	; 0xfffff6ac
     4a0:	5f30315f 	svcpl	0x0030315f
     4a4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     4a8:	79654b00 	stmdbvc	r5!, {r8, r9, fp, lr}^
     4ac:	6961575f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, lr}^
     4b0:	654b5f74 	strbvs	r5, [fp, #-3956]	; 0xfffff08c
     4b4:	65525f79 	ldrbvs	r5, [r2, #-3961]	; 0xfffff087
     4b8:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
     4bc:	50006465 	andpl	r6, r0, r5, ror #8
     4c0:	53646e65 	cmnpl	r4, #1616	; 0x650
     4c4:	52495f56 	subpl	r5, r9, #344	; 0x158
     4c8:	52006e51 	andpl	r6, r0, #1296	; 0x510
     4cc:	495f4343 	ldmdbmi	pc, {r0, r1, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     4d0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     4d4:	6f6d654d 	svcvs	0x006d654d
     4d8:	614d7972 	hvcvs	55186	; 0xd792
     4dc:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
     4e0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     4e4:	5152495f 	cmppl	r2, pc, asr r9
     4e8:	654b006e 	strbvs	r0, [fp, #-110]	; 0xffffff92
     4ec:	53495f79 	movtpl	r5, #40825	; 0x9f79
     4f0:	6e455f52 	mcrvs	15, 2, r5, cr5, cr2, {2}
     4f4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     4f8:	45534900 	ldrbmi	r4, [r3, #-2304]	; 0xfffff700
     4fc:	49540052 	ldmdbmi	r4, {r1, r4, r6}^
     500:	425f314d 	subsmi	r3, pc, #1073741843	; 0x40000013
     504:	495f4b52 	ldmdbmi	pc, {r1, r4, r6, r8, r9, fp, lr}^	; <UNPREDICTABLE>
     508:	006e5152 	rsbeq	r5, lr, r2, asr r1
     50c:	52455352 	subpl	r5, r5, #1207959553	; 0x48000001
     510:	31444556 	cmpcc	r4, r6, asr r5
     514:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
     518:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     51c:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     520:	5f31414d 	svcpl	0x0031414d
     524:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     528:	346c656e 	strbtcc	r6, [ip], #-1390	; 0xfffffa92
     52c:	5152495f 	cmppl	r2, pc, asr r9
     530:	564e006e 	strbpl	r0, [lr], -lr, rrx
     534:	455f4349 	ldrbmi	r4, [pc, #-841]	; 1f3 <__ZI_SIZE__+0x197>
     538:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
     53c:	51524965 	cmppl	r2, r5, ror #18
     540:	79654b00 	stmdbvc	r5!, {r8, r9, fp, lr}^
     544:	6961575f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, lr}^
     548:	654b5f74 	strbvs	r5, [fp, #-3956]	; 0xfffff08c
     54c:	72505f79 	subsvc	r5, r0, #484	; 0x1e4
     550:	65737365 	ldrbvs	r7, [r3, #-869]!	; 0xfffffc9b
     554:	654b0064 	strbvs	r0, [fp, #-100]	; 0xffffff9c
     558:	68435f79 	stmdavs	r3, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     55c:	5f6b6365 	svcpl	0x006b6365
     560:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
     564:	41430074 	hvcmi	12292	; 0x3004
     568:	525f314e 	subspl	r3, pc, #-2147483629	; 0x80000013
     56c:	495f3158 	ldmdbmi	pc, {r3, r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     570:	006e5152 	rsbeq	r5, lr, r2, asr r1
     574:	5f425355 	svcpl	0x00425355
     578:	435f5048 	cmpmi	pc, #72	; 0x48
     57c:	5f314e41 	svcpl	0x00314e41
     580:	495f5854 	ldmdbmi	pc, {r2, r4, r6, fp, ip, lr}^	; <UNPREDICTABLE>
     584:	006e5152 	rsbeq	r5, lr, r2, asr r1
     588:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     58c:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     590:	53550065 	cmppl	r5, #101	; 0x65
     594:	32545241 	subscc	r5, r4, #268435460	; 0x10000004
     598:	5152495f 	cmppl	r2, pc, asr r9
     59c:	654b006e 	strbvs	r0, [fp, #-110]	; 0xffffff92
     5a0:	65475f79 	strbvs	r5, [r7, #-3961]	; 0xfffff087
     5a4:	72505f74 	subsvc	r5, r0, #116, 30	; 0x1d0
     5a8:	65737365 	ldrbvs	r7, [r3, #-869]!	; 0xfffffc9b
     5ac:	58450064 	stmdapl	r5, {r2, r5, r6}^
     5b0:	5f324954 	svcpl	0x00324954
     5b4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     5b8:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     5bc:	69445f43 	stmdbvs	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     5c0:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
     5c4:	51524965 	cmppl	r2, r5, ror #18
     5c8:	43324900 	teqmi	r2, #0, 18
     5cc:	56455f32 			; <UNDEFINED> instruction: 0x56455f32
     5d0:	5152495f 	cmppl	r2, pc, asr r9
     5d4:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     5d8:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     5dc:	6e6e6168 	powvsez	f6, f6, #0.0
     5e0:	5f366c65 	svcpl	0x00366c65
     5e4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     5e8:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     5ec:	6c435f43 	mcrrvs	15, 4, r5, r3, cr3
     5f0:	50726165 	rsbspl	r6, r2, r5, ror #2
     5f4:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
     5f8:	5249676e 	subpl	r6, r9, #28835840	; 0x1b80000
     5fc:	49540051 	ldmdbmi	r4, {r0, r4, r6}^
     600:	495f334d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     604:	006e5152 	rsbeq	r5, lr, r2, asr r1
     608:	31414d44 	cmpcc	r1, r4, asr #26
     60c:	6168435f 	cmnvs	r8, pc, asr r3
     610:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     614:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     618:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
     61c:	61574253 	cmpvs	r7, r3, asr r2
     620:	7055656b 	subsvc	r6, r5, fp, ror #10
     624:	5152495f 	cmppl	r2, pc, asr r9
     628:	5757006e 	ldrbpl	r0, [r7, -lr, rrx]
     62c:	495f4744 	ldmdbmi	pc, {r2, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
     630:	006e5152 	rsbeq	r5, lr, r2, asr r1
     634:	46737542 	ldrbtmi	r7, [r3], -r2, asr #10
     638:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     63c:	5152495f 	cmppl	r2, pc, asr r9
     640:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
     644:	5f344954 	svcpl	0x00344954
     648:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     64c:	44565000 	ldrbmi	r5, [r6], #-0
     650:	5152495f 	cmppl	r2, pc, asr r9
     654:	4349006e 	movtmi	r0, #36974	; 0x906e
     658:	44005250 	strmi	r5, [r0], #-592	; 0xfffffdb0
     65c:	5f31414d 	svcpl	0x0031414d
     660:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     664:	336c656e 	cmncc	ip, #461373440	; 0x1b800000
     668:	5152495f 	cmppl	r2, pc, asr r9
     66c:	3249006e 	subcc	r0, r9, #110	; 0x6e
     670:	455f3143 	ldrbmi	r3, [pc, #-323]	; 535 <MSP_SIZE+0x135>
     674:	52495f56 	subpl	r5, r9, #344	; 0x158
     678:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     67c:	5f314d49 	svcpl	0x00314d49
     680:	495f5055 	ldmdbmi	pc, {r0, r2, r4, r6, ip, lr}^	; <UNPREDICTABLE>
     684:	006e5152 	rsbeq	r5, lr, r2, asr r1
     688:	52495453 	subpl	r5, r9, #1392508928	; 0x53000000
     68c:	43545200 	cmpmi	r4, #0, 4
     690:	5152495f 	cmppl	r2, pc, asr r9
     694:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
     698:	545f4954 	ldrbpl	r4, [pc], #-2388	; 6a0 <__RW_SIZE__+0x11c>
     69c:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     6a0:	55006665 	strpl	r6, [r0, #-1637]	; 0xfffff99b
     6a4:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
     6a8:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     6ac:	4e006e51 	mcrmi	14, 0, r6, cr0, cr1, {2}
     6b0:	614d6e6f 	cmpvs	sp, pc, ror #28
     6b4:	62616b73 	rsbvs	r6, r1, #117760	; 0x1cc00
     6b8:	6e49656c 	cdpvs	5, 4, cr6, cr9, cr12, {3}
     6bc:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     6c0:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     6c4:	5f314d49 	svcpl	0x00314d49
     6c8:	495f4343 	ldmdbmi	pc, {r0, r1, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     6cc:	006e5152 	rsbeq	r5, lr, r2, asr r1
     6d0:	52535452 	subspl	r5, r3, #1375731712	; 0x52000000
     6d4:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     6d8:	495f3149 	ldmdbmi	pc, {r0, r3, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     6dc:	006e5152 	rsbeq	r5, lr, r2, asr r1
     6e0:	4349564e 	movtmi	r5, #38478	; 0x964e
     6e4:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     6e8:	49540065 	ldmdbmi	r4, {r0, r2, r5, r6}^
     6ec:	545f314d 	ldrbpl	r3, [pc], #-333	; 6f4 <__RW_SIZE__+0x170>
     6f0:	435f4752 	cmpmi	pc, #21495808	; 0x1480000
     6f4:	495f4d4f 	ldmdbmi	pc, {r0, r1, r2, r3, r6, r8, sl, fp, lr}^	; <UNPREDICTABLE>
     6f8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     6fc:	31433249 	cmpcc	r3, r9, asr #4
     700:	5f52455f 	svcpl	0x0052455f
     704:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     708:	73795300 	cmnvc	r9, #0, 6
     70c:	6b636954 	blvs	18dac64 <__RW_SIZE__+0x18da6e0>
     710:	5152495f 	cmppl	r2, pc, asr r9
     714:	5753006e 	ldrbpl	r0, [r3, -lr, rrx]
     718:	00524549 	subseq	r4, r2, r9, asr #10
     71c:	324d4954 	subcc	r4, sp, #84, 18	; 0x150000
     720:	5152495f 	cmppl	r2, pc, asr r9
     724:	5446006e 	strbpl	r0, [r6], #-110	; 0xffffff92
     728:	44005253 	strmi	r5, [r0], #-595	; 0xfffffdad
     72c:	67756265 	ldrbvs	r6, [r5, -r5, ror #4]!
     730:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
     734:	5f726f74 	svcpl	0x00726f74
     738:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     73c:	61735500 	cmnvs	r3, r0, lsl #10
     740:	61466567 	cmpvs	r6, r7, ror #10
     744:	5f746c75 	svcpl	0x00746c75
     748:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     74c:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     750:	355f3949 	ldrbcc	r3, [pc, #-2377]	; fffffe0f <MSP_BASE+0xdfffae0f>
     754:	5152495f 	cmppl	r2, pc, asr r9
     758:	5653006e 	ldrbpl	r0, [r3], -lr, rrx
     75c:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
     760:	5152495f 	cmppl	r2, pc, asr r9
     764:	4349006e 	movtmi	r0, #36974	; 0x906e
     768:	53005245 	movwpl	r5, #581	; 0x245
     76c:	5f324950 	svcpl	0x00324950
     770:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     774:	42414900 	submi	r4, r1, #0, 18
     778:	4d440052 	stclmi	0, cr0, [r4, #-328]	; 0xfffffeb8
     77c:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     780:	6e6e6168 	powvsez	f6, f6, #0.0
     784:	5f356c65 	svcpl	0x00356c65
     788:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     78c:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     790:	495f3349 	ldmdbmi	pc, {r0, r3, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     794:	006e5152 	rsbeq	r5, lr, r2, asr r1
     798:	52505349 	subspl	r5, r0, #603979777	; 0x24000001
     79c:	43444100 	movtmi	r4, #16640	; 0x4100
     7a0:	5f325f31 	svcpl	0x00325f31
     7a4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     7a8:	41535500 	cmpmi	r3, r0, lsl #10
     7ac:	5f335452 	svcpl	0x00335452
     7b0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     7b4:	4d415400 	cfstrdmi	mvd5, [r1, #-0]
     7b8:	5f524550 	svcpl	0x00524550
     7bc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     7c0:	43545200 	cmpmi	r4, #0, 4
     7c4:	72616c41 	rsbvc	r6, r1, #16640	; 0x4100
     7c8:	52495f6d 	subpl	r5, r9, #436	; 0x1b4
     7cc:	4c006e51 	stcmi	14, cr6, [r0], {81}	; 0x51
     7d0:	415f4445 	cmpmi	pc, r5, asr #8
     7d4:	4f5f6c6c 	svcmi	0x005f6c6c
     7d8:	4c006666 	stcmi	6, cr6, [r0], {102}	; 0x66
     7dc:	445f4445 	ldrbmi	r4, [pc], #-1093	; 7e4 <__RW_SIZE__+0x260>
     7e0:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
     7e4:	6c007961 	stcvs	9, cr7, [r0], {97}	; 0x61
     7e8:	632e6465 	teqvs	lr, #1694498816	; 0x65000000
     7ec:	44454c00 	strbmi	r4, [r5], #-3072	; 0xfffff400
     7f0:	6c6c415f 	stfvse	f4, [ip], #-380	; 0xfffffe84
     7f4:	006e4f5f 	rsbeq	r4, lr, pc, asr pc
     7f8:	5f44454c 	svcpl	0x0044454c
     7fc:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     800:	6e6f6300 	cdpvs	3, 6, cr6, cr15, cr0, {0}
     804:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 63c <__RW_SIZE__+0xb8>
     808:	64656c5f 	strbtvs	r6, [r5], #-3167	; 0xfffff3a1
     80c:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
     810:	32695f68 	rsbcc	r5, r9, #104, 30	; 0x1a0
     814:	616d0063 	cmnvs	sp, r3, rrx
     818:	632e6e69 	teqvs	lr, #1680	; 0x690
     81c:	69614d00 	stmdbvs	r1!, {r8, sl, fp, lr}^
     820:	6564006e 	strbvs	r0, [r4, #-110]!	; 0xffffff92
     824:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
     828:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     82c:	65720074 	ldrbvs	r0, [r2, #-116]!	; 0xffffff8c
     830:	76696563 	strbtvc	r6, [r9], -r3, ror #10
     834:	635f6465 	cmpvs	pc, #1694498816	; 0x65000000
     838:	616d6d6f 	cmnvs	sp, pc, ror #26
     83c:	5500646e 	strpl	r6, [r0, #-1134]	; 0xfffffb92
     840:	31747261 	cmncc	r4, r1, ror #4
     844:	5f78525f 	svcpl	0x0078525f
     848:	64006e49 	strvs	r6, [r0], #-3657	; 0xfffff1b7
     84c:	63697665 	cmnvs	r9, #105906176	; 0x6500000
     850:	78655f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     854:	74756365 	ldrbtvc	r6, [r5], #-869	; 0xfffffc9b
     858:	61550065 	cmpvs	r5, r5, rrx
     85c:	5f317472 	svcpl	0x00317472
     860:	6e697250 	mcrvs	2, 3, r7, cr9, cr0, {2}
     864:	55006674 	strpl	r6, [r0, #-1652]	; 0xfffff98c
     868:	31747261 	cmncc	r4, r1, ror #4
     86c:	5f78525f 	svcpl	0x0078525f
     870:	61746144 	cmnvs	r4, r4, asr #2
     874:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
     878:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
     87c:	64657373 	strbtvs	r7, [r5], #-883	; 0xfffffc8d
     880:	65707300 	ldrbvs	r7, [r0, #-768]!	; 0xfffffd00
     884:	6c5f6465 	cfldrdvs	mvd6, [pc], {101}	; 0x65
     888:	6c657665 	stclvs	6, cr7, [r5], #-404	; 0xfffffe6c
     88c:	45434300 	strbmi	r4, [r3, #-768]	; 0xfffffd00
     890:	4d440052 	stclmi	0, cr0, [r4, #-328]	; 0xfffffeb8
     894:	43005241 	movwmi	r5, #577	; 0x241
     898:	31524d43 	cmpcc	r2, r3, asr #26
     89c:	4d434300 	stclmi	3, cr4, [r3, #-0]
     8a0:	55003252 	strpl	r3, [r0, #-594]	; 0xfffffdae
     8a4:	31747261 	cmncc	r4, r1, ror #4
     8a8:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     8ac:	50430074 	subpl	r0, r3, r4, ror r0
     8b0:	00444955 	subeq	r4, r4, r5, asr r9
     8b4:	6f746f4d 	svcvs	0x00746f4d
     8b8:	6f465f72 	svcvs	0x00465f72
     8bc:	72617772 	rsbvc	r7, r1, #29884416	; 0x1c80000
     8c0:	656c0064 	strbvs	r0, [ip, #-100]!	; 0xffffff9c
     8c4:	61645f64 	cmnvs	r4, r4, ror #30
     8c8:	52006174 	andpl	r6, r0, #116, 2
     8cc:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     8d0:	31444556 	cmpcc	r4, r6, asr r5
     8d4:	43490031 	movtmi	r0, #36913	; 0x9031
     8d8:	52005253 	andpl	r5, r0, #805306373	; 0x30000005
     8dc:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     8e0:	31444556 	cmpcc	r4, r6, asr r5
     8e4:	46420039 			; <UNDEFINED> instruction: 0x46420039
     8e8:	43005241 	movwmi	r5, #577	; 0x241
     8ec:	00315243 	eorseq	r5, r1, r3, asr #4
     8f0:	32524343 	subscc	r4, r2, #201326593	; 0xc000001
     8f4:	52434300 	subpl	r4, r3, #0, 6
     8f8:	45520033 	ldrbmi	r0, [r2, #-51]	; 0xffffffcd
     8fc:	56524553 			; <UNDEFINED> instruction: 0x56524553
     900:	30314445 	eorscc	r4, r1, r5, asr #8
     904:	53464300 	movtpl	r4, #25344	; 0x6300
     908:	45520052 	ldrbmi	r0, [r2, #-82]	; 0xffffffae
     90c:	56524553 			; <UNDEFINED> instruction: 0x56524553
     910:	33314445 	teqcc	r1, #1157627904	; 0x45000000
     914:	746f4d00 	strbtvc	r4, [pc], #-3328	; 91c <__RW_SIZE__+0x398>
     918:	535f726f 	cmppl	pc, #-268435450	; 0xf0000006
     91c:	00706f74 	rsbseq	r6, r0, r4, ror pc
     920:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     924:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     928:	54003731 	strpl	r3, [r0], #-1841	; 0xfffff8cf
     92c:	545f4d49 	ldrbpl	r4, [pc], #-3401	; 934 <__RW_SIZE__+0x3b0>
     930:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     934:	53006665 	movwpl	r6, #1637	; 0x665
     938:	0052434d 	subseq	r4, r2, sp, asr #6
     93c:	43524941 	cmpmi	r2, #1064960	; 0x104000
     940:	43530052 	cmpmi	r3, #82	; 0x52
     944:	79545f42 	ldmdbvc	r4, {r1, r6, r8, r9, sl, fp, ip, lr}^
     948:	42006570 	andmi	r6, r0, #112, 10	; 0x1c000000
     94c:	00525444 	subseq	r5, r2, r4, asr #8
     950:	34524343 	ldrbcc	r4, [r2], #-835	; 0xfffffcbd
     954:	53455200 	movtpl	r5, #20992	; 0x5200
     958:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     95c:	00323144 	eorseq	r3, r2, r4, asr #2
     960:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     964:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     968:	52003431 	andpl	r3, r0, #822083584	; 0x31000000
     96c:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     970:	31444556 	cmpcc	r4, r6, asr r5
     974:	45520035 	ldrbmi	r0, [r2, #-53]	; 0xffffffcb
     978:	56524553 			; <UNDEFINED> instruction: 0x56524553
     97c:	36314445 	ldrtcc	r4, [r1], -r5, asr #8
     980:	53455200 	movtpl	r5, #20992	; 0x5200
     984:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     988:	00383144 	eorseq	r3, r8, r4, asr #2
     98c:	53434853 	movtpl	r4, #14419	; 0x3853
     990:	70730052 	rsbsvc	r0, r3, r2, asr r0
     994:	00646565 	rsbeq	r6, r4, r5, ror #10
     998:	41464d4d 	cmpmi	r6, sp, asr #26
     99c:	49440052 	stmdbmi	r4, {r1, r4, r6}^
     9a0:	56005245 	strpl	r5, [r0], -r5, asr #4
     9a4:	00524f54 	subseq	r4, r2, r4, asr pc
     9a8:	52415349 	subpl	r5, r1, #603979777	; 0x24000001
     9ac:	53464400 	movtpl	r4, #25600	; 0x6400
     9b0:	46480052 			; <UNDEFINED> instruction: 0x46480052
     9b4:	4d005253 	sfmmi	f5, 4, [r0, #-332]	; 0xfffffeb4
     9b8:	0052464d 	subseq	r4, r2, sp, asr #12
     9bc:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     9c0:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     9c4:	61550039 	cmpvs	r5, r9, lsr r0
     9c8:	5f317472 	svcpl	0x00317472
     9cc:	495f5852 	ldmdbmi	pc, {r1, r4, r6, fp, ip, lr}^	; <UNPREDICTABLE>
     9d0:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     9d4:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
     9d8:	616e455f 	cmnvs	lr, pc, asr r5
     9dc:	00656c62 	rsbeq	r6, r5, r2, ror #24
     9e0:	6f746f6d 	svcvs	0x00746f6d
     9e4:	00632e72 	rsbeq	r2, r3, r2, ror lr
     9e8:	52534641 	subspl	r4, r3, #68157440	; 0x4100000
     9ec:	746f4d00 	strbtvc	r4, [pc], #-3328	; 9f4 <__RW_SIZE__+0x470>
     9f0:	525f726f 	subspl	r7, pc, #-268435450	; 0xf0000006
     9f4:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
     9f8:	68006576 	stmdavs	r0, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
     9fc:	00706165 	rsbseq	r6, r0, r5, ror #2
     a00:	76657270 			; <UNDEFINED> instruction: 0x76657270
     a04:	70616548 	rsbvc	r6, r1, r8, asr #10
     a08:	78656e00 	stmdavc	r5!, {r9, sl, fp, sp, lr}^
     a0c:	61654874 	smcvs	21636	; 0x5484
     a10:	75720070 	ldrbvc	r0, [r2, #-112]!	; 0xffffff90
     a14:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
     a18:	00632e65 	rsbeq	r2, r3, r5, ror #28
     a1c:	7262735f 	rsbvc	r7, r2, #2080374785	; 0x7c000001
     a20:	5f5f006b 	svcpl	0x005f006b
     a24:	4c5f495a 	mrrcmi	9, 5, r4, pc, cr10	; <UNPREDICTABLE>
     a28:	54494d49 	strbpl	r4, [r9], #-3401	; 0xfffff2b7
     a2c:	4e005f5f 	mcrmi	15, 0, r5, cr0, cr15, {2}
     a30:	485f494d 	ldmdami	pc, {r0, r2, r3, r6, r8, fp, lr}^	; <UNPREDICTABLE>
     a34:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     a38:	44007265 	strmi	r7, [r0], #-613	; 0xfffffd9b
     a3c:	67756265 	ldrbvs	r6, [r5, -r5, ror #4]!
     a40:	5f6e6f4d 	svcpl	0x006e6f4d
     a44:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     a48:	0072656c 	rsbseq	r6, r2, ip, ror #10
     a4c:	31414d44 	cmpcc	r1, r4, asr #26
     a50:	6168435f 	cmnvs	r8, pc, asr r3
     a54:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     a58:	52495f37 	subpl	r5, r9, #55, 30	; 0xdc
     a5c:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     a60:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     a64:	44575700 	ldrbmi	r5, [r7], #-1792	; 0xfffff900
     a68:	52495f47 	subpl	r5, r9, #284	; 0x11c
     a6c:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     a70:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     a74:	41535500 	cmpmi	r3, r0, lsl #10
     a78:	5f315452 	svcpl	0x00315452
     a7c:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     a80:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     a84:	46007265 	strmi	r7, [r0], -r5, ror #4
     a88:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     a8c:	7065525f 	rsbvc	r5, r5, pc, asr r2
     a90:	0074726f 	rsbseq	r7, r4, pc, ror #4
     a94:	5f4e4143 	svcpl	0x004e4143
     a98:	5f454353 	svcpl	0x00454353
     a9c:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     aa0:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     aa4:	49007265 	stmdbmi	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
     aa8:	5f324332 	svcpl	0x00324332
     aac:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     ab0:	61485152 	cmpvs	r8, r2, asr r1
     ab4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     ab8:	50530072 	subspl	r0, r3, r2, ror r0
     abc:	495f3149 	ldmdbmi	pc, {r0, r3, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     ac0:	61485152 	cmpvs	r8, r2, asr r1
     ac4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     ac8:	54470072 	strbpl	r0, [r7], #-114	; 0xffffff8e
     acc:	50005250 	andpl	r5, r0, r0, asr r2
     ad0:	495f4456 	ldmdbmi	pc, {r1, r2, r4, r6, sl, lr}^	; <UNPREDICTABLE>
     ad4:	61485152 	cmpvs	r8, r2, asr r1
     ad8:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     adc:	4d440072 	stclmi	0, cr0, [r4, #-456]	; 0xfffffe38
     ae0:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     ae4:	6e6e6168 	powvsez	f6, f6, #0.0
     ae8:	5f316c65 	svcpl	0x00316c65
     aec:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     af0:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     af4:	45007265 	strmi	r7, [r0, #-613]	; 0xfffffd9b
     af8:	33495458 	movtcc	r5, #37976	; 0x9458
     afc:	5152495f 	cmppl	r2, pc, asr r9
     b00:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     b04:	0072656c 	rsbseq	r6, r2, ip, ror #10
     b08:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
     b0c:	5f6b6369 	svcpl	0x006b6369
     b10:	67616c46 	strbvs	r6, [r1, -r6, asr #24]!
     b14:	61735500 	cmnvs	r3, r0, lsl #10
     b18:	61466567 	cmpvs	r6, r7, ror #10
     b1c:	5f746c75 	svcpl	0x00746c75
     b20:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     b24:	0072656c 	rsbseq	r6, r2, ip, ror #10
     b28:	5f425355 	svcpl	0x00425355
     b2c:	435f5048 	cmpmi	pc, #72	; 0x48
     b30:	545f4e41 	ldrbpl	r4, [pc], #-3649	; b38 <__RW_SIZE__+0x5b4>
     b34:	52495f58 	subpl	r5, r9, #88, 30	; 0x160
     b38:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     b3c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     b40:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     b44:	50555f31 	subspl	r5, r5, r1, lsr pc
     b48:	5152495f 	cmppl	r2, pc, asr r9
     b4c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     b50:	0072656c 	rsbseq	r6, r2, ip, ror #10
     b54:	31414d44 	cmpcc	r1, r4, asr #26
     b58:	6168435f 	cmnvs	r8, pc, asr r3
     b5c:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     b60:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
     b64:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     b68:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     b6c:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     b70:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     b74:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     b78:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     b7c:	61745300 	cmnvs	r4, r0, lsl #6
     b80:	725f6b63 	subsvc	r6, pc, #101376	; 0x18c00
     b84:	54006765 	strpl	r6, [r0], #-1893	; 0xfffff89b
     b88:	5f314d49 	svcpl	0x00314d49
     b8c:	5f475254 	svcpl	0x00475254
     b90:	5f4d4f43 	svcpl	0x004d4f43
     b94:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     b98:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     b9c:	55007265 	strpl	r7, [r0, #-613]	; 0xfffffd9b
     ba0:	61574253 	cmpvs	r7, r3, asr r2
     ba4:	7055656b 	subsvc	r6, r5, fp, ror #10
     ba8:	5152495f 	cmppl	r2, pc, asr r9
     bac:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     bb0:	0072656c 	rsbseq	r6, r2, ip, ror #10
     bb4:	4d6d654d 	cfstr64mi	mvdx6, [sp, #-308]!	; 0xfffffecc
     bb8:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
     bbc:	61485f65 	cmpvs	r8, r5, ror #30
     bc0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     bc4:	61480072 	hvcvs	32770	; 0x8002
     bc8:	61466472 	hvcvs	26178	; 0x6642
     bcc:	5f746c75 	svcpl	0x00746c75
     bd0:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     bd4:	0072656c 	rsbseq	r6, r2, ip, ror #10
     bd8:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     bdc:	79545f54 	ldmdbvc	r4, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
     be0:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     be4:	75420066 	strbvc	r0, [r2, #-102]	; 0xffffff9a
     be8:	75614673 	strbvc	r4, [r1, #-1651]!	; 0xfffff98d
     bec:	485f746c 	ldmdami	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     bf0:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     bf4:	46007265 	strmi	r7, [r0], -r5, ror #4
     bf8:	4853414c 	ldmdami	r3, {r2, r3, r6, r8, lr}^
     bfc:	5152495f 	cmppl	r2, pc, asr r9
     c00:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     c04:	0072656c 	rsbseq	r6, r2, ip, ror #10
     c08:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     c0c:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     c10:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     c14:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     c18:	43444100 	movtmi	r4, #16640	; 0x4100
     c1c:	5f325f31 	svcpl	0x00325f31
     c20:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     c24:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     c28:	43007265 	movwmi	r7, #613	; 0x265
     c2c:	525f4e41 	subspl	r4, pc, #1040	; 0x410
     c30:	495f3158 	ldmdbmi	pc, {r3, r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     c34:	61485152 	cmpvs	r8, r2, asr r1
     c38:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     c3c:	50530072 	subspl	r0, r3, r2, ror r0
     c40:	495f3249 	ldmdbmi	pc, {r0, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     c44:	61485152 	cmpvs	r8, r2, asr r1
     c48:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     c4c:	4d440072 	stclmi	0, cr0, [r4, #-456]	; 0xfffffe38
     c50:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     c54:	6e6e6168 	powvsez	f6, f6, #0.0
     c58:	5f326c65 	svcpl	0x00326c65
     c5c:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     c60:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     c64:	45007265 	strmi	r7, [r0, #-613]	; 0xfffffd9b
     c68:	31495458 	cmpcc	r9, r8, asr r4
     c6c:	5152495f 	cmppl	r2, pc, asr r9
     c70:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     c74:	0072656c 	rsbseq	r6, r2, ip, ror #10
     c78:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
     c7c:	485f5653 	ldmdami	pc, {r0, r1, r4, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
     c80:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     c84:	73007265 	movwvc	r7, #613	; 0x265
     c88:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     c8c:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
     c90:	2e74695f 	mrccs	9, 3, r6, cr4, cr15, {2}
     c94:	4d440063 	stclmi	0, cr0, [r4, #-396]	; 0xfffffe74
     c98:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     c9c:	6e6e6168 	powvsez	f6, f6, #0.0
     ca0:	5f356c65 	svcpl	0x00356c65
     ca4:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     ca8:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     cac:	45007265 	strmi	r7, [r0, #-613]	; 0xfffffd9b
     cb0:	34495458 	strbcc	r5, [r9], #-1112	; 0xfffffba8
     cb4:	5152495f 	cmppl	r2, pc, asr r9
     cb8:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     cbc:	0072656c 	rsbseq	r6, r2, ip, ror #10
     cc0:	5f434352 	svcpl	0x00434352
     cc4:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     cc8:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     ccc:	44007265 	strmi	r7, [r0], #-613	; 0xfffffd9b
     cd0:	5f31414d 	svcpl	0x0031414d
     cd4:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     cd8:	366c656e 	strbtcc	r6, [ip], -lr, ror #10
     cdc:	5152495f 	cmppl	r2, pc, asr r9
     ce0:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     ce4:	0072656c 	rsbseq	r6, r2, ip, ror #10
     ce8:	5f435452 	svcpl	0x00435452
     cec:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     cf0:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     cf4:	53007265 	movwpl	r7, #613	; 0x265
     cf8:	485f4356 	ldmdami	pc, {r1, r2, r4, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     cfc:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     d00:	53007265 	movwpl	r7, #613	; 0x265
     d04:	6b636174 	blvs	18d92dc <__RW_SIZE__+0x18d8d58>
     d08:	6d75445f 	cfldrdvs	mvd4, [r5, #-380]!	; 0xfffffe84
     d0c:	49540070 	ldmdbmi	r4, {r4, r5, r6}^
     d10:	495f344d 	ldmdbmi	pc, {r0, r2, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     d14:	61485152 	cmpvs	r8, r2, asr r1
     d18:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     d1c:	79530072 	ldmdbvc	r3, {r1, r4, r5, r6}^
     d20:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
     d24:	61485f6b 	cmpvs	r8, fp, ror #30
     d28:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     d2c:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
     d30:	425f314d 	subsmi	r3, pc, #1073741843	; 0x40000013
     d34:	495f4b52 	ldmdbmi	pc, {r1, r4, r6, r8, r9, fp, lr}^	; <UNPREDICTABLE>
     d38:	61485152 	cmpvs	r8, r2, asr r1
     d3c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     d40:	32490072 	subcc	r0, r9, #114	; 0x72
     d44:	455f3243 	ldrbmi	r3, [pc, #-579]	; b09 <__RW_SIZE__+0x585>
     d48:	52495f56 	subpl	r5, r9, #344	; 0x158
     d4c:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     d50:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     d54:	43324900 	teqmi	r2, #0, 18
     d58:	52455f31 	subpl	r5, r5, #49, 30	; 0xc4
     d5c:	5152495f 	cmppl	r2, pc, asr r9
     d60:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     d64:	0072656c 	rsbseq	r6, r2, ip, ror #10
     d68:	5f425355 	svcpl	0x00425355
     d6c:	435f504c 	cmpmi	pc, #76	; 0x4c
     d70:	525f4e41 	subspl	r4, pc, #1040	; 0x410
     d74:	495f3058 	ldmdbmi	pc, {r3, r4, r6, ip, sp}^	; <UNPREDICTABLE>
     d78:	61485152 	cmpvs	r8, r2, asr r1
     d7c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     d80:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
     d84:	435f314d 	cmpmi	pc, #1073741843	; 0x40000013
     d88:	52495f43 	subpl	r5, r9, #268	; 0x10c
     d8c:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     d90:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     d94:	766e4900 	strbtvc	r4, [lr], -r0, lsl #18
     d98:	64696c61 	strbtvs	r6, [r9], #-3169	; 0xfffff39f
     d9c:	5253495f 	subspl	r4, r3, #1556480	; 0x17c000
     da0:	414d4400 	cmpmi	sp, r0, lsl #8
     da4:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     da8:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     dac:	495f336c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     db0:	61485152 	cmpvs	r8, r2, asr r1
     db4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     db8:	58450072 	stmdapl	r5, {r1, r4, r5, r6}^
     dbc:	5f324954 	svcpl	0x00324954
     dc0:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     dc4:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     dc8:	54007265 	strpl	r7, [r0], #-613	; 0xfffffd9b
     dcc:	45504d41 	ldrbmi	r4, [r0, #-3393]	; 0xfffff2bf
     dd0:	52495f52 	subpl	r5, r9, #328	; 0x148
     dd4:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     dd8:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     ddc:	41535500 	cmpmi	r3, r0, lsl #10
     de0:	5f335452 	svcpl	0x00335452
     de4:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     de8:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     dec:	45007265 	strmi	r7, [r0, #-613]	; 0xfffffd9b
     df0:	31495458 	cmpcc	r9, r8, asr r4
     df4:	30315f35 	eorscc	r5, r1, r5, lsr pc
     df8:	5152495f 	cmppl	r2, pc, asr r9
     dfc:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     e00:	0072656c 	rsbseq	r6, r2, ip, ror #10
     e04:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     e08:	5f355f39 	svcpl	0x00355f39
     e0c:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     e10:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     e14:	52007265 	andpl	r7, r0, #1342177286	; 0x50000006
     e18:	6c414354 	mcrrvs	3, 5, r4, r1, cr4
     e1c:	5f6d7261 	svcpl	0x006d7261
     e20:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     e24:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     e28:	55007265 	strpl	r7, [r0, #-613]	; 0xfffffd9b
     e2c:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
     e30:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     e34:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     e38:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     e3c:	79654b00 	stmdbvc	r5!, {r8, r9, fp, lr}^
     e40:	6c61565f 	stclvs	6, cr5, [r1], #-380	; 0xfffffe84
     e44:	73006575 	movwvc	r6, #1397	; 0x575
     e48:	6b636174 	blvs	18d9420 <__RW_SIZE__+0x18d8e9c>
     e4c:	43324900 	teqmi	r2, #0, 18
     e50:	56455f31 			; <UNDEFINED> instruction: 0x56455f31
     e54:	5152495f 	cmppl	r2, pc, asr r9
     e58:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     e5c:	0072656c 	rsbseq	r6, r2, ip, ror #10
     e60:	324d4954 	subcc	r4, sp, #84, 18	; 0x150000
     e64:	5152495f 	cmppl	r2, pc, asr r9
     e68:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     e6c:	0072656c 	rsbseq	r6, r2, ip, ror #10
     e70:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
     e74:	5f6b6369 	svcpl	0x006b6369
     e78:	706f7453 	rsbvc	r7, pc, r3, asr r4	; <UNPREDICTABLE>
     e7c:	52544300 	subspl	r4, r4, #0, 6
     e80:	7973004c 	ldmdbvc	r3!, {r2, r3, r6}^
     e84:	63697473 	cmnvs	r9, #1929379840	; 0x73000000
     e88:	00632e6b 	rsbeq	r2, r3, fp, ror #28
     e8c:	494c4143 	stmdbmi	ip, {r0, r1, r6, r8, lr}^
     e90:	79530042 	ldmdbvc	r3, {r1, r6}^
     e94:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
     e98:	68435f6b 	stmdavs	r3, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     e9c:	5f6b6365 	svcpl	0x006b6365
     ea0:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
     ea4:	0074756f 	rsbseq	r7, r4, pc, ror #10
     ea8:	44414f4c 	strbmi	r4, [r1], #-3916	; 0xfffff0b4
     eac:	73795300 	cmnvc	r9, #0, 6
     eb0:	6b636954 	blvs	18db408 <__RW_SIZE__+0x18dae84>
     eb4:	6e75525f 	mrcvs	2, 3, r5, cr5, cr15, {2}
     eb8:	73795300 	cmnvc	r9, #0, 6
     ebc:	6b636954 	blvs	18db414 <__RW_SIZE__+0x18dae90>
     ec0:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     ec4:	736d0065 	cmnvc	sp, #101	; 0x65
     ec8:	53006365 	movwpl	r6, #869	; 0x365
     ecc:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
     ed0:	4f5f6b63 	svcmi	0x005f6b63
     ed4:	69545f53 	ldmdbvs	r4, {r0, r1, r4, r6, r8, r9, sl, fp, ip, lr}^
     ed8:	53006b63 	movwpl	r6, #2915	; 0xb63
     edc:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
     ee0:	475f6b63 	ldrbmi	r6, [pc, -r3, ror #22]
     ee4:	545f7465 	ldrbpl	r7, [pc], #-1125	; eec <__RW_SIZE__+0x968>
     ee8:	00656d69 	rsbeq	r6, r5, r9, ror #26
     eec:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
     ef0:	5f6b6369 	svcpl	0x006b6369
     ef4:	5f746547 	svcpl	0x00746547
     ef8:	64616f4c 	strbtvs	r6, [r1], #-3916	; 0xfffff0b4
     efc:	6d69545f 	cfstrdvs	mvd5, [r9, #-380]!	; 0xfffffe84
     f00:	49540065 	ldmdbmi	r4, {r0, r2, r5, r6}^
     f04:	525f344d 	subspl	r3, pc, #1291845632	; 0x4d000000
     f08:	61657065 	cmnvs	r5, r5, rrx
     f0c:	49540074 	ldmdbmi	r4, {r2, r4, r5, r6}^
     f10:	535f344d 	cmppl	pc, #1291845632	; 0x4d000000
     f14:	00706f74 	rsbseq	r6, r0, r4, ror pc
     f18:	344d4954 	strbcc	r4, [sp], #-2388	; 0xfffff6ac
     f1c:	6568435f 	strbvs	r4, [r8, #-863]!	; 0xfffffca1
     f20:	545f6b63 	ldrbpl	r6, [pc], #-2915	; f28 <__RW_SIZE__+0x9a4>
     f24:	6f656d69 	svcvs	0x00656d69
     f28:	54007475 	strpl	r7, [r0], #-1141	; 0xfffffb8b
     f2c:	5f324d49 	svcpl	0x00324d49
     f30:	706f7453 	rsbvc	r7, pc, r3, asr r4	; <UNPREDICTABLE>
     f34:	63746177 	cmnvs	r4, #-1073741795	; 0xc000001d
     f38:	74535f68 	ldrbvc	r5, [r3], #-3944	; 0xfffff098
     f3c:	00747261 	rsbseq	r7, r4, r1, ror #4
     f40:	324d4954 	subcc	r4, sp, #84, 18	; 0x150000
     f44:	6f74535f 	svcvs	0x0074535f
     f48:	74617770 	strbtvc	r7, [r1], #-1904	; 0xfffff890
     f4c:	535f6863 	cmppl	pc, #6488064	; 0x630000
     f50:	00706f74 	rsbseq	r6, r0, r4, ror pc
     f54:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     f58:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
     f5c:	632e7265 	teqvs	lr, #1342177286	; 0x50000006
     f60:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     f64:	754f5f33 	strbvc	r5, [pc, #-3891]	; 39 <shift+0x39>
     f68:	72465f74 	subvc	r5, r6, #116, 30	; 0x1d0
     f6c:	475f7165 	ldrbmi	r7, [pc, -r5, ror #2]
     f70:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
     f74:	6f697461 	svcvs	0x00697461
     f78:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     f7c:	4f5f334d 	svcmi	0x005f334d
     f80:	535f7475 	cmppl	pc, #1962934272	; 0x75000000
     f84:	00706f74 	rsbseq	r6, r0, r4, ror pc
     f88:	334d4954 	movtcc	r4, #55636	; 0xd954
     f8c:	74754f5f 	ldrbtvc	r4, [r5], #-3935	; 0xfffff0a1
     f90:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     f94:	49540074 	ldmdbmi	r4, {r2, r4, r5, r6}^
     f98:	445f324d 	ldrbmi	r3, [pc], #-589	; fa0 <__RW_SIZE__+0xa1c>
     f9c:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
     fa0:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     fa4:	68435f34 	stmdavs	r3, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
     fa8:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
     fac:	6c61565f 	stclvs	6, cr5, [r1], #-380	; 0xfffffe84
     fb0:	55006575 	strpl	r6, [r0, #-1397]	; 0xfffffa8b
     fb4:	31747261 	cmncc	r4, r1, ror #4
     fb8:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
     fbc:	6572505f 	ldrbvs	r5, [r2, #-95]!	; 0xffffffa1
     fc0:	64657373 	strbtvs	r7, [r5], #-883	; 0xfffffc8d
     fc4:	765f5f00 	ldrbvc	r5, [pc], -r0, lsl #30
     fc8:	696c5f61 	stmdbvs	ip!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
     fcc:	75007473 	strvc	r7, [r0, #-1139]	; 0xfffffb8d
     fd0:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
     fd4:	6f640063 	svcvs	0x00640063
     fd8:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
     fdc:	72615500 	rsbvc	r5, r1, #0, 10
     fe0:	535f3174 	cmppl	pc, #116, 2
     fe4:	5f646e65 	svcpl	0x00646e65
     fe8:	65747942 	ldrbvs	r7, [r4, #-2370]!	; 0xfffff6be
     fec:	72615500 	rsbvc	r5, r1, #0, 10
     ff0:	475f3174 			; <UNDEFINED> instruction: 0x475f3174
     ff4:	435f7465 	cmpmi	pc, #1694498816	; 0x65000000
     ff8:	00726168 	rsbseq	r6, r2, r8, ror #2
     ffc:	64756162 	ldrbtvs	r6, [r5], #-354	; 0xfffffe9e
    1000:	72615500 	rsbvc	r5, r1, #0, 10
    1004:	535f3174 	cmppl	pc, #116, 2
    1008:	5f646e65 	svcpl	0x00646e65
    100c:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
    1010:	6600676e 	strvs	r6, [r0], -lr, ror #14
    1014:	00636172 	rsbeq	r6, r3, r2, ror r1
    1018:	746e616d 	strbtvc	r6, [lr], #-365	; 0xfffffe93
    101c:	72747300 	rsbsvc	r7, r4, #0, 6
    1020:	00676e69 	rsbeq	r6, r7, r9, ror #28
    1024:	6e675f5f 	mcrvs	15, 3, r5, cr7, cr15, {2}
    1028:	765f6375 			; <UNDEFINED> instruction: 0x765f6375
    102c:	696c5f61 	stmdbvs	ip!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    1030:	5f007473 	svcpl	0x00007473
    1034:	0070615f 	rsbseq	r6, r0, pc, asr r1
    1038:	72707376 	rsbsvc	r7, r0, #-671088639	; 0xd8000001
    103c:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <__RW_SIZE__+0x10d07a0>
   4:	6f532820 	svcvs	0x00532820
   8:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
   c:	43207972 	teqmi	r0, #1867776	; 0x1c8000
  10:	4265646f 	rsbmi	r6, r5, #1862270976	; 0x6f000000
  14:	68636e65 	stmdavs	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
  18:	74694c20 	strbtvc	r4, [r9], #-3104	; 0xfffff3e0
  1c:	30322065 	eorscc	r2, r2, r5, rrx
  20:	312e3331 	teqcc	lr, r1, lsr r3
  24:	34322d31 	ldrtcc	r2, [r2], #-3377	; 0xfffff2cf
  28:	2e342029 	cdpcs	0, 3, cr2, cr4, cr9, {1}
  2c:	00312e38 	eorseq	r2, r1, r8, lsr lr

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003041 	andeq	r3, r0, r1, asr #32
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000026 	andeq	r0, r0, r6, lsr #32
  10:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
  18:	0600334d 	streq	r3, [r0], -sp, asr #6
  1c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	1a011803 	bne	4603c <__RW_SIZE__+0x45ab8>
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x00000030 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
       0:	0000000c 	andeq	r0, r0, ip
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	0000000c 	andeq	r0, r0, ip
      14:	00000000 	andeq	r0, r0, r0
      18:	080031ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, ip, sp}
      1c:	00000058 	andeq	r0, r0, r8, asr r0
      20:	0000000c 	andeq	r0, r0, ip
      24:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
      28:	7c020001 	stcvc	0, cr0, [r2], {1}
      2c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      30:	0000000c 	andeq	r0, r0, ip
      34:	00000020 	andeq	r0, r0, r0, lsr #32
      38:	08003244 	stmdaeq	r0, {r2, r6, r9, ip, sp}
      3c:	00000008 	andeq	r0, r0, r8
      40:	0000000c 	andeq	r0, r0, ip
      44:	00000020 	andeq	r0, r0, r0, lsr #32
      48:	0800324c 	stmdaeq	r0, {r2, r3, r6, r9, ip, sp}
      4c:	00000006 	andeq	r0, r0, r6
      50:	0000000c 	andeq	r0, r0, ip
      54:	00000020 	andeq	r0, r0, r0, lsr #32
      58:	08003254 	stmdaeq	r0, {r2, r4, r6, r9, ip, sp}
      5c:	00000008 	andeq	r0, r0, r8
      60:	0000000c 	andeq	r0, r0, ip
      64:	00000020 	andeq	r0, r0, r0, lsr #32
      68:	0800325c 	stmdaeq	r0, {r2, r3, r4, r6, r9, ip, sp}
      6c:	00000006 	andeq	r0, r0, r6
      70:	0000000c 	andeq	r0, r0, ip
      74:	00000020 	andeq	r0, r0, r0, lsr #32
      78:	08003264 	stmdaeq	r0, {r2, r5, r6, r9, ip, sp}
      7c:	00000006 	andeq	r0, r0, r6
      80:	0000000c 	andeq	r0, r0, ip
      84:	00000020 	andeq	r0, r0, r0, lsr #32
      88:	0800326c 	stmdaeq	r0, {r2, r3, r5, r6, r9, ip, sp}
      8c:	00000006 	andeq	r0, r0, r6
      90:	0000000c 	andeq	r0, r0, ip
      94:	00000020 	andeq	r0, r0, r0, lsr #32
      98:	08003274 	stmdaeq	r0, {r2, r4, r5, r6, r9, ip, sp}
      9c:	00000006 	andeq	r0, r0, r6
      a0:	0000000c 	andeq	r0, r0, ip
      a4:	00000020 	andeq	r0, r0, r0, lsr #32
      a8:	0800327c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, ip, sp}
      ac:	00000006 	andeq	r0, r0, r6
      b0:	0000000c 	andeq	r0, r0, ip
      b4:	00000020 	andeq	r0, r0, r0, lsr #32
      b8:	08003284 	stmdaeq	r0, {r2, r7, r9, ip, sp}
      bc:	00000006 	andeq	r0, r0, r6
      c0:	0000000c 	andeq	r0, r0, ip
      c4:	00000020 	andeq	r0, r0, r0, lsr #32
      c8:	0800328c 	stmdaeq	r0, {r2, r3, r7, r9, ip, sp}
      cc:	00000006 	andeq	r0, r0, r6
      d0:	0000000c 	andeq	r0, r0, ip
      d4:	00000020 	andeq	r0, r0, r0, lsr #32
      d8:	08003294 	stmdaeq	r0, {r2, r4, r7, r9, ip, sp}
      dc:	00000006 	andeq	r0, r0, r6
      e0:	0000000c 	andeq	r0, r0, ip
      e4:	00000020 	andeq	r0, r0, r0, lsr #32
      e8:	0800329c 	stmdaeq	r0, {r2, r3, r4, r7, r9, ip, sp}
      ec:	00000006 	andeq	r0, r0, r6
      f0:	0000000c 	andeq	r0, r0, ip
      f4:	00000020 	andeq	r0, r0, r0, lsr #32
      f8:	080032a4 	stmdaeq	r0, {r2, r5, r7, r9, ip, sp}
      fc:	00000004 	andeq	r0, r0, r4
     100:	0000000c 	andeq	r0, r0, ip
     104:	00000020 	andeq	r0, r0, r0, lsr #32
     108:	080032a8 	stmdaeq	r0, {r3, r5, r7, r9, ip, sp}
     10c:	00000004 	andeq	r0, r0, r4
     110:	0000000c 	andeq	r0, r0, ip
     114:	00000020 	andeq	r0, r0, r0, lsr #32
     118:	080032ac 	stmdaeq	r0, {r2, r3, r5, r7, r9, ip, sp}
     11c:	00000004 	andeq	r0, r0, r4
     120:	0000000c 	andeq	r0, r0, ip
     124:	00000020 	andeq	r0, r0, r0, lsr #32
     128:	080032b0 	stmdaeq	r0, {r4, r5, r7, r9, ip, sp}
     12c:	00000006 	andeq	r0, r0, r6
     130:	0000000c 	andeq	r0, r0, ip
     134:	00000020 	andeq	r0, r0, r0, lsr #32
     138:	080032b8 	stmdaeq	r0, {r3, r4, r5, r7, r9, ip, sp}
     13c:	00000008 	andeq	r0, r0, r8
     140:	0000000c 	andeq	r0, r0, ip
     144:	00000020 	andeq	r0, r0, r0, lsr #32
     148:	080032c0 	stmdaeq	r0, {r6, r7, r9, ip, sp}
     14c:	00000008 	andeq	r0, r0, r8
     150:	0000000c 	andeq	r0, r0, ip
     154:	00000020 	andeq	r0, r0, r0, lsr #32
     158:	080032c8 	stmdaeq	r0, {r3, r6, r7, r9, ip, sp}
     15c:	00000006 	andeq	r0, r0, r6
     160:	0000000c 	andeq	r0, r0, ip
     164:	00000020 	andeq	r0, r0, r0, lsr #32
     168:	080032d0 	stmdaeq	r0, {r4, r6, r7, r9, ip, sp}
     16c:	00000008 	andeq	r0, r0, r8
     170:	0000000c 	andeq	r0, r0, ip
     174:	00000020 	andeq	r0, r0, r0, lsr #32
     178:	080032d8 	stmdaeq	r0, {r3, r4, r6, r7, r9, ip, sp}
     17c:	00000008 	andeq	r0, r0, r8
     180:	0000000c 	andeq	r0, r0, ip
     184:	00000020 	andeq	r0, r0, r0, lsr #32
     188:	080032e0 	stmdaeq	r0, {r5, r6, r7, r9, ip, sp}
     18c:	00000006 	andeq	r0, r0, r6
     190:	0000000c 	andeq	r0, r0, ip
     194:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     198:	7c020001 	stcvc	0, cr0, [r2], {1}
     19c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     1a0:	00000010 	andeq	r0, r0, r0, lsl r0
     1a4:	00000190 	muleq	r0, r0, r1
     1a8:	080032e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, ip, sp}
     1ac:	000000f8 	strdeq	r0, [r0], -r8
     1b0:	00080e46 	andeq	r0, r8, r6, asr #28
     1b4:	00000014 	andeq	r0, r0, r4, lsl r0
     1b8:	00000190 	muleq	r0, r0, r1
     1bc:	080033e0 	stmdaeq	r0, {r5, r6, r7, r8, r9, ip, sp}
     1c0:	0000008a 	andeq	r0, r0, sl, lsl #1
     1c4:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
     1c8:	00000001 	andeq	r0, r0, r1
     1cc:	0000000c 	andeq	r0, r0, ip
     1d0:	00000190 	muleq	r0, r0, r1
     1d4:	0800346c 	stmdaeq	r0, {r2, r3, r5, r6, sl, ip, sp}
     1d8:	00000082 	andeq	r0, r0, r2, lsl #1
     1dc:	0000000c 	andeq	r0, r0, ip
     1e0:	00000190 	muleq	r0, r0, r1
     1e4:	080034f0 	stmdaeq	r0, {r4, r5, r6, r7, sl, ip, sp}
     1e8:	00000082 	andeq	r0, r0, r2, lsl #1
     1ec:	0000000c 	andeq	r0, r0, ip
     1f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     1f4:	7c020001 	stcvc	0, cr0, [r2], {1}
     1f8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     1fc:	0000000c 	andeq	r0, r0, ip
     200:	000001ec 	andeq	r0, r0, ip, ror #3
     204:	08003574 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, ip, sp}
     208:	00000026 	andeq	r0, r0, r6, lsr #32
     20c:	0000000c 	andeq	r0, r0, ip
     210:	000001ec 	andeq	r0, r0, ip, ror #3
     214:	0800359c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, ip, sp}
     218:	0000002a 	andeq	r0, r0, sl, lsr #32
     21c:	0000000c 	andeq	r0, r0, ip
     220:	000001ec 	andeq	r0, r0, ip, ror #3
     224:	080035c8 	stmdaeq	r0, {r3, r6, r7, r8, sl, ip, sp}
     228:	0000002e 	andeq	r0, r0, lr, lsr #32
     22c:	0000000c 	andeq	r0, r0, ip
     230:	000001ec 	andeq	r0, r0, ip, ror #3
     234:	080035f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sl, ip, sp}
     238:	0000002e 	andeq	r0, r0, lr, lsr #32
     23c:	00000014 	andeq	r0, r0, r4, lsl r0
     240:	000001ec 	andeq	r0, r0, ip, ror #3
     244:	08003628 	stmdaeq	r0, {r3, r5, r9, sl, ip, sp}
     248:	000000a4 	andeq	r0, r0, r4, lsr #1
     24c:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
     250:	00000001 	andeq	r0, r0, r1
     254:	0000000c 	andeq	r0, r0, ip
     258:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     25c:	7c020001 	stcvc	0, cr0, [r2], {1}
     260:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     264:	0000000c 	andeq	r0, r0, ip
     268:	00000254 	andeq	r0, r0, r4, asr r2
     26c:	080036cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl, ip, sp}
     270:	0000002e 	andeq	r0, r0, lr, lsr #32
     274:	0000000c 	andeq	r0, r0, ip
     278:	00000254 	andeq	r0, r0, r4, asr r2
     27c:	080036fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9, sl, ip, sp}
     280:	0000001c 	andeq	r0, r0, ip, lsl r0
     284:	0000000c 	andeq	r0, r0, ip
     288:	00000254 	andeq	r0, r0, r4, asr r2
     28c:	08003718 	stmdaeq	r0, {r3, r4, r8, r9, sl, ip, sp}
     290:	00000012 	andeq	r0, r0, r2, lsl r0
     294:	0000000c 	andeq	r0, r0, ip
     298:	00000254 	andeq	r0, r0, r4, asr r2
     29c:	0800372c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl, ip, sp}
     2a0:	00000012 	andeq	r0, r0, r2, lsl r0
     2a4:	0000000c 	andeq	r0, r0, ip
     2a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     2ac:	7c020001 	stcvc	0, cr0, [r2], {1}
     2b0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     2b4:	00000020 	andeq	r0, r0, r0, lsr #32
     2b8:	000002a4 	andeq	r0, r0, r4, lsr #5
     2bc:	08003740 	stmdaeq	r0, {r6, r8, r9, sl, ip, sp}
     2c0:	000000bc 	strheq	r0, [r0], -ip
     2c4:	83200e42 	teqhi	r0, #1056	; 0x420
     2c8:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     2cc:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     2d0:	89038804 	stmdbhi	r3, {r2, fp, pc}
     2d4:	00018e02 	andeq	r8, r1, r2, lsl #28
     2d8:	0000000c 	andeq	r0, r0, ip
     2dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     2e0:	7c020001 	stcvc	0, cr0, [r2], {1}
     2e4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     2e8:	00000018 	andeq	r0, r0, r8, lsl r0
     2ec:	000002d8 	ldrdeq	r0, [r0], -r8
     2f0:	080037fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp}
     2f4:	000000b8 	strheq	r0, [r0], -r8
     2f8:	83100e41 	tsthi	r0, #1040	; 0x410
     2fc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     300:	00018e02 	andeq	r8, r1, r2, lsl #28
     304:	00000014 	andeq	r0, r0, r4, lsl r0
     308:	000002d8 	ldrdeq	r0, [r0], -r8
     30c:	080038b4 	stmdaeq	r0, {r2, r4, r5, r7, fp, ip, sp}
     310:	0000007a 	andeq	r0, r0, sl, ror r0
     314:	84040e42 	strhi	r0, [r4], #-3650	; 0xfffff1be
     318:	00000001 	andeq	r0, r0, r1
     31c:	0000000c 	andeq	r0, r0, ip
     320:	000002d8 	ldrdeq	r0, [r0], -r8
     324:	08003930 	stmdaeq	r0, {r4, r5, r8, fp, ip, sp}
     328:	0000000e 	andeq	r0, r0, lr
     32c:	0000000c 	andeq	r0, r0, ip
     330:	000002d8 	ldrdeq	r0, [r0], -r8
     334:	08003940 	stmdaeq	r0, {r6, r8, fp, ip, sp}
     338:	00000010 	andeq	r0, r0, r0, lsl r0
     33c:	0000000c 	andeq	r0, r0, ip
     340:	000002d8 	ldrdeq	r0, [r0], -r8
     344:	08003950 	stmdaeq	r0, {r4, r6, r8, fp, ip, sp}
     348:	00000010 	andeq	r0, r0, r0, lsl r0
     34c:	00000014 	andeq	r0, r0, r4, lsl r0
     350:	000002d8 	ldrdeq	r0, [r0], -r8
     354:	08003960 	stmdaeq	r0, {r5, r6, r8, fp, ip, sp}
     358:	00000034 	andeq	r0, r0, r4, lsr r0
     35c:	84080e48 	strhi	r0, [r8], #-3656	; 0xfffff1b8
     360:	00018e02 	andeq	r8, r1, r2, lsl #28
     364:	0000000c 	andeq	r0, r0, ip
     368:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     36c:	7c020001 	stcvc	0, cr0, [r2], {1}
     370:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     374:	00000014 	andeq	r0, r0, r4, lsl r0
     378:	00000364 	andeq	r0, r0, r4, ror #6
     37c:	08003994 	stmdaeq	r0, {r2, r4, r7, r8, fp, ip, sp}
     380:	00000044 	andeq	r0, r0, r4, asr #32
     384:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
     388:	00000001 	andeq	r0, r0, r1
     38c:	0000000c 	andeq	r0, r0, ip
     390:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     394:	7c020001 	stcvc	0, cr0, [r2], {1}
     398:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     39c:	0000001c 	andeq	r0, r0, ip, lsl r0
     3a0:	0000038c 	andeq	r0, r0, ip, lsl #7
     3a4:	080039d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, fp, ip, sp}
     3a8:	00000038 	andeq	r0, r0, r8, lsr r0
     3ac:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     3b0:	86048505 	strhi	r8, [r4], -r5, lsl #10
     3b4:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     3b8:	200e4301 	andcs	r4, lr, r1, lsl #6
     3bc:	00000014 	andeq	r0, r0, r4, lsl r0
     3c0:	0000038c 	andeq	r0, r0, ip, lsl #7
     3c4:	08003a10 	stmdaeq	r0, {r4, r9, fp, ip, sp}
     3c8:	00000032 	andeq	r0, r0, r2, lsr r0
     3cc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     3d0:	00018e02 	andeq	r8, r1, r2, lsl #28
     3d4:	00000014 	andeq	r0, r0, r4, lsl r0
     3d8:	0000038c 	andeq	r0, r0, ip, lsl #7
     3dc:	08003a44 	stmdaeq	r0, {r2, r6, r9, fp, ip, sp}
     3e0:	00000010 	andeq	r0, r0, r0, lsl r0
     3e4:	83080e43 	movwhi	r0, #36419	; 0x8e43
     3e8:	00018e02 	andeq	r8, r1, r2, lsl #28
     3ec:	00000014 	andeq	r0, r0, r4, lsl r0
     3f0:	0000038c 	andeq	r0, r0, ip, lsl #7
     3f4:	08003a54 	stmdaeq	r0, {r2, r4, r6, r9, fp, ip, sp}
     3f8:	0000012a 	andeq	r0, r0, sl, lsr #2
     3fc:	83080e44 	movwhi	r0, #36420	; 0x8e44
     400:	00018e02 	andeq	r8, r1, r2, lsl #28
     404:	00000014 	andeq	r0, r0, r4, lsl r0
     408:	0000038c 	andeq	r0, r0, ip, lsl #7
     40c:	08003b80 	stmdaeq	r0, {r7, r8, r9, fp, ip, sp}
     410:	00000010 	andeq	r0, r0, r0, lsl r0
     414:	83080e43 	movwhi	r0, #36419	; 0x8e43
     418:	00018e02 	andeq	r8, r1, r2, lsl #28
     41c:	00000014 	andeq	r0, r0, r4, lsl r0
     420:	0000038c 	andeq	r0, r0, ip, lsl #7
     424:	08003b90 	stmdaeq	r0, {r4, r7, r8, r9, fp, ip, sp}
     428:	00000010 	andeq	r0, r0, r0, lsl r0
     42c:	83080e43 	movwhi	r0, #36419	; 0x8e43
     430:	00018e02 	andeq	r8, r1, r2, lsl #28
     434:	00000014 	andeq	r0, r0, r4, lsl r0
     438:	0000038c 	andeq	r0, r0, ip, lsl #7
     43c:	08003ba0 	stmdaeq	r0, {r5, r7, r8, r9, fp, ip, sp}
     440:	00000010 	andeq	r0, r0, r0, lsl r0
     444:	83080e43 	movwhi	r0, #36419	; 0x8e43
     448:	00018e02 	andeq	r8, r1, r2, lsl #28
     44c:	00000014 	andeq	r0, r0, r4, lsl r0
     450:	0000038c 	andeq	r0, r0, ip, lsl #7
     454:	08003bb0 	stmdaeq	r0, {r4, r5, r7, r8, r9, fp, ip, sp}
     458:	00000010 	andeq	r0, r0, r0, lsl r0
     45c:	83080e43 	movwhi	r0, #36419	; 0x8e43
     460:	00018e02 	andeq	r8, r1, r2, lsl #28
     464:	00000014 	andeq	r0, r0, r4, lsl r0
     468:	0000038c 	andeq	r0, r0, ip, lsl #7
     46c:	08003bc0 	stmdaeq	r0, {r6, r7, r8, r9, fp, ip, sp}
     470:	00000010 	andeq	r0, r0, r0, lsl r0
     474:	83080e43 	movwhi	r0, #36419	; 0x8e43
     478:	00018e02 	andeq	r8, r1, r2, lsl #28
     47c:	00000014 	andeq	r0, r0, r4, lsl r0
     480:	0000038c 	andeq	r0, r0, ip, lsl #7
     484:	08003bd0 	stmdaeq	r0, {r4, r6, r7, r8, r9, fp, ip, sp}
     488:	00000010 	andeq	r0, r0, r0, lsl r0
     48c:	83080e43 	movwhi	r0, #36419	; 0x8e43
     490:	00018e02 	andeq	r8, r1, r2, lsl #28
     494:	0000000c 	andeq	r0, r0, ip
     498:	0000038c 	andeq	r0, r0, ip, lsl #7
     49c:	08003be0 	stmdaeq	r0, {r5, r6, r7, r8, r9, fp, ip, sp}
     4a0:	0000000e 	andeq	r0, r0, lr
     4a4:	00000014 	andeq	r0, r0, r4, lsl r0
     4a8:	0000038c 	andeq	r0, r0, ip, lsl #7
     4ac:	08003bf0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, fp, ip, sp}
     4b0:	00000006 	andeq	r0, r0, r6
     4b4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     4b8:	00018e02 	andeq	r8, r1, r2, lsl #28
     4bc:	00000014 	andeq	r0, r0, r4, lsl r0
     4c0:	0000038c 	andeq	r0, r0, ip, lsl #7
     4c4:	08003bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp, ip, sp}
     4c8:	00000006 	andeq	r0, r0, r6
     4cc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     4d0:	00018e02 	andeq	r8, r1, r2, lsl #28
     4d4:	00000014 	andeq	r0, r0, r4, lsl r0
     4d8:	0000038c 	andeq	r0, r0, ip, lsl #7
     4dc:	08003c00 	stmdaeq	r0, {sl, fp, ip, sp}
     4e0:	00000006 	andeq	r0, r0, r6
     4e4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     4e8:	00018e02 	andeq	r8, r1, r2, lsl #28
     4ec:	00000014 	andeq	r0, r0, r4, lsl r0
     4f0:	0000038c 	andeq	r0, r0, ip, lsl #7
     4f4:	08003c08 	stmdaeq	r0, {r3, sl, fp, ip, sp}
     4f8:	00000006 	andeq	r0, r0, r6
     4fc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     500:	00018e02 	andeq	r8, r1, r2, lsl #28
     504:	00000014 	andeq	r0, r0, r4, lsl r0
     508:	0000038c 	andeq	r0, r0, ip, lsl #7
     50c:	08003c10 	stmdaeq	r0, {r4, sl, fp, ip, sp}
     510:	00000006 	andeq	r0, r0, r6
     514:	83080e41 	movwhi	r0, #36417	; 0x8e41
     518:	00018e02 	andeq	r8, r1, r2, lsl #28
     51c:	00000014 	andeq	r0, r0, r4, lsl r0
     520:	0000038c 	andeq	r0, r0, ip, lsl #7
     524:	08003c18 	stmdaeq	r0, {r3, r4, sl, fp, ip, sp}
     528:	00000006 	andeq	r0, r0, r6
     52c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     530:	00018e02 	andeq	r8, r1, r2, lsl #28
     534:	00000014 	andeq	r0, r0, r4, lsl r0
     538:	0000038c 	andeq	r0, r0, ip, lsl #7
     53c:	08003c20 	stmdaeq	r0, {r5, sl, fp, ip, sp}
     540:	00000006 	andeq	r0, r0, r6
     544:	83080e41 	movwhi	r0, #36417	; 0x8e41
     548:	00018e02 	andeq	r8, r1, r2, lsl #28
     54c:	00000014 	andeq	r0, r0, r4, lsl r0
     550:	0000038c 	andeq	r0, r0, ip, lsl #7
     554:	08003c28 	stmdaeq	r0, {r3, r5, sl, fp, ip, sp}
     558:	00000006 	andeq	r0, r0, r6
     55c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     560:	00018e02 	andeq	r8, r1, r2, lsl #28
     564:	00000014 	andeq	r0, r0, r4, lsl r0
     568:	0000038c 	andeq	r0, r0, ip, lsl #7
     56c:	08003c30 	stmdaeq	r0, {r4, r5, sl, fp, ip, sp}
     570:	00000006 	andeq	r0, r0, r6
     574:	83080e41 	movwhi	r0, #36417	; 0x8e41
     578:	00018e02 	andeq	r8, r1, r2, lsl #28
     57c:	00000014 	andeq	r0, r0, r4, lsl r0
     580:	0000038c 	andeq	r0, r0, ip, lsl #7
     584:	08003c38 	stmdaeq	r0, {r3, r4, r5, sl, fp, ip, sp}
     588:	00000006 	andeq	r0, r0, r6
     58c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     590:	00018e02 	andeq	r8, r1, r2, lsl #28
     594:	00000014 	andeq	r0, r0, r4, lsl r0
     598:	0000038c 	andeq	r0, r0, ip, lsl #7
     59c:	08003c40 	stmdaeq	r0, {r6, sl, fp, ip, sp}
     5a0:	00000006 	andeq	r0, r0, r6
     5a4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     5a8:	00018e02 	andeq	r8, r1, r2, lsl #28
     5ac:	00000014 	andeq	r0, r0, r4, lsl r0
     5b0:	0000038c 	andeq	r0, r0, ip, lsl #7
     5b4:	08003c48 	stmdaeq	r0, {r3, r6, sl, fp, ip, sp}
     5b8:	00000006 	andeq	r0, r0, r6
     5bc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     5c0:	00018e02 	andeq	r8, r1, r2, lsl #28
     5c4:	00000014 	andeq	r0, r0, r4, lsl r0
     5c8:	0000038c 	andeq	r0, r0, ip, lsl #7
     5cc:	08003c50 	stmdaeq	r0, {r4, r6, sl, fp, ip, sp}
     5d0:	00000006 	andeq	r0, r0, r6
     5d4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     5d8:	00018e02 	andeq	r8, r1, r2, lsl #28
     5dc:	00000014 	andeq	r0, r0, r4, lsl r0
     5e0:	0000038c 	andeq	r0, r0, ip, lsl #7
     5e4:	08003c58 	stmdaeq	r0, {r3, r4, r6, sl, fp, ip, sp}
     5e8:	00000006 	andeq	r0, r0, r6
     5ec:	83080e41 	movwhi	r0, #36417	; 0x8e41
     5f0:	00018e02 	andeq	r8, r1, r2, lsl #28
     5f4:	00000014 	andeq	r0, r0, r4, lsl r0
     5f8:	0000038c 	andeq	r0, r0, ip, lsl #7
     5fc:	08003c60 	stmdaeq	r0, {r5, r6, sl, fp, ip, sp}
     600:	00000006 	andeq	r0, r0, r6
     604:	83080e41 	movwhi	r0, #36417	; 0x8e41
     608:	00018e02 	andeq	r8, r1, r2, lsl #28
     60c:	00000014 	andeq	r0, r0, r4, lsl r0
     610:	0000038c 	andeq	r0, r0, ip, lsl #7
     614:	08003c68 	stmdaeq	r0, {r3, r5, r6, sl, fp, ip, sp}
     618:	00000006 	andeq	r0, r0, r6
     61c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     620:	00018e02 	andeq	r8, r1, r2, lsl #28
     624:	00000014 	andeq	r0, r0, r4, lsl r0
     628:	0000038c 	andeq	r0, r0, ip, lsl #7
     62c:	08003c70 	stmdaeq	r0, {r4, r5, r6, sl, fp, ip, sp}
     630:	00000006 	andeq	r0, r0, r6
     634:	83080e41 	movwhi	r0, #36417	; 0x8e41
     638:	00018e02 	andeq	r8, r1, r2, lsl #28
     63c:	00000014 	andeq	r0, r0, r4, lsl r0
     640:	0000038c 	andeq	r0, r0, ip, lsl #7
     644:	08003c78 	stmdaeq	r0, {r3, r4, r5, r6, sl, fp, ip, sp}
     648:	00000006 	andeq	r0, r0, r6
     64c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     650:	00018e02 	andeq	r8, r1, r2, lsl #28
     654:	00000014 	andeq	r0, r0, r4, lsl r0
     658:	0000038c 	andeq	r0, r0, ip, lsl #7
     65c:	08003c80 	stmdaeq	r0, {r7, sl, fp, ip, sp}
     660:	00000006 	andeq	r0, r0, r6
     664:	83080e41 	movwhi	r0, #36417	; 0x8e41
     668:	00018e02 	andeq	r8, r1, r2, lsl #28
     66c:	00000014 	andeq	r0, r0, r4, lsl r0
     670:	0000038c 	andeq	r0, r0, ip, lsl #7
     674:	08003c88 	stmdaeq	r0, {r3, r7, sl, fp, ip, sp}
     678:	00000006 	andeq	r0, r0, r6
     67c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     680:	00018e02 	andeq	r8, r1, r2, lsl #28
     684:	00000014 	andeq	r0, r0, r4, lsl r0
     688:	0000038c 	andeq	r0, r0, ip, lsl #7
     68c:	08003c90 	stmdaeq	r0, {r4, r7, sl, fp, ip, sp}
     690:	00000006 	andeq	r0, r0, r6
     694:	83080e41 	movwhi	r0, #36417	; 0x8e41
     698:	00018e02 	andeq	r8, r1, r2, lsl #28
     69c:	00000014 	andeq	r0, r0, r4, lsl r0
     6a0:	0000038c 	andeq	r0, r0, ip, lsl #7
     6a4:	08003c98 	stmdaeq	r0, {r3, r4, r7, sl, fp, ip, sp}
     6a8:	00000006 	andeq	r0, r0, r6
     6ac:	83080e41 	movwhi	r0, #36417	; 0x8e41
     6b0:	00018e02 	andeq	r8, r1, r2, lsl #28
     6b4:	00000014 	andeq	r0, r0, r4, lsl r0
     6b8:	0000038c 	andeq	r0, r0, ip, lsl #7
     6bc:	08003ca0 	stmdaeq	r0, {r5, r7, sl, fp, ip, sp}
     6c0:	00000006 	andeq	r0, r0, r6
     6c4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     6c8:	00018e02 	andeq	r8, r1, r2, lsl #28
     6cc:	00000014 	andeq	r0, r0, r4, lsl r0
     6d0:	0000038c 	andeq	r0, r0, ip, lsl #7
     6d4:	08003ca8 	stmdaeq	r0, {r3, r5, r7, sl, fp, ip, sp}
     6d8:	00000032 	andeq	r0, r0, r2, lsr r0
     6dc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     6e0:	00018502 	andeq	r8, r1, r2, lsl #10
     6e4:	00000014 	andeq	r0, r0, r4, lsl r0
     6e8:	0000038c 	andeq	r0, r0, ip, lsl #7
     6ec:	08003cdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, fp, ip, sp}
     6f0:	00000006 	andeq	r0, r0, r6
     6f4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     6f8:	00018e02 	andeq	r8, r1, r2, lsl #28
     6fc:	00000014 	andeq	r0, r0, r4, lsl r0
     700:	0000038c 	andeq	r0, r0, ip, lsl #7
     704:	08003ce4 	stmdaeq	r0, {r2, r5, r6, r7, sl, fp, ip, sp}
     708:	00000006 	andeq	r0, r0, r6
     70c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     710:	00018e02 	andeq	r8, r1, r2, lsl #28
     714:	00000014 	andeq	r0, r0, r4, lsl r0
     718:	0000038c 	andeq	r0, r0, ip, lsl #7
     71c:	08003cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp, ip, sp}
     720:	00000006 	andeq	r0, r0, r6
     724:	83080e41 	movwhi	r0, #36417	; 0x8e41
     728:	00018e02 	andeq	r8, r1, r2, lsl #28
     72c:	00000014 	andeq	r0, r0, r4, lsl r0
     730:	0000038c 	andeq	r0, r0, ip, lsl #7
     734:	08003cf4 	stmdaeq	r0, {r2, r4, r5, r6, r7, sl, fp, ip, sp}
     738:	00000006 	andeq	r0, r0, r6
     73c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     740:	00018e02 	andeq	r8, r1, r2, lsl #28
     744:	00000014 	andeq	r0, r0, r4, lsl r0
     748:	0000038c 	andeq	r0, r0, ip, lsl #7
     74c:	08003cfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, fp, ip, sp}
     750:	00000006 	andeq	r0, r0, r6
     754:	83080e41 	movwhi	r0, #36417	; 0x8e41
     758:	00018e02 	andeq	r8, r1, r2, lsl #28
     75c:	00000014 	andeq	r0, r0, r4, lsl r0
     760:	0000038c 	andeq	r0, r0, ip, lsl #7
     764:	08003d04 	stmdaeq	r0, {r2, r8, sl, fp, ip, sp}
     768:	00000006 	andeq	r0, r0, r6
     76c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     770:	00018e02 	andeq	r8, r1, r2, lsl #28
     774:	00000014 	andeq	r0, r0, r4, lsl r0
     778:	0000038c 	andeq	r0, r0, ip, lsl #7
     77c:	08003d0c 	stmdaeq	r0, {r2, r3, r8, sl, fp, ip, sp}
     780:	00000006 	andeq	r0, r0, r6
     784:	83080e41 	movwhi	r0, #36417	; 0x8e41
     788:	00018e02 	andeq	r8, r1, r2, lsl #28
     78c:	00000014 	andeq	r0, r0, r4, lsl r0
     790:	0000038c 	andeq	r0, r0, ip, lsl #7
     794:	08003d14 	stmdaeq	r0, {r2, r4, r8, sl, fp, ip, sp}
     798:	00000006 	andeq	r0, r0, r6
     79c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     7a0:	00018e02 	andeq	r8, r1, r2, lsl #28
     7a4:	00000014 	andeq	r0, r0, r4, lsl r0
     7a8:	0000038c 	andeq	r0, r0, ip, lsl #7
     7ac:	08003d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, ip, sp}
     7b0:	00000006 	andeq	r0, r0, r6
     7b4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     7b8:	00018e02 	andeq	r8, r1, r2, lsl #28
     7bc:	00000014 	andeq	r0, r0, r4, lsl r0
     7c0:	0000038c 	andeq	r0, r0, ip, lsl #7
     7c4:	08003d24 	stmdaeq	r0, {r2, r5, r8, sl, fp, ip, sp}
     7c8:	00000006 	andeq	r0, r0, r6
     7cc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     7d0:	00018e02 	andeq	r8, r1, r2, lsl #28
     7d4:	00000014 	andeq	r0, r0, r4, lsl r0
     7d8:	0000038c 	andeq	r0, r0, ip, lsl #7
     7dc:	08003d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp, ip, sp}
     7e0:	00000006 	andeq	r0, r0, r6
     7e4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     7e8:	00018e02 	andeq	r8, r1, r2, lsl #28
     7ec:	00000014 	andeq	r0, r0, r4, lsl r0
     7f0:	0000038c 	andeq	r0, r0, ip, lsl #7
     7f4:	08003d34 	stmdaeq	r0, {r2, r4, r5, r8, sl, fp, ip, sp}
     7f8:	00000006 	andeq	r0, r0, r6
     7fc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     800:	00018e02 	andeq	r8, r1, r2, lsl #28
     804:	00000014 	andeq	r0, r0, r4, lsl r0
     808:	0000038c 	andeq	r0, r0, ip, lsl #7
     80c:	08003d3c 	stmdaeq	r0, {r2, r3, r4, r5, r8, sl, fp, ip, sp}
     810:	00000006 	andeq	r0, r0, r6
     814:	83080e41 	movwhi	r0, #36417	; 0x8e41
     818:	00018e02 	andeq	r8, r1, r2, lsl #28
     81c:	00000014 	andeq	r0, r0, r4, lsl r0
     820:	0000038c 	andeq	r0, r0, ip, lsl #7
     824:	08003d44 	stmdaeq	r0, {r2, r6, r8, sl, fp, ip, sp}
     828:	00000030 	andeq	r0, r0, r0, lsr r0
     82c:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
     830:	00000001 	andeq	r0, r0, r1
     834:	00000014 	andeq	r0, r0, r4, lsl r0
     838:	0000038c 	andeq	r0, r0, ip, lsl #7
     83c:	08003d74 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, fp, ip, sp}
     840:	00000006 	andeq	r0, r0, r6
     844:	83080e41 	movwhi	r0, #36417	; 0x8e41
     848:	00018e02 	andeq	r8, r1, r2, lsl #28
     84c:	00000014 	andeq	r0, r0, r4, lsl r0
     850:	0000038c 	andeq	r0, r0, ip, lsl #7
     854:	08003d7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, fp, ip, sp}
     858:	00000006 	andeq	r0, r0, r6
     85c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     860:	00018e02 	andeq	r8, r1, r2, lsl #28
     864:	00000014 	andeq	r0, r0, r4, lsl r0
     868:	0000038c 	andeq	r0, r0, ip, lsl #7
     86c:	08003d84 	stmdaeq	r0, {r2, r7, r8, sl, fp, ip, sp}
     870:	00000006 	andeq	r0, r0, r6
     874:	83080e41 	movwhi	r0, #36417	; 0x8e41
     878:	00018e02 	andeq	r8, r1, r2, lsl #28
     87c:	00000014 	andeq	r0, r0, r4, lsl r0
     880:	0000038c 	andeq	r0, r0, ip, lsl #7
     884:	08003d8c 	stmdaeq	r0, {r2, r3, r7, r8, sl, fp, ip, sp}
     888:	00000006 	andeq	r0, r0, r6
     88c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     890:	00018e02 	andeq	r8, r1, r2, lsl #28
     894:	00000014 	andeq	r0, r0, r4, lsl r0
     898:	0000038c 	andeq	r0, r0, ip, lsl #7
     89c:	08003d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp, ip, sp}
     8a0:	00000006 	andeq	r0, r0, r6
     8a4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     8a8:	00018e02 	andeq	r8, r1, r2, lsl #28
     8ac:	0000000c 	andeq	r0, r0, ip
     8b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     8b4:	7c020001 	stcvc	0, cr0, [r2], {1}
     8b8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     8bc:	00000018 	andeq	r0, r0, r8, lsl r0
     8c0:	000008ac 	andeq	r0, r0, ip, lsr #17
     8c4:	08003da0 	stmdaeq	r0, {r5, r7, r8, sl, fp, ip, sp}
     8c8:	00000048 	andeq	r0, r0, r8, asr #32
     8cc:	83100e41 	tsthi	r0, #1040	; 0x410
     8d0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     8d4:	00018e02 	andeq	r8, r1, r2, lsl #28
     8d8:	0000000c 	andeq	r0, r0, ip
     8dc:	000008ac 	andeq	r0, r0, ip, lsr #17
     8e0:	08003de8 	stmdaeq	r0, {r3, r5, r6, r7, r8, sl, fp, ip, sp}
     8e4:	00000010 	andeq	r0, r0, r0, lsl r0
     8e8:	0000000c 	andeq	r0, r0, ip
     8ec:	000008ac 	andeq	r0, r0, ip, lsr #17
     8f0:	08003df8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sl, fp, ip, sp}
     8f4:	0000000c 	andeq	r0, r0, ip
     8f8:	0000000c 	andeq	r0, r0, ip
     8fc:	000008ac 	andeq	r0, r0, ip, lsr #17
     900:	08003e04 	stmdaeq	r0, {r2, r9, sl, fp, ip, sp}
     904:	0000000c 	andeq	r0, r0, ip
     908:	0000000c 	andeq	r0, r0, ip
     90c:	000008ac 	andeq	r0, r0, ip, lsr #17
     910:	08003e10 	stmdaeq	r0, {r4, r9, sl, fp, ip, sp}
     914:	0000000e 	andeq	r0, r0, lr
     918:	00000014 	andeq	r0, r0, r4, lsl r0
     91c:	000008ac 	andeq	r0, r0, ip, lsr #17
     920:	08003e20 	stmdaeq	r0, {r5, r9, sl, fp, ip, sp}
     924:	00000048 	andeq	r0, r0, r8, asr #32
     928:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     92c:	00018e02 	andeq	r8, r1, r2, lsl #28
     930:	0000000c 	andeq	r0, r0, ip
     934:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     938:	7c020001 	stcvc	0, cr0, [r2], {1}
     93c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     940:	00000014 	andeq	r0, r0, r4, lsl r0
     944:	00000930 	andeq	r0, r0, r0, lsr r9
     948:	08003e68 	stmdaeq	r0, {r3, r5, r6, r9, sl, fp, ip, sp}
     94c:	0000003e 	andeq	r0, r0, lr, lsr r0
     950:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     954:	00018502 	andeq	r8, r1, r2, lsl #10
     958:	0000000c 	andeq	r0, r0, ip
     95c:	00000930 	andeq	r0, r0, r0, lsr r9
     960:	08003ea8 	stmdaeq	r0, {r3, r5, r7, r9, sl, fp, ip, sp}
     964:	00000026 	andeq	r0, r0, r6, lsr #32
     968:	00000018 	andeq	r0, r0, r8, lsl r0
     96c:	00000930 	andeq	r0, r0, r0, lsr r9
     970:	08003ed0 	stmdaeq	r0, {r4, r6, r7, r9, sl, fp, ip, sp}
     974:	000000e4 	andeq	r0, r0, r4, ror #1
     978:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     97c:	86028503 	strhi	r8, [r2], -r3, lsl #10
     980:	00000001 	andeq	r0, r0, r1
     984:	00000014 	andeq	r0, r0, r4, lsl r0
     988:	00000930 	andeq	r0, r0, r0, lsr r9
     98c:	08003fb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl, fp, ip, sp}
     990:	00000062 	andeq	r0, r0, r2, rrx
     994:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     998:	00018502 	andeq	r8, r1, r2, lsl #10
     99c:	0000000c 	andeq	r0, r0, ip
     9a0:	00000930 	andeq	r0, r0, r0, lsr r9
     9a4:	08004018 	stmdaeq	r0, {r3, r4, lr}
     9a8:	00000020 	andeq	r0, r0, r0, lsr #32
     9ac:	0000000c 	andeq	r0, r0, ip
     9b0:	00000930 	andeq	r0, r0, r0, lsr r9
     9b4:	08004038 	stmdaeq	r0, {r3, r4, r5, lr}
     9b8:	00000022 	andeq	r0, r0, r2, lsr #32
     9bc:	0000000c 	andeq	r0, r0, ip
     9c0:	00000930 	andeq	r0, r0, r0, lsr r9
     9c4:	0800405c 	stmdaeq	r0, {r2, r3, r4, r6, lr}
     9c8:	00000018 	andeq	r0, r0, r8, lsl r0
     9cc:	0000000c 	andeq	r0, r0, ip
     9d0:	00000930 	andeq	r0, r0, r0, lsr r9
     9d4:	08004074 	stmdaeq	r0, {r2, r4, r5, r6, lr}
     9d8:	0000004c 	andeq	r0, r0, ip, asr #32
     9dc:	00000014 	andeq	r0, r0, r4, lsl r0
     9e0:	00000930 	andeq	r0, r0, r0, lsr r9
     9e4:	080040c0 	stmdaeq	r0, {r6, r7, lr}
     9e8:	00000058 	andeq	r0, r0, r8, asr r0
     9ec:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     9f0:	00018e02 	andeq	r8, r1, r2, lsl #28
     9f4:	0000000c 	andeq	r0, r0, ip
     9f8:	00000930 	andeq	r0, r0, r0, lsr r9
     9fc:	08004118 	stmdaeq	r0, {r3, r4, r8, lr}
     a00:	00000022 	andeq	r0, r0, r2, lsr #32
     a04:	0000000c 	andeq	r0, r0, ip
     a08:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     a0c:	7c020001 	stcvc	0, cr0, [r2], {1}
     a10:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     a14:	00000018 	andeq	r0, r0, r8, lsl r0
     a18:	00000a04 	andeq	r0, r0, r4, lsl #20
     a1c:	08004140 	stmdaeq	r0, {r6, r8, lr}
     a20:	000000b8 	strheq	r0, [r0], -r8
     a24:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     a28:	86038504 	strhi	r8, [r3], -r4, lsl #10
     a2c:	00018e02 	andeq	r8, r1, r2, lsl #28
     a30:	0000000c 	andeq	r0, r0, ip
     a34:	00000a04 	andeq	r0, r0, r4, lsl #20
     a38:	080041f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, lr}
     a3c:	0000003a 	andeq	r0, r0, sl, lsr r0
     a40:	00000014 	andeq	r0, r0, r4, lsl r0
     a44:	00000a04 	andeq	r0, r0, r4, lsl #20
     a48:	08004234 	stmdaeq	r0, {r2, r4, r5, r9, lr}
     a4c:	00000042 	andeq	r0, r0, r2, asr #32
     a50:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     a54:	00018502 	andeq	r8, r1, r2, lsl #10
     a58:	00000024 	andeq	r0, r0, r4, lsr #32
     a5c:	00000a04 	andeq	r0, r0, r4, lsl #20
     a60:	08004278 	stmdaeq	r0, {r3, r4, r5, r6, r9, lr}
     a64:	00000060 	andeq	r0, r0, r0, rrx
     a68:	80100e41 	andshi	r0, r0, r1, asr #28
     a6c:	82038104 	andhi	r8, r3, #4, 2
     a70:	41018302 	tstmi	r1, r2, lsl #6
     a74:	07841c0e 	streq	r1, [r4, lr, lsl #24]
     a78:	058e0685 	streq	r0, [lr, #1669]	; 0x685
     a7c:	02a80e41 	adceq	r0, r8, #1040	; 0x410
     a80:	0000000c 	andeq	r0, r0, ip
     a84:	00000a04 	andeq	r0, r0, r4, lsl #20
     a88:	080042d8 	stmdaeq	r0, {r3, r4, r6, r7, r9, lr}
     a8c:	00000016 	andeq	r0, r0, r6, lsl r0
     a90:	0000000c 	andeq	r0, r0, ip
     a94:	00000a04 	andeq	r0, r0, r4, lsl #20
     a98:	080042f0 	stmdaeq	r0, {r4, r5, r6, r7, r9, lr}
     a9c:	00000018 	andeq	r0, r0, r8, lsl r0
     aa0:	0000000c 	andeq	r0, r0, ip
     aa4:	00000a04 	andeq	r0, r0, r4, lsl #20
     aa8:	08004308 	stmdaeq	r0, {r3, r8, r9, lr}
     aac:	00000042 	andeq	r0, r0, r2, asr #32
     ab0:	0000000c 	andeq	r0, r0, ip
     ab4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ab8:	7c020001 	stcvc	0, cr0, [r2], {1}
     abc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ac0:	00000018 	andeq	r0, r0, r8, lsl r0
     ac4:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     ac8:	08004350 	stmdaeq	r0, {r4, r6, r8, r9, lr}
     acc:	00000032 	andeq	r0, r0, r2, lsr r0
     ad0:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     ad4:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     ad8:	780e4101 	stmdavc	lr, {r0, r8, lr}
     adc:	00000014 	andeq	r0, r0, r4, lsl r0
     ae0:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     ae4:	08004384 	stmdaeq	r0, {r2, r7, r8, r9, lr}
     ae8:	0000001a 	andeq	r0, r0, sl, lsl r0
     aec:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     af0:	00018502 	andeq	r8, r1, r2, lsl #10
     af4:	0000000c 	andeq	r0, r0, ip
     af8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     afc:	7c020001 	stcvc	0, cr0, [r2], {1}
     b00:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b04:	00000028 	andeq	r0, r0, r8, lsr #32
     b08:	00000af4 	strdeq	r0, [r0], -r4
     b0c:	080043a0 	stmdaeq	r0, {r5, r7, r8, r9, lr}
     b10:	000014b4 			; <UNDEFINED> instruction: 0x000014b4
     b14:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     b18:	86088509 	strhi	r8, [r8], -r9, lsl #10
     b1c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     b20:	8a048905 	bhi	122f3c <__RW_SIZE__+0x1229b8>
     b24:	8e028b03 	vmlahi.f64	d8, d2, d3
     b28:	c80e4101 	stmdagt	lr, {r0, r8, lr}
     b2c:	00000002 	andeq	r0, r0, r2
     b30:	0000000c 	andeq	r0, r0, ip
     b34:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b38:	7c020001 	stcvc	0, cr0, [r2], {1}
     b3c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b40:	00000024 	andeq	r0, r0, r4, lsr #32
     b44:	00000b30 	andeq	r0, r0, r0, lsr fp
     b48:	08005858 	stmdaeq	r0, {r3, r4, r6, fp, ip, lr}
     b4c:	0000014a 	andeq	r0, r0, sl, asr #2
     b50:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     b54:	86088509 	strhi	r8, [r8], -r9, lsl #10
     b58:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     b5c:	8a048905 	bhi	122f78 <__RW_SIZE__+0x1229f4>
     b60:	8e028b03 	vmlahi.f64	d8, d2, d3
     b64:	380e4501 	stmdacc	lr, {r0, r8, sl, lr}
     b68:	00000028 	andeq	r0, r0, r8, lsr #32
     b6c:	00000b30 	andeq	r0, r0, r0, lsr fp
     b70:	080059a4 	stmdaeq	r0, {r2, r5, r7, r8, fp, ip, lr}
     b74:	00000f8a 	andeq	r0, r0, sl, lsl #31
     b78:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     b7c:	86088509 	strhi	r8, [r8], -r9, lsl #10
     b80:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     b84:	8a048905 	bhi	122fa0 <__RW_SIZE__+0x122a1c>
     b88:	8e028b03 	vmlahi.f64	d8, d2, d3
     b8c:	900e4101 	andls	r4, lr, r1, lsl #2
     b90:	00000001 	andeq	r0, r0, r1
     b94:	0000000c 	andeq	r0, r0, ip
     b98:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b9c:	7c020001 	stcvc	0, cr0, [r2], {1}
     ba0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ba4:	00000014 	andeq	r0, r0, r4, lsl r0
     ba8:	00000b94 	muleq	r0, r4, fp
     bac:	08006930 	stmdaeq	r0, {r4, r5, r8, fp, sp, lr}
     bb0:	00000052 	andeq	r0, r0, r2, asr r0
     bb4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     bb8:	00018e02 	andeq	r8, r1, r2, lsl #28
     bbc:	0000000c 	andeq	r0, r0, ip
     bc0:	00000b94 	muleq	r0, r4, fp
     bc4:	08006984 	stmdaeq	r0, {r2, r7, r8, fp, sp, lr}
     bc8:	0000000a 	andeq	r0, r0, sl
     bcc:	0000000c 	andeq	r0, r0, ip
     bd0:	00000b94 	muleq	r0, r4, fp
     bd4:	08006990 	stmdaeq	r0, {r4, r7, r8, fp, sp, lr}
     bd8:	0000000c 	andeq	r0, r0, ip
     bdc:	0000000c 	andeq	r0, r0, ip
     be0:	00000b94 	muleq	r0, r4, fp
     be4:	0800699c 	stmdaeq	r0, {r2, r3, r4, r7, r8, fp, sp, lr}
     be8:	00000008 	andeq	r0, r0, r8
     bec:	0000000c 	andeq	r0, r0, ip
     bf0:	00000b94 	muleq	r0, r4, fp
     bf4:	080069a4 	stmdaeq	r0, {r2, r5, r7, r8, fp, sp, lr}
     bf8:	00000004 	andeq	r0, r0, r4
     bfc:	0000000c 	andeq	r0, r0, ip
     c00:	00000b94 	muleq	r0, r4, fp
     c04:	080069a8 	stmdaeq	r0, {r3, r5, r7, r8, fp, sp, lr}
     c08:	00000008 	andeq	r0, r0, r8
     c0c:	0000000c 	andeq	r0, r0, ip
     c10:	00000b94 	muleq	r0, r4, fp
     c14:	080069b0 	stmdaeq	r0, {r4, r5, r7, r8, fp, sp, lr}
     c18:	00000012 	andeq	r0, r0, r2, lsl r0
     c1c:	0000000c 	andeq	r0, r0, ip
     c20:	00000b94 	muleq	r0, r4, fp
     c24:	080069c4 	stmdaeq	r0, {r2, r6, r7, r8, fp, sp, lr}
     c28:	00000008 	andeq	r0, r0, r8
     c2c:	0000000c 	andeq	r0, r0, ip
     c30:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     c34:	7c020001 	stcvc	0, cr0, [r2], {1}
     c38:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     c3c:	0000000c 	andeq	r0, r0, ip
     c40:	00000c2c 	andeq	r0, r0, ip, lsr #24
     c44:	080069cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, fp, sp, lr}
     c48:	00000010 	andeq	r0, r0, r0, lsl r0
     c4c:	0000000c 	andeq	r0, r0, ip
     c50:	00000c2c 	andeq	r0, r0, ip, lsr #24
     c54:	080069dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, fp, sp, lr}
     c58:	00000010 	andeq	r0, r0, r0, lsl r0
     c5c:	0000000c 	andeq	r0, r0, ip
     c60:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     c64:	7c020001 	stcvc	0, cr0, [r2], {1}
     c68:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     c6c:	00000024 	andeq	r0, r0, r4, lsr #32
     c70:	00000c5c 	andeq	r0, r0, ip, asr ip
     c74:	080069ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, fp, sp, lr}
     c78:	0000056e 	andeq	r0, r0, lr, ror #10
     c7c:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     c80:	86088509 	strhi	r8, [r8], -r9, lsl #10
     c84:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     c88:	8a048905 	bhi	1230a4 <__RW_SIZE__+0x122b20>
     c8c:	8e028b03 	vmlahi.f64	d8, d2, d3
     c90:	300e4401 	andcc	r4, lr, r1, lsl #8
     c94:	0000000c 	andeq	r0, r0, ip
     c98:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     c9c:	7c020001 	stcvc	0, cr0, [r2], {1}
     ca0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ca4:	00000018 	andeq	r0, r0, r8, lsl r0
     ca8:	00000c94 	muleq	r0, r4, ip
     cac:	08006f5c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, sl, fp, sp, lr}
     cb0:	00000090 	muleq	r0, r0, r0
     cb4:	840c0e43 	strhi	r0, [ip], #-3651	; 0xfffff1bd
     cb8:	86028503 	strhi	r8, [r2], -r3, lsl #10
     cbc:	00000001 	andeq	r0, r0, r1
     cc0:	0000000c 	andeq	r0, r0, ip
     cc4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     cc8:	7c020001 	stcvc	0, cr0, [r2], {1}
     ccc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     cd0:	00000018 	andeq	r0, r0, r8, lsl r0
     cd4:	00000cc0 	andeq	r0, r0, r0, asr #25
     cd8:	08006fec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, sl, fp, sp, lr}
     cdc:	000000a6 	andeq	r0, r0, r6, lsr #1
     ce0:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
     ce4:	86038504 	strhi	r8, [r3], -r4, lsl #10
     ce8:	00018702 	andeq	r8, r1, r2, lsl #14
     cec:	0000000c 	andeq	r0, r0, ip
     cf0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     cf4:	7c020001 	stcvc	0, cr0, [r2], {1}
     cf8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     cfc:	0000000c 	andeq	r0, r0, ip
     d00:	00000cec 	andeq	r0, r0, ip, ror #25
     d04:	08007094 	stmdaeq	r0, {r2, r4, r7, ip, sp, lr}
     d08:	00000002 	andeq	r0, r0, r2
     d0c:	0000000c 	andeq	r0, r0, ip
     d10:	00000cec 	andeq	r0, r0, ip, ror #25
     d14:	08007098 	stmdaeq	r0, {r3, r4, r7, ip, sp, lr}
     d18:	00000002 	andeq	r0, r0, r2
     d1c:	0000000c 	andeq	r0, r0, ip
     d20:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     d24:	7c020001 	stcvc	0, cr0, [r2], {1}
     d28:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     d2c:	00000018 	andeq	r0, r0, r8, lsl r0
     d30:	00000d1c 	andeq	r0, r0, ip, lsl sp
     d34:	0800709c 	stmdaeq	r0, {r2, r3, r4, r7, ip, sp, lr}
     d38:	0000006c 	andeq	r0, r0, ip, rrx
     d3c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     d40:	86038504 	strhi	r8, [r3], -r4, lsl #10
     d44:	00018e02 	andeq	r8, r1, r2, lsl #28
     d48:	00000018 	andeq	r0, r0, r8, lsl r0
     d4c:	00000d1c 	andeq	r0, r0, ip, lsl sp
     d50:	08007108 	stmdaeq	r0, {r3, r8, ip, sp, lr}
     d54:	00000036 	andeq	r0, r0, r6, lsr r0
     d58:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     d5c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     d60:	180e4301 	stmdane	lr, {r0, r8, r9, lr}
     d64:	00000024 	andeq	r0, r0, r4, lsr #32
     d68:	00000d1c 	andeq	r0, r0, ip, lsl sp
     d6c:	08007140 	stmdaeq	r0, {r6, r8, ip, sp, lr}
     d70:	0000008c 	andeq	r0, r0, ip, lsl #1
     d74:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     d78:	86078508 	strhi	r8, [r7], -r8, lsl #10
     d7c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     d80:	8a038904 	bhi	e3198 <__RW_SIZE__+0xe2c14>
     d84:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
     d88:	0000280e 	andeq	r2, r0, lr, lsl #16
     d8c:	00000020 	andeq	r0, r0, r0, lsr #32
     d90:	00000d1c 	andeq	r0, r0, ip, lsl sp
     d94:	080071cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, ip, sp, lr}
     d98:	00000098 	muleq	r0, r8, r0
     d9c:	83200e42 	teqhi	r0, #1056	; 0x420
     da0:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     da4:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     da8:	89038804 	stmdbhi	r3, {r2, fp, pc}
     dac:	00018e02 	andeq	r8, r1, r2, lsl #28
     db0:	0000000c 	andeq	r0, r0, ip
     db4:	00000d1c 	andeq	r0, r0, ip, lsl sp
     db8:	08007264 	stmdaeq	r0, {r2, r5, r6, r9, ip, sp, lr}
     dbc:	0000003c 	andeq	r0, r0, ip, lsr r0
     dc0:	0000000c 	andeq	r0, r0, ip
     dc4:	00000d1c 	andeq	r0, r0, ip, lsl sp
     dc8:	080072a0 	stmdaeq	r0, {r5, r7, r9, ip, sp, lr}
     dcc:	00000056 	andeq	r0, r0, r6, asr r0
     dd0:	00000014 	andeq	r0, r0, r4, lsl r0
     dd4:	00000d1c 	andeq	r0, r0, ip, lsl sp
     dd8:	080072f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, ip, sp, lr}
     ddc:	00000012 	andeq	r0, r0, r2, lsl r0
     de0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     de4:	00018e02 	andeq	r8, r1, r2, lsl #28
     de8:	00000024 	andeq	r0, r0, r4, lsr #32
     dec:	00000d1c 	andeq	r0, r0, ip, lsl sp
     df0:	0800730c 	stmdaeq	r0, {r2, r3, r8, r9, ip, sp, lr}
     df4:	00000140 	andeq	r0, r0, r0, asr #2
     df8:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     dfc:	86088509 	strhi	r8, [r8], -r9, lsl #10
     e00:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     e04:	8a048905 	bhi	123220 <__RW_SIZE__+0x122c9c>
     e08:	8e028b03 	vmlahi.f64	d8, d2, d3
     e0c:	380e4301 	stmdacc	lr, {r0, r8, r9, lr}
     e10:	00000020 	andeq	r0, r0, r0, lsr #32
     e14:	00000d1c 	andeq	r0, r0, ip, lsl sp
     e18:	0800744c 	stmdaeq	r0, {r2, r3, r6, sl, ip, sp, lr}
     e1c:	000000b8 	strheq	r0, [r0], -r8
     e20:	841c0e44 	ldrhi	r0, [ip], #-3652	; 0xfffff1bc
     e24:	86068507 	strhi	r8, [r6], -r7, lsl #10
     e28:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     e2c:	8e028903 	cdphi	9, 0, cr8, cr2, cr3, {0}
     e30:	280e4201 	stmdacs	lr, {r0, r9, lr}
     e34:	00000024 	andeq	r0, r0, r4, lsr #32
     e38:	00000d1c 	andeq	r0, r0, ip, lsl sp
     e3c:	08007504 	stmdaeq	r0, {r2, r8, sl, ip, sp, lr}
     e40:	000000b6 	strheq	r0, [r0], -r6
     e44:	83280e42 	teqhi	r8, #1056	; 0x420
     e48:	8509840a 	strhi	r8, [r9, #-1034]	; 0xfffffbf6
     e4c:	87078608 	strhi	r8, [r7, -r8, lsl #12]
     e50:	89058806 	stmdbhi	r5, {r1, r2, fp, pc}
     e54:	8b038a04 	blhi	e366c <__RW_SIZE__+0xe30e8>
     e58:	00018e02 	andeq	r8, r1, r2, lsl #28
     e5c:	00000014 	andeq	r0, r0, r4, lsl r0
     e60:	00000d1c 	andeq	r0, r0, ip, lsl sp
     e64:	080075bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, sl, ip, sp, lr}
     e68:	00000042 	andeq	r0, r0, r2, asr #32
     e6c:	84040e43 	strhi	r0, [r4], #-3651	; 0xfffff1bd
     e70:	00000001 	andeq	r0, r0, r1
     e74:	00000024 	andeq	r0, r0, r4, lsr #32
     e78:	00000d1c 	andeq	r0, r0, ip, lsl sp
     e7c:	08007600 	stmdaeq	r0, {r9, sl, ip, sp, lr}
     e80:	000000ea 	andeq	r0, r0, sl, ror #1
     e84:	83280e42 	teqhi	r8, #1056	; 0x420
     e88:	8509840a 	strhi	r8, [r9, #-1034]	; 0xfffffbf6
     e8c:	87078608 	strhi	r8, [r7, -r8, lsl #12]
     e90:	89058806 	stmdbhi	r5, {r1, r2, fp, pc}
     e94:	8b038a04 	blhi	e36ac <__RW_SIZE__+0xe3128>
     e98:	00018e02 	andeq	r8, r1, r2, lsl #28
     e9c:	0000000c 	andeq	r0, r0, ip
     ea0:	00000d1c 	andeq	r0, r0, ip, lsl sp
     ea4:	080076ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, ip, sp, lr}
     ea8:	00000042 	andeq	r0, r0, r2, asr #32
     eac:	0000001c 	andeq	r0, r0, ip, lsl r0
     eb0:	00000d1c 	andeq	r0, r0, ip, lsl sp
     eb4:	08007730 	stmdaeq	r0, {r4, r5, r8, r9, sl, ip, sp, lr}
     eb8:	000000ac 	andeq	r0, r0, ip, lsr #1
     ebc:	83180e41 	tsthi	r8, #1040	; 0x410
     ec0:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     ec4:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     ec8:	00018e02 	andeq	r8, r1, r2, lsl #28
     ecc:	00000020 	andeq	r0, r0, r0, lsr #32
     ed0:	00000d1c 	andeq	r0, r0, ip, lsl sp
     ed4:	080077dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl, ip, sp, lr}
     ed8:	000000ba 	strheq	r0, [r0], -sl
     edc:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     ee0:	86058506 	strhi	r8, [r5], -r6, lsl #10
     ee4:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     ee8:	41018e02 	tstmi	r1, r2, lsl #28
     eec:	0000200e 	andeq	r2, r0, lr
     ef0:	00000020 	andeq	r0, r0, r0, lsr #32
     ef4:	00000d1c 	andeq	r0, r0, ip, lsl sp
     ef8:	08007898 	stmdaeq	r0, {r3, r4, r7, fp, ip, sp, lr}
     efc:	0000005e 	andeq	r0, r0, lr, asr r0
     f00:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     f04:	86068507 	strhi	r8, [r6], -r7, lsl #10
     f08:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     f0c:	8e028903 	cdphi	9, 0, cr8, cr2, cr3, {0}
     f10:	280e4101 	stmdacs	lr, {r0, r8, lr}
     f14:	00000014 	andeq	r0, r0, r4, lsl r0
     f18:	00000d1c 	andeq	r0, r0, ip, lsl sp
     f1c:	080078f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, fp, ip, sp, lr}
     f20:	00000034 	andeq	r0, r0, r4, lsr r0
     f24:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     f28:	00018e02 	andeq	r8, r1, r2, lsl #28
     f2c:	00000018 	andeq	r0, r0, r8, lsl r0
     f30:	00000d1c 	andeq	r0, r0, ip, lsl sp
     f34:	0800792c 	stmdaeq	r0, {r2, r3, r5, r8, fp, ip, sp, lr}
     f38:	00000046 	andeq	r0, r0, r6, asr #32
     f3c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     f40:	86028503 	strhi	r8, [r2], -r3, lsl #10
     f44:	00000001 	andeq	r0, r0, r1
     f48:	00000014 	andeq	r0, r0, r4, lsl r0
     f4c:	00000d1c 	andeq	r0, r0, ip, lsl sp
     f50:	08007974 	stmdaeq	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
     f54:	0000005e 	andeq	r0, r0, lr, asr r0
     f58:	84040e43 	strhi	r0, [r4], #-3651	; 0xfffff1bd
     f5c:	00000001 	andeq	r0, r0, r1
     f60:	0000000c 	andeq	r0, r0, ip
     f64:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     f68:	7c020001 	stcvc	0, cr0, [r2], {1}
     f6c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     f70:	0000000c 	andeq	r0, r0, ip
     f74:	00000f60 	andeq	r0, r0, r0, ror #30
     f78:	080079d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, fp, ip, sp, lr}
     f7c:	00000050 	andeq	r0, r0, r0, asr r0
     f80:	0000000c 	andeq	r0, r0, ip
     f84:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     f88:	7c020001 	stcvc	0, cr0, [r2], {1}
     f8c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     f90:	00000018 	andeq	r0, r0, r8, lsl r0
     f94:	00000f80 	andeq	r0, r0, r0, lsl #31
     f98:	08007a24 	stmdaeq	r0, {r2, r5, r9, fp, ip, sp, lr}
     f9c:	00000026 	andeq	r0, r0, r6, lsr #32
     fa0:	83100e41 	tsthi	r0, #1040	; 0x410
     fa4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     fa8:	00018e02 	andeq	r8, r1, r2, lsl #28
     fac:	0000000c 	andeq	r0, r0, ip
     fb0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     fb4:	7c020001 	stcvc	0, cr0, [r2], {1}
     fb8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     fbc:	0000000c 	andeq	r0, r0, ip
     fc0:	00000fac 	andeq	r0, r0, ip, lsr #31
     fc4:	08007c88 	stmdaeq	r0, {r3, r7, sl, fp, ip, sp, lr}
     fc8:	0000005e 	andeq	r0, r0, lr, asr r0
     fcc:	0000000c 	andeq	r0, r0, ip
     fd0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     fd4:	7c020001 	stcvc	0, cr0, [r2], {1}
     fd8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     fdc:	00000024 	andeq	r0, r0, r4, lsr #32
     fe0:	00000fcc 	andeq	r0, r0, ip, asr #31
     fe4:	08007ce8 	stmdaeq	r0, {r3, r5, r6, r7, sl, fp, ip, sp, lr}
     fe8:	00000104 	andeq	r0, r0, r4, lsl #2
     fec:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     ff0:	86088509 	strhi	r8, [r8], -r9, lsl #10
     ff4:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     ff8:	8a048905 	bhi	123414 <__RW_SIZE__+0x122e90>
     ffc:	8e028b03 	vmlahi.f64	d8, d2, d3
    1000:	300e4301 	andcc	r4, lr, r1, lsl #6
    1004:	00000028 	andeq	r0, r0, r8, lsr #32
    1008:	00000fcc 	andeq	r0, r0, ip, asr #31
    100c:	08007dec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, sl, fp, ip, sp, lr}
    1010:	00000adc 	ldrdeq	r0, [r0], -ip
    1014:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    1018:	86088509 	strhi	r8, [r8], -r9, lsl #10
    101c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    1020:	8a048905 	bhi	12343c <__RW_SIZE__+0x122eb8>
    1024:	8e028b03 	vmlahi.f64	d8, d2, d3
    1028:	f00e4101 			; <UNDEFINED> instruction: 0xf00e4101
    102c:	00000001 	andeq	r0, r0, r1
    1030:	0000000c 	andeq	r0, r0, ip
    1034:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1038:	7c020001 	stcvc	0, cr0, [r2], {1}
    103c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1040:	00000014 	andeq	r0, r0, r4, lsl r0
    1044:	00001030 	andeq	r1, r0, r0, lsr r0
    1048:	080088c8 	stmdaeq	r0, {r3, r6, r7, fp, pc}
    104c:	00000062 	andeq	r0, r0, r2, rrx
    1050:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1054:	00018e02 	andeq	r8, r1, r2, lsl #28
    1058:	0000000c 	andeq	r0, r0, ip
    105c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1060:	7c020001 	stcvc	0, cr0, [r2], {1}
    1064:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1068:	0000001c 	andeq	r0, r0, ip, lsl r0
    106c:	00001058 	andeq	r1, r0, r8, asr r0
    1070:	0800892c 	stmdaeq	r0, {r2, r3, r5, r8, fp, pc}
    1074:	000000a2 	andeq	r0, r0, r2, lsr #1
    1078:	83180e41 	tsthi	r8, #1040	; 0x410
    107c:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    1080:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1084:	00018e02 	andeq	r8, r1, r2, lsl #28
    1088:	0000001c 	andeq	r0, r0, ip, lsl r0
    108c:	00001058 	andeq	r1, r0, r8, asr r0
    1090:	080089d0 	stmdaeq	r0, {r4, r6, r7, r8, fp, pc}
    1094:	00000198 	muleq	r0, r8, r1
    1098:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    109c:	86058506 	strhi	r8, [r5], -r6, lsl #10
    10a0:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    10a4:	00018e02 	andeq	r8, r1, r2, lsl #28
    10a8:	0000000c 	andeq	r0, r0, ip
    10ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    10b0:	7c020001 	stcvc	0, cr0, [r2], {1}
    10b4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    10b8:	00000018 	andeq	r0, r0, r8, lsl r0
    10bc:	000010a8 	andeq	r1, r0, r8, lsr #1
    10c0:	08008b68 	stmdaeq	r0, {r3, r5, r6, r8, r9, fp, pc}
    10c4:	000000ce 	andeq	r0, r0, lr, asr #1
    10c8:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
    10cc:	86038504 	strhi	r8, [r3], -r4, lsl #10
    10d0:	00018702 	andeq	r8, r1, r2, lsl #14
    10d4:	0000000c 	andeq	r0, r0, ip
    10d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    10dc:	7c020001 	stcvc	0, cr0, [r2], {1}
    10e0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    10e4:	00000018 	andeq	r0, r0, r8, lsl r0
    10e8:	000010d4 	ldrdeq	r1, [r0], -r4
    10ec:	08008c38 	stmdaeq	r0, {r3, r4, r5, sl, fp, pc}
    10f0:	0000009e 	muleq	r0, lr, r0
    10f4:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
    10f8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    10fc:	00018702 	andeq	r8, r1, r2, lsl #14
    1100:	0000000c 	andeq	r0, r0, ip
    1104:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1108:	7c020001 	stcvc	0, cr0, [r2], {1}
    110c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1110:	00000024 	andeq	r0, r0, r4, lsr #32
    1114:	00001100 	andeq	r1, r0, r0, lsl #2
    1118:	08008cd8 	stmdaeq	r0, {r3, r4, r6, r7, sl, fp, pc}
    111c:	000003ea 	andeq	r0, r0, sl, ror #7
    1120:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    1124:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1128:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    112c:	8a048905 	bhi	123548 <__RW_SIZE__+0x122fc4>
    1130:	8e028b03 	vmlahi.f64	d8, d2, d3
    1134:	300e4201 	andcc	r4, lr, r1, lsl #4
    1138:	0000000c 	andeq	r0, r0, ip
    113c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1140:	7c020001 	stcvc	0, cr0, [r2], {1}
    1144:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1148:	00000018 	andeq	r0, r0, r8, lsl r0
    114c:	00001138 	andeq	r1, r0, r8, lsr r1
    1150:	080090c4 	stmdaeq	r0, {r2, r6, r7, ip, pc}
    1154:	0000001a 	andeq	r0, r0, sl, lsl r0
    1158:	83100e41 	tsthi	r0, #1040	; 0x410
    115c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1160:	00018e02 	andeq	r8, r1, r2, lsl #28
    1164:	00000018 	andeq	r0, r0, r8, lsl r0
    1168:	00001138 	andeq	r1, r0, r8, lsr r1
    116c:	080090e0 	stmdaeq	r0, {r5, r6, r7, ip, pc}
    1170:	000000d6 	ldrdeq	r0, [r0], -r6
    1174:	84100e45 	ldrhi	r0, [r0], #-3653	; 0xfffff1bb
    1178:	86038504 	strhi	r8, [r3], -r4, lsl #10
    117c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1180:	0000000c 	andeq	r0, r0, ip
    1184:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1188:	7c010001 	stcvc	0, cr0, [r1], {1}
    118c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1190:	0000000c 	andeq	r0, r0, ip
    1194:	00001180 	andeq	r1, r0, r0, lsl #3
    1198:	080091b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, ip, pc}
    119c:	0000025c 	andeq	r0, r0, ip, asr r2
    11a0:	0000000c 	andeq	r0, r0, ip
    11a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    11a8:	7c010001 	stcvc	0, cr0, [r1], {1}
    11ac:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    11b0:	00000014 	andeq	r0, r0, r4, lsl r0
    11b4:	000011a0 	andeq	r1, r0, r0, lsr #3
    11b8:	08009d69 	stmdaeq	r0, {r0, r3, r5, r6, r8, sl, fp, ip, pc}
    11bc:	0000002c 	andeq	r0, r0, ip, lsr #32
    11c0:	0e038e5e 	mcreq	14, 0, r8, cr3, cr14, {2}
    11c4:	00000010 	andeq	r0, r0, r0, lsl r0
    11c8:	0000000c 	andeq	r0, r0, ip
    11cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    11d0:	7c020001 	stcvc	0, cr0, [r2], {1}
    11d4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    11d8:	00000020 	andeq	r0, r0, r0, lsr #32
    11dc:	000011c8 	andeq	r1, r0, r8, asr #3
    11e0:	08009d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp, ip, pc}
    11e4:	00000030 	andeq	r0, r0, r0, lsr r0
    11e8:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    11ec:	86078508 	strhi	r8, [r7], -r8, lsl #10
    11f0:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    11f4:	8a038904 	bhi	e360c <__RW_SIZE__+0xe3088>
    11f8:	00018e02 	andeq	r8, r1, r2, lsl #28
    11fc:	00000020 	andeq	r0, r0, r0, lsr #32
    1200:	000011c8 	andeq	r1, r0, r8, asr #3
    1204:	08009dc4 	stmdaeq	r0, {r2, r6, r7, r8, sl, fp, ip, pc}
    1208:	00000030 	andeq	r0, r0, r0, lsr r0
    120c:	83200e42 	teqhi	r0, #1056	; 0x420
    1210:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
    1214:	87058606 	strhi	r8, [r5, -r6, lsl #12]
    1218:	89038804 	stmdbhi	r3, {r2, fp, pc}
    121c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1220:	0000000c 	andeq	r0, r0, ip
    1224:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1228:	7c020001 	stcvc	0, cr0, [r2], {1}
    122c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1230:	00000024 	andeq	r0, r0, r4, lsr #32
    1234:	00001220 	andeq	r1, r0, r0, lsr #4
    1238:	08009df4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl, fp, ip, pc}
    123c:	00000352 	andeq	r0, r0, r2, asr r3
    1240:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    1244:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1248:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    124c:	8a048905 	bhi	123668 <__RW_SIZE__+0x1230e4>
    1250:	8e028b03 	vmlahi.f64	d8, d2, d3
    1254:	380e4c01 	stmdacc	lr, {r0, sl, fp, lr}
    1258:	0000000c 	andeq	r0, r0, ip
    125c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1260:	7c020001 	stcvc	0, cr0, [r2], {1}
    1264:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1268:	00000024 	andeq	r0, r0, r4, lsr #32
    126c:	00001258 	andeq	r1, r0, r8, asr r2
    1270:	0800a148 	stmdaeq	r0, {r3, r6, r8, sp, pc}
    1274:	00000300 	andeq	r0, r0, r0, lsl #6
    1278:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    127c:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1280:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    1284:	8a048905 	bhi	1236a0 <__RW_SIZE__+0x12311c>
    1288:	8e028b03 	vmlahi.f64	d8, d2, d3
    128c:	300e4201 	andcc	r4, lr, r1, lsl #4

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	08003244 	stmdaeq	r0, {r2, r6, r9, ip, sp}
   4:	0800324c 	stmdaeq	r0, {r2, r3, r6, r9, ip, sp}
   8:	9f300002 	svcls	0x00300002
   c:	0800324c 	stmdaeq	r0, {r2, r3, r6, r9, ip, sp}
  10:	0800324c 	stmdaeq	r0, {r2, r3, r6, r9, ip, sp}
  14:	00500001 	subseq	r0, r0, r1
  18:	00000000 	andeq	r0, r0, r0
  1c:	54000000 	strpl	r0, [r0], #-0
  20:	5c080032 	stcpl	0, cr0, [r8], {50}	; 0x32
  24:	02080032 	andeq	r0, r8, #50	; 0x32
  28:	5c9f3000 	ldcpl	0, cr3, [pc], {0}
  2c:	5c080032 	stcpl	0, cr0, [r8], {50}	; 0x32
  30:	01080032 	tsteq	r8, r2, lsr r0
  34:	00005000 	andeq	r5, r0, r0
  38:	00000000 	andeq	r0, r0, r0
  3c:	32640000 	rsbcc	r0, r4, #0
  40:	32680800 	rsbcc	r0, r8, #0, 16
  44:	00020800 	andeq	r0, r2, r0, lsl #16
  48:	32689f30 	rsbcc	r9, r8, #48, 30	; 0xc0
  4c:	326a0800 	rsbcc	r0, sl, #0, 16
  50:	00010800 	andeq	r0, r1, r0, lsl #16
  54:	00000050 	andeq	r0, r0, r0, asr r0
  58:	00000000 	andeq	r0, r0, r0
  5c:	00327400 	eorseq	r7, r2, r0, lsl #8
  60:	00327808 	eorseq	r7, r2, r8, lsl #16
  64:	30000208 	andcc	r0, r0, r8, lsl #4
  68:	0032789f 	mlaseq	r2, pc, r8, r7	; <UNPREDICTABLE>
  6c:	00327a08 	eorseq	r7, r2, r8, lsl #20
  70:	50000108 	andpl	r0, r0, r8, lsl #2
	...
  7c:	08003284 	stmdaeq	r0, {r2, r7, r9, ip, sp}
  80:	08003288 	stmdaeq	r0, {r3, r7, r9, ip, sp}
  84:	9f300002 	svcls	0x00300002
  88:	08003288 	stmdaeq	r0, {r3, r7, r9, ip, sp}
  8c:	0800328a 	stmdaeq	r0, {r1, r3, r7, r9, ip, sp}
  90:	00500001 	subseq	r0, r0, r1
  94:	00000000 	andeq	r0, r0, r0
  98:	94000000 	strls	r0, [r0], #-0
  9c:	98080032 	stmdals	r8, {r1, r4, r5}
  a0:	02080032 	andeq	r0, r8, #50	; 0x32
  a4:	989f3000 	ldmls	pc, {ip, sp}	; <UNPREDICTABLE>
  a8:	9a080032 	bls	200178 <__RW_SIZE__+0x1ffbf4>
  ac:	01080032 	tsteq	r8, r2, lsr r0
  b0:	00005000 	andeq	r5, r0, r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	32a40000 	adccc	r0, r4, #0
  bc:	32a60800 	adccc	r0, r6, #0, 16
  c0:	00010800 	andeq	r0, r1, r0, lsl #16
  c4:	0032a650 	eorseq	sl, r2, r0, asr r6
  c8:	0032a808 	eorseq	sl, r2, r8, lsl #16
  cc:	f3000408 	vshl.u8	d0, d8, d0
  d0:	009f5001 	addseq	r5, pc, r1
  d4:	00000000 	andeq	r0, r0, r0
  d8:	a4000000 	strge	r0, [r0], #-0
  dc:	a6080032 			; <UNDEFINED> instruction: 0xa6080032
  e0:	02080032 	andeq	r0, r8, #50	; 0x32
  e4:	a69f3000 	ldrge	r3, [pc], r0
  e8:	a8080032 	stmdage	r8, {r1, r4, r5}
  ec:	01080032 	tsteq	r8, r2, lsr r0
  f0:	00005000 	andeq	r5, r0, r0
  f4:	00000000 	andeq	r0, r0, r0
  f8:	32a80000 	adccc	r0, r8, #0
  fc:	32aa0800 	adccc	r0, sl, #0, 16
 100:	00010800 	andeq	r0, r1, r0, lsl #16
 104:	0032aa50 	eorseq	sl, r2, r0, asr sl
 108:	0032ac08 	eorseq	sl, r2, r8, lsl #24
 10c:	f3000408 	vshl.u8	d0, d8, d0
 110:	009f5001 	addseq	r5, pc, r1
 114:	00000000 	andeq	r0, r0, r0
 118:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
 11c:	aa080032 	bge	2001ec <__RW_SIZE__+0x1ffc68>
 120:	02080032 	andeq	r0, r8, #50	; 0x32
 124:	aa9f3000 	bge	fe7cc12c <MSP_BASE+0xde7c712c>
 128:	ac080032 	stcge	0, cr0, [r8], {50}	; 0x32
 12c:	01080032 	tsteq	r8, r2, lsr r0
 130:	00005000 	andeq	r5, r0, r0
 134:	00000000 	andeq	r0, r0, r0
 138:	32ac0000 	adccc	r0, ip, #0
 13c:	32ae0800 	adccc	r0, lr, #0, 16
 140:	00010800 	andeq	r0, r1, r0, lsl #16
 144:	0032ae50 	eorseq	sl, r2, r0, asr lr
 148:	0032b008 	eorseq	fp, r2, r8
 14c:	f3000408 	vshl.u8	d0, d8, d0
 150:	009f5001 	addseq	r5, pc, r1
 154:	00000000 	andeq	r0, r0, r0
 158:	ac000000 	stcge	0, cr0, [r0], {-0}
 15c:	ae080032 	mcrge	0, 0, r0, cr8, cr2, {1}
 160:	02080032 	andeq	r0, r8, #50	; 0x32
 164:	ae9f3000 	cdpge	0, 9, cr3, cr15, cr0, {0}
 168:	b0080032 	andlt	r0, r8, r2, lsr r0
 16c:	01080032 	tsteq	r8, r2, lsr r0
 170:	00005000 	andeq	r5, r0, r0
 174:	00000000 	andeq	r0, r0, r0
 178:	32b00000 	adcscc	r0, r0, #0
 17c:	32b40800 	adcscc	r0, r4, #0, 16
 180:	00010800 	andeq	r0, r1, r0, lsl #16
 184:	0032b450 	eorseq	fp, r2, r0, asr r4
 188:	0032b608 	eorseq	fp, r2, r8, lsl #12
 18c:	f3000408 	vshl.u8	d0, d8, d0
 190:	009f5001 	addseq	r5, pc, r1
 194:	00000000 	andeq	r0, r0, r0
 198:	b0000000 	andlt	r0, r0, r0
 19c:	b4080032 	strlt	r0, [r8], #-50	; 0xffffffce
 1a0:	02080032 	andeq	r0, r8, #50	; 0x32
 1a4:	b49f3000 	ldrlt	r3, [pc], #0	; 1ac <__ZI_SIZE__+0x150>
 1a8:	b6080032 			; <UNDEFINED> instruction: 0xb6080032
 1ac:	01080032 	tsteq	r8, r2, lsr r0
 1b0:	00005000 	andeq	r5, r0, r0
 1b4:	00000000 	andeq	r0, r0, r0
 1b8:	32b80000 	adcscc	r0, r8, #0
 1bc:	32bc0800 	adcscc	r0, ip, #0, 16
 1c0:	00010800 	andeq	r0, r1, r0, lsl #16
 1c4:	0032bc50 	eorseq	fp, r2, r0, asr ip
 1c8:	0032c008 	eorseq	ip, r2, r8
 1cc:	f3000408 	vshl.u8	d0, d8, d0
 1d0:	009f5001 	addseq	r5, pc, r1
 1d4:	00000000 	andeq	r0, r0, r0
 1d8:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
 1dc:	bc080032 	stclt	0, cr0, [r8], {50}	; 0x32
 1e0:	02080032 	andeq	r0, r8, #50	; 0x32
 1e4:	bc9f3000 	ldclt	0, cr3, [pc], {0}
 1e8:	c0080032 	andgt	r0, r8, r2, lsr r0
 1ec:	01080032 	tsteq	r8, r2, lsr r0
 1f0:	00005000 	andeq	r5, r0, r0
 1f4:	00000000 	andeq	r0, r0, r0
 1f8:	32c00000 	sbccc	r0, r0, #0
 1fc:	32c40800 	sbccc	r0, r4, #0, 16
 200:	00010800 	andeq	r0, r1, r0, lsl #16
 204:	0032c450 	eorseq	ip, r2, r0, asr r4
 208:	0032c808 	eorseq	ip, r2, r8, lsl #16
 20c:	f3000408 	vshl.u8	d0, d8, d0
 210:	009f5001 	addseq	r5, pc, r1
 214:	00000000 	andeq	r0, r0, r0
 218:	c0000000 	andgt	r0, r0, r0
 21c:	c4080032 	strgt	r0, [r8], #-50	; 0xffffffce
 220:	02080032 	andeq	r0, r8, #50	; 0x32
 224:	c49f3000 	ldrgt	r3, [pc], #0	; 22c <__ZI_SIZE__+0x1d0>
 228:	c8080032 	stmdagt	r8, {r1, r4, r5}
 22c:	01080032 	tsteq	r8, r2, lsr r0
 230:	00005000 	andeq	r5, r0, r0
 234:	00000000 	andeq	r0, r0, r0
 238:	32c80000 	sbccc	r0, r8, #0
 23c:	32cc0800 	sbccc	r0, ip, #0, 16
 240:	00010800 	andeq	r0, r1, r0, lsl #16
 244:	0032cc50 	eorseq	ip, r2, r0, asr ip
 248:	0032ce08 	eorseq	ip, r2, r8, lsl #28
 24c:	f3000408 	vshl.u8	d0, d8, d0
 250:	009f5001 	addseq	r5, pc, r1
 254:	00000000 	andeq	r0, r0, r0
 258:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
 25c:	cc080032 	stcgt	0, cr0, [r8], {50}	; 0x32
 260:	02080032 	andeq	r0, r8, #50	; 0x32
 264:	cc9f3000 	ldcgt	0, cr3, [pc], {0}
 268:	ce080032 	mcrgt	0, 0, r0, cr8, cr2, {1}
 26c:	01080032 	tsteq	r8, r2, lsr r0
 270:	00005000 	andeq	r5, r0, r0
 274:	00000000 	andeq	r0, r0, r0
 278:	32d00000 	sbcscc	r0, r0, #0
 27c:	32d60800 	sbcscc	r0, r6, #0, 16
 280:	00010800 	andeq	r0, r1, r0, lsl #16
 284:	0032d650 	eorseq	sp, r2, r0, asr r6
 288:	0032d808 	eorseq	sp, r2, r8, lsl #16
 28c:	f3000408 	vshl.u8	d0, d8, d0
 290:	009f5001 	addseq	r5, pc, r1
 294:	00000000 	andeq	r0, r0, r0
 298:	d0000000 	andle	r0, r0, r0
 29c:	d6080032 			; <UNDEFINED> instruction: 0xd6080032
 2a0:	02080032 	andeq	r0, r8, #50	; 0x32
 2a4:	d69f3000 	ldrle	r3, [pc], r0
 2a8:	d8080032 	stmdale	r8, {r1, r4, r5}
 2ac:	01080032 	tsteq	r8, r2, lsr r0
 2b0:	00005000 	andeq	r5, r0, r0
 2b4:	00000000 	andeq	r0, r0, r0
 2b8:	32d80000 	sbcscc	r0, r8, #0
 2bc:	32de0800 	sbcscc	r0, lr, #0, 16
 2c0:	00010800 	andeq	r0, r1, r0, lsl #16
 2c4:	0032de50 	eorseq	sp, r2, r0, asr lr
 2c8:	0032e008 	eorseq	lr, r2, r8
 2cc:	f3000408 	vshl.u8	d0, d8, d0
 2d0:	009f5001 	addseq	r5, pc, r1
 2d4:	00000000 	andeq	r0, r0, r0
 2d8:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
 2dc:	de080032 	mcrle	0, 0, r0, cr8, cr2, {1}
 2e0:	02080032 	andeq	r0, r8, #50	; 0x32
 2e4:	de9f3000 	cdple	0, 9, cr3, cr15, cr0, {0}
 2e8:	e0080032 	and	r0, r8, r2, lsr r0
 2ec:	01080032 	tsteq	r8, r2, lsr r0
 2f0:	00005000 	andeq	r5, r0, r0
 2f4:	00000000 	andeq	r0, r0, r0
 2f8:	32e00000 	rsccc	r0, r0, #0
 2fc:	32e40800 	rsccc	r0, r4, #0, 16
 300:	00010800 	andeq	r0, r1, r0, lsl #16
 304:	0032e450 	eorseq	lr, r2, r0, asr r4
 308:	0032e608 	eorseq	lr, r2, r8, lsl #12
 30c:	f3000408 	vshl.u8	d0, d8, d0
 310:	009f5001 	addseq	r5, pc, r1
 314:	00000000 	andeq	r0, r0, r0
 318:	e0000000 	and	r0, r0, r0
 31c:	e4080032 	str	r0, [r8], #-50	; 0xffffffce
 320:	02080032 	andeq	r0, r8, #50	; 0x32
 324:	e49f3000 	ldr	r3, [pc], #0	; 32c <__ZI_SIZE__+0x2d0>
 328:	e6080032 			; <UNDEFINED> instruction: 0xe6080032
 32c:	01080032 	tsteq	r8, r2, lsr r0
 330:	00005000 	andeq	r5, r0, r0
	...
 33c:	00b80000 	adcseq	r0, r8, r0
 340:	00010000 	andeq	r0, r1, r0
 344:	0000b850 	andeq	fp, r0, r0, asr r8
 348:	0000f800 	andeq	pc, r0, r0, lsl #16
 34c:	f3000400 	vshl.u8	d0, d0, d0
 350:	009f5001 	addseq	r5, pc, r1
 354:	00000000 	andeq	r0, r0, r0
 358:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
 35c:	40000000 	andmi	r0, r0, r0
 360:	01000001 	tsteq	r0, r1
 364:	01405000 	mrseq	r5, (UNDEF: 64)
 368:	01820000 	orreq	r0, r2, r0
 36c:	00040000 	andeq	r0, r4, r0
 370:	9f5001f3 	svcls	0x005001f3
	...
 37c:	000000f8 	strdeq	r0, [r0], -r8
 380:	00000158 	andeq	r0, r0, r8, asr r1
 384:	58510001 	ldmdapl	r1, {r0}^
 388:	82000001 	andhi	r0, r0, #1
 38c:	04000001 	streq	r0, [r0], #-1
 390:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
 394:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 398:	00000000 	andeq	r0, r0, r0
 39c:	00018400 	andeq	r8, r1, r0, lsl #8
 3a0:	0001e000 	andeq	lr, r1, r0
 3a4:	50000100 	andpl	r0, r0, r0, lsl #2
 3a8:	000001e0 	andeq	r0, r0, r0, ror #3
 3ac:	00000206 	andeq	r0, r0, r6, lsl #4
 3b0:	01f30004 	mvnseq	r0, r4
 3b4:	00009f50 	andeq	r9, r0, r0, asr pc
 3b8:	00000000 	andeq	r0, r0, r0
 3bc:	01880000 	orreq	r0, r8, r0
 3c0:	01e00000 	mvneq	r0, r0
 3c4:	00010000 	andeq	r0, r1, r0
 3c8:	0001e050 	andeq	lr, r1, r0, asr r0
 3cc:	00020600 	andeq	r0, r2, r0, lsl #12
 3d0:	f3000400 	vshl.u8	d0, d0, d0
 3d4:	009f5001 	addseq	r5, pc, r1
 3d8:	00000000 	andeq	r0, r0, r0
 3dc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 3e0:	64000002 	strvs	r0, [r0], #-2
 3e4:	01000002 	tsteq	r0, r2
 3e8:	02645000 	rsbeq	r5, r4, #0
 3ec:	028a0000 	addeq	r0, sl, #0
 3f0:	00040000 	andeq	r0, r4, r0
 3f4:	9f5001f3 	svcls	0x005001f3
	...
 400:	0000020c 	andeq	r0, r0, ip, lsl #4
 404:	00000264 	andeq	r0, r0, r4, ror #4
 408:	64500001 	ldrbvs	r0, [r0], #-1
 40c:	8a000002 	bhi	41c <MSP_SIZE+0x1c>
 410:	04000002 	streq	r0, [r0], #-2
 414:	5001f300 	andpl	pc, r1, r0, lsl #6
 418:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 41c:	00000000 	andeq	r0, r0, r0
 420:	0000b400 	andeq	fp, r0, r0, lsl #8
 424:	00013800 	andeq	r3, r1, r0, lsl #16
 428:	50000100 	andpl	r0, r0, r0, lsl #2
 42c:	00000138 	andeq	r0, r0, r8, lsr r1
 430:	00000158 	andeq	r0, r0, r8, asr r1
 434:	01f30004 	mvnseq	r0, r4
 438:	00009f50 	andeq	r9, r0, r0, asr pc
 43c:	00000000 	andeq	r0, r0, r0
 440:	00b80000 	adcseq	r0, r8, r0
 444:	00e60000 	rsceq	r0, r6, r0
 448:	00020000 	andeq	r0, r2, r0
 44c:	00009f47 	andeq	r9, r0, r7, asr #30
 450:	00000000 	andeq	r0, r0, r0
 454:	00300000 	eorseq	r0, r0, r0
 458:	003c0000 	eorseq	r0, ip, r0
 45c:	00010000 	andeq	r0, r1, r0
 460:	00003c50 	andeq	r3, r0, r0, asr ip
 464:	00004000 	andeq	r4, r0, r0
 468:	70000400 	andvc	r0, r0, r0, lsl #8
 46c:	409f2000 	addsmi	r2, pc, r0
 470:	4c000000 	stcmi	0, cr0, [r0], {-0}
 474:	04000000 	streq	r0, [r0], #-0
 478:	5001f300 	andpl	pc, r1, r0, lsl #6
 47c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 480:	00000000 	andeq	r0, r0, r0
 484:	00003e00 	andeq	r3, r0, r0, lsl #28
 488:	00004a00 	andeq	r4, r0, r0, lsl #20
 48c:	50000100 	andpl	r0, r0, r0, lsl #2
 490:	0000007c 	andeq	r0, r0, ip, ror r0
 494:	00000088 	andeq	r0, r0, r8, lsl #1
 498:	00500001 	subseq	r0, r0, r1
 49c:	00000000 	andeq	r0, r0, r0
 4a0:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
 4a4:	cc000000 	stcgt	0, cr0, [r0], {-0}
 4a8:	01000000 	mrseq	r0, (UNDEF: 0)
 4ac:	00cc5000 	sbceq	r5, ip, r0
 4b0:	00da0000 	sbcseq	r0, sl, r0
 4b4:	00040000 	andeq	r0, r4, r0
 4b8:	9f5001f3 	svcls	0x005001f3
 4bc:	000000da 	ldrdeq	r0, [r0], -sl
 4c0:	000000e8 	andeq	r0, r0, r8, ror #1
 4c4:	e8500001 	ldmda	r0, {r0}^
 4c8:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
 4cc:	04000000 	streq	r0, [r0], #-0
 4d0:	5001f300 	andpl	pc, r1, r0, lsl #6
 4d4:	0000f89f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
 4d8:	00010400 	andeq	r0, r1, r0, lsl #8
 4dc:	50000100 	andpl	r0, r0, r0, lsl #2
 4e0:	00000104 	andeq	r0, r0, r4, lsl #2
 4e4:	00000114 	andeq	r0, r0, r4, lsl r1
 4e8:	01f30004 	mvnseq	r0, r4
 4ec:	01149f50 	tsteq	r4, r0, asr pc
 4f0:	01220000 	teqeq	r2, r0
 4f4:	00010000 	andeq	r0, r1, r0
 4f8:	00012250 	andeq	r2, r1, r0, asr r2
 4fc:	00013200 	andeq	r3, r1, r0, lsl #4
 500:	f3000400 	vshl.u8	d0, d0, d0
 504:	009f5001 	addseq	r5, pc, r1
 508:	00000000 	andeq	r0, r0, r0
 50c:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
 510:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
 514:	01000000 	mrseq	r0, (UNDEF: 0)
 518:	00ce5100 	sbceq	r5, lr, r0, lsl #2
 51c:	00da0000 	sbcseq	r0, sl, r0
 520:	00040000 	andeq	r0, r4, r0
 524:	9f5101f3 	svcls	0x005101f3
 528:	000000da 	ldrdeq	r0, [r0], -sl
 52c:	000000f7 	strdeq	r0, [r0], -r7
 530:	f7510001 			; <UNDEFINED> instruction: 0xf7510001
 534:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
 538:	04000000 	streq	r0, [r0], #-0
 53c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
 540:	0000f89f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
 544:	00011300 	andeq	r1, r1, r0, lsl #6
 548:	51000100 	mrspl	r0, (UNDEF: 16)
 54c:	00000113 	andeq	r0, r0, r3, lsl r1
 550:	00000114 	andeq	r0, r0, r4, lsl r1
 554:	01f30004 	mvnseq	r0, r4
 558:	01149f51 	tsteq	r4, r1, asr pc
 55c:	01310000 	teqeq	r1, r0
 560:	00010000 	andeq	r0, r1, r0
 564:	00013151 	andeq	r3, r1, r1, asr r1
 568:	00013200 	andeq	r3, r1, r0, lsl #4
 56c:	f3000400 	vshl.u8	d0, d0, d0
 570:	009f5101 	addseq	r5, pc, r1, lsl #2
 574:	00000000 	andeq	r0, r0, r0
 578:	da000000 	ble	580 <MSP_SIZE+0x180>
 57c:	f7000000 			; <UNDEFINED> instruction: 0xf7000000
 580:	01000000 	mrseq	r0, (UNDEF: 0)
 584:	00f75100 	rscseq	r5, r7, r0, lsl #2
 588:	00f80000 	rscseq	r0, r8, r0
 58c:	00040000 	andeq	r0, r4, r0
 590:	9f5101f3 	svcls	0x005101f3
	...
 59c:	00000114 	andeq	r0, r0, r4, lsl r1
 5a0:	00000131 	andeq	r0, r0, r1, lsr r1
 5a4:	31510001 	cmpcc	r1, r1
 5a8:	32000001 	andcc	r0, r0, #1
 5ac:	04000001 	streq	r0, [r0], #-1
 5b0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
 5b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 5b8:	00000000 	andeq	r0, r0, r0
 5bc:	00014400 	andeq	r4, r1, r0, lsl #8
 5c0:	00014a00 	andeq	r4, r1, r0, lsl #20
 5c4:	50000100 	andpl	r0, r0, r0, lsl #2
 5c8:	0000014a 	andeq	r0, r0, sl, asr #2
 5cc:	00000154 	andeq	r0, r0, r4, asr r1
 5d0:	01f30004 	mvnseq	r0, r4
 5d4:	00009f50 	andeq	r9, r0, r0, asr pc
 5d8:	00000000 	andeq	r0, r0, r0
 5dc:	01540000 	cmpeq	r4, r0
 5e0:	015a0000 	cmpeq	sl, r0
 5e4:	00010000 	andeq	r0, r1, r0
 5e8:	00015a50 	andeq	r5, r1, r0, asr sl
 5ec:	00016400 	andeq	r6, r1, r0, lsl #8
 5f0:	f3000400 	vshl.u8	d0, d0, d0
 5f4:	009f5001 	addseq	r5, pc, r1
 5f8:	00000000 	andeq	r0, r0, r0
 5fc:	64000000 	strvs	r0, [r0], #-0
 600:	72000001 	andvc	r0, r0, #1
 604:	01000001 	tsteq	r0, r1
 608:	01725000 	cmneq	r2, r0
 60c:	01980000 	orrseq	r0, r8, r0
 610:	00040000 	andeq	r0, r4, r0
 614:	9f5001f3 	svcls	0x005001f3
	...
 620:	00000180 	andeq	r0, r0, r0, lsl #3
 624:	00000194 	muleq	r0, r4, r1
 628:	94540001 	ldrbls	r0, [r4], #-1
 62c:	97000001 	strls	r0, [r0, -r1]
 630:	01000001 	tsteq	r0, r1
 634:	00005100 	andeq	r5, r0, r0, lsl #2
	...
 640:	00140000 	andseq	r0, r4, r0
 644:	00010000 	andeq	r0, r1, r0
 648:	00001450 	andeq	r1, r0, r0, asr r4
 64c:	00001a00 	andeq	r1, r0, r0, lsl #20
 650:	52000100 	andpl	r0, r0, #0, 2
 654:	0000001a 	andeq	r0, r0, sl, lsl r0
 658:	0000001c 	andeq	r0, r0, ip, lsl r0
 65c:	79720003 	ldmdbvc	r2!, {r0, r1}^
 660:	00001c9f 	muleq	r0, pc, ip	; <UNPREDICTABLE>
 664:	00003200 	andeq	r3, r0, r0, lsl #4
 668:	f3000400 	vshl.u8	d0, d0, d0
 66c:	329f5001 	addscc	r5, pc, #1
 670:	3c000000 	stccc	0, cr0, [r0], {-0}
 674:	01000000 	mrseq	r0, (UNDEF: 0)
 678:	003c5000 	eorseq	r5, ip, r0
 67c:	00440000 	subeq	r0, r4, r0
 680:	00010000 	andeq	r0, r1, r0
 684:	00000052 	andeq	r0, r0, r2, asr r0
 688:	00000000 	andeq	r0, r0, r0
 68c:	00001800 	andeq	r1, r0, r0, lsl #16
 690:	00002c00 	andeq	r2, r0, r0, lsl #24
 694:	50000100 	andpl	r0, r0, r0, lsl #2
	...
 6a0:	00000020 	andeq	r0, r0, r0, lsr #32
 6a4:	00000032 	andeq	r0, r0, r2, lsr r0
 6a8:	00520001 	subseq	r0, r2, r1
	...
 6b4:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
 6b8:	01000000 	mrseq	r0, (UNDEF: 0)
 6bc:	000e5000 	andeq	r5, lr, r0
 6c0:	00340000 	eorseq	r0, r4, r0
 6c4:	00010000 	andeq	r0, r1, r0
 6c8:	00003456 	andeq	r3, r0, r6, asr r4
 6cc:	00003800 	andeq	r3, r0, r0, lsl #16
 6d0:	f3000400 	vshl.u8	d0, d0, d0
 6d4:	009f5001 	addseq	r5, pc, r1
	...
 6e0:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
 6e4:	01000000 	mrseq	r0, (UNDEF: 0)
 6e8:	000e5100 	andeq	r5, lr, r0, lsl #2
 6ec:	00340000 	eorseq	r0, r4, r0
 6f0:	00010000 	andeq	r0, r1, r0
 6f4:	00003457 	andeq	r3, r0, r7, asr r4
 6f8:	00003800 	andeq	r3, r0, r0, lsl #16
 6fc:	f3000400 	vshl.u8	d0, d0, d0
 700:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
 70c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
 710:	02000000 	andeq	r0, r0, #0
 714:	0e9f3000 	cdpeq	0, 9, cr3, cr15, cr0, {0}
 718:	26000000 	strcs	r0, [r0], -r0
 71c:	01000000 	mrseq	r0, (UNDEF: 0)
 720:	00265400 	eoreq	r5, r6, r0, lsl #8
 724:	00290000 	eoreq	r0, r9, r0
 728:	00010000 	andeq	r0, r1, r0
 72c:	00002952 	andeq	r2, r0, r2, asr r9
 730:	00002a00 	andeq	r2, r0, r0, lsl #20
 734:	74000300 	strvc	r0, [r0], #-768	; 0xfffffd00
 738:	002a9f7f 	eoreq	r9, sl, pc, ror pc
 73c:	00340000 	eorseq	r0, r4, r0
 740:	00010000 	andeq	r0, r1, r0
 744:	00003454 	andeq	r3, r0, r4, asr r4
 748:	00003800 	andeq	r3, r0, r0, lsl #16
 74c:	53000100 	movwpl	r0, #256	; 0x100
	...
 758:	0000007c 	andeq	r0, r0, ip, ror r0
 75c:	00000082 	andeq	r0, r0, r2, lsl #1
 760:	82500001 	subshi	r0, r0, #1
 764:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
 768:	01000000 	mrseq	r0, (UNDEF: 0)
 76c:	00fe5400 	rscseq	r5, lr, r0, lsl #8
 770:	016e0000 	cmneq	lr, r0
 774:	00040000 	andeq	r0, r4, r0
 778:	9f5001f3 	svcls	0x005001f3
 77c:	0000016e 	andeq	r0, r0, lr, ror #2
 780:	000001a6 	andeq	r0, r0, r6, lsr #3
 784:	00540001 	subseq	r0, r4, r1
 788:	00000000 	andeq	r0, r0, r0
 78c:	7c000000 	stcvc	0, cr0, [r0], {-0}
 790:	8f000000 	svchi	0x00000000
 794:	01000000 	mrseq	r0, (UNDEF: 0)
 798:	008f5100 	addeq	r5, pc, r0, lsl #2
 79c:	01a60000 			; <UNDEFINED> instruction: 0x01a60000
 7a0:	00010000 	andeq	r0, r1, r0
 7a4:	00000055 	andeq	r0, r0, r5, asr r0
 7a8:	00000000 	andeq	r0, r0, r0
 7ac:	00007c00 	andeq	r7, r0, r0, lsl #24
 7b0:	00008f00 	andeq	r8, r0, r0, lsl #30
 7b4:	52000100 	andpl	r0, r0, #0, 2
 7b8:	0000008f 	andeq	r0, r0, pc, lsl #1
 7bc:	000001a6 	andeq	r0, r0, r6, lsr #3
 7c0:	00560001 	subseq	r0, r6, r1
 7c4:	00000000 	andeq	r0, r0, r0
 7c8:	90000000 	andls	r0, r0, r0
 7cc:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
 7d0:	01000000 	mrseq	r0, (UNDEF: 0)
 7d4:	00fe5400 	rscseq	r5, lr, r0, lsl #8
 7d8:	016e0000 	cmneq	lr, r0
 7dc:	00040000 	andeq	r0, r4, r0
 7e0:	9f5001f3 	svcls	0x005001f3
 7e4:	0000016e 	andeq	r0, r0, lr, ror #2
 7e8:	000001a6 	andeq	r0, r0, r6, lsr #3
 7ec:	00540001 	subseq	r0, r4, r1
 7f0:	00000000 	andeq	r0, r0, r0
 7f4:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
 7f8:	ac000001 	stcge	0, cr0, [r0], {1}
 7fc:	01000001 	tsteq	r0, r1
 800:	01ac5000 			; <UNDEFINED> instruction: 0x01ac5000
 804:	01b80000 			; <UNDEFINED> instruction: 0x01b80000
 808:	00040000 	andeq	r0, r4, r0
 80c:	9f5001f3 	svcls	0x005001f3
	...
 818:	000001a8 	andeq	r0, r0, r8, lsr #3
 81c:	000001b5 			; <UNDEFINED> instruction: 0x000001b5
 820:	b5510001 	ldrblt	r0, [r1, #-1]
 824:	b8000001 	stmdalt	r0, {r0}
 828:	04000001 	streq	r0, [r0], #-1
 82c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
 830:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 834:	00000000 	andeq	r0, r0, r0
 838:	0001a800 	andeq	sl, r1, r0, lsl #16
 83c:	0001b500 	andeq	fp, r1, r0, lsl #10
 840:	52000100 	andpl	r0, r0, #0, 2
 844:	000001b5 			; <UNDEFINED> instruction: 0x000001b5
 848:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
 84c:	01f30004 	mvnseq	r0, r4
 850:	00009f52 	andeq	r9, r0, r2, asr pc
 854:	00000000 	andeq	r0, r0, r0
 858:	01b80000 			; <UNDEFINED> instruction: 0x01b80000
 85c:	01bc0000 			; <UNDEFINED> instruction: 0x01bc0000
 860:	00010000 	andeq	r0, r1, r0
 864:	0001bc50 	andeq	fp, r1, r0, asr ip
 868:	0001c800 	andeq	ip, r1, r0, lsl #16
 86c:	f3000400 	vshl.u8	d0, d0, d0
 870:	009f5001 	addseq	r5, pc, r1
 874:	00000000 	andeq	r0, r0, r0
 878:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
 87c:	c5000001 	strgt	r0, [r0, #-1]
 880:	01000001 	tsteq	r0, r1
 884:	01c55100 	biceq	r5, r5, r0, lsl #2
 888:	01c80000 	biceq	r0, r8, r0
 88c:	00040000 	andeq	r0, r4, r0
 890:	9f5101f3 	svcls	0x005101f3
	...
 89c:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
 8a0:	000001c5 	andeq	r0, r0, r5, asr #3
 8a4:	c5520001 	ldrbgt	r0, [r2, #-1]
 8a8:	c8000001 	stmdagt	r0, {r0}
 8ac:	04000001 	streq	r0, [r0], #-1
 8b0:	5201f300 	andpl	pc, r1, #0, 6
 8b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 8b8:	00000000 	andeq	r0, r0, r0
 8bc:	0001c800 	andeq	ip, r1, r0, lsl #16
 8c0:	0001cc00 	andeq	ip, r1, r0, lsl #24
 8c4:	50000100 	andpl	r0, r0, r0, lsl #2
 8c8:	000001cc 	andeq	r0, r0, ip, asr #3
 8cc:	000001d8 	ldrdeq	r0, [r0], -r8
 8d0:	01f30004 	mvnseq	r0, r4
 8d4:	00009f50 	andeq	r9, r0, r0, asr pc
 8d8:	00000000 	andeq	r0, r0, r0
 8dc:	01c80000 	biceq	r0, r8, r0
 8e0:	01d50000 	bicseq	r0, r5, r0
 8e4:	00010000 	andeq	r0, r1, r0
 8e8:	0001d551 	andeq	sp, r1, r1, asr r5
 8ec:	0001d800 	andeq	sp, r1, r0, lsl #16
 8f0:	f3000400 	vshl.u8	d0, d0, d0
 8f4:	009f5101 	addseq	r5, pc, r1, lsl #2
 8f8:	00000000 	andeq	r0, r0, r0
 8fc:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
 900:	d5000001 	strle	r0, [r0, #-1]
 904:	01000001 	tsteq	r0, r1
 908:	01d55200 	bicseq	r5, r5, r0, lsl #4
 90c:	01d80000 	bicseq	r0, r8, r0
 910:	00040000 	andeq	r0, r4, r0
 914:	9f5201f3 	svcls	0x005201f3
	...
 924:	00000011 	andeq	r0, r0, r1, lsl r0
 928:	11500001 	cmpne	r0, r1
 92c:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
 930:	04000000 	streq	r0, [r0], #-0
 934:	5001f300 	andpl	pc, r1, r0, lsl #6
 938:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 93c:	00000000 	andeq	r0, r0, r0
 940:	00008000 	andeq	r8, r0, r0
 944:	00009100 	andeq	r9, r0, r0, lsl #2
 948:	50000100 	andpl	r0, r0, r0, lsl #2
 94c:	00000091 	muleq	r0, r1, r0
 950:	000000c8 	andeq	r0, r0, r8, asr #1
 954:	01f30004 	mvnseq	r0, r4
 958:	00009f50 	andeq	r9, r0, r0, asr pc
 95c:	00000000 	andeq	r0, r0, r0
 960:	00680000 	rsbeq	r0, r8, r0
 964:	00960000 	addseq	r0, r6, r0
 968:	00010000 	andeq	r0, r1, r0
 96c:	00009650 	andeq	r9, r0, r0, asr r6
 970:	00014c00 	andeq	r4, r1, r0, lsl #24
 974:	f3000400 	vshl.u8	d0, d0, d0
 978:	009f5001 	addseq	r5, pc, r1
 97c:	00000000 	andeq	r0, r0, r0
 980:	b6000000 	strlt	r0, [r0], -r0
 984:	bc000000 	stclt	0, cr0, [r0], {-0}
 988:	02000000 	andeq	r0, r0, #0
 98c:	bc9f3000 	ldclt	0, cr3, [pc], {0}
 990:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
 994:	01000000 	mrseq	r0, (UNDEF: 0)
 998:	00005100 	andeq	r5, r0, r0, lsl #2
 99c:	00000000 	andeq	r0, r0, r0
 9a0:	014c0000 	mrseq	r0, (UNDEF: 76)
 9a4:	01520000 	cmpeq	r2, r0
 9a8:	00010000 	andeq	r0, r1, r0
 9ac:	00015250 	andeq	r5, r1, r0, asr r2
 9b0:	0001ae00 	andeq	sl, r1, r0, lsl #28
 9b4:	f3000400 	vshl.u8	d0, d0, d0
 9b8:	009f5001 	addseq	r5, pc, r1
 9bc:	00000000 	andeq	r0, r0, r0
 9c0:	f4000000 	vst4.8	{d0-d3}, [r0], r0
 9c4:	f8000001 			; <UNDEFINED> instruction: 0xf8000001
 9c8:	01000001 	tsteq	r0, r1
 9cc:	01f85000 	mvnseq	r5, r0
 9d0:	020c0000 	andeq	r0, ip, #0
 9d4:	00040000 	andeq	r0, r4, r0
 9d8:	9f5001f3 	svcls	0x005001f3
	...
 9e4:	00000258 	andeq	r0, r0, r8, asr r2
 9e8:	00000269 	andeq	r0, r0, r9, ror #4
 9ec:	69500001 	ldmdbvs	r0, {r0}^
 9f0:	b0000002 	andlt	r0, r0, r2
 9f4:	04000002 	streq	r0, [r0], #-2
 9f8:	5001f300 	andpl	pc, r1, r0, lsl #6
 9fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
 a08:	00003900 	andeq	r3, r0, r0, lsl #18
 a0c:	50000100 	andpl	r0, r0, r0, lsl #2
 a10:	00000039 	andeq	r0, r0, r9, lsr r0
 a14:	000000b8 	strheq	r0, [r0], -r8
 a18:	01f30004 	mvnseq	r0, r4
 a1c:	00009f50 	andeq	r9, r0, r0, asr pc
 a20:	00000000 	andeq	r0, r0, r0
 a24:	00580000 	subseq	r0, r8, r0
 a28:	00b00000 	adcseq	r0, r0, r0
 a2c:	00060000 	andeq	r0, r6, r0
 a30:	55049354 	strpl	r9, [r4, #-852]	; 0xfffffcac
 a34:	00000493 	muleq	r0, r3, r4
 a38:	00000000 	andeq	r0, r0, r0
 a3c:	005e0000 	subseq	r0, lr, r0
 a40:	00610000 	rsbeq	r0, r1, r0
 a44:	00010000 	andeq	r0, r1, r0
 a48:	00006150 	andeq	r6, r0, r0, asr r1
 a4c:	00008a00 	andeq	r8, r0, r0, lsl #20
 a50:	56000100 	strpl	r0, [r0], -r0, lsl #2
 a54:	0000008a 	andeq	r0, r0, sl, lsl #1
 a58:	0000008e 	andeq	r0, r0, lr, lsl #1
 a5c:	00700008 	rsbseq	r0, r0, r8
 a60:	00762534 	rsbseq	r2, r6, r4, lsr r5
 a64:	008e9f22 	addeq	r9, lr, r2, lsr #30
 a68:	00b00000 	adcseq	r0, r0, r0
 a6c:	00010000 	andeq	r0, r1, r0
 a70:	00000056 	andeq	r0, r0, r6, asr r0
 a74:	00000000 	andeq	r0, r0, r0
 a78:	00008a00 	andeq	r8, r0, r0, lsl #20
 a7c:	00009200 	andeq	r9, r0, r0, lsl #4
 a80:	70000500 	andvc	r0, r0, r0, lsl #10
 a84:	9f1a3f00 	svcls	0x001a3f00
 a88:	00000092 	muleq	r0, r2, r0
 a8c:	00000096 	muleq	r0, r6, r0
 a90:	00500001 	subseq	r0, r0, r1
 a94:	00000000 	andeq	r0, r0, r0
 a98:	f4000000 	vst4.8	{d0-d3}, [r0], r0
 a9c:	04000000 	streq	r0, [r0], #-0
 aa0:	01000001 	tsteq	r0, r1
 aa4:	01045000 	mrseq	r5, (UNDEF: 4)
 aa8:	011c0000 	tsteq	ip, r0
 aac:	00030000 	andeq	r0, r3, r0
 ab0:	1c9f0170 	ldfnes	f0, [pc], {112}	; 0x70
 ab4:	20000001 	andcs	r0, r0, r1
 ab8:	01000001 	tsteq	r0, r1
 abc:	01245000 	teqeq	r4, r0
 ac0:	01360000 	teqeq	r6, r0
 ac4:	00030000 	andeq	r0, r3, r0
 ac8:	009f0170 	addseq	r0, pc, r0, ror r1	; <UNPREDICTABLE>
 acc:	00000000 	andeq	r0, r0, r0
 ad0:	04000000 	streq	r0, [r0], #-0
 ad4:	1c000001 	stcne	0, cr0, [r0], {1}
 ad8:	01000001 	tsteq	r0, r1
 adc:	01245400 	teqeq	r4, r0, lsl #8
 ae0:	01360000 	teqeq	r6, r0
 ae4:	00010000 	andeq	r0, r1, r0
 ae8:	00000054 	andeq	r0, r0, r4, asr r0
 aec:	00000000 	andeq	r0, r0, r0
 af0:	00014e00 	andeq	r4, r1, r0, lsl #28
 af4:	00015a00 	andeq	r5, r1, r0, lsl #20
 af8:	91000400 	tstls	r0, r0, lsl #8
 afc:	5a9f7dc0 	bpl	fe7e0204 <MSP_BASE+0xde7db204>
 b00:	60000001 	andvs	r0, r0, r1
 b04:	01000001 	tsteq	r0, r1
 b08:	01605400 	cmneq	r0, r0, lsl #8
 b0c:	01780000 	cmneq	r8, r0
 b10:	00030000 	andeq	r0, r3, r0
 b14:	789f0174 	ldmvc	pc, {r2, r4, r5, r6, r8}	; <UNPREDICTABLE>
 b18:	7c000001 	stcvc	0, cr0, [r0], {1}
 b1c:	01000001 	tsteq	r0, r1
 b20:	01865400 	orreq	r5, r6, r0, lsl #8
 b24:	01980000 	orrseq	r0, r8, r0
 b28:	00030000 	andeq	r0, r3, r0
 b2c:	009f0174 	addseq	r0, pc, r4, ror r1	; <UNPREDICTABLE>
 b30:	00000000 	andeq	r0, r0, r0
 b34:	60000000 	andvs	r0, r0, r0
 b38:	78000001 	stmdavc	r0, {r0}
 b3c:	01000001 	tsteq	r0, r1
 b40:	01865000 	orreq	r5, r6, r0
 b44:	01980000 	orrseq	r0, r8, r0
 b48:	00010000 	andeq	r0, r1, r0
 b4c:	00000050 	andeq	r0, r0, r0, asr r0
 b50:	00000000 	andeq	r0, r0, r0
 b54:	0001c800 	andeq	ip, r1, r0, lsl #16
 b58:	0001e600 	andeq	lr, r1, r0, lsl #12
 b5c:	50000100 	andpl	r0, r0, r0, lsl #2
 b60:	000001e6 	andeq	r0, r0, r6, ror #3
 b64:	000001ee 	andeq	r0, r0, lr, ror #3
 b68:	01f30004 	mvnseq	r0, r4
 b6c:	01ee9f50 	mvneq	r9, r0, asr pc
 b70:	01f00000 	mvnseq	r0, r0
 b74:	00010000 	andeq	r0, r1, r0
 b78:	0001f050 	andeq	pc, r1, r0, asr r0	; <UNPREDICTABLE>
 b7c:	00020a00 	andeq	r0, r2, r0, lsl #20
 b80:	f3000400 	vshl.u8	d0, d0, d0
 b84:	009f5001 	addseq	r5, pc, r1
 b88:	00000000 	andeq	r0, r0, r0
 b8c:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
 b90:	ee000001 	cdp	0, 0, cr0, cr0, cr1, {0}
 b94:	03000001 	movweq	r0, #1
 b98:	9f250800 	svcls	0x00250800
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	08003244 	stmdaeq	r0, {r2, r6, r9, ip, sp}
   4:	080032e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9, ip, sp}
	...
  10:	000000b8 	strheq	r0, [r0], -r8
  14:	000000c4 	andeq	r0, r0, r4, asr #1
  18:	000000c8 	andeq	r0, r0, r8, asr #1
  1c:	000000cc 	andeq	r0, r0, ip, asr #1
	...
  28:	0000012e 	andeq	r0, r0, lr, lsr #2
  2c:	00000132 	andeq	r0, r0, r2, lsr r1
  30:	00000138 	andeq	r0, r0, r8, lsr r1
  34:	00000140 	andeq	r0, r0, r0, asr #2
  38:	00000144 	andeq	r0, r0, r4, asr #2
  3c:	00000148 	andeq	r0, r0, r8, asr #2
	...
  48:	000000da 	ldrdeq	r0, [r0], -sl
  4c:	000000e4 	andeq	r0, r0, r4, ror #1
  50:	000000e8 	andeq	r0, r0, r8, ror #1
  54:	000000ec 	andeq	r0, r0, ip, ror #1
	...
  60:	000000f8 	strdeq	r0, [r0], -r8
  64:	00000100 	andeq	r0, r0, r0, lsl #2
  68:	00000104 	andeq	r0, r0, r4, lsl #2
  6c:	00000108 	andeq	r0, r0, r8, lsl #2
	...
  78:	00000114 	andeq	r0, r0, r4, lsl r1
  7c:	0000011e 	andeq	r0, r0, lr, lsl r1
  80:	00000122 	andeq	r0, r0, r2, lsr #2
  84:	00000126 	andeq	r0, r0, r6, lsr #2
	...
  90:	00000090 	muleq	r0, r0, r0
  94:	0000011e 	andeq	r0, r0, lr, lsl r1
  98:	0000016e 	andeq	r0, r0, lr, ror #2
  9c:	000001a6 	andeq	r0, r0, r6, lsr #3
	...
  a8:	000002e0 	andeq	r0, r0, r0, ror #5
  ac:	000002e4 	andeq	r0, r0, r4, ror #5
  b0:	000002ee 	andeq	r0, r0, lr, ror #5
  b4:	000002f6 	strdeq	r0, [r0], -r6
  b8:	000002fa 	strdeq	r0, [r0], -sl
  bc:	000002fe 	strdeq	r0, [r0], -lr
	...
  c8:	00000378 	andeq	r0, r0, r8, ror r3
  cc:	0000037c 	andeq	r0, r0, ip, ror r3
  d0:	00000386 	andeq	r0, r0, r6, lsl #7
  d4:	0000038c 	andeq	r0, r0, ip, lsl #7
  d8:	00000390 	muleq	r0, r0, r3
  dc:	00000394 	muleq	r0, r4, r3
	...
  e8:	000000fa 	strdeq	r0, [r0], -sl
  ec:	00000118 	andeq	r0, r0, r8, lsl r1
  f0:	00000124 	andeq	r0, r0, r4, lsr #2
  f4:	00000136 	andeq	r0, r0, r6, lsr r1
	...
 100:	0000014e 	andeq	r0, r0, lr, asr #2
 104:	0000017c 	andeq	r0, r0, ip, ror r1
 108:	00000186 	andeq	r0, r0, r6, lsl #3
 10c:	00000198 	muleq	r0, r8, r1
	...
 118:	00000154 	andeq	r0, r0, r4, asr r1
 11c:	00000174 	andeq	r0, r0, r4, ror r1
 120:	00000186 	andeq	r0, r0, r6, lsl #3
 124:	00000198 	muleq	r0, r8, r1
	...
 130:	000001d4 	ldrdeq	r0, [r0], -r4
 134:	000001d8 	ldrdeq	r0, [r0], -r8
 138:	000001e0 	andeq	r0, r0, r0, ror #3
 13c:	000001e6 	andeq	r0, r0, r6, ror #3
 140:	000001e8 	andeq	r0, r0, r8, ror #3
 144:	000001ee 	andeq	r0, r0, lr, ror #3
	...
 150:	000001f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 154:	000001f4 	strdeq	r0, [r0], -r4
 158:	000001f6 	strdeq	r0, [r0], -r6
 15c:	000001fc 	strdeq	r0, [r0], -ip
 160:	00000202 	andeq	r0, r0, r2, lsl #4
 164:	00000206 	andeq	r0, r0, r6, lsl #4
	...
